{"id":"22f45ed2a4104ecbe2fe259a19cc934b","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/PlanetDAO.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport '@openzeppelin/contracts/utils/Strings.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\n\r\ncontract PlanetDAO {\r\n    struct dao_uri_struct {\r\n        string dao_wallet;\r\n        string dao_uri;\r\n        string finished;\r\n    }\r\n    struct goal_uri_struct {\r\n        string dao_id;\r\n        string goal_uri;\r\n    }\r\n\r\n    struct ideas_uri_struct {\r\n        uint256 goal_id;\r\n        string ideas_uri;\r\n        uint256 donation;\r\n    }\r\n\r\n    struct donation_struct {\r\n        uint256 ideas_id;\r\n        uint256 userid;\r\n        uint256 donation;\r\n    }\r\n\r\n    struct smart_contract_uri_struct {\r\n        uint256 smart_contract_id;\r\n        uint256 ideas_id;\r\n        string smart_contract_uri;\r\n    }\r\n    struct goal_ideas_votes_struct {\r\n        uint256 goal_id;\r\n        uint256 ideas_id;\r\n        uint256 user_id;\r\n    }\r\n    struct message_struct {\r\n        uint256 message_id;\r\n        uint256 ideas_id;\r\n        string message;\r\n        string sender;\r\n    }\r\n    struct message_read_struct {\r\n        uint256 message_id;\r\n        uint256 ideas_id;\r\n        uint256 user_id;\r\n        string msg_type;\r\n    }\r\n    struct reply_struct {\r\n        uint256 reply_id;\r\n        uint256 message_id;\r\n        uint256 ideas_id;\r\n        string message;\r\n    }\r\n\r\n    struct UnbondingRequest {\r\n        int64 completionTime;\r\n        uint256 amount;\r\n    }\r\n\r\n    struct join_struct {\r\n        uint256 daoid;\r\n        uint256 user_id;\r\n    }\r\n\r\n    struct user_badge_struct {\r\n        uint256 user_id;\r\n        bool dao;\r\n        bool joined;\r\n        bool goal;\r\n        bool ideas;\r\n        bool vote;\r\n        bool donation;\r\n        bool comment;\r\n        bool reply;\r\n    }\r\n    uint256 public _dao_ids;\r\n    uint256 public _donations_ids;\r\n    uint256 public _goal_ids;\r\n    uint256 public _ideas_ids;\r\n    uint256 public _join_ids;\r\n    uint256 public _smart_contract_ids;\r\n    uint256 public _ideas_vote_ids;\r\n    uint256 public _message_ids;\r\n    uint256 public _message_read_ids;\r\n    uint256 public _reply_ids;\r\n    mapping(uint256 => dao_uri_struct) public _dao_uris; //_dao_ids              => (Dao)                    Dao Wallet + Dao URI   + Finished\r\n    mapping(uint256 => string) public _template_uris; //_dao_ids              => (Dao)                   Template HTML Code\r\n    mapping(uint256 => join_struct) public _joined_person; //_join_ids             => (Dao)                  join_struct\r\n\r\n    mapping(uint256 => goal_uri_struct) public _goal_uris; //_goal_ids             => (Goal)                   Dao ID + Goal URI\r\n    mapping(uint256 => ideas_uri_struct) public _ideas_uris; //_ideas_ids            => (Ideas)                  Goal ID + Ideas URI\r\n    mapping(uint256 => uint256) public _donated; //uint256            => (Donated to ideas)                amount\r\n    mapping(uint256 => donation_struct) public _donations; //uint256            => donation_struct\r\n    mapping(uint256 => smart_contract_uri_struct) public _smart_contracts_uris; //_smart_contract_ids   => (Ideas Smart contract)   Goal ID + Ideas URI\r\n    mapping(uint256 => goal_ideas_votes_struct) public all_goal_ideas_votes; //_ideas_vote_ids       => (Vote)                   Goal ID + Ideas ID + User Id\r\n\r\n    mapping(uint256 => message_struct) public all_messages; // all_messages        => _message_ids + message_struct\r\n\r\n    mapping(uint256 => message_read_struct) public all_read_messages; // all_read_messages        => _message_read_ids + message_read_struct\r\n\r\n    mapping(uint256 => reply_struct) public all_replies; // all_messages        => _reply_ids + reply_struct\r\n    mapping(uint256 => user_badge_struct) public _user_badges; //user_id            => user_badge_struct\r\n\r\n    //Daos\r\n    function create_dao(string memory _dao_wallet, string memory _dao_uri, string memory _template,uint256 user_id) public returns (uint256) {\r\n        //Create Dao into _dao_uris\r\n        _dao_uris[_dao_ids] = dao_uri_struct(_dao_wallet, _dao_uri, 'False');\r\n        _template_uris[_dao_ids] = _template;\r\n        _user_badges[user_id].dao = true;\r\n        _dao_ids++;\r\n\r\n        return _dao_ids;\r\n    }\r\n\r\n    function update_template(uint256 _dao_id, string memory _template) public {\r\n        _template_uris[_dao_id] = _template;\r\n    }\r\n\r\n    function set_dao(uint256 _dao_id, string memory _dao_wallet, string memory _dao_uri) public {\r\n        //Set Dao of wallet and uri\r\n        _dao_uris[_dao_id].dao_wallet = _dao_wallet;\r\n        _dao_uris[_dao_id].dao_uri = _dao_uri;\r\n    }\r\n\r\n    function get_all_daos() public view returns (string[] memory) {\r\n        //Getting all doas\r\n        string[] memory _StoreInfo = new string[](_dao_ids);\r\n        for (uint256 i = 0; i < _dao_ids; i++) {\r\n            _StoreInfo[i] = _dao_uris[i].dao_uri;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function dao_uri(uint256 _dao_id) public view returns (string memory) {\r\n        //Getting one dao URI\r\n        return _dao_uris[_dao_id].dao_uri;\r\n    }\r\n\r\n    //Goals\r\n    function create_goal(string memory _goal_uri, string memory  _dao_id,uint256 _user_id) public returns (uint256) {\r\n        //Create goal into _goal_uris\r\n        _goal_uris[_goal_ids] = goal_uri_struct(_dao_id, _goal_uri);\r\n        _user_badges[_user_id].goal = true;\r\n        _goal_ids++;\r\n\r\n        return _goal_ids;\r\n    }\r\n\r\n    function set_goal(uint256 _goal_id, string memory _goal_uri) public {\r\n        //Set goal uri\r\n        _goal_uris[_goal_id].goal_uri = _goal_uri;\r\n    }\r\n\r\n    function get_all_goals() public view returns (string[] memory) {\r\n        //Getting all goals\r\n        string[] memory _StoreInfo = new string[](_goal_ids);\r\n        for (uint256 i = 0; i < _goal_ids; i++) {\r\n            _StoreInfo[i] = _goal_uris[i].goal_uri;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_all_goals_by_dao_id(string memory _dao_id) public view returns (string[] memory) {\r\n        //Getting all goals by dao id\r\n        string[] memory _StoreInfo = new string[](_goal_ids);\r\n        uint256 _store_id;\r\n        for (uint256 i = 0; i < _goal_ids; i++) {\r\n            if (keccak256(bytes(_goal_uris[i].dao_id)) == keccak256(bytes(_dao_id))) {\r\n                _StoreInfo[_store_id] = _goal_uris[i].goal_uri;\r\n                _store_id++;\r\n            }\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_goal_id_by_goal_uri(string memory _goal_uri) public view returns (uint256) {\r\n        //Getting goal id by uri\r\n        for (uint256 i = 0; i < _goal_ids; i++) {\r\n            if (keccak256(bytes(_goal_uris[i].goal_uri)) == keccak256(bytes(_goal_uri))) return i;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function goal_uri(uint256 _goal_id) public view returns (string memory) {\r\n        //Getting one goal URI\r\n        return _goal_uris[_goal_id].goal_uri;\r\n    }\r\n\r\n    //Ideas\r\n    function create_ideas(string memory _ideas_uri, uint256 _goal_id, string[] memory _smart_contracts,uint256 _user_id) public returns (uint256) {\r\n        //Create ideas into _ideas_uris\r\n        _ideas_uris[_ideas_ids] = ideas_uri_struct(_goal_id, _ideas_uri, 0);\r\n        _user_badges[_user_id].ideas = true;\r\n        _ideas_ids++;\r\n\r\n        for (uint256 i = 0; i < _smart_contracts.length; i++) {\r\n            create_ideas_smart_contract(_ideas_ids, _smart_contract_ids, _smart_contracts[i]);\r\n            _smart_contract_ids++;\r\n        }\r\n\r\n        return _ideas_ids;\r\n    }\r\n\r\n    function create_ideas_smart_contract(uint256 _ideas_id, uint256 _smart_contract_id, string memory _smart_contract) private {\r\n        _smart_contracts_uris[_smart_contract_id] = smart_contract_uri_struct(_ideas_id, _smart_contract_id, _smart_contract);\r\n    }\r\n\r\n    function set_ideas(uint256 _ideas_id, string memory _ideas_uri) public {\r\n        _ideas_uris[_ideas_id].ideas_uri = _ideas_uri;\r\n    }\r\n\r\n    function add_donation(uint256 _ideas_id, uint256 _doantion,  uint256 _userid) public {\r\n        _user_badges[_userid].donation = true;\r\n        _ideas_uris[_ideas_id].donation += _doantion;\r\n        _donated[_userid] += _doantion;\r\n        _donations[_donations_ids] = donation_struct(_ideas_id, _userid, _doantion);\r\n        _donations_ids++;\r\n    }\r\n\r\n    function join_community(uint256 dao_id, uint256 person) public {\r\n        _user_badges[person].joined = true;\r\n        _joined_person[_join_ids] = join_struct({daoid: dao_id, user_id: person});\r\n        _join_ids++;\r\n    }\r\n\r\n    function is_person_joined( uint256 person) public view returns (bool) {\r\n \r\n        for (uint256 i = 0; i < _join_ids; i++) {\r\n            if (_joined_person[i].user_id == person) return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function get_all_ideas() public view returns (string[] memory) {\r\n        //Getting all ideas\r\n        string[] memory _StoreInfo = new string[](_ideas_ids);\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            _StoreInfo[i] = _ideas_uris[i].ideas_uri;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_all_ideas_by_goal_id(uint256 _goal_id) public view returns (string[] memory) {\r\n        //Getting all ideas by goal id\r\n        string[] memory _StoreInfo = new string[](_ideas_ids);\r\n        uint256 _store_id;\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            if (_ideas_uris[i].goal_id == _goal_id) _StoreInfo[_store_id] = _ideas_uris[i].ideas_uri;\r\n            _store_id++;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_ideas_id_by_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\r\n        //Getting ideas id by uri\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return i;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function get_goal_id_from_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\r\n        //Getting ideas id by uri\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return _ideas_uris[i].goal_id;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function ideas_uri(uint256 _ideas_id) public view returns (string memory) {\r\n        //Getting one ideas URI\r\n        return _ideas_uris[_ideas_id].ideas_uri;\r\n    }\r\n\r\n    //Votes\r\n    function create_goal_ideas_vote(uint256 _goal_id, uint256 _ideas_id, uint256 _user_id) public returns (uint256) {\r\n         _user_badges[_user_id].vote = true;\r\n        //Create votes into all_goal_ideas_votes\r\n        all_goal_ideas_votes[_ideas_vote_ids] = goal_ideas_votes_struct(_goal_id, _ideas_id, _user_id);\r\n        _ideas_vote_ids++;\r\n\r\n        return _ideas_vote_ids;\r\n    }\r\n\r\n    function get_ideas_votes_from_goal(uint256 _goal_id, uint256 _ideas_id) public view returns (uint256[] memory ) {\r\n        //gets all ideas votes from goal\r\n        uint256[] memory _StoreInfo = new uint256[](_ideas_vote_ids);\r\n        uint256 _store_id;\r\n        for (uint256 i = 0; i < _ideas_vote_ids; i++) {\r\n            if (all_goal_ideas_votes[i].goal_id == _goal_id && all_goal_ideas_votes[i].ideas_id == _ideas_id) _StoreInfo[_store_id] = all_goal_ideas_votes[i].user_id;\r\n            _store_id++;\r\n        }\r\n        return _StoreInfo;\r\n    }\r\n\r\n    //Messages\r\n    function sendMsg(uint256 _ideas_id, string memory _message, string memory _sender, uint256 _user_id) public returns (uint256) {\r\n            _user_badges[_user_id].comment = true;\r\n        //Create messsage into all_messages\r\n        all_messages[_message_ids] = message_struct(_message_ids, _ideas_id, _message, _sender);\r\n        _message_ids++;\r\n\r\n        return _message_ids;\r\n    }\r\n\r\n    function getMsgIDs(uint256 ideas_id) public view returns (uint256[] memory) {\r\n        //Getting all messages ids by idea id\r\n        uint256[] memory _All_Ideas_Messages = new uint256[](_message_ids);\r\n        uint256 _msg_id;\r\n        for (uint256 i = 0; i < _message_ids; i++) {\r\n            if (all_messages[i].ideas_id == ideas_id) {\r\n                _All_Ideas_Messages[_msg_id] = all_messages[i].message_id;\r\n                _msg_id++;\r\n            }\r\n        }\r\n\r\n        return _All_Ideas_Messages;\r\n    }\r\n\r\n    function sendReply(uint256 _message_id, string memory _reply,uint256 ideas_id,uint256 _userid) public returns (uint256) {\r\n          _user_badges[_userid].reply = true;\r\n        //Create reply into all_replies\r\n        all_replies[_reply_ids] = reply_struct(_reply_ids, _message_id,ideas_id, _reply);\r\n        _reply_ids++;\r\n\r\n        return _reply_ids;\r\n    }\r\n\r\n    function getReplyIDs(uint256 message_id) public view returns (uint256[] memory) {\r\n        //Getting all messages ids by idea id\r\n        uint256[] memory _All_Messages_Replys = new uint256[](_reply_ids);\r\n        uint256 _reply_id;\r\n        for (uint256 i = 0; i < _reply_ids; i++) {\r\n            if (all_replies[i].message_id == message_id) {\r\n                _All_Messages_Replys[_reply_id] = all_replies[i].reply_id;\r\n                _reply_id++;\r\n            }\r\n        }\r\n\r\n        return _All_Messages_Replys;\r\n    }\r\n\r\n    function sendReadMsg(uint256 _message_id, uint256 _ideas_id,uint256 _wallet, string memory msg_type) public returns (uint256) {\r\n        //Create messsage into all_messages\r\n        all_read_messages[_message_read_ids] = message_read_struct(_message_id, _ideas_id, _wallet,msg_type);\r\n        _message_read_ids++;\r\n\r\n        return _message_read_ids;\r\n    }\r\n\r\n\r\n\r\n  function getReadMsg(uint256 _message_id, string memory msg_type)  public view returns (bool) {\r\n       \r\n       bool read = false;\r\n        for (uint256 i = 0; i < _message_read_ids; i++) {\r\n            if (all_read_messages[i].message_id == _message_id && keccak256(bytes(msg_type)) == keccak256(bytes(all_read_messages[i].msg_type))) {\r\n               read = true; \r\n            }\r\n        }\r\n\r\n        return read;\r\n    }\r\n\r\n\r\n\r\n    function reset_all() public {\r\n        for (uint256 i = 0; i < _dao_ids; i++) delete _dao_uris[i];\r\n        for (uint256 i = 0; i < _goal_ids; i++) delete _goal_uris[i];\r\n        for (uint256 i = 0; i < _ideas_ids; i++) delete _ideas_uris[i];\r\n        for (uint256 i = 0; i < _goal_ids; i++) delete _smart_contracts_uris[i];\r\n        for (uint256 i = 0; i < _message_ids; i++) delete all_messages[i];\r\n        for (uint256 i = 0; i < _reply_ids; i++) delete all_replies[i];\r\n        for (uint256 i = 0; i < _ideas_vote_ids; i++) delete all_goal_ideas_votes[i];\r\n        _dao_ids = 0;\r\n        _goal_ids = 0;\r\n        _ideas_ids = 0;\r\n        _message_ids = 0;\r\n        _reply_ids = 0;\r\n        _ideas_vote_ids = 0;\r\n    }\r\n\r\n   \r\n}\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[719],"ERC20":[586],"IERC20":[664],"IERC20Metadata":[689]},"id":587,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:0"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":665,"src":"130:22:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":690,"src":"153:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":720,"src":"195:33:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6,"name":"Context","nameLocations":["1550:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":719,"src":"1550:7:0"},"id":7,"nodeType":"InheritanceSpecifier","src":"1550:7:0"},{"baseName":{"id":8,"name":"IERC20","nameLocations":["1559:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"1559:6:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"1559:6:0"},{"baseName":{"id":10,"name":"IERC20Metadata","nameLocations":["1567:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"1567:14:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"1567:14:0"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"230:1301:0","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":586,"linearizedBaseContracts":[586,689,664,719],"name":"ERC20","nameLocation":"1541:5:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":15,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:0","nodeType":"VariableDeclaration","scope":586,"src":"1588:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":14,"keyType":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":21,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:0","nodeType":"VariableDeclaration","scope":586,"src":"1640:67:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":20,"keyType":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":19,"keyType":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":23,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:0","nodeType":"VariableDeclaration","scope":586,"src":"1714:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":22,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":25,"mutability":"mutable","name":"_name","nameLocation":"1764:5:0","nodeType":"VariableDeclaration","scope":586,"src":"1749:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":24,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":27,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:0","nodeType":"VariableDeclaration","scope":586,"src":"1775:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":26,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":43,"nodeType":"Block","src":"2036:57:0","statements":[{"expression":{"id":37,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":35,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2046:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":36,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2054:5:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":38,"nodeType":"ExpressionStatement","src":"2046:13:0"},{"expression":{"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2069:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2079:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":42,"nodeType":"ExpressionStatement","src":"2069:17:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"1804:171:0","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":44,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"name_","nameLocation":"2006:5:0","nodeType":"VariableDeclaration","scope":44,"src":"1992:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:0","nodeType":"VariableDeclaration","scope":44,"src":"2013:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":31,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:0"},"returnParameters":{"id":34,"nodeType":"ParameterList","parameters":[],"src":"2036:0:0"},"scope":586,"src":"1980:113:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[676],"body":{"id":53,"nodeType":"Block","src":"2227:29:0","statements":[{"expression":{"id":51,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2244:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"2237:12:0"}]},"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"2099:54:0","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:0","nodeType":"FunctionDefinition","overrides":{"id":47,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:0"},"parameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"2171:2:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"2212:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":48,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:0"},"scope":586,"src":"2158:98:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[682],"body":{"id":63,"nodeType":"Block","src":"2440:31:0","statements":[{"expression":{"id":61,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2457:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":60,"id":62,"nodeType":"Return","src":"2450:14:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"2262:102:0","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":64,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:0","nodeType":"FunctionDefinition","overrides":{"id":57,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:0"},"parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"2384:2:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64,"src":"2425:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":58,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:0"},"scope":586,"src":"2369:102:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[688],"body":{"id":73,"nodeType":"Block","src":"3169:26:0","statements":[{"expression":{"hexValue":"3138","id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:0","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":70,"id":72,"nodeType":"Return","src":"3179:9:0"}]},"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"2477:622:0","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":74,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[],"src":"3121:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":74,"src":"3162:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":68,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:0"},"scope":586,"src":"3104:91:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[613],"body":{"id":83,"nodeType":"Block","src":"3325:36:0","statements":[{"expression":{"id":81,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"3342:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":80,"id":82,"nodeType":"Return","src":"3335:19:0"}]},"documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"3201:49:0","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":84,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:0","nodeType":"FunctionDefinition","overrides":{"id":77,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:0"},"parameters":{"id":76,"nodeType":"ParameterList","parameters":[],"src":"3275:2:0"},"returnParameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":84,"src":"3316:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":78,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:0"},"scope":586,"src":"3255:106:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[621],"body":{"id":97,"nodeType":"Block","src":"3502:42:0","statements":[{"expression":{"baseExpression":{"id":93,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"3519:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":95,"indexExpression":{"id":94,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"3529:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":92,"id":96,"nodeType":"Return","src":"3512:25:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"3367:47:0","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":98,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:0","nodeType":"FunctionDefinition","overrides":{"id":89,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:0"},"parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"account","nameLocation":"3446:7:0","nodeType":"VariableDeclaration","scope":98,"src":"3438:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:0"},"returnParameters":{"id":92,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":98,"src":"3493:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":90,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:0"},"scope":586,"src":"3419:125:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[631],"body":{"id":122,"nodeType":"Block","src":"3825:104:0","statements":[{"assignments":[110],"declarations":[{"constant":false,"id":110,"mutability":"mutable","name":"owner","nameLocation":"3843:5:0","nodeType":"VariableDeclaration","scope":122,"src":"3835:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":109,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":113,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"3851:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:0"},{"expression":{"arguments":[{"id":115,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"3883:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":116,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"3890:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":117,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3894:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":114,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"3873:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":119,"nodeType":"ExpressionStatement","src":"3873:28:0"},{"expression":{"hexValue":"74727565","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":108,"id":121,"nodeType":"Return","src":"3911:11:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"3550:185:0","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":123,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:0","nodeType":"FunctionDefinition","overrides":{"id":105,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:0"},"parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"to","nameLocation":"3766:2:0","nodeType":"VariableDeclaration","scope":123,"src":"3758:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"amount","nameLocation":"3778:6:0","nodeType":"VariableDeclaration","scope":123,"src":"3770:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":123,"src":"3819:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":106,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:0"},"scope":586,"src":"3740:189:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[641],"body":{"id":140,"nodeType":"Block","src":"4085:51:0","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":134,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"4102:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":136,"indexExpression":{"id":135,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"4114:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":138,"indexExpression":{"id":137,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4121:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":133,"id":139,"nodeType":"Return","src":"4095:34:0"}]},"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"3935:47:0","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":141,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:0","nodeType":"FunctionDefinition","overrides":{"id":130,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:0"},"parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"owner","nameLocation":"4014:5:0","nodeType":"VariableDeclaration","scope":141,"src":"4006:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":128,"mutability":"mutable","name":"spender","nameLocation":"4029:7:0","nodeType":"VariableDeclaration","scope":141,"src":"4021:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:0"},"returnParameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"4076:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:0"},"scope":586,"src":"3987:149:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[651],"body":{"id":165,"nodeType":"Block","src":"4533:108:0","statements":[{"assignments":[153],"declarations":[{"constant":false,"id":153,"mutability":"mutable","name":"owner","nameLocation":"4551:5:0","nodeType":"VariableDeclaration","scope":165,"src":"4543:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":156,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":154,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"4559:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:0"},{"expression":{"arguments":[{"id":158,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4590:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":159,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"4597:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":160,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4606:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":157,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"4581:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"4581:32:0"},{"expression":{"hexValue":"74727565","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":151,"id":164,"nodeType":"Return","src":"4623:11:0"}]},"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"4142:297:0","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":166,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:0","nodeType":"FunctionDefinition","overrides":{"id":148,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:0"},"parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"spender","nameLocation":"4469:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4461:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"amount","nameLocation":"4486:6:0","nodeType":"VariableDeclaration","scope":166,"src":"4478:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:0"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":166,"src":"4527:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":149,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:0"},"scope":586,"src":"4444:197:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[663],"body":{"id":198,"nodeType":"Block","src":"5306:153:0","statements":[{"assignments":[180],"declarations":[{"constant":false,"id":180,"mutability":"mutable","name":"spender","nameLocation":"5324:7:0","nodeType":"VariableDeclaration","scope":198,"src":"5316:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":183,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":181,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5334:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:0"},{"expression":{"arguments":[{"id":185,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5372:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":186,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"5378:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":187,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5387:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":184,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"5356:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":189,"nodeType":"ExpressionStatement","src":"5356:38:0"},{"expression":{"arguments":[{"id":191,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5414:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":192,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5420:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":193,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5424:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":190,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5404:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"5404:27:0"},{"expression":{"hexValue":"74727565","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":178,"id":197,"nodeType":"Return","src":"5441:11:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4647:551:0","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":199,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:0","nodeType":"FunctionDefinition","overrides":{"id":175,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:0"},"parameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"from","nameLocation":"5233:4:0","nodeType":"VariableDeclaration","scope":199,"src":"5225:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":168,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"5247:2:0","nodeType":"VariableDeclaration","scope":199,"src":"5239:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"amount","nameLocation":"5259:6:0","nodeType":"VariableDeclaration","scope":199,"src":"5251:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:0"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"5300:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":176,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:0"},"scope":586,"src":"5203:256:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":227,"nodeType":"Block","src":"5948:140:0","statements":[{"assignments":[210],"declarations":[{"constant":false,"id":210,"mutability":"mutable","name":"owner","nameLocation":"5966:5:0","nodeType":"VariableDeclaration","scope":227,"src":"5958:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":213,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":211,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5974:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:0"},{"expression":{"arguments":[{"id":215,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"6005:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":216,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"6012:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":218,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"6031:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":219,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"6038:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6021:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":221,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6049:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":214,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5996:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":224,"nodeType":"ExpressionStatement","src":"5996:64:0"},{"expression":{"hexValue":"74727565","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":208,"id":226,"nodeType":"Return","src":"6070:11:0"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"5465:384:0","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":228,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:0","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"spender","nameLocation":"5889:7:0","nodeType":"VariableDeclaration","scope":228,"src":"5881:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:0","nodeType":"VariableDeclaration","scope":228,"src":"5898:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:0"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"5942:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":206,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:0"},"scope":586,"src":"5854:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":268,"nodeType":"Block","src":"6674:328:0","statements":[{"assignments":[239],"declarations":[{"constant":false,"id":239,"mutability":"mutable","name":"owner","nameLocation":"6692:5:0","nodeType":"VariableDeclaration","scope":268,"src":"6684:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":242,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":240,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"6700:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:0"},{"assignments":[244],"declarations":[{"constant":false,"id":244,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:0","nodeType":"VariableDeclaration","scope":268,"src":"6722:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":249,"initialValue":{"arguments":[{"id":246,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"6759:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":247,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"6766:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":245,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6749:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":251,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6792:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":252,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"6812:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":256,"nodeType":"ExpressionStatement","src":"6784:85:0"},{"id":265,"nodeType":"UncheckedBlock","src":"6879:95:0","statements":[{"expression":{"arguments":[{"id":258,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"6912:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":259,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"6919:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":260,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6928:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":261,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"6947:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":257,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6903:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":264,"nodeType":"ExpressionStatement","src":"6903:60:0"}]},{"expression":{"hexValue":"74727565","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":237,"id":267,"nodeType":"Return","src":"6984:11:0"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"6094:476:0","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":269,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:0","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"spender","nameLocation":"6610:7:0","nodeType":"VariableDeclaration","scope":269,"src":"6602:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:0","nodeType":"VariableDeclaration","scope":269,"src":"6619:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:0"},"returnParameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":269,"src":"6668:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":235,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:0"},"scope":586,"src":"6575:427:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":345,"nodeType":"Block","src":"7534:710:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":280,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7552:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:0","typeDescriptions":{}}},"id":284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":288,"nodeType":"ExpressionStatement","src":"7544:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":290,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7630:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:0","typeDescriptions":{}}},"id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":289,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"7622:64:0"},{"expression":{"arguments":[{"id":300,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7718:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":301,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7724:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":302,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7728:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":299,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"7697:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":304,"nodeType":"ExpressionStatement","src":"7697:38:0"},{"assignments":[306],"declarations":[{"constant":false,"id":306,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:0","nodeType":"VariableDeclaration","scope":345,"src":"7746:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":310,"initialValue":{"baseExpression":{"id":307,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"7768:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":309,"indexExpression":{"id":308,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7778:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":312,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7801:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":313,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7816:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":317,"nodeType":"ExpressionStatement","src":"7793:72:0"},{"id":332,"nodeType":"UncheckedBlock","src":"7875:273:0","statements":[{"expression":{"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":318,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"7899:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":320,"indexExpression":{"id":319,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7909:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":321,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7917:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":322,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7931:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":325,"nodeType":"ExpressionStatement","src":"7899:38:0"},{"expression":{"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":326,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"8114:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":328,"indexExpression":{"id":327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8124:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":329,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8131:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":331,"nodeType":"ExpressionStatement","src":"8114:23:0"}]},{"eventCall":{"arguments":[{"id":334,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"8172:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":335,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8178:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":336,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8182:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":333,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"8163:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":338,"nodeType":"EmitStatement","src":"8158:31:0"},{"expression":{"arguments":[{"id":340,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"8220:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":341,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8226:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":342,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8230:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":339,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"8200:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":344,"nodeType":"ExpressionStatement","src":"8200:37:0"}]},"documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"7008:443:0","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":346,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:0","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"from","nameLocation":"7483:4:0","nodeType":"VariableDeclaration","scope":346,"src":"7475:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"to","nameLocation":"7497:2:0","nodeType":"VariableDeclaration","scope":346,"src":"7489:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"amount","nameLocation":"7509:6:0","nodeType":"VariableDeclaration","scope":346,"src":"7501:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:0"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[],"src":"7534:0:0"},"scope":586,"src":"7456:788:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":402,"nodeType":"Block","src":"8585:470:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":355,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8603:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:0","typeDescriptions":{}}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":363,"nodeType":"ExpressionStatement","src":"8595:65:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:0","typeDescriptions":{}}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":369,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8704:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":370,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8713:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":364,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"8671:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"ExpressionStatement","src":"8671:49:0"},{"expression":{"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":373,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"8731:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":374,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8747:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":376,"nodeType":"ExpressionStatement","src":"8731:22:0"},{"id":383,"nodeType":"UncheckedBlock","src":"8763:175:0","statements":[{"expression":{"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":377,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"8899:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":379,"indexExpression":{"id":378,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8909:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":380,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8921:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":382,"nodeType":"ExpressionStatement","src":"8899:28:0"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:0","typeDescriptions":{}}},"id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":389,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8973:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":390,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8982:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":384,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"8952:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":392,"nodeType":"EmitStatement","src":"8947:42:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:0","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":398,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"9032:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":399,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"9041:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":393,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"9000:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"ExpressionStatement","src":"9000:48:0"}]},"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"8250:265:0","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":403,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:0","nodeType":"FunctionDefinition","parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"account","nameLocation":"8543:7:0","nodeType":"VariableDeclaration","scope":403,"src":"8535:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"amount","nameLocation":"8560:6:0","nodeType":"VariableDeclaration","scope":403,"src":"8552:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:0"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[],"src":"8585:0:0"},"scope":586,"src":"8520:535:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":474,"nodeType":"Block","src":"9440:594:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":412,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9458:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:0","typeDescriptions":{}}},"id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":420,"nodeType":"ExpressionStatement","src":"9450:67:0"},{"expression":{"arguments":[{"id":422,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9549:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:0","typeDescriptions":{}}},"id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9570:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":421,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"9528:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"9528:49:0"},{"assignments":[431],"declarations":[{"constant":false,"id":431,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:0","nodeType":"VariableDeclaration","scope":474,"src":"9588:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":435,"initialValue":{"baseExpression":{"id":432,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"9613:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":434,"indexExpression":{"id":433,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9623:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":437,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"9649:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":438,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9667:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":436,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":442,"nodeType":"ExpressionStatement","src":"9641:71:0"},{"id":455,"nodeType":"UncheckedBlock","src":"9722:194:0","statements":[{"expression":{"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":443,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"9746:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":445,"indexExpression":{"id":444,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9756:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":446,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"9767:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":447,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9784:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":450,"nodeType":"ExpressionStatement","src":"9746:44:0"},{"expression":{"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":451,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"9883:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":452,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9899:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":454,"nodeType":"ExpressionStatement","src":"9883:22:0"}]},{"eventCall":{"arguments":[{"id":457,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:0","typeDescriptions":{}}},"id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":462,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9961:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":456,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"9931:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":464,"nodeType":"EmitStatement","src":"9926:42:0"},{"expression":{"arguments":[{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9999:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:0","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":471,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"10020:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":465,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"9979:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":473,"nodeType":"ExpressionStatement","src":"9979:48:0"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"9061:309:0","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":475,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:0","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"account","nameLocation":"9398:7:0","nodeType":"VariableDeclaration","scope":475,"src":"9390:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":408,"mutability":"mutable","name":"amount","nameLocation":"9415:6:0","nodeType":"VariableDeclaration","scope":475,"src":"9407:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":407,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:0"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"9440:0:0"},"scope":586,"src":"9375:659:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":519,"nodeType":"Block","src":"10540:257:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":486,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10558:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:0","typeDescriptions":{}}},"id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":494,"nodeType":"ExpressionStatement","src":"10550:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":496,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10636:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:0","typeDescriptions":{}}},"id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":495,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"10628:68:0"},{"expression":{"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":505,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"10707:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":508,"indexExpression":{"id":506,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10719:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":509,"indexExpression":{"id":507,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10726:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":510,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"10737:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":512,"nodeType":"ExpressionStatement","src":"10707:36:0"},{"eventCall":{"arguments":[{"id":514,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10767:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":515,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10774:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":516,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"10783:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":513,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10758:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":518,"nodeType":"EmitStatement","src":"10753:37:0"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"10040:412:0","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":520,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:0","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"owner","nameLocation":"10483:5:0","nodeType":"VariableDeclaration","scope":520,"src":"10475:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"spender","nameLocation":"10498:7:0","nodeType":"VariableDeclaration","scope":520,"src":"10490:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"amount","nameLocation":"10515:6:0","nodeType":"VariableDeclaration","scope":520,"src":"10507:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:0"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"10540:0:0"},"scope":586,"src":"10457:340:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":562,"nodeType":"Block","src":"11168:321:0","statements":[{"assignments":[531],"declarations":[{"constant":false,"id":531,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:0","nodeType":"VariableDeclaration","scope":562,"src":"11178:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":536,"initialValue":{"arguments":[{"id":533,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"11215:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"11222:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":532,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"11205:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":537,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11244:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":539,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":538,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:0","memberName":"max","nodeType":"MemberAccess","src":"11264:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"IfStatement","src":"11240:243:0","trueBody":{"id":560,"nodeType":"Block","src":"11283:200:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":545,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11305:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":546,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"11325:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":544,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":550,"nodeType":"ExpressionStatement","src":"11297:68:0"},{"id":559,"nodeType":"UncheckedBlock","src":"11379:94:0","statements":[{"expression":{"arguments":[{"id":552,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"11416:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":553,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"11423:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11432:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":555,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"11451:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":551,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"11407:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"ExpressionStatement","src":"11407:51:0"}]}]}}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"10803:270:0","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":563,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:0","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"owner","nameLocation":"11111:5:0","nodeType":"VariableDeclaration","scope":563,"src":"11103:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"spender","nameLocation":"11126:7:0","nodeType":"VariableDeclaration","scope":563,"src":"11118:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"amount","nameLocation":"11143:6:0","nodeType":"VariableDeclaration","scope":563,"src":"11135:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":526,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:0"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"11168:0:0"},"scope":586,"src":"11078:411:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":573,"nodeType":"Block","src":"12162:2:0","statements":[]},"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"11495:573:0","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":574,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:0","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"from","nameLocation":"12111:4:0","nodeType":"VariableDeclaration","scope":574,"src":"12103:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"to","nameLocation":"12125:2:0","nodeType":"VariableDeclaration","scope":574,"src":"12117:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"amount","nameLocation":"12137:6:0","nodeType":"VariableDeclaration","scope":574,"src":"12129:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:0"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"12162:0:0"},"scope":586,"src":"12073:91:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":584,"nodeType":"Block","src":"12840:2:0","statements":[]},"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"12170:577:0","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":585,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:0","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"from","nameLocation":"12789:4:0","nodeType":"VariableDeclaration","scope":585,"src":"12781:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"to","nameLocation":"12803:2:0","nodeType":"VariableDeclaration","scope":585,"src":"12795:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"amount","nameLocation":"12815:6:0","nodeType":"VariableDeclaration","scope":585,"src":"12807:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:0"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"12840:0:0"},"scope":586,"src":"12752:90:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":587,"src":"1532:11312:0","usedErrors":[]}],"src":"105:12740:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[664]},"id":665,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":588,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"131:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":664,"linearizedBaseContracts":[664],"name":"IERC20","nameLocation":"212:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"225:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":598,"name":"Transfer","nameLocation":"394:8:1","nodeType":"EventDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:1","nodeType":"VariableDeclaration","scope":598,"src":"403:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":594,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:1","nodeType":"VariableDeclaration","scope":598,"src":"425:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":593,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":596,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:1","nodeType":"VariableDeclaration","scope":598,"src":"445:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":595,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:1"},"src":"388:72:1"},{"anonymous":false,"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"466:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":607,"name":"Approval","nameLocation":"625:8:1","nodeType":"EventDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:1","nodeType":"VariableDeclaration","scope":607,"src":"634:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":603,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:1","nodeType":"VariableDeclaration","scope":607,"src":"657:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:1","nodeType":"VariableDeclaration","scope":607,"src":"682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:1"},"src":"619:78:1"},{"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"703:66:1","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":613,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":613,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":664,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"835:72:1","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":621,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":621,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":621,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":664,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"986:202:1","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":631,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:1","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"1219:2:1","nodeType":"VariableDeclaration","scope":631,"src":"1211:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"amount","nameLocation":"1231:6:1","nodeType":"VariableDeclaration","scope":631,"src":"1223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:1"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":631,"src":"1257:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":628,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:1"},"scope":664,"src":"1193:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"1269:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":641,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:1","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"owner","nameLocation":"1565:5:1","nodeType":"VariableDeclaration","scope":641,"src":"1557:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"spender","nameLocation":"1580:7:1","nodeType":"VariableDeclaration","scope":641,"src":"1572:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:1"},"returnParameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":641,"src":"1612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:1"},"scope":664,"src":"1538:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"1627:642:1","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":651,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:1","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":644,"mutability":"mutable","name":"spender","nameLocation":"2299:7:1","nodeType":"VariableDeclaration","scope":651,"src":"2291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":646,"mutability":"mutable","name":"amount","nameLocation":"2316:6:1","nodeType":"VariableDeclaration","scope":651,"src":"2308:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:1"},"returnParameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":651,"src":"2342:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":648,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:1"},"scope":664,"src":"2274:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"2354:287:1","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":663,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:1","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"from","nameLocation":"2676:4:1","nodeType":"VariableDeclaration","scope":663,"src":"2668:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"to","nameLocation":"2690:2:1","nodeType":"VariableDeclaration","scope":663,"src":"2682:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"amount","nameLocation":"2702:6:1","nodeType":"VariableDeclaration","scope":663,"src":"2694:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:1"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":663,"src":"2728:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":660,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:1"},"scope":664,"src":"2646:88:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":665,"src":"202:2534:1","usedErrors":[]}],"src":"106:2631:1"},"id":1},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[664],"IERC20Metadata":[689]},"id":690,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":666,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":667,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":690,"sourceUnit":665,"src":"135:23:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":669,"name":"IERC20","nameLocations":["305:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"305:6:2"},"id":670,"nodeType":"InheritanceSpecifier","src":"305:6:2"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":668,"nodeType":"StructuredDocumentation","src":"160:116:2","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":689,"linearizedBaseContracts":[689,664],"name":"IERC20Metadata","nameLocation":"287:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"318:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":676,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:2","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[],"src":"390:2:2"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":676,"src":"416:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":673,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:2"},"scope":689,"src":"377:54:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"437:56:2","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":682,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:2","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[],"src":"513:2:2"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":682,"src":"539:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":679,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:2"},"scope":689,"src":"498:56:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"560:65:2","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":688,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:2","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"647:2:2"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":688,"src":"673:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":685,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:2"},"scope":689,"src":"630:50:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":690,"src":"277:405:2","usedErrors":[]}],"src":"110:573:2"},"id":2},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[719]},"id":720,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":691,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:3"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"126:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":719,"linearizedBaseContracts":[719],"name":"Context","nameLocation":"641:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":700,"nodeType":"Block","src":"717:34:3","statements":[{"expression":{"expression":{"id":697,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:3","memberName":"sender","nodeType":"MemberAccess","src":"734:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":696,"id":699,"nodeType":"Return","src":"727:17:3"}]},"id":701,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:3","nodeType":"FunctionDefinition","parameters":{"id":693,"nodeType":"ParameterList","parameters":[],"src":"674:2:3"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":701,"src":"708:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:3"},"scope":719,"src":"655:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":709,"nodeType":"Block","src":"824:32:3","statements":[{"expression":{"expression":{"id":706,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:3","memberName":"data","nodeType":"MemberAccess","src":"841:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":705,"id":708,"nodeType":"Return","src":"834:15:3"}]},"id":710,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:3","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[],"src":"774:2:3"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":710,"src":"808:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":703,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:3"},"scope":719,"src":"757:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":717,"nodeType":"Block","src":"934:25:3","statements":[{"expression":{"hexValue":"30","id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":714,"id":716,"nodeType":"Return","src":"944:8:3"}]},"id":718,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:3","nodeType":"FunctionDefinition","parameters":{"id":711,"nodeType":"ParameterList","parameters":[],"src":"891:2:3"},"returnParameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":718,"src":"925:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:3"},"scope":719,"src":"862:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":720,"src":"623:338:3","usedErrors":[]}],"src":"101:861:3"},"id":3},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1814],"SignedMath":[1919],"Strings":[948]},"id":949,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":721,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":722,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":949,"sourceUnit":1815,"src":"126:25:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":723,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":949,"sourceUnit":1920,"src":"152:31:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":724,"nodeType":"StructuredDocumentation","src":"185:34:4","text":" @dev String operations."},"fullyImplemented":true,"id":948,"linearizedBaseContracts":[948],"name":"Strings","nameLocation":"228:7:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":727,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:4","nodeType":"VariableDeclaration","scope":948,"src":"242:54:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":725,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:4","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":730,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:4","nodeType":"VariableDeclaration","scope":948,"src":"302:43:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":728,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:4","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":777,"nodeType":"Block","src":"518:625:4","statements":[{"id":776,"nodeType":"UncheckedBlock","src":"528:609:4","statements":[{"assignments":[739],"declarations":[{"constant":false,"id":739,"mutability":"mutable","name":"length","nameLocation":"560:6:4","nodeType":"VariableDeclaration","scope":776,"src":"552:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":746,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"580:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":740,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"569:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1814_$","typeString":"type(library Math)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:4","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1651,"src":"569:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:4"},{"assignments":[748],"declarations":[{"constant":false,"id":748,"mutability":"mutable","name":"buffer","nameLocation":"618:6:4","nodeType":"VariableDeclaration","scope":776,"src":"604:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":747,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":753,"initialValue":{"arguments":[{"id":751,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"638:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":749,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:4"},{"assignments":[755],"declarations":[{"constant":false,"id":755,"mutability":"mutable","name":"ptr","nameLocation":"667:3:4","nodeType":"VariableDeclaration","scope":776,"src":"659:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":756,"nodeType":"VariableDeclarationStatement","src":"659:11:4"},{"AST":{"nodeType":"YulBlock","src":"740:67:4","statements":[{"nodeType":"YulAssignment","src":"758:35:4","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:4","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:4"},"nodeType":"YulFunctionCall","src":"777:15:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:4"},"nodeType":"YulFunctionCall","src":"765:28:4"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":748,"isOffset":false,"isSlot":false,"src":"769:6:4","valueSize":1},{"declaration":739,"isOffset":false,"isSlot":false,"src":"785:6:4","valueSize":1},{"declaration":755,"isOffset":false,"isSlot":false,"src":"758:3:4","valueSize":1}],"id":757,"nodeType":"InlineAssembly","src":"731:76:4"},{"body":{"id":772,"nodeType":"Block","src":"833:267:4","statements":[{"expression":{"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:4","subExpression":{"id":759,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"851:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":761,"nodeType":"ExpressionStatement","src":"851:5:4"},{"AST":{"nodeType":"YulBlock","src":"934:84:4","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:4"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:4","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:4"},"nodeType":"YulFunctionCall","src":"974:14:4"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:4"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:4"},"nodeType":"YulFunctionCall","src":"969:30:4"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:4"},"nodeType":"YulFunctionCall","src":"956:44:4"},"nodeType":"YulExpressionStatement","src":"956:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":727,"isOffset":false,"isSlot":false,"src":"990:8:4","valueSize":1},{"declaration":755,"isOffset":false,"isSlot":false,"src":"964:3:4","valueSize":1},{"declaration":733,"isOffset":false,"isSlot":false,"src":"978:5:4","valueSize":1}],"id":762,"nodeType":"InlineAssembly","src":"925:93:4"},{"expression":{"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"1035:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":766,"nodeType":"ExpressionStatement","src":"1035:11:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"1068:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":771,"nodeType":"IfStatement","src":"1064:21:4","trueBody":{"id":770,"nodeType":"Break","src":"1080:5:4"}}]},"condition":{"hexValue":"74727565","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":773,"nodeType":"WhileStatement","src":"820:280:4"},{"expression":{"id":774,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"1120:6:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":737,"id":775,"nodeType":"Return","src":"1113:13:4"}]}]},"documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"352:90:4","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":778,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:4","nodeType":"FunctionDefinition","parameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"value","nameLocation":"473:5:4","nodeType":"VariableDeclaration","scope":778,"src":"465:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":732,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:4"},"returnParameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"503:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":735,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:4"},"scope":948,"src":"447:696:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":805,"nodeType":"Block","src":"1313:103:4","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"1354:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:4","trueExpression":{"hexValue":"2d","id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"1400:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":797,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"1385:10:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$1919_$","typeString":"type(library SignedMath)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:4","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":1918,"src":"1385:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":796,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[778,806],"referencedDeclaration":778,"src":"1376:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":788,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:4","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":786,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:4","typeDescriptions":{}}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":785,"id":804,"nodeType":"Return","src":"1323:86:4"}]},"documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"1149:89:4","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":806,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:4","nodeType":"FunctionDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"value","nameLocation":"1268:5:4","nodeType":"VariableDeclaration","scope":806,"src":"1261:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":780,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:4"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":806,"src":"1298:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":783,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:4"},"scope":948,"src":"1243:173:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":825,"nodeType":"Block","src":"1595:100:4","statements":[{"id":824,"nodeType":"UncheckedBlock","src":"1605:84:4","statements":[{"expression":{"arguments":[{"id":815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"1648:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"1667:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":816,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"1655:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1814_$","typeString":"type(library Math)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:4","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":1774,"src":"1655:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":814,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[826,902,922],"referencedDeclaration":902,"src":"1636:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":813,"id":823,"nodeType":"Return","src":"1629:49:4"}]}]},"documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"1422:94:4","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":826,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:4","nodeType":"FunctionDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"value","nameLocation":"1550:5:4","nodeType":"VariableDeclaration","scope":826,"src":"1542:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:4"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"1580:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":811,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:4"},"scope":948,"src":"1521:174:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":901,"nodeType":"Block","src":"1908:347:4","statements":[{"assignments":[837],"declarations":[{"constant":false,"id":837,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:4","nodeType":"VariableDeclaration","scope":901,"src":"1918:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":836,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":846,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":841,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"1954:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":838,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:4"},{"expression":{"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":847,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"1975:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":849,"indexExpression":{"hexValue":"30","id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":852,"nodeType":"ExpressionStatement","src":"1975:15:4"},{"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":853,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2000:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":855,"indexExpression":{"hexValue":"31","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":858,"nodeType":"ExpressionStatement","src":"2000:15:4"},{"body":{"id":887,"nodeType":"Block","src":"2070:83:4","statements":[{"expression":{"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":873,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2084:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":875,"indexExpression":{"id":874,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"2091:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":876,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"2096:8:4","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":880,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"2105:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:4","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":882,"nodeType":"ExpressionStatement","src":"2084:33:4"},{"expression":{"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"2131:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":886,"nodeType":"ExpressionStatement","src":"2131:11:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":867,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"2058:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":888,"initializationExpression":{"assignments":[860],"declarations":[{"constant":false,"id":860,"mutability":"mutable","name":"i","nameLocation":"2038:1:4","nodeType":"VariableDeclaration","scope":888,"src":"2030:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":866,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":862,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"2046:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:4"},"loopExpression":{"expression":{"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:4","subExpression":{"id":870,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"2067:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":872,"nodeType":"ExpressionStatement","src":"2065:3:4"},"nodeType":"ForStatement","src":"2025:128:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"2170:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":895,"nodeType":"ExpressionStatement","src":"2162:55:4"},{"expression":{"arguments":[{"id":898,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2241:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":896,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:4","typeDescriptions":{}}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":835,"id":900,"nodeType":"Return","src":"2227:21:4"}]},"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"1701:112:4","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":902,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:4","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"value","nameLocation":"1847:5:4","nodeType":"VariableDeclaration","scope":902,"src":"1839:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"length","nameLocation":"1862:6:4","nodeType":"VariableDeclaration","scope":902,"src":"1854:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:4"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":902,"src":"1893:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":833,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:4"},"scope":948,"src":"1818:437:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":921,"nodeType":"Block","src":"2480:76:4","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":915,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"2525:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":913,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:4","typeDescriptions":{}}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":911,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:4","typeDescriptions":{}}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":918,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"2533:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":910,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[826,902,922],"referencedDeclaration":902,"src":"2497:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":909,"id":920,"nodeType":"Return","src":"2490:59:4"}]},"documentation":{"id":903,"nodeType":"StructuredDocumentation","src":"2261:141:4","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":922,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:4","nodeType":"FunctionDefinition","parameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"addr","nameLocation":"2436:4:4","nodeType":"VariableDeclaration","scope":922,"src":"2428:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:4"},"returnParameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":922,"src":"2465:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":907,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:4"},"scope":948,"src":"2407:149:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":946,"nodeType":"Block","src":"2711:66:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":935,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"2744:1:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":933,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:4","typeDescriptions":{}}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":932,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":941,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"2767:1:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":939,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:4","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":938,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":931,"id":945,"nodeType":"Return","src":"2721:49:4"}]},"documentation":{"id":923,"nodeType":"StructuredDocumentation","src":"2562:66:4","text":" @dev Returns true if the two strings are equal."},"id":947,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:4","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":925,"mutability":"mutable","name":"a","nameLocation":"2662:1:4","nodeType":"VariableDeclaration","scope":947,"src":"2648:15:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":924,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"b","nameLocation":"2679:1:4","nodeType":"VariableDeclaration","scope":947,"src":"2665:15:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":926,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:4"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":947,"src":"2705:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":929,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:4"},"scope":948,"src":"2633:144:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":949,"src":"220:2559:4","usedErrors":[]}],"src":"101:2679:4"},"id":4},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1814]},"id":1815,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":950,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"128:73:5","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1814,"linearizedBaseContracts":[1814],"name":"Math","nameLocation":"210:4:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":955,"members":[{"id":952,"name":"Down","nameLocation":"245:4:5","nodeType":"EnumValue","src":"245:4:5"},{"id":953,"name":"Up","nameLocation":"287:2:5","nodeType":"EnumValue","src":"287:2:5"},{"id":954,"name":"Zero","nameLocation":"318:4:5","nodeType":"EnumValue","src":"318:4:5"}],"name":"Rounding","nameLocation":"226:8:5","nodeType":"EnumDefinition","src":"221:122:5"},{"body":{"id":972,"nodeType":"Block","src":"480:37:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":965,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"497:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":966,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"501:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":969,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"509:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:5","trueExpression":{"id":968,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"505:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":964,"id":971,"nodeType":"Return","src":"490:20:5"}]},"documentation":{"id":956,"nodeType":"StructuredDocumentation","src":"349:59:5","text":" @dev Returns the largest of two numbers."},"id":973,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:5","nodeType":"FunctionDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"a","nameLocation":"434:1:5","nodeType":"VariableDeclaration","scope":973,"src":"426:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"b","nameLocation":"445:1:5","nodeType":"VariableDeclaration","scope":973,"src":"437:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:5"},"returnParameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":973,"src":"471:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:5"},"scope":1814,"src":"413:104:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":990,"nodeType":"Block","src":"655:37:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":983,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"672:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":984,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"676:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":987,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"684:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:5","trueExpression":{"id":986,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"680:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":982,"id":989,"nodeType":"Return","src":"665:20:5"}]},"documentation":{"id":974,"nodeType":"StructuredDocumentation","src":"523:60:5","text":" @dev Returns the smallest of two numbers."},"id":991,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:5","nodeType":"FunctionDefinition","parameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"a","nameLocation":"609:1:5","nodeType":"VariableDeclaration","scope":991,"src":"601:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"b","nameLocation":"620:1:5","nodeType":"VariableDeclaration","scope":991,"src":"612:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":977,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:5"},"returnParameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":991,"src":"646:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:5"},"scope":1814,"src":"588:104:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"876:82:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1001,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"931:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1002,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"935:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1004,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1005,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"941:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1006,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"945:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1000,"id":1012,"nodeType":"Return","src":"923:28:5"}]},"documentation":{"id":992,"nodeType":"StructuredDocumentation","src":"698:102:5","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:5","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"mutability":"mutable","name":"a","nameLocation":"830:1:5","nodeType":"VariableDeclaration","scope":1014,"src":"822:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"b","nameLocation":"841:1:5","nodeType":"VariableDeclaration","scope":1014,"src":"833:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":995,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:5"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1014,"src":"867:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":998,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:5"},"scope":1814,"src":"805:153:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1038,"nodeType":"Block","src":"1228:123:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1024,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"1316:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1028,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"1330:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1032,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"1339:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:5","trueExpression":{"hexValue":"30","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1023,"id":1037,"nodeType":"Return","src":"1309:35:5"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"964:188:5","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:5","nodeType":"FunctionDefinition","parameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"a","nameLocation":"1182:1:5","nodeType":"VariableDeclaration","scope":1039,"src":"1174:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"b","nameLocation":"1193:1:5","nodeType":"VariableDeclaration","scope":1039,"src":"1185:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:5"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1039,"src":"1219:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:5"},"scope":1814,"src":"1157:194:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1161,"nodeType":"Block","src":"1765:4115:5","statements":[{"id":1160,"nodeType":"UncheckedBlock","src":"1775:4099:5","statements":[{"assignments":[1052],"declarations":[{"constant":false,"id":1052,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:5","nodeType":"VariableDeclaration","scope":1160,"src":"2096:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1053,"nodeType":"VariableDeclarationStatement","src":"2096:13:5"},{"assignments":[1055],"declarations":[{"constant":false,"id":1055,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:5","nodeType":"VariableDeclaration","scope":1160,"src":"2168:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1056,"nodeType":"VariableDeclarationStatement","src":"2168:13:5"},{"AST":{"nodeType":"YulBlock","src":"2248:157:5","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:5","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:5"},"nodeType":"YulFunctionCall","src":"2289:6:5"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:5"},"nodeType":"YulFunctionCall","src":"2276:20:5"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:5","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:5"},"nodeType":"YulFunctionCall","src":"2322:9:5"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:5"}]},{"nodeType":"YulAssignment","src":"2348:43:5","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:5"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:5"},"nodeType":"YulFunctionCall","src":"2361:14:5"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:5"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:5"},"nodeType":"YulFunctionCall","src":"2377:13:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:5"},"nodeType":"YulFunctionCall","src":"2357:34:5"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1052,"isOffset":false,"isSlot":false,"src":"2313:5:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"2369:5:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"2384:5:5","valueSize":1},{"declaration":1055,"isOffset":false,"isSlot":false,"src":"2348:5:5","valueSize":1},{"declaration":1042,"isOffset":false,"isSlot":false,"src":"2283:1:5","valueSize":1},{"declaration":1042,"isOffset":false,"isSlot":false,"src":"2326:1:5","valueSize":1},{"declaration":1044,"isOffset":false,"isSlot":false,"src":"2286:1:5","valueSize":1},{"declaration":1044,"isOffset":false,"isSlot":false,"src":"2329:1:5","valueSize":1}],"id":1057,"nodeType":"InlineAssembly","src":"2239:166:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1058,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2486:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1066,"nodeType":"IfStatement","src":"2482:368:5","trueBody":{"id":1065,"nodeType":"Block","src":"2498:352:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1061,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2816:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1062,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"2824:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1050,"id":1064,"nodeType":"Return","src":"2809:26:5"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1068,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"2960:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1069,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2974:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":1067,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1073,"nodeType":"ExpressionStatement","src":"2952:53:5"},{"assignments":[1075],"declarations":[{"constant":false,"id":1075,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:5","nodeType":"VariableDeclaration","scope":1160,"src":"3261:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1076,"nodeType":"VariableDeclarationStatement","src":"3261:17:5"},{"AST":{"nodeType":"YulBlock","src":"3301:291:5","statements":[{"nodeType":"YulAssignment","src":"3370:38:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:5"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:5"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:5"},"nodeType":"YulFunctionCall","src":"3383:25:5"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:5"}]},{"nodeType":"YulAssignment","src":"3490:41:5","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:5"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:5"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:5"},"nodeType":"YulFunctionCall","src":"3510:20:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:5"},"nodeType":"YulFunctionCall","src":"3499:32:5"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:5"}]},{"nodeType":"YulAssignment","src":"3548:30:5","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:5"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:5"},"nodeType":"YulFunctionCall","src":"3557:21:5"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1046,"isOffset":false,"isSlot":false,"src":"3396:11:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"3524:5:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"3548:5:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"3561:5:5","valueSize":1},{"declaration":1055,"isOffset":false,"isSlot":false,"src":"3490:5:5","valueSize":1},{"declaration":1055,"isOffset":false,"isSlot":false,"src":"3503:5:5","valueSize":1},{"declaration":1075,"isOffset":false,"isSlot":false,"src":"3370:9:5","valueSize":1},{"declaration":1075,"isOffset":false,"isSlot":false,"src":"3513:9:5","valueSize":1},{"declaration":1075,"isOffset":false,"isSlot":false,"src":"3568:9:5","valueSize":1},{"declaration":1042,"isOffset":false,"isSlot":false,"src":"3390:1:5","valueSize":1},{"declaration":1044,"isOffset":false,"isSlot":false,"src":"3393:1:5","valueSize":1}],"id":1077,"nodeType":"InlineAssembly","src":"3292:300:5"},{"assignments":[1079],"declarations":[{"constant":false,"id":1079,"mutability":"mutable","name":"twos","nameLocation":"3907:4:5","nodeType":"VariableDeclaration","scope":1160,"src":"3899:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1087,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1080,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"3914:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:5","subExpression":{"id":1081,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"3930:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:5"},{"AST":{"nodeType":"YulBlock","src":"3969:362:5","statements":[{"nodeType":"YulAssignment","src":"4034:37:5","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:5"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:5"},"nodeType":"YulFunctionCall","src":"4049:22:5"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:5"}]},{"nodeType":"YulAssignment","src":"4138:25:5","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:5"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:5"},"nodeType":"YulFunctionCall","src":"4147:16:5"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:5"}]},{"nodeType":"YulAssignment","src":"4278:39:5","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:5","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:5"},"nodeType":"YulFunctionCall","src":"4294:12:5"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:5"},"nodeType":"YulFunctionCall","src":"4290:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:5"},"nodeType":"YulFunctionCall","src":"4286:31:5"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1046,"isOffset":false,"isSlot":false,"src":"4034:11:5","valueSize":1},{"declaration":1046,"isOffset":false,"isSlot":false,"src":"4053:11:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"4138:5:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"4151:5:5","valueSize":1},{"declaration":1079,"isOffset":false,"isSlot":false,"src":"4066:4:5","valueSize":1},{"declaration":1079,"isOffset":false,"isSlot":false,"src":"4158:4:5","valueSize":1},{"declaration":1079,"isOffset":false,"isSlot":false,"src":"4278:4:5","valueSize":1},{"declaration":1079,"isOffset":false,"isSlot":false,"src":"4301:4:5","valueSize":1},{"declaration":1079,"isOffset":false,"isSlot":false,"src":"4308:4:5","valueSize":1}],"id":1088,"nodeType":"InlineAssembly","src":"3960:371:5"},{"expression":{"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1089,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"4397:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1090,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"4406:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1091,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"4414:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1094,"nodeType":"ExpressionStatement","src":"4397:21:5"},{"assignments":[1096],"declarations":[{"constant":false,"id":1096,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:5","nodeType":"VariableDeclaration","scope":1160,"src":"4736:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1103,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1098,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"4759:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1100,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:5"},{"expression":{"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1104,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"4992:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1106,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5007:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1107,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5021:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1111,"nodeType":"ExpressionStatement","src":"4992:36:5"},{"expression":{"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1112,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5061:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1114,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5076:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1115,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5090:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1119,"nodeType":"ExpressionStatement","src":"5061:36:5"},{"expression":{"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1120,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5131:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1122,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5146:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1123,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5160:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1127,"nodeType":"ExpressionStatement","src":"5131:36:5"},{"expression":{"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1128,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5201:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1130,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5216:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1131,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5230:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1135,"nodeType":"ExpressionStatement","src":"5201:36:5"},{"expression":{"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1136,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5271:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1138,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5286:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1139,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5300:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1143,"nodeType":"ExpressionStatement","src":"5271:36:5"},{"expression":{"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1144,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5342:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1146,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5357:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1147,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5371:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1151,"nodeType":"ExpressionStatement","src":"5342:36:5"},{"expression":{"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1152,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"5812:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1153,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"5821:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1154,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5829:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1157,"nodeType":"ExpressionStatement","src":"5812:24:5"},{"expression":{"id":1158,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"5857:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1050,"id":1159,"nodeType":"Return","src":"5850:13:5"}]}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"1357:305:5","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1162,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:5","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"x","nameLocation":"1691:1:5","nodeType":"VariableDeclaration","scope":1162,"src":"1683:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"y","nameLocation":"1702:1:5","nodeType":"VariableDeclaration","scope":1162,"src":"1694:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:5","nodeType":"VariableDeclaration","scope":1162,"src":"1705:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1045,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:5"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"result","nameLocation":"1757:6:5","nodeType":"VariableDeclaration","scope":1162,"src":"1749:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:5"},"scope":1814,"src":"1667:4213:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1205,"nodeType":"Block","src":"6122:189:5","statements":[{"assignments":[1178],"declarations":[{"constant":false,"id":1178,"mutability":"mutable","name":"result","nameLocation":"6140:6:5","nodeType":"VariableDeclaration","scope":1205,"src":"6132:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1177,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1184,"initialValue":{"arguments":[{"id":1180,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"6156:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1181,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"6159:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1182,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"6162:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1179,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1162,1206],"referencedDeclaration":1162,"src":"6149:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1185,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"6188:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1186,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"6200:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$955_$","typeString":"type(enum Math.Rounding)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":953,"src":"6200:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"src":"6188:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1190,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"6222:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1191,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"6225:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1192,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"6228:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1189,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:5","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1202,"nodeType":"IfStatement","src":"6184:98:5","trueBody":{"id":1201,"nodeType":"Block","src":"6246:36:5","statements":[{"expression":{"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1197,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"6260:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1200,"nodeType":"ExpressionStatement","src":"6260:11:5"}]}},{"expression":{"id":1203,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"6298:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1176,"id":1204,"nodeType":"Return","src":"6291:13:5"}]},"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"5886:121:5","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:5","nodeType":"FunctionDefinition","parameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"x","nameLocation":"6036:1:5","nodeType":"VariableDeclaration","scope":1206,"src":"6028:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"y","nameLocation":"6047:1:5","nodeType":"VariableDeclaration","scope":1206,"src":"6039:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:5","nodeType":"VariableDeclaration","scope":1206,"src":"6050:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:5","nodeType":"VariableDeclaration","scope":1206,"src":"6071:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"typeName":{"id":1171,"nodeType":"UserDefinedTypeName","pathNode":{"id":1170,"name":"Rounding","nameLocations":["6071:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"6071:8:5"},"referencedDeclaration":955,"src":"6071:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:5"},"returnParameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1206,"src":"6113:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1174,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:5"},"scope":1814,"src":"6012:299:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1317,"nodeType":"Block","src":"6587:1585:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1214,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6601:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1220,"nodeType":"IfStatement","src":"6597:45:5","trueBody":{"id":1219,"nodeType":"Block","src":"6609:33:5","statements":[{"expression":{"hexValue":"30","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1213,"id":1218,"nodeType":"Return","src":"6623:8:5"}]}},{"assignments":[1222],"declarations":[{"constant":false,"id":1222,"mutability":"mutable","name":"result","nameLocation":"7329:6:5","nodeType":"VariableDeclaration","scope":1317,"src":"7321:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1231,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1225,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7349:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1224,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1486,1522],"referencedDeclaration":1486,"src":"7344:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:5"},{"id":1316,"nodeType":"UncheckedBlock","src":"7758:408:5","statements":[{"expression":{"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1232,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7782:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1233,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7792:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1234,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7801:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7805:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1242,"nodeType":"ExpressionStatement","src":"7782:35:5"},{"expression":{"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1243,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7831:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1244,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7841:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1245,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7850:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1246,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7854:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1249,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1253,"nodeType":"ExpressionStatement","src":"7831:35:5"},{"expression":{"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7880:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1255,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7890:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7899:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7903:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1264,"nodeType":"ExpressionStatement","src":"7880:35:5"},{"expression":{"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1265,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7929:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1266,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7939:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1267,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7948:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7952:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1271,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1275,"nodeType":"ExpressionStatement","src":"7929:35:5"},{"expression":{"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7978:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1277,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7988:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1278,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7997:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1279,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8001:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1286,"nodeType":"ExpressionStatement","src":"7978:35:5"},{"expression":{"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1287,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8027:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1288,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8037:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"8046:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1290,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8050:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1297,"nodeType":"ExpressionStatement","src":"8027:35:5"},{"expression":{"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1298,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8076:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8086:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1300,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"8095:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1301,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8099:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1308,"nodeType":"ExpressionStatement","src":"8076:35:5"},{"expression":{"arguments":[{"id":1310,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8136:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1311,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"8144:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8148:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1309,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"8132:3:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1213,"id":1315,"nodeType":"Return","src":"8125:30:5"}]}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"6317:208:5","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1318,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:5","nodeType":"FunctionDefinition","parameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"a","nameLocation":"6552:1:5","nodeType":"VariableDeclaration","scope":1318,"src":"6544:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:5"},"returnParameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1318,"src":"6578:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1211,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:5"},"scope":1814,"src":"6530:1642:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1353,"nodeType":"Block","src":"8348:161:5","statements":[{"id":1352,"nodeType":"UncheckedBlock","src":"8358:145:5","statements":[{"assignments":[1330],"declarations":[{"constant":false,"id":1330,"mutability":"mutable","name":"result","nameLocation":"8390:6:5","nodeType":"VariableDeclaration","scope":1352,"src":"8382:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1334,"initialValue":{"arguments":[{"id":1332,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"8404:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1331,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1318,1354],"referencedDeclaration":1318,"src":"8399:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"8427:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1336,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"8437:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1337,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"8449:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$955_$","typeString":"type(enum Math.Rounding)"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":953,"src":"8449:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"src":"8437:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1340,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"8464:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1341,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"8473:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1343,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"8482:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:5","trueExpression":{"hexValue":"31","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1349,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1328,"id":1351,"nodeType":"Return","src":"8420:72:5"}]}]},"documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"8178:89:5","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1354,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:5","nodeType":"FunctionDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"a","nameLocation":"8294:1:5","nodeType":"VariableDeclaration","scope":1354,"src":"8286:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1324,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:5","nodeType":"VariableDeclaration","scope":1354,"src":"8297:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"typeName":{"id":1323,"nodeType":"UserDefinedTypeName","pathNode":{"id":1322,"name":"Rounding","nameLocations":["8297:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"8297:8:5"},"referencedDeclaration":955,"src":"8297:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:5"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1354,"src":"8339:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1326,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:5"},"scope":1814,"src":"8272:237:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1485,"nodeType":"Block","src":"8694:922:5","statements":[{"assignments":[1363],"declarations":[{"constant":false,"id":1363,"mutability":"mutable","name":"result","nameLocation":"8712:6:5","nodeType":"VariableDeclaration","scope":1485,"src":"8704:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1365,"initialValue":{"hexValue":"30","id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:5"},{"id":1482,"nodeType":"UncheckedBlock","src":"8732:855:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"8760:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1380,"nodeType":"IfStatement","src":"8756:99:5","trueBody":{"id":1379,"nodeType":"Block","src":"8778:77:5","statements":[{"expression":{"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"8796:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1374,"nodeType":"ExpressionStatement","src":"8796:13:5"},{"expression":{"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1375,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"8827:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1378,"nodeType":"ExpressionStatement","src":"8827:13:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"8872:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1395,"nodeType":"IfStatement","src":"8868:96:5","trueBody":{"id":1394,"nodeType":"Block","src":"8889:75:5","statements":[{"expression":{"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"8907:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1389,"nodeType":"ExpressionStatement","src":"8907:12:5"},{"expression":{"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1390,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"8937:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1393,"nodeType":"ExpressionStatement","src":"8937:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"8981:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1410,"nodeType":"IfStatement","src":"8977:96:5","trueBody":{"id":1409,"nodeType":"Block","src":"8998:75:5","statements":[{"expression":{"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9016:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1404,"nodeType":"ExpressionStatement","src":"9016:12:5"},{"expression":{"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1405,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9046:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1408,"nodeType":"ExpressionStatement","src":"9046:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9090:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1425,"nodeType":"IfStatement","src":"9086:96:5","trueBody":{"id":1424,"nodeType":"Block","src":"9107:75:5","statements":[{"expression":{"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9125:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1419,"nodeType":"ExpressionStatement","src":"9125:12:5"},{"expression":{"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1420,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9155:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1423,"nodeType":"ExpressionStatement","src":"9155:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9199:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1440,"nodeType":"IfStatement","src":"9195:93:5","trueBody":{"id":1439,"nodeType":"Block","src":"9215:73:5","statements":[{"expression":{"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9233:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1434,"nodeType":"ExpressionStatement","src":"9233:11:5"},{"expression":{"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9262:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1438,"nodeType":"ExpressionStatement","src":"9262:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9305:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1455,"nodeType":"IfStatement","src":"9301:93:5","trueBody":{"id":1454,"nodeType":"Block","src":"9321:73:5","statements":[{"expression":{"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9339:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1449,"nodeType":"ExpressionStatement","src":"9339:11:5"},{"expression":{"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1450,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9368:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1453,"nodeType":"ExpressionStatement","src":"9368:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9411:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1470,"nodeType":"IfStatement","src":"9407:93:5","trueBody":{"id":1469,"nodeType":"Block","src":"9427:73:5","statements":[{"expression":{"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9445:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1464,"nodeType":"ExpressionStatement","src":"9445:11:5"},{"expression":{"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1465,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9474:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1468,"nodeType":"ExpressionStatement","src":"9474:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9517:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1481,"nodeType":"IfStatement","src":"9513:64:5","trueBody":{"id":1480,"nodeType":"Block","src":"9533:44:5","statements":[{"expression":{"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1476,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9551:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1479,"nodeType":"ExpressionStatement","src":"9551:11:5"}]}}]},{"expression":{"id":1483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9603:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1361,"id":1484,"nodeType":"Return","src":"9596:13:5"}]},"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"8515:113:5","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1486,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:5","nodeType":"FunctionDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"mutability":"mutable","name":"value","nameLocation":"8655:5:5","nodeType":"VariableDeclaration","scope":1486,"src":"8647:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:5"},"returnParameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1486,"src":"8685:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:5"},"scope":1814,"src":"8633:983:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1521,"nodeType":"Block","src":"9849:165:5","statements":[{"id":1520,"nodeType":"UncheckedBlock","src":"9859:149:5","statements":[{"assignments":[1498],"declarations":[{"constant":false,"id":1498,"mutability":"mutable","name":"result","nameLocation":"9891:6:5","nodeType":"VariableDeclaration","scope":1520,"src":"9883:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1502,"initialValue":{"arguments":[{"id":1500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"9905:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1499,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1486,1522],"referencedDeclaration":1486,"src":"9900:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1503,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"9932:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1504,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"9942:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1505,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"9954:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$955_$","typeString":"type(enum Math.Rounding)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":953,"src":"9954:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"src":"9942:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1509,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"9974:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"9983:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:5","trueExpression":{"hexValue":"31","id":1514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1517,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1496,"id":1519,"nodeType":"Return","src":"9925:72:5"}]}]},"documentation":{"id":1487,"nodeType":"StructuredDocumentation","src":"9622:142:5","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1522,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:5","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1489,"mutability":"mutable","name":"value","nameLocation":"9791:5:5","nodeType":"VariableDeclaration","scope":1522,"src":"9783:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:5","nodeType":"VariableDeclaration","scope":1522,"src":"9798:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"typeName":{"id":1491,"nodeType":"UserDefinedTypeName","pathNode":{"id":1490,"name":"Rounding","nameLocations":["9798:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"9798:8:5"},"referencedDeclaration":955,"src":"9798:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:5"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1522,"src":"9840:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:5"},"scope":1814,"src":"9769:245:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1650,"nodeType":"Block","src":"10201:854:5","statements":[{"assignments":[1531],"declarations":[{"constant":false,"id":1531,"mutability":"mutable","name":"result","nameLocation":"10219:6:5","nodeType":"VariableDeclaration","scope":1650,"src":"10211:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1533,"initialValue":{"hexValue":"30","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:5"},{"id":1647,"nodeType":"UncheckedBlock","src":"10239:787:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10267:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1550,"nodeType":"IfStatement","src":"10263:103:5","trueBody":{"id":1549,"nodeType":"Block","src":"10286:80:5","statements":[{"expression":{"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10304:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1544,"nodeType":"ExpressionStatement","src":"10304:17:5"},{"expression":{"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1545,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10339:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1548,"nodeType":"ExpressionStatement","src":"10339:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10383:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1567,"nodeType":"IfStatement","src":"10379:103:5","trueBody":{"id":1566,"nodeType":"Block","src":"10402:80:5","statements":[{"expression":{"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10420:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1561,"nodeType":"ExpressionStatement","src":"10420:17:5"},{"expression":{"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1562,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10455:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1565,"nodeType":"ExpressionStatement","src":"10455:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10499:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1584,"nodeType":"IfStatement","src":"10495:103:5","trueBody":{"id":1583,"nodeType":"Block","src":"10518:80:5","statements":[{"expression":{"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10536:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1578,"nodeType":"ExpressionStatement","src":"10536:17:5"},{"expression":{"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10571:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1582,"nodeType":"ExpressionStatement","src":"10571:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10615:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1601,"nodeType":"IfStatement","src":"10611:100:5","trueBody":{"id":1600,"nodeType":"Block","src":"10633:78:5","statements":[{"expression":{"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10651:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1595,"nodeType":"ExpressionStatement","src":"10651:16:5"},{"expression":{"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1596,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10685:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1599,"nodeType":"ExpressionStatement","src":"10685:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10728:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1618,"nodeType":"IfStatement","src":"10724:100:5","trueBody":{"id":1617,"nodeType":"Block","src":"10746:78:5","statements":[{"expression":{"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10764:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1612,"nodeType":"ExpressionStatement","src":"10764:16:5"},{"expression":{"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1613,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10798:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1616,"nodeType":"ExpressionStatement","src":"10798:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10841:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1635,"nodeType":"IfStatement","src":"10837:100:5","trueBody":{"id":1634,"nodeType":"Block","src":"10859:78:5","statements":[{"expression":{"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10877:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1629,"nodeType":"ExpressionStatement","src":"10877:16:5"},{"expression":{"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1630,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10911:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1633,"nodeType":"ExpressionStatement","src":"10911:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10954:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1646,"nodeType":"IfStatement","src":"10950:66:5","trueBody":{"id":1645,"nodeType":"Block","src":"10972:44:5","statements":[{"expression":{"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1641,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10990:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1644,"nodeType":"ExpressionStatement","src":"10990:11:5"}]}}]},{"expression":{"id":1648,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"11042:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1529,"id":1649,"nodeType":"Return","src":"11035:13:5"}]},"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"10020:114:5","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1651,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:5","nodeType":"FunctionDefinition","parameters":{"id":1526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"value","nameLocation":"10162:5:5","nodeType":"VariableDeclaration","scope":1651,"src":"10154:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1524,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:5"},"returnParameters":{"id":1529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1651,"src":"10192:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1527,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:5"},"scope":1814,"src":"10139:916:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1686,"nodeType":"Block","src":"11290:167:5","statements":[{"id":1685,"nodeType":"UncheckedBlock","src":"11300:151:5","statements":[{"assignments":[1663],"declarations":[{"constant":false,"id":1663,"mutability":"mutable","name":"result","nameLocation":"11332:6:5","nodeType":"VariableDeclaration","scope":1685,"src":"11324:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1662,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1667,"initialValue":{"arguments":[{"id":1665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"11347:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1664,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1651,1687],"referencedDeclaration":1651,"src":"11341:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1668,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"11374:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1669,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"11384:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1670,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"11396:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$955_$","typeString":"type(enum Math.Rounding)"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":953,"src":"11396:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"src":"11384:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"11417:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"11426:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:5","trueExpression":{"hexValue":"31","id":1679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1661,"id":1684,"nodeType":"Return","src":"11367:73:5"}]}]},"documentation":{"id":1652,"nodeType":"StructuredDocumentation","src":"11061:143:5","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1687,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:5","nodeType":"FunctionDefinition","parameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1654,"mutability":"mutable","name":"value","nameLocation":"11232:5:5","nodeType":"VariableDeclaration","scope":1687,"src":"11224:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1657,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:5","nodeType":"VariableDeclaration","scope":1687,"src":"11239:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"typeName":{"id":1656,"nodeType":"UserDefinedTypeName","pathNode":{"id":1655,"name":"Rounding","nameLocations":["11239:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"11239:8:5"},"referencedDeclaration":955,"src":"11239:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:5"},"returnParameters":{"id":1661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1687,"src":"11281:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:5"},"scope":1814,"src":"11209:248:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1773,"nodeType":"Block","src":"11771:600:5","statements":[{"assignments":[1696],"declarations":[{"constant":false,"id":1696,"mutability":"mutable","name":"result","nameLocation":"11789:6:5","nodeType":"VariableDeclaration","scope":1773,"src":"11781:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1698,"initialValue":{"hexValue":"30","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:5"},{"id":1770,"nodeType":"UncheckedBlock","src":"11809:533:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"11837:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1713,"nodeType":"IfStatement","src":"11833:98:5","trueBody":{"id":1712,"nodeType":"Block","src":"11855:76:5","statements":[{"expression":{"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"11873:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1707,"nodeType":"ExpressionStatement","src":"11873:13:5"},{"expression":{"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1708,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"11904:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1711,"nodeType":"ExpressionStatement","src":"11904:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"11948:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1728,"nodeType":"IfStatement","src":"11944:95:5","trueBody":{"id":1727,"nodeType":"Block","src":"11965:74:5","statements":[{"expression":{"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"11983:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1722,"nodeType":"ExpressionStatement","src":"11983:12:5"},{"expression":{"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1723,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"12013:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1726,"nodeType":"ExpressionStatement","src":"12013:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"12056:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1743,"nodeType":"IfStatement","src":"12052:95:5","trueBody":{"id":1742,"nodeType":"Block","src":"12073:74:5","statements":[{"expression":{"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"12091:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1737,"nodeType":"ExpressionStatement","src":"12091:12:5"},{"expression":{"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1738,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"12121:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1741,"nodeType":"ExpressionStatement","src":"12121:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"12164:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1758,"nodeType":"IfStatement","src":"12160:95:5","trueBody":{"id":1757,"nodeType":"Block","src":"12181:74:5","statements":[{"expression":{"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"12199:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1752,"nodeType":"ExpressionStatement","src":"12199:12:5"},{"expression":{"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1753,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"12229:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1756,"nodeType":"ExpressionStatement","src":"12229:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"12272:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1769,"nodeType":"IfStatement","src":"12268:64:5","trueBody":{"id":1768,"nodeType":"Block","src":"12288:44:5","statements":[{"expression":{"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"12306:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1767,"nodeType":"ExpressionStatement","src":"12306:11:5"}]}}]},{"expression":{"id":1771,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"12358:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1694,"id":1772,"nodeType":"Return","src":"12351:13:5"}]},"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"11463:240:5","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1774,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:5","nodeType":"FunctionDefinition","parameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"value","nameLocation":"11732:5:5","nodeType":"VariableDeclaration","scope":1774,"src":"11724:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:5"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1774,"src":"11762:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1692,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:5"},"scope":1814,"src":"11708:663:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1812,"nodeType":"Block","src":"12608:174:5","statements":[{"id":1811,"nodeType":"UncheckedBlock","src":"12618:158:5","statements":[{"assignments":[1786],"declarations":[{"constant":false,"id":1786,"mutability":"mutable","name":"result","nameLocation":"12650:6:5","nodeType":"VariableDeclaration","scope":1811,"src":"12642:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1790,"initialValue":{"arguments":[{"id":1788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"12666:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1787,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1774,1813],"referencedDeclaration":1774,"src":"12659:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"12693:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1792,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"12703:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1793,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"12715:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$955_$","typeString":"type(enum Math.Rounding)"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":953,"src":"12715:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"src":"12703:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1797,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"12736:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1800,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"12751:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:5","trueExpression":{"hexValue":"31","id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1784,"id":1810,"nodeType":"Return","src":"12686:79:5"}]}]},"documentation":{"id":1775,"nodeType":"StructuredDocumentation","src":"12377:144:5","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1813,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:5","nodeType":"FunctionDefinition","parameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"value","nameLocation":"12550:5:5","nodeType":"VariableDeclaration","scope":1813,"src":"12542:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1776,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:5","nodeType":"VariableDeclaration","scope":1813,"src":"12557:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"typeName":{"id":1779,"nodeType":"UserDefinedTypeName","pathNode":{"id":1778,"name":"Rounding","nameLocations":["12557:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"12557:8:5"},"referencedDeclaration":955,"src":"12557:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:5"},"returnParameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1813,"src":"12599:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:5"},"scope":1814,"src":"12526:256:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1815,"src":"202:12582:5","usedErrors":[]}],"src":"103:12682:5"},"id":5},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[1919]},"id":1920,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1816,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"134:80:6","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1919,"linearizedBaseContracts":[1919],"name":"SignedMath","nameLocation":"223:10:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1834,"nodeType":"Block","src":"375:37:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1827,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"392:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1828,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"396:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1831,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"404:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:6","trueExpression":{"id":1830,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"400:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1826,"id":1833,"nodeType":"Return","src":"385:20:6"}]},"documentation":{"id":1818,"nodeType":"StructuredDocumentation","src":"240:66:6","text":" @dev Returns the largest of two signed numbers."},"id":1835,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:6","nodeType":"FunctionDefinition","parameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"a","nameLocation":"331:1:6","nodeType":"VariableDeclaration","scope":1835,"src":"324:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1819,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1822,"mutability":"mutable","name":"b","nameLocation":"341:1:6","nodeType":"VariableDeclaration","scope":1835,"src":"334:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1821,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:6"},"returnParameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1835,"src":"367:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1824,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:6"},"scope":1919,"src":"311:101:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1852,"nodeType":"Block","src":"554:37:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1845,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"571:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1846,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"575:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1849,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"583:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:6","trueExpression":{"id":1848,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"579:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1844,"id":1851,"nodeType":"Return","src":"564:20:6"}]},"documentation":{"id":1836,"nodeType":"StructuredDocumentation","src":"418:67:6","text":" @dev Returns the smallest of two signed numbers."},"id":1853,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:6","nodeType":"FunctionDefinition","parameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"a","nameLocation":"510:1:6","nodeType":"VariableDeclaration","scope":1853,"src":"503:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1837,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"b","nameLocation":"520:1:6","nodeType":"VariableDeclaration","scope":1853,"src":"513:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1839,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:6"},"returnParameters":{"id":1844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1853,"src":"546:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1842,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:6"},"scope":1919,"src":"490:101:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1896,"nodeType":"Block","src":"796:162:6","statements":[{"assignments":[1864],"declarations":[{"constant":false,"id":1864,"mutability":"mutable","name":"x","nameLocation":"865:1:6","nodeType":"VariableDeclaration","scope":1896,"src":"858:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1863,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1877,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1865,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"870:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1866,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"874:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1869,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"881:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1870,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"885:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1875,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:6"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1878,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"910:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1883,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"930:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1881,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:6","typeDescriptions":{}}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1879,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:6","typeDescriptions":{}}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1888,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"944:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1889,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"948:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1893,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1862,"id":1895,"nodeType":"Return","src":"903:48:6"}]},"documentation":{"id":1854,"nodeType":"StructuredDocumentation","src":"597:126:6","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":1897,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:6","nodeType":"FunctionDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"a","nameLocation":"752:1:6","nodeType":"VariableDeclaration","scope":1897,"src":"745:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1855,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"b","nameLocation":"762:1:6","nodeType":"VariableDeclaration","scope":1897,"src":"755:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1857,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:6"},"returnParameters":{"id":1862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1897,"src":"788:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1860,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:6"},"scope":1919,"src":"728:230:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1917,"nodeType":"Block","src":"1102:158:6","statements":[{"id":1916,"nodeType":"UncheckedBlock","src":"1112:142:6","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1907,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"1227:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:6","subExpression":{"id":1911,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"1241:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:6","trueExpression":{"id":1910,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"1236:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:6","typeDescriptions":{}}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1904,"id":1915,"nodeType":"Return","src":"1212:31:6"}]}]},"documentation":{"id":1898,"nodeType":"StructuredDocumentation","src":"964:78:6","text":" @dev Returns the absolute unsigned value of a signed value."},"id":1918,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:6","nodeType":"FunctionDefinition","parameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"n","nameLocation":"1067:1:6","nodeType":"VariableDeclaration","scope":1918,"src":"1060:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1899,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:6"},"returnParameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1918,"src":"1093:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1902,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:6"},"scope":1919,"src":"1047:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1920,"src":"215:1047:6","usedErrors":[]}],"src":"109:1154:6"},"id":6},"contracts/PlanetDAO.sol":{"ast":{"absolutePath":"contracts/PlanetDAO.sol","exportedSymbols":{"Context":[719],"ERC20":[586],"IERC20":[664],"IERC20Metadata":[689],"Math":[1814],"PlanetDAO":[3353],"SignedMath":[1919],"Strings":[948]},"id":3354,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1921,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":1922,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3354,"sourceUnit":949,"src":"58:51:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1923,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3354,"sourceUnit":587,"src":"111:55:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"PlanetDAO","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3353,"linearizedBaseContracts":[3353],"name":"PlanetDAO","nameLocation":"179:9:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PlanetDAO.dao_uri_struct","id":1930,"members":[{"constant":false,"id":1925,"mutability":"mutable","name":"dao_wallet","nameLocation":"236:10:7","nodeType":"VariableDeclaration","scope":1930,"src":"229:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1924,"name":"string","nodeType":"ElementaryTypeName","src":"229:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1927,"mutability":"mutable","name":"dao_uri","nameLocation":"264:7:7","nodeType":"VariableDeclaration","scope":1930,"src":"257:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1926,"name":"string","nodeType":"ElementaryTypeName","src":"257:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1929,"mutability":"mutable","name":"finished","nameLocation":"289:8:7","nodeType":"VariableDeclaration","scope":1930,"src":"282:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1928,"name":"string","nodeType":"ElementaryTypeName","src":"282:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"dao_uri_struct","nameLocation":"203:14:7","nodeType":"StructDefinition","scope":3353,"src":"196:109:7","visibility":"public"},{"canonicalName":"PlanetDAO.goal_uri_struct","id":1935,"members":[{"constant":false,"id":1932,"mutability":"mutable","name":"dao_id","nameLocation":"352:6:7","nodeType":"VariableDeclaration","scope":1935,"src":"345:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1931,"name":"string","nodeType":"ElementaryTypeName","src":"345:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"goal_uri","nameLocation":"376:8:7","nodeType":"VariableDeclaration","scope":1935,"src":"369:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1933,"name":"string","nodeType":"ElementaryTypeName","src":"369:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"goal_uri_struct","nameLocation":"318:15:7","nodeType":"StructDefinition","scope":3353,"src":"311:81:7","visibility":"public"},{"canonicalName":"PlanetDAO.ideas_uri_struct","id":1942,"members":[{"constant":false,"id":1937,"mutability":"mutable","name":"goal_id","nameLocation":"443:7:7","nodeType":"VariableDeclaration","scope":1942,"src":"435:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1939,"mutability":"mutable","name":"ideas_uri","nameLocation":"468:9:7","nodeType":"VariableDeclaration","scope":1942,"src":"461:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1938,"name":"string","nodeType":"ElementaryTypeName","src":"461:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"donation","nameLocation":"496:8:7","nodeType":"VariableDeclaration","scope":1942,"src":"488:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"488:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ideas_uri_struct","nameLocation":"407:16:7","nodeType":"StructDefinition","scope":3353,"src":"400:112:7","visibility":"public"},{"canonicalName":"PlanetDAO.donation_struct","id":1949,"members":[{"constant":false,"id":1944,"mutability":"mutable","name":"ideas_id","nameLocation":"562:8:7","nodeType":"VariableDeclaration","scope":1949,"src":"554:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1943,"name":"uint256","nodeType":"ElementaryTypeName","src":"554:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1946,"mutability":"mutable","name":"userid","nameLocation":"589:6:7","nodeType":"VariableDeclaration","scope":1949,"src":"581:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"581:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1948,"mutability":"mutable","name":"donation","nameLocation":"614:8:7","nodeType":"VariableDeclaration","scope":1949,"src":"606:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1947,"name":"uint256","nodeType":"ElementaryTypeName","src":"606:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"donation_struct","nameLocation":"527:15:7","nodeType":"StructDefinition","scope":3353,"src":"520:110:7","visibility":"public"},{"canonicalName":"PlanetDAO.smart_contract_uri_struct","id":1956,"members":[{"constant":false,"id":1951,"mutability":"mutable","name":"smart_contract_id","nameLocation":"690:17:7","nodeType":"VariableDeclaration","scope":1956,"src":"682:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1953,"mutability":"mutable","name":"ideas_id","nameLocation":"726:8:7","nodeType":"VariableDeclaration","scope":1956,"src":"718:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1952,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1955,"mutability":"mutable","name":"smart_contract_uri","nameLocation":"752:18:7","nodeType":"VariableDeclaration","scope":1956,"src":"745:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1954,"name":"string","nodeType":"ElementaryTypeName","src":"745:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"smart_contract_uri_struct","nameLocation":"645:25:7","nodeType":"StructDefinition","scope":3353,"src":"638:140:7","visibility":"public"},{"canonicalName":"PlanetDAO.goal_ideas_votes_struct","id":1963,"members":[{"constant":false,"id":1958,"mutability":"mutable","name":"goal_id","nameLocation":"834:7:7","nodeType":"VariableDeclaration","scope":1963,"src":"826:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1957,"name":"uint256","nodeType":"ElementaryTypeName","src":"826:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"ideas_id","nameLocation":"860:8:7","nodeType":"VariableDeclaration","scope":1963,"src":"852:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1959,"name":"uint256","nodeType":"ElementaryTypeName","src":"852:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"user_id","nameLocation":"887:7:7","nodeType":"VariableDeclaration","scope":1963,"src":"879:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"879:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"goal_ideas_votes_struct","nameLocation":"791:23:7","nodeType":"StructDefinition","scope":3353,"src":"784:118:7","visibility":"public"},{"canonicalName":"PlanetDAO.message_struct","id":1972,"members":[{"constant":false,"id":1965,"mutability":"mutable","name":"message_id","nameLocation":"949:10:7","nodeType":"VariableDeclaration","scope":1972,"src":"941:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1964,"name":"uint256","nodeType":"ElementaryTypeName","src":"941:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1967,"mutability":"mutable","name":"ideas_id","nameLocation":"978:8:7","nodeType":"VariableDeclaration","scope":1972,"src":"970:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1969,"mutability":"mutable","name":"message","nameLocation":"1004:7:7","nodeType":"VariableDeclaration","scope":1972,"src":"997:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1968,"name":"string","nodeType":"ElementaryTypeName","src":"997:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"sender","nameLocation":"1029:6:7","nodeType":"VariableDeclaration","scope":1972,"src":"1022:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1970,"name":"string","nodeType":"ElementaryTypeName","src":"1022:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"message_struct","nameLocation":"915:14:7","nodeType":"StructDefinition","scope":3353,"src":"908:135:7","visibility":"public"},{"canonicalName":"PlanetDAO.message_read_struct","id":1981,"members":[{"constant":false,"id":1974,"mutability":"mutable","name":"message_id","nameLocation":"1095:10:7","nodeType":"VariableDeclaration","scope":1981,"src":"1087:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"1087:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1976,"mutability":"mutable","name":"ideas_id","nameLocation":"1124:8:7","nodeType":"VariableDeclaration","scope":1981,"src":"1116:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1975,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1978,"mutability":"mutable","name":"user_id","nameLocation":"1151:7:7","nodeType":"VariableDeclaration","scope":1981,"src":"1143:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1977,"name":"uint256","nodeType":"ElementaryTypeName","src":"1143:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1980,"mutability":"mutable","name":"msg_type","nameLocation":"1176:8:7","nodeType":"VariableDeclaration","scope":1981,"src":"1169:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1979,"name":"string","nodeType":"ElementaryTypeName","src":"1169:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"message_read_struct","nameLocation":"1056:19:7","nodeType":"StructDefinition","scope":3353,"src":"1049:143:7","visibility":"public"},{"canonicalName":"PlanetDAO.reply_struct","id":1990,"members":[{"constant":false,"id":1983,"mutability":"mutable","name":"reply_id","nameLocation":"1237:8:7","nodeType":"VariableDeclaration","scope":1990,"src":"1229:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1982,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1985,"mutability":"mutable","name":"message_id","nameLocation":"1264:10:7","nodeType":"VariableDeclaration","scope":1990,"src":"1256:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1984,"name":"uint256","nodeType":"ElementaryTypeName","src":"1256:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1987,"mutability":"mutable","name":"ideas_id","nameLocation":"1293:8:7","nodeType":"VariableDeclaration","scope":1990,"src":"1285:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"1285:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1989,"mutability":"mutable","name":"message","nameLocation":"1319:7:7","nodeType":"VariableDeclaration","scope":1990,"src":"1312:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1988,"name":"string","nodeType":"ElementaryTypeName","src":"1312:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"reply_struct","nameLocation":"1205:12:7","nodeType":"StructDefinition","scope":3353,"src":"1198:136:7","visibility":"public"},{"canonicalName":"PlanetDAO.UnbondingRequest","id":1995,"members":[{"constant":false,"id":1992,"mutability":"mutable","name":"completionTime","nameLocation":"1383:14:7","nodeType":"VariableDeclaration","scope":1995,"src":"1377:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":1991,"name":"int64","nodeType":"ElementaryTypeName","src":"1377:5:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":1994,"mutability":"mutable","name":"amount","nameLocation":"1416:6:7","nodeType":"VariableDeclaration","scope":1995,"src":"1408:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"1408:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UnbondingRequest","nameLocation":"1349:16:7","nodeType":"StructDefinition","scope":3353,"src":"1342:88:7","visibility":"public"},{"canonicalName":"PlanetDAO.join_struct","id":2000,"members":[{"constant":false,"id":1997,"mutability":"mutable","name":"daoid","nameLocation":"1476:5:7","nodeType":"VariableDeclaration","scope":2000,"src":"1468:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1996,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1999,"mutability":"mutable","name":"user_id","nameLocation":"1500:7:7","nodeType":"VariableDeclaration","scope":2000,"src":"1492:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1998,"name":"uint256","nodeType":"ElementaryTypeName","src":"1492:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"join_struct","nameLocation":"1445:11:7","nodeType":"StructDefinition","scope":3353,"src":"1438:77:7","visibility":"public"},{"canonicalName":"PlanetDAO.user_badge_struct","id":2019,"members":[{"constant":false,"id":2002,"mutability":"mutable","name":"user_id","nameLocation":"1567:7:7","nodeType":"VariableDeclaration","scope":2019,"src":"1559:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2001,"name":"uint256","nodeType":"ElementaryTypeName","src":"1559:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2004,"mutability":"mutable","name":"dao","nameLocation":"1590:3:7","nodeType":"VariableDeclaration","scope":2019,"src":"1585:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2003,"name":"bool","nodeType":"ElementaryTypeName","src":"1585:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2006,"mutability":"mutable","name":"joined","nameLocation":"1609:6:7","nodeType":"VariableDeclaration","scope":2019,"src":"1604:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2005,"name":"bool","nodeType":"ElementaryTypeName","src":"1604:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2008,"mutability":"mutable","name":"goal","nameLocation":"1631:4:7","nodeType":"VariableDeclaration","scope":2019,"src":"1626:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2007,"name":"bool","nodeType":"ElementaryTypeName","src":"1626:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2010,"mutability":"mutable","name":"ideas","nameLocation":"1651:5:7","nodeType":"VariableDeclaration","scope":2019,"src":"1646:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2009,"name":"bool","nodeType":"ElementaryTypeName","src":"1646:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2012,"mutability":"mutable","name":"vote","nameLocation":"1672:4:7","nodeType":"VariableDeclaration","scope":2019,"src":"1667:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2011,"name":"bool","nodeType":"ElementaryTypeName","src":"1667:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2014,"mutability":"mutable","name":"donation","nameLocation":"1692:8:7","nodeType":"VariableDeclaration","scope":2019,"src":"1687:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2013,"name":"bool","nodeType":"ElementaryTypeName","src":"1687:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2016,"mutability":"mutable","name":"comment","nameLocation":"1716:7:7","nodeType":"VariableDeclaration","scope":2019,"src":"1711:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2015,"name":"bool","nodeType":"ElementaryTypeName","src":"1711:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2018,"mutability":"mutable","name":"reply","nameLocation":"1739:5:7","nodeType":"VariableDeclaration","scope":2019,"src":"1734:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2017,"name":"bool","nodeType":"ElementaryTypeName","src":"1734:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"user_badge_struct","nameLocation":"1530:17:7","nodeType":"StructDefinition","scope":3353,"src":"1523:229:7","visibility":"public"},{"constant":false,"functionSelector":"7bbd582d","id":2021,"mutability":"mutable","name":"_dao_ids","nameLocation":"1773:8:7","nodeType":"VariableDeclaration","scope":3353,"src":"1758:23:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2020,"name":"uint256","nodeType":"ElementaryTypeName","src":"1758:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ec245802","id":2023,"mutability":"mutable","name":"_donations_ids","nameLocation":"1803:14:7","nodeType":"VariableDeclaration","scope":3353,"src":"1788:29:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2022,"name":"uint256","nodeType":"ElementaryTypeName","src":"1788:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"13bf4cea","id":2025,"mutability":"mutable","name":"_goal_ids","nameLocation":"1839:9:7","nodeType":"VariableDeclaration","scope":3353,"src":"1824:24:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"1824:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d3791b20","id":2027,"mutability":"mutable","name":"_ideas_ids","nameLocation":"1870:10:7","nodeType":"VariableDeclaration","scope":3353,"src":"1855:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2026,"name":"uint256","nodeType":"ElementaryTypeName","src":"1855:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1171b621","id":2029,"mutability":"mutable","name":"_join_ids","nameLocation":"1902:9:7","nodeType":"VariableDeclaration","scope":3353,"src":"1887:24:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1b592aeb","id":2031,"mutability":"mutable","name":"_smart_contract_ids","nameLocation":"1933:19:7","nodeType":"VariableDeclaration","scope":3353,"src":"1918:34:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2030,"name":"uint256","nodeType":"ElementaryTypeName","src":"1918:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"4a797bd7","id":2033,"mutability":"mutable","name":"_ideas_vote_ids","nameLocation":"1974:15:7","nodeType":"VariableDeclaration","scope":3353,"src":"1959:30:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2032,"name":"uint256","nodeType":"ElementaryTypeName","src":"1959:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"9077007d","id":2035,"mutability":"mutable","name":"_message_ids","nameLocation":"2011:12:7","nodeType":"VariableDeclaration","scope":3353,"src":"1996:27:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2034,"name":"uint256","nodeType":"ElementaryTypeName","src":"1996:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ca013f17","id":2037,"mutability":"mutable","name":"_message_read_ids","nameLocation":"2045:17:7","nodeType":"VariableDeclaration","scope":3353,"src":"2030:32:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2036,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"aa2bf5d3","id":2039,"mutability":"mutable","name":"_reply_ids","nameLocation":"2084:10:7","nodeType":"VariableDeclaration","scope":3353,"src":"2069:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2038,"name":"uint256","nodeType":"ElementaryTypeName","src":"2069:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"27a568b9","id":2044,"mutability":"mutable","name":"_dao_uris","nameLocation":"2143:9:7","nodeType":"VariableDeclaration","scope":3353,"src":"2101:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct)"},"typeName":{"id":2043,"keyType":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"2109:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2101:34:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct)"},"valueType":{"id":2042,"nodeType":"UserDefinedTypeName","pathNode":{"id":2041,"name":"dao_uri_struct","nameLocations":["2120:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1930,"src":"2120:14:7"},"referencedDeclaration":1930,"src":"2120:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage_ptr","typeString":"struct PlanetDAO.dao_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"6ecda4ee","id":2048,"mutability":"mutable","name":"_template_uris","nameLocation":"2279:14:7","nodeType":"VariableDeclaration","scope":3353,"src":"2245:48:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":2047,"keyType":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2245:26:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":2046,"name":"string","nodeType":"ElementaryTypeName","src":"2264:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":false,"functionSelector":"330b8f26","id":2053,"mutability":"mutable","name":"_joined_person","nameLocation":"2409:14:7","nodeType":"VariableDeclaration","scope":3353,"src":"2370:53:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2000_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct)"},"typeName":{"id":2052,"keyType":{"id":2049,"name":"uint256","nodeType":"ElementaryTypeName","src":"2378:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2370:31:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2000_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct)"},"valueType":{"id":2051,"nodeType":"UserDefinedTypeName","pathNode":{"id":2050,"name":"join_struct","nameLocations":["2389:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":2000,"src":"2389:11:7"},"referencedDeclaration":2000,"src":"2389:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2000_storage_ptr","typeString":"struct PlanetDAO.join_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"7f2035d4","id":2058,"mutability":"mutable","name":"_goal_uris","nameLocation":"2537:10:7","nodeType":"VariableDeclaration","scope":3353,"src":"2494:53:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct)"},"typeName":{"id":2057,"keyType":{"id":2054,"name":"uint256","nodeType":"ElementaryTypeName","src":"2502:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2494:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct)"},"valueType":{"id":2056,"nodeType":"UserDefinedTypeName","pathNode":{"id":2055,"name":"goal_uri_struct","nameLocations":["2513:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1935,"src":"2513:15:7"},"referencedDeclaration":1935,"src":"2513:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage_ptr","typeString":"struct PlanetDAO.goal_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"468d0c80","id":2063,"mutability":"mutable","name":"_ideas_uris","nameLocation":"2668:11:7","nodeType":"VariableDeclaration","scope":3353,"src":"2624:55:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct)"},"typeName":{"id":2062,"keyType":{"id":2059,"name":"uint256","nodeType":"ElementaryTypeName","src":"2632:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2624:36:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct)"},"valueType":{"id":2061,"nodeType":"UserDefinedTypeName","pathNode":{"id":2060,"name":"ideas_uri_struct","nameLocations":["2643:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":1942,"src":"2643:16:7"},"referencedDeclaration":1942,"src":"2643:16:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage_ptr","typeString":"struct PlanetDAO.ideas_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"20959ed0","id":2067,"mutability":"mutable","name":"_donated","nameLocation":"2793:8:7","nodeType":"VariableDeclaration","scope":3353,"src":"2758:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2066,"keyType":{"id":2064,"name":"uint256","nodeType":"ElementaryTypeName","src":"2766:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2758:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":2065,"name":"uint256","nodeType":"ElementaryTypeName","src":"2777:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"7fc543ec","id":2072,"mutability":"mutable","name":"_donations","nameLocation":"2916:10:7","nodeType":"VariableDeclaration","scope":3353,"src":"2873:53:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_donation_struct_$1949_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.donation_struct)"},"typeName":{"id":2071,"keyType":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"2881:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2873:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_donation_struct_$1949_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.donation_struct)"},"valueType":{"id":2070,"nodeType":"UserDefinedTypeName","pathNode":{"id":2069,"name":"donation_struct","nameLocations":["2892:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1949,"src":"2892:15:7"},"referencedDeclaration":1949,"src":"2892:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$1949_storage_ptr","typeString":"struct PlanetDAO.donation_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"ff4a37ef","id":2077,"mutability":"mutable","name":"_smart_contracts_uris","nameLocation":"3026:21:7","nodeType":"VariableDeclaration","scope":3353,"src":"2973:74:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1956_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.smart_contract_uri_struct)"},"typeName":{"id":2076,"keyType":{"id":2073,"name":"uint256","nodeType":"ElementaryTypeName","src":"2981:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2973:45:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1956_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.smart_contract_uri_struct)"},"valueType":{"id":2075,"nodeType":"UserDefinedTypeName","pathNode":{"id":2074,"name":"smart_contract_uri_struct","nameLocations":["2992:25:7"],"nodeType":"IdentifierPath","referencedDeclaration":1956,"src":"2992:25:7"},"referencedDeclaration":1956,"src":"2992:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1956_storage_ptr","typeString":"struct PlanetDAO.smart_contract_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"1ba44c4c","id":2082,"mutability":"mutable","name":"all_goal_ideas_votes","nameLocation":"3177:20:7","nodeType":"VariableDeclaration","scope":3353,"src":"3126:71:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct)"},"typeName":{"id":2081,"keyType":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"3134:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3126:43:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct)"},"valueType":{"id":2080,"nodeType":"UserDefinedTypeName","pathNode":{"id":2079,"name":"goal_ideas_votes_struct","nameLocations":["3145:23:7"],"nodeType":"IdentifierPath","referencedDeclaration":1963,"src":"3145:23:7"},"referencedDeclaration":1963,"src":"3145:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage_ptr","typeString":"struct PlanetDAO.goal_ideas_votes_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"b527d45e","id":2087,"mutability":"mutable","name":"all_messages","nameLocation":"3329:12:7","nodeType":"VariableDeclaration","scope":3353,"src":"3287:54:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1972_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct)"},"typeName":{"id":2086,"keyType":{"id":2083,"name":"uint256","nodeType":"ElementaryTypeName","src":"3295:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3287:34:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1972_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct)"},"valueType":{"id":2085,"nodeType":"UserDefinedTypeName","pathNode":{"id":2084,"name":"message_struct","nameLocations":["3306:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1972,"src":"3306:14:7"},"referencedDeclaration":1972,"src":"3306:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_storage_ptr","typeString":"struct PlanetDAO.message_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"cace8d46","id":2092,"mutability":"mutable","name":"all_read_messages","nameLocation":"3453:17:7","nodeType":"VariableDeclaration","scope":3353,"src":"3406:64:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$1981_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_read_struct)"},"typeName":{"id":2091,"keyType":{"id":2088,"name":"uint256","nodeType":"ElementaryTypeName","src":"3414:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3406:39:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$1981_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_read_struct)"},"valueType":{"id":2090,"nodeType":"UserDefinedTypeName","pathNode":{"id":2089,"name":"message_read_struct","nameLocations":["3425:19:7"],"nodeType":"IdentifierPath","referencedDeclaration":1981,"src":"3425:19:7"},"referencedDeclaration":1981,"src":"3425:19:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1981_storage_ptr","typeString":"struct PlanetDAO.message_read_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"3f87a2f4","id":2097,"mutability":"mutable","name":"all_replies","nameLocation":"3590:11:7","nodeType":"VariableDeclaration","scope":3353,"src":"3550:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1990_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct)"},"typeName":{"id":2096,"keyType":{"id":2093,"name":"uint256","nodeType":"ElementaryTypeName","src":"3558:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3550:32:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1990_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct)"},"valueType":{"id":2095,"nodeType":"UserDefinedTypeName","pathNode":{"id":2094,"name":"reply_struct","nameLocations":["3569:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":1990,"src":"3569:12:7"},"referencedDeclaration":1990,"src":"3569:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_storage_ptr","typeString":"struct PlanetDAO.reply_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"a428a47f","id":2102,"mutability":"mutable","name":"_user_badges","nameLocation":"3705:12:7","nodeType":"VariableDeclaration","scope":3353,"src":"3660:57:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct)"},"typeName":{"id":2101,"keyType":{"id":2098,"name":"uint256","nodeType":"ElementaryTypeName","src":"3668:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3660:37:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct)"},"valueType":{"id":2100,"nodeType":"UserDefinedTypeName","pathNode":{"id":2099,"name":"user_badge_struct","nameLocations":["3679:17:7"],"nodeType":"IdentifierPath","referencedDeclaration":2019,"src":"3679:17:7"},"referencedDeclaration":2019,"src":"3679:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2019_storage_ptr","typeString":"struct PlanetDAO.user_badge_struct"}}},"visibility":"public"},{"body":{"id":2143,"nodeType":"Block","src":"3917:263:7","statements":[{"expression":{"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2115,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"3965:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":2117,"indexExpression":{"id":2116,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"3975:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3965:19:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2119,"name":"_dao_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"4002:11:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2120,"name":"_dao_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"4015:8:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"46616c7365","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4025:7:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b","typeString":"literal_string \"False\""},"value":"False"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_a2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b","typeString":"literal_string \"False\""}],"id":2118,"name":"dao_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"3987:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_dao_uri_struct_$1930_storage_ptr_$","typeString":"type(struct PlanetDAO.dao_uri_struct storage pointer)"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3987:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_memory_ptr","typeString":"struct PlanetDAO.dao_uri_struct memory"}},"src":"3965:68:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"id":2124,"nodeType":"ExpressionStatement","src":"3965:68:7"},{"expression":{"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2125,"name":"_template_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"4044:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2127,"indexExpression":{"id":2126,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"4059:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4044:24:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2128,"name":"_template","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"4071:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4044:36:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2130,"nodeType":"ExpressionStatement","src":"4044:36:7"},{"expression":{"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2131,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"4091:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2133,"indexExpression":{"id":2132,"name":"user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"4104:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4091:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2019_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4113:3:7","memberName":"dao","nodeType":"MemberAccess","referencedDeclaration":2004,"src":"4091:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4119:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4091:32:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2137,"nodeType":"ExpressionStatement","src":"4091:32:7"},{"expression":{"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4134:10:7","subExpression":{"id":2138,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"4134:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2140,"nodeType":"ExpressionStatement","src":"4134:10:7"},{"expression":{"id":2141,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"4164:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2114,"id":2142,"nodeType":"Return","src":"4157:15:7"}]},"functionSelector":"86ffa45b","id":2144,"implemented":true,"kind":"function","modifiers":[],"name":"create_dao","nameLocation":"3789:10:7","nodeType":"FunctionDefinition","parameters":{"id":2111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2104,"mutability":"mutable","name":"_dao_wallet","nameLocation":"3814:11:7","nodeType":"VariableDeclaration","scope":2144,"src":"3800:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2103,"name":"string","nodeType":"ElementaryTypeName","src":"3800:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2106,"mutability":"mutable","name":"_dao_uri","nameLocation":"3841:8:7","nodeType":"VariableDeclaration","scope":2144,"src":"3827:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2105,"name":"string","nodeType":"ElementaryTypeName","src":"3827:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2108,"mutability":"mutable","name":"_template","nameLocation":"3865:9:7","nodeType":"VariableDeclaration","scope":2144,"src":"3851:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2107,"name":"string","nodeType":"ElementaryTypeName","src":"3851:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2110,"mutability":"mutable","name":"user_id","nameLocation":"3883:7:7","nodeType":"VariableDeclaration","scope":2144,"src":"3875:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2109,"name":"uint256","nodeType":"ElementaryTypeName","src":"3875:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3799:92:7"},"returnParameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2144,"src":"3908:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:7"},"scope":3353,"src":"3780:400:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2157,"nodeType":"Block","src":"4262:54:7","statements":[{"expression":{"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2151,"name":"_template_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"4273:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2153,"indexExpression":{"id":2152,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"4288:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4273:23:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2154,"name":"_template","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"4299:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4273:35:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2156,"nodeType":"ExpressionStatement","src":"4273:35:7"}]},"functionSelector":"87633eb2","id":2158,"implemented":true,"kind":"function","modifiers":[],"name":"update_template","nameLocation":"4197:15:7","nodeType":"FunctionDefinition","parameters":{"id":2149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"_dao_id","nameLocation":"4221:7:7","nodeType":"VariableDeclaration","scope":2158,"src":"4213:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"4213:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2148,"mutability":"mutable","name":"_template","nameLocation":"4244:9:7","nodeType":"VariableDeclaration","scope":2158,"src":"4230:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2147,"name":"string","nodeType":"ElementaryTypeName","src":"4230:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4212:42:7"},"returnParameters":{"id":2150,"nodeType":"ParameterList","parameters":[],"src":"4262:0:7"},"scope":3353,"src":"4188:128:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2181,"nodeType":"Block","src":"4416:147:7","statements":[{"expression":{"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2167,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"4464:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":2169,"indexExpression":{"id":2168,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"4474:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4464:18:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"id":2170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4483:10:7","memberName":"dao_wallet","nodeType":"MemberAccess","referencedDeclaration":1925,"src":"4464:29:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2171,"name":"_dao_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"4496:11:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4464:43:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2173,"nodeType":"ExpressionStatement","src":"4464:43:7"},{"expression":{"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2174,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"4518:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":2176,"indexExpression":{"id":2175,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"4528:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4518:18:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"id":2177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4537:7:7","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"4518:26:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2178,"name":"_dao_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"4547:8:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4518:37:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2180,"nodeType":"ExpressionStatement","src":"4518:37:7"}]},"functionSelector":"881de858","id":2182,"implemented":true,"kind":"function","modifiers":[],"name":"set_dao","nameLocation":"4333:7:7","nodeType":"FunctionDefinition","parameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"_dao_id","nameLocation":"4349:7:7","nodeType":"VariableDeclaration","scope":2182,"src":"4341:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2159,"name":"uint256","nodeType":"ElementaryTypeName","src":"4341:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2162,"mutability":"mutable","name":"_dao_wallet","nameLocation":"4372:11:7","nodeType":"VariableDeclaration","scope":2182,"src":"4358:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2161,"name":"string","nodeType":"ElementaryTypeName","src":"4358:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2164,"mutability":"mutable","name":"_dao_uri","nameLocation":"4399:8:7","nodeType":"VariableDeclaration","scope":2182,"src":"4385:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2163,"name":"string","nodeType":"ElementaryTypeName","src":"4385:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4340:68:7"},"returnParameters":{"id":2166,"nodeType":"ParameterList","parameters":[],"src":"4416:0:7"},"scope":3353,"src":"4324:239:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2222,"nodeType":"Block","src":"4633:240:7","statements":[{"assignments":[2192],"declarations":[{"constant":false,"id":2192,"mutability":"mutable","name":"_StoreInfo","nameLocation":"4688:10:7","nodeType":"VariableDeclaration","scope":2222,"src":"4672:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2190,"name":"string","nodeType":"ElementaryTypeName","src":"4672:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2191,"nodeType":"ArrayTypeName","src":"4672:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2198,"initialValue":{"arguments":[{"id":2196,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"4714:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4701:12:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2193,"name":"string","nodeType":"ElementaryTypeName","src":"4705:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2194,"nodeType":"ArrayTypeName","src":"4705:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4701:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4672:51:7"},{"body":{"id":2218,"nodeType":"Block","src":"4773:63:7","statements":[{"expression":{"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2209,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"4788:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2211,"indexExpression":{"id":2210,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"4799:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4788:13:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2212,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"4804:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":2214,"indexExpression":{"id":2213,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"4814:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4804:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"id":2215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4817:7:7","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"4804:20:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"4788:36:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2217,"nodeType":"ExpressionStatement","src":"4788:36:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2203,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"4754:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2204,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"4758:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4754:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2219,"initializationExpression":{"assignments":[2200],"declarations":[{"constant":false,"id":2200,"mutability":"mutable","name":"i","nameLocation":"4747:1:7","nodeType":"VariableDeclaration","scope":2219,"src":"4739:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2199,"name":"uint256","nodeType":"ElementaryTypeName","src":"4739:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2202,"initialValue":{"hexValue":"30","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4751:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4739:13:7"},"loopExpression":{"expression":{"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4768:3:7","subExpression":{"id":2206,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"4768:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2208,"nodeType":"ExpressionStatement","src":"4768:3:7"},"nodeType":"ForStatement","src":"4734:102:7"},{"expression":{"id":2220,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"4855:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2187,"id":2221,"nodeType":"Return","src":"4848:17:7"}]},"functionSelector":"c04fe978","id":2223,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_daos","nameLocation":"4580:12:7","nodeType":"FunctionDefinition","parameters":{"id":2183,"nodeType":"ParameterList","parameters":[],"src":"4592:2:7"},"returnParameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2223,"src":"4616:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2184,"name":"string","nodeType":"ElementaryTypeName","src":"4616:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2185,"nodeType":"ArrayTypeName","src":"4616:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"4615:17:7"},"scope":3353,"src":"4571:302:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2235,"nodeType":"Block","src":"4951:83:7","statements":[{"expression":{"expression":{"baseExpression":{"id":2230,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"5000:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":2232,"indexExpression":{"id":2231,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"5010:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5000:18:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"id":2233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5019:7:7","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"5000:26:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2229,"id":2234,"nodeType":"Return","src":"4993:33:7"}]},"functionSelector":"5d907da1","id":2236,"implemented":true,"kind":"function","modifiers":[],"name":"dao_uri","nameLocation":"4890:7:7","nodeType":"FunctionDefinition","parameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"_dao_id","nameLocation":"4906:7:7","nodeType":"VariableDeclaration","scope":2236,"src":"4898:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"4898:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4897:17:7"},"returnParameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2236,"src":"4936:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2227,"name":"string","nodeType":"ElementaryTypeName","src":"4936:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4935:15:7"},"scope":3353,"src":"4881:153:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2268,"nodeType":"Block","src":"5167:213:7","statements":[{"expression":{"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2247,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"5217:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2249,"indexExpression":{"id":2248,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"5228:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5217:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2251,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"5257:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2252,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"5266:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2250,"name":"goal_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"5241:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_goal_uri_struct_$1935_storage_ptr_$","typeString":"type(struct PlanetDAO.goal_uri_struct storage pointer)"}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5241:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_memory_ptr","typeString":"struct PlanetDAO.goal_uri_struct memory"}},"src":"5217:59:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2255,"nodeType":"ExpressionStatement","src":"5217:59:7"},{"expression":{"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2256,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"5287:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2258,"indexExpression":{"id":2257,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"5300:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5287:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2019_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5310:4:7","memberName":"goal","nodeType":"MemberAccess","referencedDeclaration":2008,"src":"5287:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5317:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5287:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2262,"nodeType":"ExpressionStatement","src":"5287:34:7"},{"expression":{"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5332:11:7","subExpression":{"id":2263,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"5332:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2265,"nodeType":"ExpressionStatement","src":"5332:11:7"},{"expression":{"id":2266,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"5363:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2246,"id":2267,"nodeType":"Return","src":"5356:16:7"}]},"functionSelector":"8413543e","id":2269,"implemented":true,"kind":"function","modifiers":[],"name":"create_goal","nameLocation":"5064:11:7","nodeType":"FunctionDefinition","parameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2238,"mutability":"mutable","name":"_goal_uri","nameLocation":"5090:9:7","nodeType":"VariableDeclaration","scope":2269,"src":"5076:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2237,"name":"string","nodeType":"ElementaryTypeName","src":"5076:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2240,"mutability":"mutable","name":"_dao_id","nameLocation":"5116:7:7","nodeType":"VariableDeclaration","scope":2269,"src":"5101:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2239,"name":"string","nodeType":"ElementaryTypeName","src":"5101:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2242,"mutability":"mutable","name":"_user_id","nameLocation":"5132:8:7","nodeType":"VariableDeclaration","scope":2269,"src":"5124:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2241,"name":"uint256","nodeType":"ElementaryTypeName","src":"5124:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5075:66:7"},"returnParameters":{"id":2246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2269,"src":"5158:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2244,"name":"uint256","nodeType":"ElementaryTypeName","src":"5158:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5157:9:7"},"scope":3353,"src":"5055:325:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2283,"nodeType":"Block","src":"5456:84:7","statements":[{"expression":{"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2276,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"5491:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2278,"indexExpression":{"id":2277,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"5502:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5491:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2279,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5512:8:7","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1934,"src":"5491:29:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2280,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"5523:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5491:41:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2282,"nodeType":"ExpressionStatement","src":"5491:41:7"}]},"functionSelector":"c29595c5","id":2284,"implemented":true,"kind":"function","modifiers":[],"name":"set_goal","nameLocation":"5397:8:7","nodeType":"FunctionDefinition","parameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"_goal_id","nameLocation":"5414:8:7","nodeType":"VariableDeclaration","scope":2284,"src":"5406:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"5406:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2273,"mutability":"mutable","name":"_goal_uri","nameLocation":"5438:9:7","nodeType":"VariableDeclaration","scope":2284,"src":"5424:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2272,"name":"string","nodeType":"ElementaryTypeName","src":"5424:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5405:43:7"},"returnParameters":{"id":2275,"nodeType":"ParameterList","parameters":[],"src":"5456:0:7"},"scope":3353,"src":"5388:152:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2324,"nodeType":"Block","src":"5611:245:7","statements":[{"assignments":[2294],"declarations":[{"constant":false,"id":2294,"mutability":"mutable","name":"_StoreInfo","nameLocation":"5667:10:7","nodeType":"VariableDeclaration","scope":2324,"src":"5651:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2292,"name":"string","nodeType":"ElementaryTypeName","src":"5651:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2293,"nodeType":"ArrayTypeName","src":"5651:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2300,"initialValue":{"arguments":[{"id":2298,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"5693:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5680:12:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2295,"name":"string","nodeType":"ElementaryTypeName","src":"5684:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2296,"nodeType":"ArrayTypeName","src":"5684:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5680:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5651:52:7"},{"body":{"id":2320,"nodeType":"Block","src":"5754:65:7","statements":[{"expression":{"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2311,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"5769:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2313,"indexExpression":{"id":2312,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"5780:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5769:13:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2314,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"5785:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2316,"indexExpression":{"id":2315,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"5796:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5785:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5799:8:7","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1934,"src":"5785:22:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"5769:38:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2319,"nodeType":"ExpressionStatement","src":"5769:38:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2305,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"5734:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2306,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"5738:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5734:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2321,"initializationExpression":{"assignments":[2302],"declarations":[{"constant":false,"id":2302,"mutability":"mutable","name":"i","nameLocation":"5727:1:7","nodeType":"VariableDeclaration","scope":2321,"src":"5719:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2301,"name":"uint256","nodeType":"ElementaryTypeName","src":"5719:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2304,"initialValue":{"hexValue":"30","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5731:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5719:13:7"},"loopExpression":{"expression":{"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5749:3:7","subExpression":{"id":2308,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"5749:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2310,"nodeType":"ExpressionStatement","src":"5749:3:7"},"nodeType":"ForStatement","src":"5714:105:7"},{"expression":{"id":2322,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"5838:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2289,"id":2323,"nodeType":"Return","src":"5831:17:7"}]},"functionSelector":"29b56f60","id":2325,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_goals","nameLocation":"5557:13:7","nodeType":"FunctionDefinition","parameters":{"id":2285,"nodeType":"ParameterList","parameters":[],"src":"5570:2:7"},"returnParameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2325,"src":"5594:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2286,"name":"string","nodeType":"ElementaryTypeName","src":"5594:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2287,"nodeType":"ArrayTypeName","src":"5594:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"5593:17:7"},"scope":3353,"src":"5548:308:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2391,"nodeType":"Block","src":"5958:428:7","statements":[{"assignments":[2337],"declarations":[{"constant":false,"id":2337,"mutability":"mutable","name":"_StoreInfo","nameLocation":"6024:10:7","nodeType":"VariableDeclaration","scope":2391,"src":"6008:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2335,"name":"string","nodeType":"ElementaryTypeName","src":"6008:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2336,"nodeType":"ArrayTypeName","src":"6008:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2343,"initialValue":{"arguments":[{"id":2341,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"6050:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6037:12:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2338,"name":"string","nodeType":"ElementaryTypeName","src":"6041:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2339,"nodeType":"ArrayTypeName","src":"6041:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6037:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6008:52:7"},{"assignments":[2345],"declarations":[{"constant":false,"id":2345,"mutability":"mutable","name":"_store_id","nameLocation":"6079:9:7","nodeType":"VariableDeclaration","scope":2391,"src":"6071:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2344,"name":"uint256","nodeType":"ElementaryTypeName","src":"6071:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2346,"nodeType":"VariableDeclarationStatement","src":"6071:17:7"},{"body":{"id":2387,"nodeType":"Block","src":"6139:210:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2360,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"6174:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2362,"indexExpression":{"id":2361,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"6185:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6174:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2363,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6188:6:7","memberName":"dao_id","nodeType":"MemberAccess","referencedDeclaration":1932,"src":"6174:20:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6168:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2358,"name":"bytes","nodeType":"ElementaryTypeName","src":"6168:5:7","typeDescriptions":{}}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6168:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2357,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6158:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6158:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2369,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"6216:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6210:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2367,"name":"bytes","nodeType":"ElementaryTypeName","src":"6210:5:7","typeDescriptions":{}}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6210:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2366,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6200:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6200:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6158:67:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2386,"nodeType":"IfStatement","src":"6154:184:7","trueBody":{"id":2385,"nodeType":"Block","src":"6227:111:7","statements":[{"expression":{"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2373,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"6246:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2375,"indexExpression":{"id":2374,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"6257:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6246:21:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2376,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"6270:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2378,"indexExpression":{"id":2377,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"6281:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6270:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6284:8:7","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1934,"src":"6270:22:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"6246:46:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2381,"nodeType":"ExpressionStatement","src":"6246:46:7"},{"expression":{"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6311:11:7","subExpression":{"id":2382,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"6311:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2384,"nodeType":"ExpressionStatement","src":"6311:11:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2351,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"6119:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2352,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"6123:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6119:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2388,"initializationExpression":{"assignments":[2348],"declarations":[{"constant":false,"id":2348,"mutability":"mutable","name":"i","nameLocation":"6112:1:7","nodeType":"VariableDeclaration","scope":2388,"src":"6104:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2347,"name":"uint256","nodeType":"ElementaryTypeName","src":"6104:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2350,"initialValue":{"hexValue":"30","id":2349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6116:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6104:13:7"},"loopExpression":{"expression":{"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6134:3:7","subExpression":{"id":2354,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"6134:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2356,"nodeType":"ExpressionStatement","src":"6134:3:7"},"nodeType":"ForStatement","src":"6099:250:7"},{"expression":{"id":2389,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"6368:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2332,"id":2390,"nodeType":"Return","src":"6361:17:7"}]},"functionSelector":"0377d44a","id":2392,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_goals_by_dao_id","nameLocation":"5873:23:7","nodeType":"FunctionDefinition","parameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2327,"mutability":"mutable","name":"_dao_id","nameLocation":"5911:7:7","nodeType":"VariableDeclaration","scope":2392,"src":"5897:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2326,"name":"string","nodeType":"ElementaryTypeName","src":"5897:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5896:23:7"},"returnParameters":{"id":2332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2392,"src":"5941:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2329,"name":"string","nodeType":"ElementaryTypeName","src":"5941:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2330,"nodeType":"ArrayTypeName","src":"5941:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"5940:17:7"},"scope":3353,"src":"5864:522:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2432,"nodeType":"Block","src":"6482:225:7","statements":[{"body":{"id":2428,"nodeType":"Block","src":"6567:112:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2412,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"6602:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2414,"indexExpression":{"id":2413,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"6613:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6602:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6616:8:7","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1934,"src":"6602:22:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6596:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2410,"name":"bytes","nodeType":"ElementaryTypeName","src":"6596:5:7","typeDescriptions":{}}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6596:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2409,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6586:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6586:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2421,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"6646:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6640:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2419,"name":"bytes","nodeType":"ElementaryTypeName","src":"6640:5:7","typeDescriptions":{}}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6640:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2418,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6630:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6630:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6586:71:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2427,"nodeType":"IfStatement","src":"6582:85:7","trueBody":{"expression":{"id":2425,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"6666:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2398,"id":2426,"nodeType":"Return","src":"6659:8:7"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2403,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"6547:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2404,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"6551:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6547:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2429,"initializationExpression":{"assignments":[2400],"declarations":[{"constant":false,"id":2400,"mutability":"mutable","name":"i","nameLocation":"6540:1:7","nodeType":"VariableDeclaration","scope":2429,"src":"6532:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2399,"name":"uint256","nodeType":"ElementaryTypeName","src":"6532:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2402,"initialValue":{"hexValue":"30","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6544:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6532:13:7"},"loopExpression":{"expression":{"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6562:3:7","subExpression":{"id":2406,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"6562:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2408,"nodeType":"ExpressionStatement","src":"6562:3:7"},"nodeType":"ForStatement","src":"6527:152:7"},{"expression":{"hexValue":"30","id":2430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6698:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2398,"id":2431,"nodeType":"Return","src":"6691:8:7"}]},"functionSelector":"1e9ac9f5","id":2433,"implemented":true,"kind":"function","modifiers":[],"name":"get_goal_id_by_goal_uri","nameLocation":"6403:23:7","nodeType":"FunctionDefinition","parameters":{"id":2395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2394,"mutability":"mutable","name":"_goal_uri","nameLocation":"6441:9:7","nodeType":"VariableDeclaration","scope":2433,"src":"6427:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2393,"name":"string","nodeType":"ElementaryTypeName","src":"6427:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6426:25:7"},"returnParameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2433,"src":"6473:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6472:9:7"},"scope":3353,"src":"6394:313:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2445,"nodeType":"Block","src":"6787:87:7","statements":[{"expression":{"expression":{"baseExpression":{"id":2440,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"6837:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2442,"indexExpression":{"id":2441,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"6848:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6837:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6858:8:7","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1934,"src":"6837:29:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2439,"id":2444,"nodeType":"Return","src":"6830:36:7"}]},"functionSelector":"e32acc1a","id":2446,"implemented":true,"kind":"function","modifiers":[],"name":"goal_uri","nameLocation":"6724:8:7","nodeType":"FunctionDefinition","parameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"_goal_id","nameLocation":"6741:8:7","nodeType":"VariableDeclaration","scope":2446,"src":"6733:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"6733:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6732:18:7"},"returnParameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2446,"src":"6772:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2437,"name":"string","nodeType":"ElementaryTypeName","src":"6772:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6771:15:7"},"scope":3353,"src":"6715:159:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2506,"nodeType":"Block","src":"7037:436:7","statements":[{"expression":{"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2460,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"7089:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2462,"indexExpression":{"id":2461,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"7101:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7089:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2464,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"7132:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2465,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"7142:10:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7154:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2463,"name":"ideas_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"7115:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ideas_uri_struct_$1942_storage_ptr_$","typeString":"type(struct PlanetDAO.ideas_uri_struct storage pointer)"}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7115:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_memory_ptr","typeString":"struct PlanetDAO.ideas_uri_struct memory"}},"src":"7089:67:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2469,"nodeType":"ExpressionStatement","src":"7089:67:7"},{"expression":{"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2470,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"7167:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2472,"indexExpression":{"id":2471,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"7180:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7167:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2019_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7190:5:7","memberName":"ideas","nodeType":"MemberAccess","referencedDeclaration":2010,"src":"7167:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7198:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7167:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2476,"nodeType":"ExpressionStatement","src":"7167:35:7"},{"expression":{"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7213:12:7","subExpression":{"id":2477,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"7213:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2479,"nodeType":"ExpressionStatement","src":"7213:12:7"},{"body":{"id":2502,"nodeType":"Block","src":"7292:144:7","statements":[{"expression":{"arguments":[{"id":2492,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"7335:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2493,"name":"_smart_contract_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"7347:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2494,"name":"_smart_contracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"7368:16:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2496,"indexExpression":{"id":2495,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"7385:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7368:19:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2491,"name":"create_ideas_smart_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"7307:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2498,"nodeType":"ExpressionStatement","src":"7307:81:7"},{"expression":{"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7403:21:7","subExpression":{"id":2499,"name":"_smart_contract_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"7403:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2501,"nodeType":"ExpressionStatement","src":"7403:21:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2484,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"7258:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2485,"name":"_smart_contracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"7262:16:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7279:6:7","memberName":"length","nodeType":"MemberAccess","src":"7262:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7258:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2503,"initializationExpression":{"assignments":[2481],"declarations":[{"constant":false,"id":2481,"mutability":"mutable","name":"i","nameLocation":"7251:1:7","nodeType":"VariableDeclaration","scope":2503,"src":"7243:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"7243:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2483,"initialValue":{"hexValue":"30","id":2482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7255:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7243:13:7"},"loopExpression":{"expression":{"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7287:3:7","subExpression":{"id":2488,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"7287:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2490,"nodeType":"ExpressionStatement","src":"7287:3:7"},"nodeType":"ForStatement","src":"7238:198:7"},{"expression":{"id":2504,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"7455:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2459,"id":2505,"nodeType":"Return","src":"7448:17:7"}]},"functionSelector":"d4ea3a36","id":2507,"implemented":true,"kind":"function","modifiers":[],"name":"create_ideas","nameLocation":"6904:12:7","nodeType":"FunctionDefinition","parameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2448,"mutability":"mutable","name":"_ideas_uri","nameLocation":"6931:10:7","nodeType":"VariableDeclaration","scope":2507,"src":"6917:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2447,"name":"string","nodeType":"ElementaryTypeName","src":"6917:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2450,"mutability":"mutable","name":"_goal_id","nameLocation":"6951:8:7","nodeType":"VariableDeclaration","scope":2507,"src":"6943:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2449,"name":"uint256","nodeType":"ElementaryTypeName","src":"6943:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2453,"mutability":"mutable","name":"_smart_contracts","nameLocation":"6977:16:7","nodeType":"VariableDeclaration","scope":2507,"src":"6961:32:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2451,"name":"string","nodeType":"ElementaryTypeName","src":"6961:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2452,"nodeType":"ArrayTypeName","src":"6961:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2455,"mutability":"mutable","name":"_user_id","nameLocation":"7002:8:7","nodeType":"VariableDeclaration","scope":2507,"src":"6994:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2454,"name":"uint256","nodeType":"ElementaryTypeName","src":"6994:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6916:95:7"},"returnParameters":{"id":2459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2507,"src":"7028:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2457,"name":"uint256","nodeType":"ElementaryTypeName","src":"7028:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7027:9:7"},"scope":3353,"src":"6895:578:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2526,"nodeType":"Block","src":"7604:136:7","statements":[{"expression":{"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2516,"name":"_smart_contracts_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"7615:21:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1956_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.smart_contract_uri_struct storage ref)"}},"id":2518,"indexExpression":{"id":2517,"name":"_smart_contract_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"7637:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7615:41:7","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1956_storage","typeString":"struct PlanetDAO.smart_contract_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2520,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"7685:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2521,"name":"_smart_contract_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"7696:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2522,"name":"_smart_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"7716:15:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2519,"name":"smart_contract_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"7659:25:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_smart_contract_uri_struct_$1956_storage_ptr_$","typeString":"type(struct PlanetDAO.smart_contract_uri_struct storage pointer)"}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7659:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1956_memory_ptr","typeString":"struct PlanetDAO.smart_contract_uri_struct memory"}},"src":"7615:117:7","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1956_storage","typeString":"struct PlanetDAO.smart_contract_uri_struct storage ref"}},"id":2525,"nodeType":"ExpressionStatement","src":"7615:117:7"}]},"id":2527,"implemented":true,"kind":"function","modifiers":[],"name":"create_ideas_smart_contract","nameLocation":"7490:27:7","nodeType":"FunctionDefinition","parameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"_ideas_id","nameLocation":"7526:9:7","nodeType":"VariableDeclaration","scope":2527,"src":"7518:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2508,"name":"uint256","nodeType":"ElementaryTypeName","src":"7518:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2511,"mutability":"mutable","name":"_smart_contract_id","nameLocation":"7545:18:7","nodeType":"VariableDeclaration","scope":2527,"src":"7537:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"7537:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2513,"mutability":"mutable","name":"_smart_contract","nameLocation":"7579:15:7","nodeType":"VariableDeclaration","scope":2527,"src":"7565:29:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2512,"name":"string","nodeType":"ElementaryTypeName","src":"7565:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7517:78:7"},"returnParameters":{"id":2515,"nodeType":"ParameterList","parameters":[],"src":"7604:0:7"},"scope":3353,"src":"7481:259:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2541,"nodeType":"Block","src":"7819:64:7","statements":[{"expression":{"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2534,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"7830:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2536,"indexExpression":{"id":2535,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"7842:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7830:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7853:9:7","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"7830:32:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2538,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"7865:10:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7830:45:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2540,"nodeType":"ExpressionStatement","src":"7830:45:7"}]},"functionSelector":"c04e7430","id":2542,"implemented":true,"kind":"function","modifiers":[],"name":"set_ideas","nameLocation":"7757:9:7","nodeType":"FunctionDefinition","parameters":{"id":2532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2529,"mutability":"mutable","name":"_ideas_id","nameLocation":"7775:9:7","nodeType":"VariableDeclaration","scope":2542,"src":"7767:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2528,"name":"uint256","nodeType":"ElementaryTypeName","src":"7767:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2531,"mutability":"mutable","name":"_ideas_uri","nameLocation":"7800:10:7","nodeType":"VariableDeclaration","scope":2542,"src":"7786:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2530,"name":"string","nodeType":"ElementaryTypeName","src":"7786:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7766:45:7"},"returnParameters":{"id":2533,"nodeType":"ParameterList","parameters":[],"src":"7819:0:7"},"scope":3353,"src":"7748:135:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2584,"nodeType":"Block","src":"7976:265:7","statements":[{"expression":{"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2551,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"7987:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2553,"indexExpression":{"id":2552,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"8000:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7987:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2019_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2554,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8009:8:7","memberName":"donation","nodeType":"MemberAccess","referencedDeclaration":2014,"src":"7987:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8020:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7987:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2557,"nodeType":"ExpressionStatement","src":"7987:37:7"},{"expression":{"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2558,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"8035:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2560,"indexExpression":{"id":2559,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"8047:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8035:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8058:8:7","memberName":"donation","nodeType":"MemberAccess","referencedDeclaration":1941,"src":"8035:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2562,"name":"_doantion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"8070:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8035:44:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2564,"nodeType":"ExpressionStatement","src":"8035:44:7"},{"expression":{"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2565,"name":"_donated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"8090:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2567,"indexExpression":{"id":2566,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"8099:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8090:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2568,"name":"_doantion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"8111:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8090:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2570,"nodeType":"ExpressionStatement","src":"8090:30:7"},{"expression":{"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2571,"name":"_donations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"8131:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_donation_struct_$1949_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.donation_struct storage ref)"}},"id":2573,"indexExpression":{"id":2572,"name":"_donations_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"8142:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8131:26:7","typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$1949_storage","typeString":"struct PlanetDAO.donation_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2575,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"8176:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2576,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"8187:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2577,"name":"_doantion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"8196:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2574,"name":"donation_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"8160:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_donation_struct_$1949_storage_ptr_$","typeString":"type(struct PlanetDAO.donation_struct storage pointer)"}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8160:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$1949_memory_ptr","typeString":"struct PlanetDAO.donation_struct memory"}},"src":"8131:75:7","typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$1949_storage","typeString":"struct PlanetDAO.donation_struct storage ref"}},"id":2580,"nodeType":"ExpressionStatement","src":"8131:75:7"},{"expression":{"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8217:16:7","subExpression":{"id":2581,"name":"_donations_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"8217:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2583,"nodeType":"ExpressionStatement","src":"8217:16:7"}]},"functionSelector":"8e6280e6","id":2585,"implemented":true,"kind":"function","modifiers":[],"name":"add_donation","nameLocation":"7900:12:7","nodeType":"FunctionDefinition","parameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"_ideas_id","nameLocation":"7921:9:7","nodeType":"VariableDeclaration","scope":2585,"src":"7913:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"7913:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"_doantion","nameLocation":"7940:9:7","nodeType":"VariableDeclaration","scope":2585,"src":"7932:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"7932:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2548,"mutability":"mutable","name":"_userid","nameLocation":"7960:7:7","nodeType":"VariableDeclaration","scope":2585,"src":"7952:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"7952:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7912:56:7"},"returnParameters":{"id":2550,"nodeType":"ParameterList","parameters":[],"src":"7976:0:7"},"scope":3353,"src":"7891:350:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2611,"nodeType":"Block","src":"8312:159:7","statements":[{"expression":{"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2592,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"8323:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2594,"indexExpression":{"id":2593,"name":"person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"8336:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8323:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2019_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8344:6:7","memberName":"joined","nodeType":"MemberAccess","referencedDeclaration":2006,"src":"8323:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8353:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8323:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2598,"nodeType":"ExpressionStatement","src":"8323:34:7"},{"expression":{"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2599,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"8368:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2000_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct storage ref)"}},"id":2601,"indexExpression":{"id":2600,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"8383:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8368:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2000_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2603,"name":"dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"8416:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2604,"name":"person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"8433:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2602,"name":"join_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"8396:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_join_struct_$2000_storage_ptr_$","typeString":"type(struct PlanetDAO.join_struct storage pointer)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8409:5:7","8424:7:7"],"names":["daoid","user_id"],"nodeType":"FunctionCall","src":"8396:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2000_memory_ptr","typeString":"struct PlanetDAO.join_struct memory"}},"src":"8368:73:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2000_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"id":2607,"nodeType":"ExpressionStatement","src":"8368:73:7"},{"expression":{"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8452:11:7","subExpression":{"id":2608,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"8452:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2610,"nodeType":"ExpressionStatement","src":"8452:11:7"}]},"functionSelector":"c6182b34","id":2612,"implemented":true,"kind":"function","modifiers":[],"name":"join_community","nameLocation":"8258:14:7","nodeType":"FunctionDefinition","parameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"dao_id","nameLocation":"8281:6:7","nodeType":"VariableDeclaration","scope":2612,"src":"8273:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2586,"name":"uint256","nodeType":"ElementaryTypeName","src":"8273:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2589,"mutability":"mutable","name":"person","nameLocation":"8297:6:7","nodeType":"VariableDeclaration","scope":2612,"src":"8289:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"8289:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8272:32:7"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[],"src":"8312:0:7"},"scope":3353,"src":"8249:222:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2642,"nodeType":"Block","src":"8549:165:7","statements":[{"body":{"id":2638,"nodeType":"Block","src":"8603:79:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2629,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"8622:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2000_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct storage ref)"}},"id":2631,"indexExpression":{"id":2630,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"8637:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8622:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2000_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"id":2632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8640:7:7","memberName":"user_id","nodeType":"MemberAccess","referencedDeclaration":1999,"src":"8622:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2633,"name":"person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"8651:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8622:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2637,"nodeType":"IfStatement","src":"8618:52:7","trueBody":{"expression":{"hexValue":"74727565","id":2635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8666:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2618,"id":2636,"nodeType":"Return","src":"8659:11:7"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2623,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"8583:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2624,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"8587:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8583:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2639,"initializationExpression":{"assignments":[2620],"declarations":[{"constant":false,"id":2620,"mutability":"mutable","name":"i","nameLocation":"8576:1:7","nodeType":"VariableDeclaration","scope":2639,"src":"8568:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2619,"name":"uint256","nodeType":"ElementaryTypeName","src":"8568:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2622,"initialValue":{"hexValue":"30","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8568:13:7"},"loopExpression":{"expression":{"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8598:3:7","subExpression":{"id":2626,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"8598:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2628,"nodeType":"ExpressionStatement","src":"8598:3:7"},"nodeType":"ForStatement","src":"8563:119:7"},{"expression":{"hexValue":"66616c7365","id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8701:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2618,"id":2641,"nodeType":"Return","src":"8694:12:7"}]},"functionSelector":"c7af4ee5","id":2643,"implemented":true,"kind":"function","modifiers":[],"name":"is_person_joined","nameLocation":"8488:16:7","nodeType":"FunctionDefinition","parameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"person","nameLocation":"8514:6:7","nodeType":"VariableDeclaration","scope":2643,"src":"8506:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2613,"name":"uint256","nodeType":"ElementaryTypeName","src":"8506:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8504:17:7"},"returnParameters":{"id":2618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2643,"src":"8543:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2616,"name":"bool","nodeType":"ElementaryTypeName","src":"8543:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8542:6:7"},"scope":3353,"src":"8479:235:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2683,"nodeType":"Block","src":"8785:249:7","statements":[{"assignments":[2653],"declarations":[{"constant":false,"id":2653,"mutability":"mutable","name":"_StoreInfo","nameLocation":"8841:10:7","nodeType":"VariableDeclaration","scope":2683,"src":"8825:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2651,"name":"string","nodeType":"ElementaryTypeName","src":"8825:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2652,"nodeType":"ArrayTypeName","src":"8825:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2659,"initialValue":{"arguments":[{"id":2657,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"8867:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8854:12:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2654,"name":"string","nodeType":"ElementaryTypeName","src":"8858:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2655,"nodeType":"ArrayTypeName","src":"8858:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8854:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8825:53:7"},{"body":{"id":2679,"nodeType":"Block","src":"8930:67:7","statements":[{"expression":{"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2670,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"8945:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2672,"indexExpression":{"id":2671,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"8956:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8945:13:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2673,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"8961:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2675,"indexExpression":{"id":2674,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"8973:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8961:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2676,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8976:9:7","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"8961:24:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"8945:40:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2678,"nodeType":"ExpressionStatement","src":"8945:40:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2664,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"8909:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2665,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"8913:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8909:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2680,"initializationExpression":{"assignments":[2661],"declarations":[{"constant":false,"id":2661,"mutability":"mutable","name":"i","nameLocation":"8902:1:7","nodeType":"VariableDeclaration","scope":2680,"src":"8894:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2660,"name":"uint256","nodeType":"ElementaryTypeName","src":"8894:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2663,"initialValue":{"hexValue":"30","id":2662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8906:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8894:13:7"},"loopExpression":{"expression":{"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8925:3:7","subExpression":{"id":2667,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"8925:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2669,"nodeType":"ExpressionStatement","src":"8925:3:7"},"nodeType":"ForStatement","src":"8889:108:7"},{"expression":{"id":2681,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"9016:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2648,"id":2682,"nodeType":"Return","src":"9009:17:7"}]},"functionSelector":"97ee7606","id":2684,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_ideas","nameLocation":"8731:13:7","nodeType":"FunctionDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[],"src":"8744:2:7"},"returnParameters":{"id":2648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2684,"src":"8768:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2645,"name":"string","nodeType":"ElementaryTypeName","src":"8768:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2646,"nodeType":"ArrayTypeName","src":"8768:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"8767:17:7"},"scope":3353,"src":"8722:312:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2739,"nodeType":"Block","src":"9132:362:7","statements":[{"assignments":[2696],"declarations":[{"constant":false,"id":2696,"mutability":"mutable","name":"_StoreInfo","nameLocation":"9199:10:7","nodeType":"VariableDeclaration","scope":2739,"src":"9183:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2694,"name":"string","nodeType":"ElementaryTypeName","src":"9183:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2695,"nodeType":"ArrayTypeName","src":"9183:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2702,"initialValue":{"arguments":[{"id":2700,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"9225:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9212:12:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2697,"name":"string","nodeType":"ElementaryTypeName","src":"9216:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2698,"nodeType":"ArrayTypeName","src":"9216:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9212:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9183:53:7"},{"assignments":[2704],"declarations":[{"constant":false,"id":2704,"mutability":"mutable","name":"_store_id","nameLocation":"9255:9:7","nodeType":"VariableDeclaration","scope":2739,"src":"9247:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2703,"name":"uint256","nodeType":"ElementaryTypeName","src":"9247:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2705,"nodeType":"VariableDeclarationStatement","src":"9247:17:7"},{"body":{"id":2735,"nodeType":"Block","src":"9316:141:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2716,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"9335:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2718,"indexExpression":{"id":2717,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"9347:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9335:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9350:7:7","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1937,"src":"9335:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2720,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"9361:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9335:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2731,"nodeType":"IfStatement","src":"9331:88:7","trueBody":{"expression":{"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2722,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"9371:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2724,"indexExpression":{"id":2723,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"9382:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9371:21:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2725,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"9395:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2727,"indexExpression":{"id":2726,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"9407:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9395:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9410:9:7","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"9395:24:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"9371:48:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2730,"nodeType":"ExpressionStatement","src":"9371:48:7"}},{"expression":{"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9434:11:7","subExpression":{"id":2732,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"9434:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2734,"nodeType":"ExpressionStatement","src":"9434:11:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2710,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"9295:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2711,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"9299:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9295:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2736,"initializationExpression":{"assignments":[2707],"declarations":[{"constant":false,"id":2707,"mutability":"mutable","name":"i","nameLocation":"9288:1:7","nodeType":"VariableDeclaration","scope":2736,"src":"9280:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2706,"name":"uint256","nodeType":"ElementaryTypeName","src":"9280:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2709,"initialValue":{"hexValue":"30","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9292:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9280:13:7"},"loopExpression":{"expression":{"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9311:3:7","subExpression":{"id":2713,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"9311:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2715,"nodeType":"ExpressionStatement","src":"9311:3:7"},"nodeType":"ForStatement","src":"9275:182:7"},{"expression":{"id":2737,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"9476:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2691,"id":2738,"nodeType":"Return","src":"9469:17:7"}]},"functionSelector":"131d44f2","id":2740,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_ideas_by_goal_id","nameLocation":"9051:24:7","nodeType":"FunctionDefinition","parameters":{"id":2687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2686,"mutability":"mutable","name":"_goal_id","nameLocation":"9084:8:7","nodeType":"VariableDeclaration","scope":2740,"src":"9076:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2685,"name":"uint256","nodeType":"ElementaryTypeName","src":"9076:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9075:18:7"},"returnParameters":{"id":2691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2740,"src":"9115:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2688,"name":"string","nodeType":"ElementaryTypeName","src":"9115:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2689,"nodeType":"ArrayTypeName","src":"9115:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"9114:17:7"},"scope":3353,"src":"9042:452:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2780,"nodeType":"Block","src":"9593:230:7","statements":[{"body":{"id":2776,"nodeType":"Block","src":"9680:115:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2760,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"9715:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2762,"indexExpression":{"id":2761,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"9727:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9715:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9730:9:7","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"9715:24:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9709:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2758,"name":"bytes","nodeType":"ElementaryTypeName","src":"9709:5:7","typeDescriptions":{}}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9709:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2757,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9699:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9699:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2769,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"9761:10:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9755:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2767,"name":"bytes","nodeType":"ElementaryTypeName","src":"9755:5:7","typeDescriptions":{}}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9755:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2766,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9745:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9745:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9699:74:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2775,"nodeType":"IfStatement","src":"9695:88:7","trueBody":{"expression":{"id":2773,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"9782:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2746,"id":2774,"nodeType":"Return","src":"9775:8:7"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2751,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"9659:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2752,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"9663:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9659:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2777,"initializationExpression":{"assignments":[2748],"declarations":[{"constant":false,"id":2748,"mutability":"mutable","name":"i","nameLocation":"9652:1:7","nodeType":"VariableDeclaration","scope":2777,"src":"9644:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2747,"name":"uint256","nodeType":"ElementaryTypeName","src":"9644:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2750,"initialValue":{"hexValue":"30","id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9656:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9644:13:7"},"loopExpression":{"expression":{"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9675:3:7","subExpression":{"id":2754,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"9675:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2756,"nodeType":"ExpressionStatement","src":"9675:3:7"},"nodeType":"ForStatement","src":"9639:156:7"},{"expression":{"hexValue":"30","id":2778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9814:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2746,"id":2779,"nodeType":"Return","src":"9807:8:7"}]},"functionSelector":"a1ca9178","id":2781,"implemented":true,"kind":"function","modifiers":[],"name":"get_ideas_id_by_ideas_uri","nameLocation":"9511:25:7","nodeType":"FunctionDefinition","parameters":{"id":2743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2742,"mutability":"mutable","name":"_ideas_uri","nameLocation":"9551:10:7","nodeType":"VariableDeclaration","scope":2781,"src":"9537:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2741,"name":"string","nodeType":"ElementaryTypeName","src":"9537:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9536:26:7"},"returnParameters":{"id":2746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2781,"src":"9584:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2744,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9583:9:7"},"scope":3353,"src":"9502:321:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2824,"nodeType":"Block","src":"9923:251:7","statements":[{"body":{"id":2820,"nodeType":"Block","src":"10010:136:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2801,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"10045:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2803,"indexExpression":{"id":2802,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"10057:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10045:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10060:9:7","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"10045:24:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10039:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2799,"name":"bytes","nodeType":"ElementaryTypeName","src":"10039:5:7","typeDescriptions":{}}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10039:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2798,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10029:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10029:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2810,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"10091:10:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10085:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2808,"name":"bytes","nodeType":"ElementaryTypeName","src":"10085:5:7","typeDescriptions":{}}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2807,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10075:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10075:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10029:74:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2819,"nodeType":"IfStatement","src":"10025:109:7","trueBody":{"expression":{"expression":{"baseExpression":{"id":2814,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"10112:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2816,"indexExpression":{"id":2815,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"10124:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10112:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10127:7:7","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1937,"src":"10112:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2787,"id":2818,"nodeType":"Return","src":"10105:29:7"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2792,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"9989:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2793,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"9993:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9989:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2821,"initializationExpression":{"assignments":[2789],"declarations":[{"constant":false,"id":2789,"mutability":"mutable","name":"i","nameLocation":"9982:1:7","nodeType":"VariableDeclaration","scope":2821,"src":"9974:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2788,"name":"uint256","nodeType":"ElementaryTypeName","src":"9974:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2791,"initialValue":{"hexValue":"30","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9986:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9974:13:7"},"loopExpression":{"expression":{"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10005:3:7","subExpression":{"id":2795,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"10005:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2797,"nodeType":"ExpressionStatement","src":"10005:3:7"},"nodeType":"ForStatement","src":"9969:177:7"},{"expression":{"hexValue":"30","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10165:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2787,"id":2823,"nodeType":"Return","src":"10158:8:7"}]},"functionSelector":"aa4cdf2a","id":2825,"implemented":true,"kind":"function","modifiers":[],"name":"get_goal_id_from_ideas_uri","nameLocation":"9840:26:7","nodeType":"FunctionDefinition","parameters":{"id":2784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"_ideas_uri","nameLocation":"9881:10:7","nodeType":"VariableDeclaration","scope":2825,"src":"9867:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2782,"name":"string","nodeType":"ElementaryTypeName","src":"9867:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9866:26:7"},"returnParameters":{"id":2787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2825,"src":"9914:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2785,"name":"uint256","nodeType":"ElementaryTypeName","src":"9914:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9913:9:7"},"scope":3353,"src":"9831:343:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2837,"nodeType":"Block","src":"10256:91:7","statements":[{"expression":{"expression":{"baseExpression":{"id":2832,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"10307:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2834,"indexExpression":{"id":2833,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"10319:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10307:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10330:9:7","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"10307:32:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2831,"id":2836,"nodeType":"Return","src":"10300:39:7"}]},"functionSelector":"8d3d2595","id":2838,"implemented":true,"kind":"function","modifiers":[],"name":"ideas_uri","nameLocation":"10191:9:7","nodeType":"FunctionDefinition","parameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2827,"mutability":"mutable","name":"_ideas_id","nameLocation":"10209:9:7","nodeType":"VariableDeclaration","scope":2838,"src":"10201:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2826,"name":"uint256","nodeType":"ElementaryTypeName","src":"10201:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10200:19:7"},"returnParameters":{"id":2831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2838,"src":"10241:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2829,"name":"string","nodeType":"ElementaryTypeName","src":"10241:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10240:15:7"},"scope":3353,"src":"10182:165:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2871,"nodeType":"Block","src":"10480:272:7","statements":[{"expression":{"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2849,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"10492:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2851,"indexExpression":{"id":2850,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"10505:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10492:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2019_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2852,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10515:4:7","memberName":"vote","nodeType":"MemberAccess","referencedDeclaration":2012,"src":"10492:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10522:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10492:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2855,"nodeType":"ExpressionStatement","src":"10492:34:7"},{"expression":{"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2856,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"10587:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct storage ref)"}},"id":2858,"indexExpression":{"id":2857,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"10608:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10587:37:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2860,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"10651:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2861,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"10661:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2862,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"10672:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2859,"name":"goal_ideas_votes_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"10627:23:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_goal_ideas_votes_struct_$1963_storage_ptr_$","typeString":"type(struct PlanetDAO.goal_ideas_votes_struct storage pointer)"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10627:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_memory_ptr","typeString":"struct PlanetDAO.goal_ideas_votes_struct memory"}},"src":"10587:94:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"id":2865,"nodeType":"ExpressionStatement","src":"10587:94:7"},{"expression":{"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10692:17:7","subExpression":{"id":2866,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"10692:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2868,"nodeType":"ExpressionStatement","src":"10692:17:7"},{"expression":{"id":2869,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"10729:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2848,"id":2870,"nodeType":"Return","src":"10722:22:7"}]},"functionSelector":"4ff77421","id":2872,"implemented":true,"kind":"function","modifiers":[],"name":"create_goal_ideas_vote","nameLocation":"10377:22:7","nodeType":"FunctionDefinition","parameters":{"id":2845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2840,"mutability":"mutable","name":"_goal_id","nameLocation":"10408:8:7","nodeType":"VariableDeclaration","scope":2872,"src":"10400:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2839,"name":"uint256","nodeType":"ElementaryTypeName","src":"10400:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2842,"mutability":"mutable","name":"_ideas_id","nameLocation":"10426:9:7","nodeType":"VariableDeclaration","scope":2872,"src":"10418:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2841,"name":"uint256","nodeType":"ElementaryTypeName","src":"10418:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2844,"mutability":"mutable","name":"_user_id","nameLocation":"10445:8:7","nodeType":"VariableDeclaration","scope":2872,"src":"10437:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2843,"name":"uint256","nodeType":"ElementaryTypeName","src":"10437:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10399:55:7"},"returnParameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2872,"src":"10471:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2846,"name":"uint256","nodeType":"ElementaryTypeName","src":"10471:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10470:9:7"},"scope":3353,"src":"10368:384:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2936,"nodeType":"Block","src":"10872:439:7","statements":[{"assignments":[2886],"declarations":[{"constant":false,"id":2886,"mutability":"mutable","name":"_StoreInfo","nameLocation":"10942:10:7","nodeType":"VariableDeclaration","scope":2936,"src":"10925:27:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2884,"name":"uint256","nodeType":"ElementaryTypeName","src":"10925:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2885,"nodeType":"ArrayTypeName","src":"10925:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2892,"initialValue":{"arguments":[{"id":2890,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"10969:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10955:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"10959:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2888,"nodeType":"ArrayTypeName","src":"10959:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10955:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10925:60:7"},{"assignments":[2894],"declarations":[{"constant":false,"id":2894,"mutability":"mutable","name":"_store_id","nameLocation":"11004:9:7","nodeType":"VariableDeclaration","scope":2936,"src":"10996:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2893,"name":"uint256","nodeType":"ElementaryTypeName","src":"10996:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2895,"nodeType":"VariableDeclarationStatement","src":"10996:17:7"},{"body":{"id":2932,"nodeType":"Block","src":"11070:206:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2906,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"11089:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct storage ref)"}},"id":2908,"indexExpression":{"id":2907,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"11110:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11089:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"id":2909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11113:7:7","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1958,"src":"11089:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2910,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"11124:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11089:43:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2912,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"11136:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct storage ref)"}},"id":2914,"indexExpression":{"id":2913,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"11157:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11136:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"id":2915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11160:8:7","memberName":"ideas_id","nodeType":"MemberAccess","referencedDeclaration":1960,"src":"11136:32:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2916,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"11172:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11136:45:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11089:92:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2928,"nodeType":"IfStatement","src":"11085:153:7","trueBody":{"expression":{"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2919,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"11183:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2921,"indexExpression":{"id":2920,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"11194:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11183:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2922,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"11207:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct storage ref)"}},"id":2924,"indexExpression":{"id":2923,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"11228:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11207:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"id":2925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11231:7:7","memberName":"user_id","nodeType":"MemberAccess","referencedDeclaration":1962,"src":"11207:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11183:55:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2927,"nodeType":"ExpressionStatement","src":"11183:55:7"}},{"expression":{"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11253:11:7","subExpression":{"id":2929,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"11253:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2931,"nodeType":"ExpressionStatement","src":"11253:11:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2900,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"11044:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2901,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"11048:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11044:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2933,"initializationExpression":{"assignments":[2897],"declarations":[{"constant":false,"id":2897,"mutability":"mutable","name":"i","nameLocation":"11037:1:7","nodeType":"VariableDeclaration","scope":2933,"src":"11029:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"11029:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2899,"initialValue":{"hexValue":"30","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11041:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11029:13:7"},"loopExpression":{"expression":{"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11065:3:7","subExpression":{"id":2903,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"11065:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2905,"nodeType":"ExpressionStatement","src":"11065:3:7"},"nodeType":"ForStatement","src":"11024:252:7"},{"expression":{"id":2934,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"11293:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2881,"id":2935,"nodeType":"Return","src":"11286:17:7"}]},"functionSelector":"4be7adb5","id":2937,"implemented":true,"kind":"function","modifiers":[],"name":"get_ideas_votes_from_goal","nameLocation":"10769:25:7","nodeType":"FunctionDefinition","parameters":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"_goal_id","nameLocation":"10803:8:7","nodeType":"VariableDeclaration","scope":2937,"src":"10795:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2873,"name":"uint256","nodeType":"ElementaryTypeName","src":"10795:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2876,"mutability":"mutable","name":"_ideas_id","nameLocation":"10821:9:7","nodeType":"VariableDeclaration","scope":2937,"src":"10813:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2875,"name":"uint256","nodeType":"ElementaryTypeName","src":"10813:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10794:37:7"},"returnParameters":{"id":2881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2937,"src":"10853:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2878,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2879,"nodeType":"ArrayTypeName","src":"10853:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10852:19:7"},"scope":3353,"src":"10760:551:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2973,"nodeType":"Block","src":"11461:260:7","statements":[{"expression":{"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2950,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"11476:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2952,"indexExpression":{"id":2951,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"11489:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11476:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2019_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11499:7:7","memberName":"comment","nodeType":"MemberAccess","referencedDeclaration":2016,"src":"11476:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11509:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11476:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2956,"nodeType":"ExpressionStatement","src":"11476:37:7"},{"expression":{"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2957,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"11569:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1972_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct storage ref)"}},"id":2959,"indexExpression":{"id":2958,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"11582:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11569:26:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_storage","typeString":"struct PlanetDAO.message_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2961,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"11613:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2962,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"11627:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2963,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"11638:8:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2964,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"11648:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2960,"name":"message_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"11598:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_message_struct_$1972_storage_ptr_$","typeString":"type(struct PlanetDAO.message_struct storage pointer)"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11598:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_memory_ptr","typeString":"struct PlanetDAO.message_struct memory"}},"src":"11569:87:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_storage","typeString":"struct PlanetDAO.message_struct storage ref"}},"id":2967,"nodeType":"ExpressionStatement","src":"11569:87:7"},{"expression":{"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11667:14:7","subExpression":{"id":2968,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"11667:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2970,"nodeType":"ExpressionStatement","src":"11667:14:7"},{"expression":{"id":2971,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"11701:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2949,"id":2972,"nodeType":"Return","src":"11694:19:7"}]},"functionSelector":"787f19c7","id":2974,"implemented":true,"kind":"function","modifiers":[],"name":"sendMsg","nameLocation":"11344:7:7","nodeType":"FunctionDefinition","parameters":{"id":2946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"mutability":"mutable","name":"_ideas_id","nameLocation":"11360:9:7","nodeType":"VariableDeclaration","scope":2974,"src":"11352:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2938,"name":"uint256","nodeType":"ElementaryTypeName","src":"11352:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2941,"mutability":"mutable","name":"_message","nameLocation":"11385:8:7","nodeType":"VariableDeclaration","scope":2974,"src":"11371:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2940,"name":"string","nodeType":"ElementaryTypeName","src":"11371:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2943,"mutability":"mutable","name":"_sender","nameLocation":"11409:7:7","nodeType":"VariableDeclaration","scope":2974,"src":"11395:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2942,"name":"string","nodeType":"ElementaryTypeName","src":"11395:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2945,"mutability":"mutable","name":"_user_id","nameLocation":"11426:8:7","nodeType":"VariableDeclaration","scope":2974,"src":"11418:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2944,"name":"uint256","nodeType":"ElementaryTypeName","src":"11418:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11351:84:7"},"returnParameters":{"id":2949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2974,"src":"11452:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2947,"name":"uint256","nodeType":"ElementaryTypeName","src":"11452:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11451:9:7"},"scope":3353,"src":"11335:386:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3030,"nodeType":"Block","src":"11805:438:7","statements":[{"assignments":[2986],"declarations":[{"constant":false,"id":2986,"mutability":"mutable","name":"_All_Ideas_Messages","nameLocation":"11880:19:7","nodeType":"VariableDeclaration","scope":3030,"src":"11863:36:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2984,"name":"uint256","nodeType":"ElementaryTypeName","src":"11863:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2985,"nodeType":"ArrayTypeName","src":"11863:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2992,"initialValue":{"arguments":[{"id":2990,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"11916:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11902:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2987,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2988,"nodeType":"ArrayTypeName","src":"11906:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11902:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11863:66:7"},{"assignments":[2994],"declarations":[{"constant":false,"id":2994,"mutability":"mutable","name":"_msg_id","nameLocation":"11948:7:7","nodeType":"VariableDeclaration","scope":3030,"src":"11940:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2993,"name":"uint256","nodeType":"ElementaryTypeName","src":"11940:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2995,"nodeType":"VariableDeclarationStatement","src":"11940:15:7"},{"body":{"id":3026,"nodeType":"Block","src":"12009:188:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3006,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"12028:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1972_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct storage ref)"}},"id":3008,"indexExpression":{"id":3007,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"12041:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12028:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_storage","typeString":"struct PlanetDAO.message_struct storage ref"}},"id":3009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12044:8:7","memberName":"ideas_id","nodeType":"MemberAccess","referencedDeclaration":1967,"src":"12028:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3010,"name":"ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"12056:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12028:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3025,"nodeType":"IfStatement","src":"12024:162:7","trueBody":{"id":3024,"nodeType":"Block","src":"12066:120:7","statements":[{"expression":{"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3012,"name":"_All_Ideas_Messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"12085:19:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3014,"indexExpression":{"id":3013,"name":"_msg_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"12105:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12085:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3015,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"12116:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1972_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct storage ref)"}},"id":3017,"indexExpression":{"id":3016,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"12129:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12116:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_storage","typeString":"struct PlanetDAO.message_struct storage ref"}},"id":3018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12132:10:7","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":1965,"src":"12116:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12085:57:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3020,"nodeType":"ExpressionStatement","src":"12085:57:7"},{"expression":{"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12161:9:7","subExpression":{"id":3021,"name":"_msg_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"12161:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3023,"nodeType":"ExpressionStatement","src":"12161:9:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3000,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"11986:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3001,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"11990:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11986:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3027,"initializationExpression":{"assignments":[2997],"declarations":[{"constant":false,"id":2997,"mutability":"mutable","name":"i","nameLocation":"11979:1:7","nodeType":"VariableDeclaration","scope":3027,"src":"11971:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2996,"name":"uint256","nodeType":"ElementaryTypeName","src":"11971:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2999,"initialValue":{"hexValue":"30","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11983:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11971:13:7"},"loopExpression":{"expression":{"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12004:3:7","subExpression":{"id":3003,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"12004:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3005,"nodeType":"ExpressionStatement","src":"12004:3:7"},"nodeType":"ForStatement","src":"11966:231:7"},{"expression":{"id":3028,"name":"_All_Ideas_Messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"12216:19:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2981,"id":3029,"nodeType":"Return","src":"12209:26:7"}]},"functionSelector":"803f5b9f","id":3031,"implemented":true,"kind":"function","modifiers":[],"name":"getMsgIDs","nameLocation":"11738:9:7","nodeType":"FunctionDefinition","parameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2976,"mutability":"mutable","name":"ideas_id","nameLocation":"11756:8:7","nodeType":"VariableDeclaration","scope":3031,"src":"11748:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"11748:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11747:18:7"},"returnParameters":{"id":2981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3031,"src":"11787:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2978,"name":"uint256","nodeType":"ElementaryTypeName","src":"11787:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2979,"nodeType":"ArrayTypeName","src":"11787:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11786:18:7"},"scope":3353,"src":"11729:514:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3067,"nodeType":"Block","src":"12371:240:7","statements":[{"expression":{"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3044,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"12384:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":3046,"indexExpression":{"id":3045,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"12397:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12384:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2019_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":3047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12406:5:7","memberName":"reply","nodeType":"MemberAccess","referencedDeclaration":2018,"src":"12384:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12414:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12384:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3050,"nodeType":"ExpressionStatement","src":"12384:34:7"},{"expression":{"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3051,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"12470:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1990_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct storage ref)"}},"id":3053,"indexExpression":{"id":3052,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"12482:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12470:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_storage","typeString":"struct PlanetDAO.reply_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3055,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"12509:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3056,"name":"_message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"12521:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3057,"name":"ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"12533:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3058,"name":"_reply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"12543:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3054,"name":"reply_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"12496:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_reply_struct_$1990_storage_ptr_$","typeString":"type(struct PlanetDAO.reply_struct storage pointer)"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12496:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_memory_ptr","typeString":"struct PlanetDAO.reply_struct memory"}},"src":"12470:80:7","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_storage","typeString":"struct PlanetDAO.reply_struct storage ref"}},"id":3061,"nodeType":"ExpressionStatement","src":"12470:80:7"},{"expression":{"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12561:12:7","subExpression":{"id":3062,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"12561:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3064,"nodeType":"ExpressionStatement","src":"12561:12:7"},{"expression":{"id":3065,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"12593:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3043,"id":3066,"nodeType":"Return","src":"12586:17:7"}]},"functionSelector":"d9fc52db","id":3068,"implemented":true,"kind":"function","modifiers":[],"name":"sendReply","nameLocation":"12260:9:7","nodeType":"FunctionDefinition","parameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"_message_id","nameLocation":"12278:11:7","nodeType":"VariableDeclaration","scope":3068,"src":"12270:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3032,"name":"uint256","nodeType":"ElementaryTypeName","src":"12270:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3035,"mutability":"mutable","name":"_reply","nameLocation":"12305:6:7","nodeType":"VariableDeclaration","scope":3068,"src":"12291:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3034,"name":"string","nodeType":"ElementaryTypeName","src":"12291:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3037,"mutability":"mutable","name":"ideas_id","nameLocation":"12320:8:7","nodeType":"VariableDeclaration","scope":3068,"src":"12312:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3036,"name":"uint256","nodeType":"ElementaryTypeName","src":"12312:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3039,"mutability":"mutable","name":"_userid","nameLocation":"12337:7:7","nodeType":"VariableDeclaration","scope":3068,"src":"12329:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3038,"name":"uint256","nodeType":"ElementaryTypeName","src":"12329:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12269:76:7"},"returnParameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3068,"src":"12362:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3041,"name":"uint256","nodeType":"ElementaryTypeName","src":"12362:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12361:9:7"},"scope":3353,"src":"12251:360:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3124,"nodeType":"Block","src":"12699:443:7","statements":[{"assignments":[3080],"declarations":[{"constant":false,"id":3080,"mutability":"mutable","name":"_All_Messages_Replys","nameLocation":"12774:20:7","nodeType":"VariableDeclaration","scope":3124,"src":"12757:37:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3078,"name":"uint256","nodeType":"ElementaryTypeName","src":"12757:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3079,"nodeType":"ArrayTypeName","src":"12757:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3086,"initialValue":{"arguments":[{"id":3084,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"12811:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12797:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3081,"name":"uint256","nodeType":"ElementaryTypeName","src":"12801:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3082,"nodeType":"ArrayTypeName","src":"12801:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12797:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12757:65:7"},{"assignments":[3088],"declarations":[{"constant":false,"id":3088,"mutability":"mutable","name":"_reply_id","nameLocation":"12841:9:7","nodeType":"VariableDeclaration","scope":3124,"src":"12833:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3087,"name":"uint256","nodeType":"ElementaryTypeName","src":"12833:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3089,"nodeType":"VariableDeclarationStatement","src":"12833:17:7"},{"body":{"id":3120,"nodeType":"Block","src":"12902:193:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3100,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"12921:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1990_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct storage ref)"}},"id":3102,"indexExpression":{"id":3101,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"12933:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12921:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_storage","typeString":"struct PlanetDAO.reply_struct storage ref"}},"id":3103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12936:10:7","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":1985,"src":"12921:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3104,"name":"message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"12950:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12921:39:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3119,"nodeType":"IfStatement","src":"12917:167:7","trueBody":{"id":3118,"nodeType":"Block","src":"12962:122:7","statements":[{"expression":{"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3106,"name":"_All_Messages_Replys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"12981:20:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3108,"indexExpression":{"id":3107,"name":"_reply_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"13002:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12981:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3109,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"13015:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1990_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct storage ref)"}},"id":3111,"indexExpression":{"id":3110,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"13027:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13015:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_storage","typeString":"struct PlanetDAO.reply_struct storage ref"}},"id":3112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13030:8:7","memberName":"reply_id","nodeType":"MemberAccess","referencedDeclaration":1983,"src":"13015:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12981:57:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3114,"nodeType":"ExpressionStatement","src":"12981:57:7"},{"expression":{"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13057:11:7","subExpression":{"id":3115,"name":"_reply_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"13057:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3117,"nodeType":"ExpressionStatement","src":"13057:11:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3094,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"12881:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3095,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"12885:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12881:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3121,"initializationExpression":{"assignments":[3091],"declarations":[{"constant":false,"id":3091,"mutability":"mutable","name":"i","nameLocation":"12874:1:7","nodeType":"VariableDeclaration","scope":3121,"src":"12866:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3090,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3093,"initialValue":{"hexValue":"30","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12878:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12866:13:7"},"loopExpression":{"expression":{"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12897:3:7","subExpression":{"id":3097,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"12897:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3099,"nodeType":"ExpressionStatement","src":"12897:3:7"},"nodeType":"ForStatement","src":"12861:234:7"},{"expression":{"id":3122,"name":"_All_Messages_Replys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"13114:20:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3075,"id":3123,"nodeType":"Return","src":"13107:27:7"}]},"functionSelector":"812fae1f","id":3125,"implemented":true,"kind":"function","modifiers":[],"name":"getReplyIDs","nameLocation":"12628:11:7","nodeType":"FunctionDefinition","parameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3070,"mutability":"mutable","name":"message_id","nameLocation":"12648:10:7","nodeType":"VariableDeclaration","scope":3125,"src":"12640:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3069,"name":"uint256","nodeType":"ElementaryTypeName","src":"12640:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12639:20:7"},"returnParameters":{"id":3075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3125,"src":"12681:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3072,"name":"uint256","nodeType":"ElementaryTypeName","src":"12681:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3073,"nodeType":"ArrayTypeName","src":"12681:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12680:18:7"},"scope":3353,"src":"12619:523:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3154,"nodeType":"Block","src":"13276:231:7","statements":[{"expression":{"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3138,"name":"all_read_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"13332:17:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$1981_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_read_struct storage ref)"}},"id":3140,"indexExpression":{"id":3139,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"13350:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13332:36:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1981_storage","typeString":"struct PlanetDAO.message_read_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3142,"name":"_message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"13391:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3143,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"13404:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3144,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"13415:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3145,"name":"msg_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"13423:8:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3141,"name":"message_read_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"13371:19:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_message_read_struct_$1981_storage_ptr_$","typeString":"type(struct PlanetDAO.message_read_struct storage pointer)"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13371:61:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1981_memory_ptr","typeString":"struct PlanetDAO.message_read_struct memory"}},"src":"13332:100:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1981_storage","typeString":"struct PlanetDAO.message_read_struct storage ref"}},"id":3148,"nodeType":"ExpressionStatement","src":"13332:100:7"},{"expression":{"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13443:19:7","subExpression":{"id":3149,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"13443:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3151,"nodeType":"ExpressionStatement","src":"13443:19:7"},{"expression":{"id":3152,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"13482:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3137,"id":3153,"nodeType":"Return","src":"13475:24:7"}]},"functionSelector":"934c5f00","id":3155,"implemented":true,"kind":"function","modifiers":[],"name":"sendReadMsg","nameLocation":"13159:11:7","nodeType":"FunctionDefinition","parameters":{"id":3134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"mutability":"mutable","name":"_message_id","nameLocation":"13179:11:7","nodeType":"VariableDeclaration","scope":3155,"src":"13171:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3126,"name":"uint256","nodeType":"ElementaryTypeName","src":"13171:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3129,"mutability":"mutable","name":"_ideas_id","nameLocation":"13200:9:7","nodeType":"VariableDeclaration","scope":3155,"src":"13192:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"13192:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3131,"mutability":"mutable","name":"_wallet","nameLocation":"13218:7:7","nodeType":"VariableDeclaration","scope":3155,"src":"13210:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3130,"name":"uint256","nodeType":"ElementaryTypeName","src":"13210:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3133,"mutability":"mutable","name":"msg_type","nameLocation":"13241:8:7","nodeType":"VariableDeclaration","scope":3155,"src":"13227:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3132,"name":"string","nodeType":"ElementaryTypeName","src":"13227:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13170:80:7"},"returnParameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3155,"src":"13267:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"13267:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13266:9:7"},"scope":3353,"src":"13150:357:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3211,"nodeType":"Block","src":"13610:331:7","statements":[{"assignments":[3165],"declarations":[{"constant":false,"id":3165,"mutability":"mutable","name":"read","nameLocation":"13634:4:7","nodeType":"VariableDeclaration","scope":3211,"src":"13629:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3164,"name":"bool","nodeType":"ElementaryTypeName","src":"13629:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3167,"initialValue":{"hexValue":"66616c7365","id":3166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13641:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"13629:17:7"},{"body":{"id":3207,"nodeType":"Block","src":"13705:205:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3178,"name":"all_read_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"13724:17:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$1981_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_read_struct storage ref)"}},"id":3180,"indexExpression":{"id":3179,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"13742:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13724:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1981_storage","typeString":"struct PlanetDAO.message_read_struct storage ref"}},"id":3181,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13745:10:7","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":1974,"src":"13724:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3182,"name":"_message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"13759:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13724:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3187,"name":"msg_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"13790:8:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13784:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3185,"name":"bytes","nodeType":"ElementaryTypeName","src":"13784:5:7","typeDescriptions":{}}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13784:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3184,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"13774:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13774:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":3193,"name":"all_read_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"13820:17:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$1981_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_read_struct storage ref)"}},"id":3195,"indexExpression":{"id":3194,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"13838:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13820:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1981_storage","typeString":"struct PlanetDAO.message_read_struct storage ref"}},"id":3196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13841:8:7","memberName":"msg_type","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"13820:29:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13814:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3191,"name":"bytes","nodeType":"ElementaryTypeName","src":"13814:5:7","typeDescriptions":{}}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13814:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":3190,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"13804:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13804:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13774:77:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13724:127:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3206,"nodeType":"IfStatement","src":"13720:179:7","trueBody":{"id":3205,"nodeType":"Block","src":"13853:46:7","statements":[{"expression":{"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3201,"name":"read","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"13871:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13878:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13871:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3204,"nodeType":"ExpressionStatement","src":"13871:11:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3172,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"13677:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3173,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"13681:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13677:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3208,"initializationExpression":{"assignments":[3169],"declarations":[{"constant":false,"id":3169,"mutability":"mutable","name":"i","nameLocation":"13670:1:7","nodeType":"VariableDeclaration","scope":3208,"src":"13662:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"13662:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3171,"initialValue":{"hexValue":"30","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13674:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13662:13:7"},"loopExpression":{"expression":{"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13700:3:7","subExpression":{"id":3175,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"13700:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3177,"nodeType":"ExpressionStatement","src":"13700:3:7"},"nodeType":"ForStatement","src":"13657:253:7"},{"expression":{"id":3209,"name":"read","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"13929:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3163,"id":3210,"nodeType":"Return","src":"13922:11:7"}]},"functionSelector":"cd230809","id":3212,"implemented":true,"kind":"function","modifiers":[],"name":"getReadMsg","nameLocation":"13526:10:7","nodeType":"FunctionDefinition","parameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"_message_id","nameLocation":"13545:11:7","nodeType":"VariableDeclaration","scope":3212,"src":"13537:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"13537:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3159,"mutability":"mutable","name":"msg_type","nameLocation":"13572:8:7","nodeType":"VariableDeclaration","scope":3212,"src":"13558:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3158,"name":"string","nodeType":"ElementaryTypeName","src":"13558:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13536:45:7"},"returnParameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3212,"src":"13604:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3161,"name":"bool","nodeType":"ElementaryTypeName","src":"13604:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13603:6:7"},"scope":3353,"src":"13517:424:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3351,"nodeType":"Block","src":"13981:693:7","statements":[{"body":{"expression":{"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14031:19:7","subExpression":{"baseExpression":{"id":3225,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"14038:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":3227,"indexExpression":{"id":3226,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"14048:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14038:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3229,"nodeType":"ExpressionStatement","src":"14031:19:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3219,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"14012:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3220,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"14016:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14012:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3230,"initializationExpression":{"assignments":[3216],"declarations":[{"constant":false,"id":3216,"mutability":"mutable","name":"i","nameLocation":"14005:1:7","nodeType":"VariableDeclaration","scope":3230,"src":"13997:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"13997:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3218,"initialValue":{"hexValue":"30","id":3217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14009:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13997:13:7"},"loopExpression":{"expression":{"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14026:3:7","subExpression":{"id":3222,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"14026:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3224,"nodeType":"ExpressionStatement","src":"14026:3:7"},"nodeType":"ForStatement","src":"13992:58:7"},{"body":{"expression":{"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14101:20:7","subExpression":{"baseExpression":{"id":3241,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"14108:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":3243,"indexExpression":{"id":3242,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"14119:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14108:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3245,"nodeType":"ExpressionStatement","src":"14101:20:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3235,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"14081:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3236,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"14085:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14081:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3246,"initializationExpression":{"assignments":[3232],"declarations":[{"constant":false,"id":3232,"mutability":"mutable","name":"i","nameLocation":"14074:1:7","nodeType":"VariableDeclaration","scope":3246,"src":"14066:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3231,"name":"uint256","nodeType":"ElementaryTypeName","src":"14066:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3234,"initialValue":{"hexValue":"30","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14078:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14066:13:7"},"loopExpression":{"expression":{"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14096:3:7","subExpression":{"id":3238,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"14096:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3240,"nodeType":"ExpressionStatement","src":"14096:3:7"},"nodeType":"ForStatement","src":"14061:60:7"},{"body":{"expression":{"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14173:21:7","subExpression":{"baseExpression":{"id":3257,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"14180:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":3259,"indexExpression":{"id":3258,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"14192:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14180:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3261,"nodeType":"ExpressionStatement","src":"14173:21:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3251,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"14152:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3252,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"14156:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14152:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3262,"initializationExpression":{"assignments":[3248],"declarations":[{"constant":false,"id":3248,"mutability":"mutable","name":"i","nameLocation":"14145:1:7","nodeType":"VariableDeclaration","scope":3262,"src":"14137:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"14137:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3250,"initialValue":{"hexValue":"30","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14137:13:7"},"loopExpression":{"expression":{"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14168:3:7","subExpression":{"id":3254,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"14168:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3256,"nodeType":"ExpressionStatement","src":"14168:3:7"},"nodeType":"ForStatement","src":"14132:62:7"},{"body":{"expression":{"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14245:31:7","subExpression":{"baseExpression":{"id":3273,"name":"_smart_contracts_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"14252:21:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1956_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.smart_contract_uri_struct storage ref)"}},"id":3275,"indexExpression":{"id":3274,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"14274:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14252:24:7","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1956_storage","typeString":"struct PlanetDAO.smart_contract_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3277,"nodeType":"ExpressionStatement","src":"14245:31:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3267,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"14225:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3268,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"14229:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14225:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3278,"initializationExpression":{"assignments":[3264],"declarations":[{"constant":false,"id":3264,"mutability":"mutable","name":"i","nameLocation":"14218:1:7","nodeType":"VariableDeclaration","scope":3278,"src":"14210:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3263,"name":"uint256","nodeType":"ElementaryTypeName","src":"14210:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3266,"initialValue":{"hexValue":"30","id":3265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14222:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14210:13:7"},"loopExpression":{"expression":{"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14240:3:7","subExpression":{"id":3270,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"14240:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3272,"nodeType":"ExpressionStatement","src":"14240:3:7"},"nodeType":"ForStatement","src":"14205:71:7"},{"body":{"expression":{"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14330:22:7","subExpression":{"baseExpression":{"id":3289,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"14337:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1972_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct storage ref)"}},"id":3291,"indexExpression":{"id":3290,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"14350:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14337:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_storage","typeString":"struct PlanetDAO.message_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3293,"nodeType":"ExpressionStatement","src":"14330:22:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3283,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"14307:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3284,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"14311:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14307:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3294,"initializationExpression":{"assignments":[3280],"declarations":[{"constant":false,"id":3280,"mutability":"mutable","name":"i","nameLocation":"14300:1:7","nodeType":"VariableDeclaration","scope":3294,"src":"14292:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3279,"name":"uint256","nodeType":"ElementaryTypeName","src":"14292:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3282,"initialValue":{"hexValue":"30","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14304:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14292:13:7"},"loopExpression":{"expression":{"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14325:3:7","subExpression":{"id":3286,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"14325:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3288,"nodeType":"ExpressionStatement","src":"14325:3:7"},"nodeType":"ForStatement","src":"14287:65:7"},{"body":{"expression":{"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14404:21:7","subExpression":{"baseExpression":{"id":3305,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"14411:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1990_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct storage ref)"}},"id":3307,"indexExpression":{"id":3306,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"14423:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14411:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_storage","typeString":"struct PlanetDAO.reply_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3309,"nodeType":"ExpressionStatement","src":"14404:21:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3299,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"14383:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3300,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"14387:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14383:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3310,"initializationExpression":{"assignments":[3296],"declarations":[{"constant":false,"id":3296,"mutability":"mutable","name":"i","nameLocation":"14376:1:7","nodeType":"VariableDeclaration","scope":3310,"src":"14368:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3295,"name":"uint256","nodeType":"ElementaryTypeName","src":"14368:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3298,"initialValue":{"hexValue":"30","id":3297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14380:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14368:13:7"},"loopExpression":{"expression":{"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14399:3:7","subExpression":{"id":3302,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"14399:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3304,"nodeType":"ExpressionStatement","src":"14399:3:7"},"nodeType":"ForStatement","src":"14363:62:7"},{"body":{"expression":{"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14482:30:7","subExpression":{"baseExpression":{"id":3321,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"14489:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct storage ref)"}},"id":3323,"indexExpression":{"id":3322,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"14510:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14489:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3325,"nodeType":"ExpressionStatement","src":"14482:30:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3315,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"14456:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3316,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"14460:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14456:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3326,"initializationExpression":{"assignments":[3312],"declarations":[{"constant":false,"id":3312,"mutability":"mutable","name":"i","nameLocation":"14449:1:7","nodeType":"VariableDeclaration","scope":3326,"src":"14441:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"14441:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3314,"initialValue":{"hexValue":"30","id":3313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14453:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14441:13:7"},"loopExpression":{"expression":{"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14477:3:7","subExpression":{"id":3318,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"14477:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3320,"nodeType":"ExpressionStatement","src":"14477:3:7"},"nodeType":"ForStatement","src":"14436:76:7"},{"expression":{"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3327,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"14523:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14534:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14523:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3330,"nodeType":"ExpressionStatement","src":"14523:12:7"},{"expression":{"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3331,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"14546:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14558:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14546:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3334,"nodeType":"ExpressionStatement","src":"14546:13:7"},{"expression":{"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3335,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"14570:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14583:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14570:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3338,"nodeType":"ExpressionStatement","src":"14570:14:7"},{"expression":{"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3339,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"14595:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14610:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14595:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3342,"nodeType":"ExpressionStatement","src":"14595:16:7"},{"expression":{"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3343,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"14622:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14635:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14622:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3346,"nodeType":"ExpressionStatement","src":"14622:14:7"},{"expression":{"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3347,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"14647:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14665:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14647:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3350,"nodeType":"ExpressionStatement","src":"14647:19:7"}]},"functionSelector":"b16060a6","id":3352,"implemented":true,"kind":"function","modifiers":[],"name":"reset_all","nameLocation":"13962:9:7","nodeType":"FunctionDefinition","parameters":{"id":3213,"nodeType":"ParameterList","parameters":[],"src":"13971:2:7"},"returnParameters":{"id":3214,"nodeType":"ParameterList","parameters":[],"src":"13981:0:7"},"scope":3353,"src":"13953:721:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3354,"src":"170:14514:7","usedErrors":[]}],"src":"33:14653:7"},"id":7}},"contracts":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_44":{"entryPoint":null,"id":44,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":376,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":502,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":99,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1067,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":332,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":193,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1160,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":646,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":146,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":109,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":796,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":952,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":995,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:8","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:8","statements":[{"nodeType":"YulAssignment","src":"57:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:8"},"nodeType":"YulFunctionCall","src":"67:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:8","type":""}],"src":"7:75:8"},{"body":{"nodeType":"YulBlock","src":"177:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:8"},"nodeType":"YulFunctionCall","src":"187:12:8"},"nodeType":"YulExpressionStatement","src":"187:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:8"},{"body":{"nodeType":"YulBlock","src":"300:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:8"},"nodeType":"YulFunctionCall","src":"310:12:8"},"nodeType":"YulExpressionStatement","src":"310:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:8"},{"body":{"nodeType":"YulBlock","src":"423:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:8"},"nodeType":"YulFunctionCall","src":"433:12:8"},"nodeType":"YulExpressionStatement","src":"433:12:8"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:8"},{"body":{"nodeType":"YulBlock","src":"546:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:8"},"nodeType":"YulFunctionCall","src":"556:12:8"},"nodeType":"YulExpressionStatement","src":"556:12:8"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:8"},{"body":{"nodeType":"YulBlock","src":"628:54:8","statements":[{"nodeType":"YulAssignment","src":"638:38:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:8"},"nodeType":"YulFunctionCall","src":"652:14:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:8"},"nodeType":"YulFunctionCall","src":"668:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:8"},"nodeType":"YulFunctionCall","src":"648:28:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:8"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:8","type":""}],"src":"580:102:8"},{"body":{"nodeType":"YulBlock","src":"716:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:8"},"nodeType":"YulFunctionCall","src":"726:88:8"},"nodeType":"YulExpressionStatement","src":"726:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:8","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:8"},"nodeType":"YulFunctionCall","src":"823:15:8"},"nodeType":"YulExpressionStatement","src":"823:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:8"},"nodeType":"YulFunctionCall","src":"847:15:8"},"nodeType":"YulExpressionStatement","src":"847:15:8"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:8"},{"body":{"nodeType":"YulBlock","src":"917:238:8","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:8","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:8"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:8"},"nodeType":"YulFunctionCall","src":"957:27:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:8"},"nodeType":"YulFunctionCall","src":"945:40:8"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:8"},"nodeType":"YulFunctionCall","src":"1098:18:8"},"nodeType":"YulExpressionStatement","src":"1098:18:8"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:8"},"nodeType":"YulFunctionCall","src":"1036:34:8"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:8"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:8"},"nodeType":"YulFunctionCall","src":"1072:22:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:8"},"nodeType":"YulFunctionCall","src":"1033:62:8"},"nodeType":"YulIf","src":"1030:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:8","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:8"},"nodeType":"YulFunctionCall","src":"1127:22:8"},"nodeType":"YulExpressionStatement","src":"1127:22:8"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:8","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:8","type":""}],"src":"874:281:8"},{"body":{"nodeType":"YulBlock","src":"1202:88:8","statements":[{"nodeType":"YulAssignment","src":"1212:30:8","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:8"},"nodeType":"YulFunctionCall","src":"1222:20:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:8"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:8"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:8"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:8"},"nodeType":"YulFunctionCall","src":"1251:33:8"},"nodeType":"YulExpressionStatement","src":"1251:33:8"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:8","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:8","type":""}],"src":"1161:129:8"},{"body":{"nodeType":"YulBlock","src":"1363:241:8","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:8"},"nodeType":"YulFunctionCall","src":"1470:18:8"},"nodeType":"YulExpressionStatement","src":"1470:18:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:8"},"nodeType":"YulFunctionCall","src":"1437:30:8"},"nodeType":"YulIf","src":"1434:56:8"},{"nodeType":"YulAssignment","src":"1500:37:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:8"},"nodeType":"YulFunctionCall","src":"1508:29:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:8"}]},{"nodeType":"YulAssignment","src":"1574:23:8","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:8"},"nodeType":"YulFunctionCall","src":"1582:15:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:8"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:8","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:8","type":""}],"src":"1296:308:8"},{"body":{"nodeType":"YulBlock","src":"1672:184:8","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:8"},"nodeType":"YulFunctionCall","src":"1772:11:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:8"},"nodeType":"YulFunctionCall","src":"1791:11:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:8"},"nodeType":"YulFunctionCall","src":"1785:18:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:8"},"nodeType":"YulFunctionCall","src":"1765:39:8"},"nodeType":"YulExpressionStatement","src":"1765:39:8"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:8"},"nodeType":"YulFunctionCall","src":"1709:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:8","statements":[{"nodeType":"YulAssignment","src":"1725:15:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:8"},"nodeType":"YulFunctionCall","src":"1730:10:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:8","statements":[]},"src":"1701:113:8"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:8"},"nodeType":"YulFunctionCall","src":"1830:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:8"},"nodeType":"YulFunctionCall","src":"1823:27:8"},"nodeType":"YulExpressionStatement","src":"1823:27:8"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:8","type":""}],"src":"1610:246:8"},{"body":{"nodeType":"YulBlock","src":"1957:339:8","statements":[{"nodeType":"YulAssignment","src":"1967:75:8","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:8"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:8"},"nodeType":"YulFunctionCall","src":"1992:49:8"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:8"},"nodeType":"YulFunctionCall","src":"1976:66:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:8"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:8"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:8"},"nodeType":"YulFunctionCall","src":"2051:21:8"},"nodeType":"YulExpressionStatement","src":"2051:21:8"},{"nodeType":"YulVariableDeclaration","src":"2081:27:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:8"},"nodeType":"YulFunctionCall","src":"2092:16:8"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:8"},"nodeType":"YulFunctionCall","src":"2148:79:8"},"nodeType":"YulExpressionStatement","src":"2148:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:8"},"nodeType":"YulFunctionCall","src":"2123:16:8"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:8"},"nodeType":"YulFunctionCall","src":"2120:25:8"},"nodeType":"YulIf","src":"2117:112:8"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:8"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:8"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:8"},"nodeType":"YulFunctionCall","src":"2238:52:8"},"nodeType":"YulExpressionStatement","src":"2238:52:8"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:8","type":""}],"src":"1862:434:8"},{"body":{"nodeType":"YulBlock","src":"2389:282:8","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:8"},"nodeType":"YulFunctionCall","src":"2440:79:8"},"nodeType":"YulExpressionStatement","src":"2440:79:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:8"},"nodeType":"YulFunctionCall","src":"2413:17:8"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:8"},"nodeType":"YulFunctionCall","src":"2409:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:8"},"nodeType":"YulFunctionCall","src":"2402:35:8"},"nodeType":"YulIf","src":"2399:122:8"},{"nodeType":"YulVariableDeclaration","src":"2530:27:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:8"},"nodeType":"YulFunctionCall","src":"2544:13:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:8","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:8","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:8"},"nodeType":"YulFunctionCall","src":"2634:17:8"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:8"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:8"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:8"},"nodeType":"YulFunctionCall","src":"2575:90:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:8"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:8","type":""}],"src":"2316:355:8"},{"body":{"nodeType":"YulBlock","src":"2791:739:8","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:8"},"nodeType":"YulFunctionCall","src":"2839:79:8"},"nodeType":"YulExpressionStatement","src":"2839:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:8"},"nodeType":"YulFunctionCall","src":"2808:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:8"},"nodeType":"YulFunctionCall","src":"2804:32:8"},"nodeType":"YulIf","src":"2801:119:8"},{"nodeType":"YulBlock","src":"2930:291:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:8"},"nodeType":"YulFunctionCall","src":"2965:17:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:8"},"nodeType":"YulFunctionCall","src":"2959:24:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:8"},"nodeType":"YulFunctionCall","src":"3032:79:8"},"nodeType":"YulExpressionStatement","src":"3032:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:8"},"nodeType":"YulFunctionCall","src":"2999:30:8"},"nodeType":"YulIf","src":"2996:117:8"},{"nodeType":"YulAssignment","src":"3127:84:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:8"},"nodeType":"YulFunctionCall","src":"3179:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:8"},"nodeType":"YulFunctionCall","src":"3137:74:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:8"}]}]},{"nodeType":"YulBlock","src":"3231:292:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:8"},"nodeType":"YulFunctionCall","src":"3266:18:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:8"},"nodeType":"YulFunctionCall","src":"3260:25:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:8"},"nodeType":"YulFunctionCall","src":"3334:79:8"},"nodeType":"YulExpressionStatement","src":"3334:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:8"},"nodeType":"YulFunctionCall","src":"3301:30:8"},"nodeType":"YulIf","src":"3298:117:8"},{"nodeType":"YulAssignment","src":"3429:84:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:8"},"nodeType":"YulFunctionCall","src":"3481:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:8"},"nodeType":"YulFunctionCall","src":"3439:74:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:8"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:8","type":""}],"src":"2677:853:8"},{"body":{"nodeType":"YulBlock","src":"3595:40:8","statements":[{"nodeType":"YulAssignment","src":"3606:22:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:8"},"nodeType":"YulFunctionCall","src":"3616:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:8"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:8","type":""}],"src":"3536:99:8"},{"body":{"nodeType":"YulBlock","src":"3669:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:8"},"nodeType":"YulFunctionCall","src":"3679:88:8"},"nodeType":"YulExpressionStatement","src":"3679:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:8"},"nodeType":"YulFunctionCall","src":"3776:15:8"},"nodeType":"YulExpressionStatement","src":"3776:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:8"},"nodeType":"YulFunctionCall","src":"3800:15:8"},"nodeType":"YulExpressionStatement","src":"3800:15:8"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:8"},{"body":{"nodeType":"YulBlock","src":"3878:269:8","statements":[{"nodeType":"YulAssignment","src":"3888:22:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:8","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:8"},"nodeType":"YulFunctionCall","src":"3898:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:8","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:8"},"nodeType":"YulFunctionCall","src":"3945:12:8"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:8","statements":[{"nodeType":"YulAssignment","src":"4010:27:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:8"},"nodeType":"YulFunctionCall","src":"4020:17:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:8"},"nodeType":"YulFunctionCall","src":"3969:26:8"},"nodeType":"YulIf","src":"3966:81:8"},{"body":{"nodeType":"YulBlock","src":"4099:42:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:8"},"nodeType":"YulFunctionCall","src":"4113:18:8"},"nodeType":"YulExpressionStatement","src":"4113:18:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:8"},"nodeType":"YulFunctionCall","src":"4083:14:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:8"},"nodeType":"YulFunctionCall","src":"4060:38:8"},"nodeType":"YulIf","src":"4057:84:8"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:8","type":""}],"src":"3827:320:8"},{"body":{"nodeType":"YulBlock","src":"4207:87:8","statements":[{"nodeType":"YulAssignment","src":"4217:11:8","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:8"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:8","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:8"},"nodeType":"YulFunctionCall","src":"4238:14:8"},"nodeType":"YulExpressionStatement","src":"4238:14:8"},{"nodeType":"YulAssignment","src":"4261:26:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:8"},"nodeType":"YulFunctionCall","src":"4269:18:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:8"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:8","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:8","type":""}],"src":"4153:141:8"},{"body":{"nodeType":"YulBlock","src":"4344:49:8","statements":[{"nodeType":"YulAssignment","src":"4354:33:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:8"},"nodeType":"YulFunctionCall","src":"4368:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:8","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:8"},"nodeType":"YulFunctionCall","src":"4364:23:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:8"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:8","type":""}],"src":"4300:93:8"},{"body":{"nodeType":"YulBlock","src":"4452:54:8","statements":[{"nodeType":"YulAssignment","src":"4462:37:8","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:8"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:8"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:8"},"nodeType":"YulFunctionCall","src":"4483:16:8"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:8"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:8","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:8","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:8","type":""}],"src":"4399:107:8"},{"body":{"nodeType":"YulBlock","src":"4588:317:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:8","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:8","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:8"},"nodeType":"YulFunctionCall","src":"4615:18:8"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:8","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:8"},"nodeType":"YulFunctionCall","src":"4654:97:8"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:8","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:8","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:8"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:8"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:8"},"nodeType":"YulFunctionCall","src":"4772:39:8"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:8"}]},{"nodeType":"YulAssignment","src":"4820:30:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:8"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:8"},"nodeType":"YulFunctionCall","src":"4840:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:8"},"nodeType":"YulFunctionCall","src":"4829:21:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:8"}]},{"nodeType":"YulAssignment","src":"4859:40:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:8"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:8"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:8"},"nodeType":"YulFunctionCall","src":"4879:19:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:8"},"nodeType":"YulFunctionCall","src":"4869:30:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:8"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:8","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:8","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:8","type":""}],"src":"4512:393:8"},{"body":{"nodeType":"YulBlock","src":"4956:32:8","statements":[{"nodeType":"YulAssignment","src":"4966:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:8"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:8","type":""}],"src":"4911:77:8"},{"body":{"nodeType":"YulBlock","src":"5026:28:8","statements":[{"nodeType":"YulAssignment","src":"5036:12:8","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:8"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:8","type":""}],"src":"4994:60:8"},{"body":{"nodeType":"YulBlock","src":"5120:82:8","statements":[{"nodeType":"YulAssignment","src":"5130:66:8","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:8"},"nodeType":"YulFunctionCall","src":"5170:24:8"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:8"},"nodeType":"YulFunctionCall","src":"5161:34:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:8"},"nodeType":"YulFunctionCall","src":"5143:53:8"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:8"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:8","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:8","type":""}],"src":"5060:142:8"},{"body":{"nodeType":"YulBlock","src":"5255:28:8","statements":[{"nodeType":"YulAssignment","src":"5265:12:8","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:8"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:8","type":""}],"src":"5208:75:8"},{"body":{"nodeType":"YulBlock","src":"5365:193:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:8","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:8"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:8"},"nodeType":"YulFunctionCall","src":"5399:39:8"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:8"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:8"},"nodeType":"YulFunctionCall","src":"5488:11:8"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:8"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:8"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:8"},"nodeType":"YulFunctionCall","src":"5509:41:8"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:8"},"nodeType":"YulFunctionCall","src":"5460:91:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:8"},"nodeType":"YulFunctionCall","src":"5447:105:8"},"nodeType":"YulExpressionStatement","src":"5447:105:8"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:8","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:8","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:8","type":""}],"src":"5289:269:8"},{"body":{"nodeType":"YulBlock","src":"5613:24:8","statements":[{"nodeType":"YulAssignment","src":"5623:8:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:8","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:8"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:8","type":""}],"src":"5564:73:8"},{"body":{"nodeType":"YulBlock","src":"5696:136:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:8","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:8"},"nodeType":"YulFunctionCall","src":"5720:32:8"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:8"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:8"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:8"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:8"},"nodeType":"YulFunctionCall","src":"5761:65:8"},"nodeType":"YulExpressionStatement","src":"5761:65:8"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:8","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:8","type":""}],"src":"5643:189:8"},{"body":{"nodeType":"YulBlock","src":"5888:136:8","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:8","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:8","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:8"},"nodeType":"YulFunctionCall","src":"5969:39:8"},"nodeType":"YulExpressionStatement","src":"5969:39:8"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:8"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:8"},"nodeType":"YulFunctionCall","src":"5905:14:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:8","statements":[{"nodeType":"YulAssignment","src":"5922:22:8","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:8"},"nodeType":"YulFunctionCall","src":"5931:13:8"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:8"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:8","statements":[]},"src":"5898:120:8"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:8","type":""}],"src":"5838:186:8"},{"body":{"nodeType":"YulBlock","src":"6109:464:8","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:8"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:8"},"nodeType":"YulFunctionCall","src":"6165:38:8"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:8","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:8"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:8"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:8"},"nodeType":"YulFunctionCall","src":"6249:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:8"},"nodeType":"YulFunctionCall","src":"6235:44:8"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:8","statements":[{"nodeType":"YulAssignment","src":"6438:23:8","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:8"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:8"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:8"},"nodeType":"YulFunctionCall","src":"6417:18:8"},"nodeType":"YulIf","src":"6414:49:8"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:8"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:8"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:8"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:8"},"nodeType":"YulFunctionCall","src":"6532:22:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:8"},"nodeType":"YulFunctionCall","src":"6518:37:8"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:8"},"nodeType":"YulFunctionCall","src":"6476:80:8"},"nodeType":"YulExpressionStatement","src":"6476:80:8"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:8"},"nodeType":"YulFunctionCall","src":"6123:11:8"},"nodeType":"YulIf","src":"6120:446:8"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:8","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:8","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:8","type":""}],"src":"6030:543:8"},{"body":{"nodeType":"YulBlock","src":"6642:54:8","statements":[{"nodeType":"YulAssignment","src":"6652:37:8","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:8"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:8"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:8"},"nodeType":"YulFunctionCall","src":"6673:16:8"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:8"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:8","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:8","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:8","type":""}],"src":"6579:117:8"},{"body":{"nodeType":"YulBlock","src":"6753:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:8","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:8","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:8"},"nodeType":"YulFunctionCall","src":"6808:13:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:8","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:8"},"nodeType":"YulFunctionCall","src":"6823:6:8"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:8"},"nodeType":"YulFunctionCall","src":"6779:51:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:8"},"nodeType":"YulFunctionCall","src":"6775:56:8"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:8","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:8"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:8"},"nodeType":"YulFunctionCall","src":"6850:15:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:8"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:8","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:8","type":""}],"src":"6702:169:8"},{"body":{"nodeType":"YulBlock","src":"6957:214:8","statements":[{"nodeType":"YulAssignment","src":"7090:37:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:8"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:8"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:8"},"nodeType":"YulFunctionCall","src":"7098:29:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:8"}]},{"nodeType":"YulAssignment","src":"7136:29:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:8","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:8"},"nodeType":"YulFunctionCall","src":"7153:11:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:8"},"nodeType":"YulFunctionCall","src":"7144:21:8"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:8"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:8","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:8","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:8","type":""}],"src":"6876:295:8"},{"body":{"nodeType":"YulBlock","src":"7268:1303:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:8","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:8"},"nodeType":"YulFunctionCall","src":"7293:37:8"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:8"},"nodeType":"YulFunctionCall","src":"7417:18:8"},"nodeType":"YulExpressionStatement","src":"7417:18:8"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:8"},"nodeType":"YulFunctionCall","src":"7384:30:8"},"nodeType":"YulIf","src":"7381:56:8"},{"nodeType":"YulVariableDeclaration","src":"7447:52:8","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:8"},"nodeType":"YulFunctionCall","src":"7487:11:8"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:8"},"nodeType":"YulFunctionCall","src":"7461:38:8"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:8"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:8"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:8"},"nodeType":"YulFunctionCall","src":"7546:67:8"},"nodeType":"YulExpressionStatement","src":"7546:67:8"},{"nodeType":"YulVariableDeclaration","src":"7623:18:8","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:8","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:8","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:8","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:8","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:8"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:8","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:8","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:8"},"nodeType":"YulFunctionCall","src":"7756:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:8"},"nodeType":"YulFunctionCall","src":"7744:22:8"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:8","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:8"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:8"},"nodeType":"YulFunctionCall","src":"7794:37:8"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:8","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:8"},"nodeType":"YulFunctionCall","src":"7951:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:8"},"nodeType":"YulFunctionCall","src":"7945:26:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:8"},"nodeType":"YulFunctionCall","src":"7930:42:8"},"nodeType":"YulExpressionStatement","src":"7930:42:8"},{"nodeType":"YulAssignment","src":"7989:24:8","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:8"},"nodeType":"YulFunctionCall","src":"7999:14:8"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:8"}]},{"nodeType":"YulAssignment","src":"8030:31:8","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:8"},"nodeType":"YulFunctionCall","src":"8043:18:8"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:8"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:8"},"nodeType":"YulFunctionCall","src":"7875:14:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:8","statements":[{"nodeType":"YulAssignment","src":"7892:17:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:8"},"nodeType":"YulFunctionCall","src":"7897:12:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:8","statements":[]},"src":"7867:208:8"},{"body":{"nodeType":"YulBlock","src":"8111:156:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:8","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:8"},"nodeType":"YulFunctionCall","src":"8152:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:8"},"nodeType":"YulFunctionCall","src":"8146:26:8"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:8","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:8"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:8"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:8","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:8"},"nodeType":"YulFunctionCall","src":"8234:17:8"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:8"},"nodeType":"YulFunctionCall","src":"8204:48:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:8"},"nodeType":"YulFunctionCall","src":"8189:64:8"},"nodeType":"YulExpressionStatement","src":"8189:64:8"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:8"},"nodeType":"YulFunctionCall","src":"8091:19:8"},"nodeType":"YulIf","src":"8088:179:8"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:8"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:8","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:8"},"nodeType":"YulFunctionCall","src":"8297:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:8"},"nodeType":"YulFunctionCall","src":"8293:22:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:8"},"nodeType":"YulFunctionCall","src":"8280:36:8"},"nodeType":"YulExpressionStatement","src":"8280:36:8"}]},"nodeType":"YulCase","src":"7708:618:8","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:8","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:8","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:8","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:8","statements":[{"nodeType":"YulAssignment","src":"8412:35:8","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:8"},"nodeType":"YulFunctionCall","src":"8427:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:8"},"nodeType":"YulFunctionCall","src":"8421:26:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:8"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:8"},"nodeType":"YulIf","src":"8384:77:8"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:8"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:8"},"nodeType":"YulFunctionCall","src":"8487:67:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:8"},"nodeType":"YulFunctionCall","src":"8474:81:8"},"nodeType":"YulExpressionStatement","src":"8474:81:8"}]},"nodeType":"YulCase","src":"8335:230:8","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:8"},"nodeType":"YulFunctionCall","src":"7685:14:8"},"nodeType":"YulSwitch","src":"7678:887:8"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:8","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:8","type":""}],"src":"7176:1395:8"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620017ec380380620017ec8339818101604052810190620000379190620001f6565b8160039081620000489190620004c6565b5080600490816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61122f80620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea2646970667358221220183d5a0e2248a04947293bb80feb25e4832139060ff57231762d688e3687bc0064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17EC CODESIZE SUB DUP1 PUSH3 0x17EC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x122F DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR RETURNDATASIZE GAS 0xE 0x22 BASEFEE LOG0 0x49 SELFBALANCE 0x29 EXTCODESIZE 0xB8 0xF 0xEB 0x25 0xE4 DUP4 0x21 CODECOPY MOD 0xF CREATE2 PUSH19 0x31762D688E3687BC0064736F6C634300081100 CALLER ","sourceMap":"1532:11312:0:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2054:5;2046;:13;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;:::i;:::-;;1980:113;;1532:11312;;7:75:8;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1532:11312:0:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_585":{"entryPoint":2679,"id":585,"parameterSlots":3,"returnSlots":0},"@_approve_520":{"entryPoint":1447,"id":520,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_574":{"entryPoint":2674,"id":574,"parameterSlots":3,"returnSlots":0},"@_msgSender_701":{"entryPoint":1439,"id":701,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_563":{"entryPoint":1904,"id":563,"parameterSlots":3,"returnSlots":0},"@_transfer_346":{"entryPoint":2044,"id":346,"parameterSlots":3,"returnSlots":0},"@allowance_141":{"entryPoint":1304,"id":141,"parameterSlots":2,"returnSlots":1},"@approve_166":{"entryPoint":776,"id":166,"parameterSlots":2,"returnSlots":1},"@balanceOf_98":{"entryPoint":932,"id":98,"parameterSlots":1,"returnSlots":1},"@decimals_74":{"entryPoint":868,"id":74,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_269":{"entryPoint":1150,"id":269,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_228":{"entryPoint":877,"id":228,"parameterSlots":2,"returnSlots":1},"@name_54":{"entryPoint":630,"id":54,"parameterSlots":0,"returnSlots":1},"@symbol_64":{"entryPoint":1004,"id":64,"parameterSlots":0,"returnSlots":1},"@totalSupply_84":{"entryPoint":811,"id":84,"parameterSlots":0,"returnSlots":1},"@transferFrom_199":{"entryPoint":821,"id":199,"parameterSlots":3,"returnSlots":1},"@transfer_123":{"entryPoint":1269,"id":123,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3358,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3175,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3015,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3091,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4096,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4534,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3271,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2828,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4569,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4277,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3286,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2684,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2695,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3565,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2899,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3079,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2867,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2961,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3258,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2712,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3469,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3518,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3422,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2862,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2754,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4309,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3909,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4055,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4455,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4163,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3763,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3617,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2917,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2971,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13699:8","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:8","statements":[{"nodeType":"YulAssignment","src":"77:22:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:8"},"nodeType":"YulFunctionCall","src":"87:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:8"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:8","type":""}],"src":"7:99:8"},{"body":{"nodeType":"YulBlock","src":"208:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:8"},"nodeType":"YulFunctionCall","src":"218:19:8"},"nodeType":"YulExpressionStatement","src":"218:19:8"},{"nodeType":"YulAssignment","src":"246:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:8"},"nodeType":"YulFunctionCall","src":"261:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:8"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:8","type":""}],"src":"112:169:8"},{"body":{"nodeType":"YulBlock","src":"349:184:8","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:8"},"nodeType":"YulFunctionCall","src":"449:11:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:8"},"nodeType":"YulFunctionCall","src":"468:11:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:8"},"nodeType":"YulFunctionCall","src":"462:18:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:8"},"nodeType":"YulFunctionCall","src":"442:39:8"},"nodeType":"YulExpressionStatement","src":"442:39:8"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:8"},"nodeType":"YulFunctionCall","src":"386:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:8","statements":[{"nodeType":"YulAssignment","src":"402:15:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:8"},"nodeType":"YulFunctionCall","src":"407:10:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:8","statements":[]},"src":"378:113:8"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:8"},"nodeType":"YulFunctionCall","src":"507:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:8"},"nodeType":"YulFunctionCall","src":"500:27:8"},"nodeType":"YulExpressionStatement","src":"500:27:8"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:8","type":""}],"src":"287:246:8"},{"body":{"nodeType":"YulBlock","src":"587:54:8","statements":[{"nodeType":"YulAssignment","src":"597:38:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:8"},"nodeType":"YulFunctionCall","src":"611:14:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:8"},"nodeType":"YulFunctionCall","src":"627:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:8"},"nodeType":"YulFunctionCall","src":"607:28:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:8"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:8","type":""}],"src":"539:102:8"},{"body":{"nodeType":"YulBlock","src":"739:285:8","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:8"},"nodeType":"YulFunctionCall","src":"763:39:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:8","type":""}]},{"nodeType":"YulAssignment","src":"811:78:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:8"},"nodeType":"YulFunctionCall","src":"818:71:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:8"},"nodeType":"YulFunctionCall","src":"933:16:8"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:8"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:8"},"nodeType":"YulFunctionCall","src":"898:65:8"},"nodeType":"YulExpressionStatement","src":"898:65:8"},{"nodeType":"YulAssignment","src":"972:46:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:8"},"nodeType":"YulFunctionCall","src":"988:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:8"},"nodeType":"YulFunctionCall","src":"979:39:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:8"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:8","type":""}],"src":"647:377:8"},{"body":{"nodeType":"YulBlock","src":"1148:195:8","statements":[{"nodeType":"YulAssignment","src":"1158:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:8"},"nodeType":"YulFunctionCall","src":"1166:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:8"},"nodeType":"YulFunctionCall","src":"1201:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:8"},"nodeType":"YulFunctionCall","src":"1220:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:8"},"nodeType":"YulFunctionCall","src":"1194:47:8"},"nodeType":"YulExpressionStatement","src":"1194:47:8"},{"nodeType":"YulAssignment","src":"1250:86:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:8"},"nodeType":"YulFunctionCall","src":"1258:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:8"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:8","type":""}],"src":"1030:313:8"},{"body":{"nodeType":"YulBlock","src":"1389:35:8","statements":[{"nodeType":"YulAssignment","src":"1399:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:8"},"nodeType":"YulFunctionCall","src":"1409:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:8","type":""}],"src":"1349:75:8"},{"body":{"nodeType":"YulBlock","src":"1519:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:8"},"nodeType":"YulFunctionCall","src":"1529:12:8"},"nodeType":"YulExpressionStatement","src":"1529:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:8"},{"body":{"nodeType":"YulBlock","src":"1642:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:8"},"nodeType":"YulFunctionCall","src":"1652:12:8"},"nodeType":"YulExpressionStatement","src":"1652:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:8"},{"body":{"nodeType":"YulBlock","src":"1721:81:8","statements":[{"nodeType":"YulAssignment","src":"1731:65:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:8"},"nodeType":"YulFunctionCall","src":"1742:54:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:8"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:8","type":""}],"src":"1676:126:8"},{"body":{"nodeType":"YulBlock","src":"1853:51:8","statements":[{"nodeType":"YulAssignment","src":"1863:35:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:8"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:8"},"nodeType":"YulFunctionCall","src":"1874:24:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:8"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:8","type":""}],"src":"1808:96:8"},{"body":{"nodeType":"YulBlock","src":"1953:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:8"},"nodeType":"YulFunctionCall","src":"2012:12:8"},"nodeType":"YulExpressionStatement","src":"2012:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:8"},"nodeType":"YulFunctionCall","src":"1983:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:8"},"nodeType":"YulFunctionCall","src":"1973:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:8"},"nodeType":"YulFunctionCall","src":"1966:43:8"},"nodeType":"YulIf","src":"1963:63:8"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:8","type":""}],"src":"1910:122:8"},{"body":{"nodeType":"YulBlock","src":"2090:87:8","statements":[{"nodeType":"YulAssignment","src":"2100:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:8"},"nodeType":"YulFunctionCall","src":"2109:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:8"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:8"},"nodeType":"YulFunctionCall","src":"2138:33:8"},"nodeType":"YulExpressionStatement","src":"2138:33:8"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:8","type":""}],"src":"2038:139:8"},{"body":{"nodeType":"YulBlock","src":"2228:32:8","statements":[{"nodeType":"YulAssignment","src":"2238:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:8"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:8","type":""}],"src":"2183:77:8"},{"body":{"nodeType":"YulBlock","src":"2309:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:8"},"nodeType":"YulFunctionCall","src":"2368:12:8"},"nodeType":"YulExpressionStatement","src":"2368:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:8"},"nodeType":"YulFunctionCall","src":"2339:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:8"},"nodeType":"YulFunctionCall","src":"2329:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:8"},"nodeType":"YulFunctionCall","src":"2322:43:8"},"nodeType":"YulIf","src":"2319:63:8"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:8","type":""}],"src":"2266:122:8"},{"body":{"nodeType":"YulBlock","src":"2446:87:8","statements":[{"nodeType":"YulAssignment","src":"2456:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:8"},"nodeType":"YulFunctionCall","src":"2465:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:8"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:8"},"nodeType":"YulFunctionCall","src":"2494:33:8"},"nodeType":"YulExpressionStatement","src":"2494:33:8"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:8","type":""}],"src":"2394:139:8"},{"body":{"nodeType":"YulBlock","src":"2622:391:8","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:8"},"nodeType":"YulFunctionCall","src":"2670:79:8"},"nodeType":"YulExpressionStatement","src":"2670:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:8"},"nodeType":"YulFunctionCall","src":"2639:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:8"},"nodeType":"YulFunctionCall","src":"2635:32:8"},"nodeType":"YulIf","src":"2632:119:8"},{"nodeType":"YulBlock","src":"2761:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:8","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:8"},"nodeType":"YulFunctionCall","src":"2836:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:8"},"nodeType":"YulFunctionCall","src":"2815:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:8"}]}]},{"nodeType":"YulBlock","src":"2888:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:8","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:8"},"nodeType":"YulFunctionCall","src":"2964:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:8"},"nodeType":"YulFunctionCall","src":"2943:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:8","type":""}],"src":"2539:474:8"},{"body":{"nodeType":"YulBlock","src":"3061:48:8","statements":[{"nodeType":"YulAssignment","src":"3071:32:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:8"},"nodeType":"YulFunctionCall","src":"3089:13:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:8"},"nodeType":"YulFunctionCall","src":"3082:21:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:8"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:8","type":""}],"src":"3019:90:8"},{"body":{"nodeType":"YulBlock","src":"3174:50:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:8"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:8"},"nodeType":"YulFunctionCall","src":"3196:21:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:8"},"nodeType":"YulFunctionCall","src":"3184:34:8"},"nodeType":"YulExpressionStatement","src":"3184:34:8"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:8","type":""}],"src":"3115:109:8"},{"body":{"nodeType":"YulBlock","src":"3322:118:8","statements":[{"nodeType":"YulAssignment","src":"3332:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:8"},"nodeType":"YulFunctionCall","src":"3340:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:8"},"nodeType":"YulFunctionCall","src":"3415:17:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:8"},"nodeType":"YulFunctionCall","src":"3368:65:8"},"nodeType":"YulExpressionStatement","src":"3368:65:8"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:8","type":""}],"src":"3230:210:8"},{"body":{"nodeType":"YulBlock","src":"3511:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:8"},"nodeType":"YulFunctionCall","src":"3533:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:8"},"nodeType":"YulFunctionCall","src":"3521:37:8"},"nodeType":"YulExpressionStatement","src":"3521:37:8"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:8","type":""}],"src":"3446:118:8"},{"body":{"nodeType":"YulBlock","src":"3668:124:8","statements":[{"nodeType":"YulAssignment","src":"3678:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:8"},"nodeType":"YulFunctionCall","src":"3686:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:8"},"nodeType":"YulFunctionCall","src":"3767:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:8"},"nodeType":"YulFunctionCall","src":"3714:71:8"},"nodeType":"YulExpressionStatement","src":"3714:71:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:8","type":""}],"src":"3570:222:8"},{"body":{"nodeType":"YulBlock","src":"3898:519:8","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:8"},"nodeType":"YulFunctionCall","src":"3946:79:8"},"nodeType":"YulExpressionStatement","src":"3946:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:8"},"nodeType":"YulFunctionCall","src":"3915:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:8","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:8"},"nodeType":"YulFunctionCall","src":"3911:32:8"},"nodeType":"YulIf","src":"3908:119:8"},{"nodeType":"YulBlock","src":"4037:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:8","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:8"},"nodeType":"YulFunctionCall","src":"4112:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:8"},"nodeType":"YulFunctionCall","src":"4091:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:8"}]}]},{"nodeType":"YulBlock","src":"4164:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:8","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:8"},"nodeType":"YulFunctionCall","src":"4240:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:8"},"nodeType":"YulFunctionCall","src":"4219:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:8"}]}]},{"nodeType":"YulBlock","src":"4292:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:8","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:8"},"nodeType":"YulFunctionCall","src":"4368:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:8"},"nodeType":"YulFunctionCall","src":"4347:53:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:8","type":""}],"src":"3798:619:8"},{"body":{"nodeType":"YulBlock","src":"4466:43:8","statements":[{"nodeType":"YulAssignment","src":"4476:27:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:8","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:8"},"nodeType":"YulFunctionCall","src":"4487:16:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:8"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:8","type":""}],"src":"4423:86:8"},{"body":{"nodeType":"YulBlock","src":"4576:51:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:8"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:8"},"nodeType":"YulFunctionCall","src":"4598:22:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:8"},"nodeType":"YulFunctionCall","src":"4586:35:8"},"nodeType":"YulExpressionStatement","src":"4586:35:8"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:8","type":""}],"src":"4515:112:8"},{"body":{"nodeType":"YulBlock","src":"4727:120:8","statements":[{"nodeType":"YulAssignment","src":"4737:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:8"},"nodeType":"YulFunctionCall","src":"4745:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:8"},"nodeType":"YulFunctionCall","src":"4822:17:8"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:8"},"nodeType":"YulFunctionCall","src":"4773:67:8"},"nodeType":"YulExpressionStatement","src":"4773:67:8"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:8","type":""}],"src":"4633:214:8"},{"body":{"nodeType":"YulBlock","src":"4919:263:8","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:8"},"nodeType":"YulFunctionCall","src":"4967:79:8"},"nodeType":"YulExpressionStatement","src":"4967:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:8"},"nodeType":"YulFunctionCall","src":"4936:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:8"},"nodeType":"YulFunctionCall","src":"4932:32:8"},"nodeType":"YulIf","src":"4929:119:8"},{"nodeType":"YulBlock","src":"5058:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:8","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:8"},"nodeType":"YulFunctionCall","src":"5133:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:8"},"nodeType":"YulFunctionCall","src":"5112:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:8"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:8","type":""}],"src":"4853:329:8"},{"body":{"nodeType":"YulBlock","src":"5271:391:8","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:8"},"nodeType":"YulFunctionCall","src":"5319:79:8"},"nodeType":"YulExpressionStatement","src":"5319:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:8"},"nodeType":"YulFunctionCall","src":"5288:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:8"},"nodeType":"YulFunctionCall","src":"5284:32:8"},"nodeType":"YulIf","src":"5281:119:8"},{"nodeType":"YulBlock","src":"5410:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:8","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:8"},"nodeType":"YulFunctionCall","src":"5485:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:8"},"nodeType":"YulFunctionCall","src":"5464:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:8"}]}]},{"nodeType":"YulBlock","src":"5537:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:8","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:8"},"nodeType":"YulFunctionCall","src":"5613:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:8"},"nodeType":"YulFunctionCall","src":"5592:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:8","type":""}],"src":"5188:474:8"},{"body":{"nodeType":"YulBlock","src":"5696:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:8"},"nodeType":"YulFunctionCall","src":"5706:88:8"},"nodeType":"YulExpressionStatement","src":"5706:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:8"},"nodeType":"YulFunctionCall","src":"5803:15:8"},"nodeType":"YulExpressionStatement","src":"5803:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:8"},"nodeType":"YulFunctionCall","src":"5827:15:8"},"nodeType":"YulExpressionStatement","src":"5827:15:8"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:8"},{"body":{"nodeType":"YulBlock","src":"5905:269:8","statements":[{"nodeType":"YulAssignment","src":"5915:22:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:8","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:8"},"nodeType":"YulFunctionCall","src":"5925:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:8","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:8"},"nodeType":"YulFunctionCall","src":"5972:12:8"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:8","statements":[{"nodeType":"YulAssignment","src":"6037:27:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:8"},"nodeType":"YulFunctionCall","src":"6047:17:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:8"},"nodeType":"YulFunctionCall","src":"5996:26:8"},"nodeType":"YulIf","src":"5993:81:8"},{"body":{"nodeType":"YulBlock","src":"6126:42:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:8"},"nodeType":"YulFunctionCall","src":"6140:18:8"},"nodeType":"YulExpressionStatement","src":"6140:18:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:8"},"nodeType":"YulFunctionCall","src":"6110:14:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:8"},"nodeType":"YulFunctionCall","src":"6087:38:8"},"nodeType":"YulIf","src":"6084:84:8"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:8","type":""}],"src":"5854:320:8"},{"body":{"nodeType":"YulBlock","src":"6208:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:8"},"nodeType":"YulFunctionCall","src":"6218:88:8"},"nodeType":"YulExpressionStatement","src":"6218:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:8"},"nodeType":"YulFunctionCall","src":"6315:15:8"},"nodeType":"YulExpressionStatement","src":"6315:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:8"},"nodeType":"YulFunctionCall","src":"6339:15:8"},"nodeType":"YulExpressionStatement","src":"6339:15:8"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:8"},{"body":{"nodeType":"YulBlock","src":"6410:147:8","statements":[{"nodeType":"YulAssignment","src":"6420:25:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:8"},"nodeType":"YulFunctionCall","src":"6425:20:8"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:8"}]},{"nodeType":"YulAssignment","src":"6454:25:8","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:8"},"nodeType":"YulFunctionCall","src":"6459:20:8"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:8"}]},{"nodeType":"YulAssignment","src":"6488:16:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:8"},"nodeType":"YulFunctionCall","src":"6495:9:8"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:8"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:8"},"nodeType":"YulFunctionCall","src":"6530:18:8"},"nodeType":"YulExpressionStatement","src":"6530:18:8"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:8"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:8"},"nodeType":"YulFunctionCall","src":"6517:10:8"},"nodeType":"YulIf","src":"6514:36:8"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:8","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:8","type":""}],"src":"6366:191:8"},{"body":{"nodeType":"YulBlock","src":"6669:118:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:8"},"nodeType":"YulFunctionCall","src":"6687:14:8"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:8","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:8"},"nodeType":"YulFunctionCall","src":"6680:58:8"},"nodeType":"YulExpressionStatement","src":"6680:58:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:8"},"nodeType":"YulFunctionCall","src":"6755:15:8"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:8","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:8"},"nodeType":"YulFunctionCall","src":"6748:32:8"},"nodeType":"YulExpressionStatement","src":"6748:32:8"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:8","type":""}],"src":"6563:224:8"},{"body":{"nodeType":"YulBlock","src":"6939:220:8","statements":[{"nodeType":"YulAssignment","src":"6949:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:8","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:8"},"nodeType":"YulFunctionCall","src":"6956:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:8"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:8"},"nodeType":"YulFunctionCall","src":"7032:93:8"},"nodeType":"YulExpressionStatement","src":"7032:93:8"},{"nodeType":"YulAssignment","src":"7134:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:8"},"nodeType":"YulFunctionCall","src":"7141:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:8"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:8","type":""}],"src":"6793:366:8"},{"body":{"nodeType":"YulBlock","src":"7336:248:8","statements":[{"nodeType":"YulAssignment","src":"7346:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:8"},"nodeType":"YulFunctionCall","src":"7354:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:8"},"nodeType":"YulFunctionCall","src":"7389:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:8"},"nodeType":"YulFunctionCall","src":"7408:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:8"},"nodeType":"YulFunctionCall","src":"7382:47:8"},"nodeType":"YulExpressionStatement","src":"7382:47:8"},{"nodeType":"YulAssignment","src":"7438:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:8"},"nodeType":"YulFunctionCall","src":"7446:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:8","type":""}],"src":"7165:419:8"},{"body":{"nodeType":"YulBlock","src":"7696:117:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:8"},"nodeType":"YulFunctionCall","src":"7714:14:8"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:8","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:8"},"nodeType":"YulFunctionCall","src":"7707:58:8"},"nodeType":"YulExpressionStatement","src":"7707:58:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:8"},"nodeType":"YulFunctionCall","src":"7782:15:8"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:8","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:8"},"nodeType":"YulFunctionCall","src":"7775:31:8"},"nodeType":"YulExpressionStatement","src":"7775:31:8"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:8","type":""}],"src":"7590:223:8"},{"body":{"nodeType":"YulBlock","src":"7965:220:8","statements":[{"nodeType":"YulAssignment","src":"7975:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:8","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:8"},"nodeType":"YulFunctionCall","src":"7982:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:8"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:8"},"nodeType":"YulFunctionCall","src":"8058:93:8"},"nodeType":"YulExpressionStatement","src":"8058:93:8"},{"nodeType":"YulAssignment","src":"8160:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:8"},"nodeType":"YulFunctionCall","src":"8167:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:8"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:8","type":""}],"src":"7819:366:8"},{"body":{"nodeType":"YulBlock","src":"8362:248:8","statements":[{"nodeType":"YulAssignment","src":"8372:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:8"},"nodeType":"YulFunctionCall","src":"8380:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:8"},"nodeType":"YulFunctionCall","src":"8415:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:8"},"nodeType":"YulFunctionCall","src":"8434:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:8"},"nodeType":"YulFunctionCall","src":"8408:47:8"},"nodeType":"YulExpressionStatement","src":"8408:47:8"},{"nodeType":"YulAssignment","src":"8464:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:8"},"nodeType":"YulFunctionCall","src":"8472:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:8","type":""}],"src":"8191:419:8"},{"body":{"nodeType":"YulBlock","src":"8722:115:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:8"},"nodeType":"YulFunctionCall","src":"8740:14:8"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:8","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:8"},"nodeType":"YulFunctionCall","src":"8733:58:8"},"nodeType":"YulExpressionStatement","src":"8733:58:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:8"},"nodeType":"YulFunctionCall","src":"8808:15:8"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:8","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:8"},"nodeType":"YulFunctionCall","src":"8801:29:8"},"nodeType":"YulExpressionStatement","src":"8801:29:8"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:8","type":""}],"src":"8616:221:8"},{"body":{"nodeType":"YulBlock","src":"8989:220:8","statements":[{"nodeType":"YulAssignment","src":"8999:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:8","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:8"},"nodeType":"YulFunctionCall","src":"9006:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:8"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:8"},"nodeType":"YulFunctionCall","src":"9082:93:8"},"nodeType":"YulExpressionStatement","src":"9082:93:8"},{"nodeType":"YulAssignment","src":"9184:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:8"},"nodeType":"YulFunctionCall","src":"9191:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:8"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:8","type":""}],"src":"8843:366:8"},{"body":{"nodeType":"YulBlock","src":"9386:248:8","statements":[{"nodeType":"YulAssignment","src":"9396:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:8"},"nodeType":"YulFunctionCall","src":"9404:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:8"},"nodeType":"YulFunctionCall","src":"9439:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:8"},"nodeType":"YulFunctionCall","src":"9458:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:8"},"nodeType":"YulFunctionCall","src":"9432:47:8"},"nodeType":"YulExpressionStatement","src":"9432:47:8"},{"nodeType":"YulAssignment","src":"9488:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:8"},"nodeType":"YulFunctionCall","src":"9496:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:8","type":""}],"src":"9215:419:8"},{"body":{"nodeType":"YulBlock","src":"9746:73:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:8"},"nodeType":"YulFunctionCall","src":"9764:14:8"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:8","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:8"},"nodeType":"YulFunctionCall","src":"9757:55:8"},"nodeType":"YulExpressionStatement","src":"9757:55:8"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:8","type":""}],"src":"9640:179:8"},{"body":{"nodeType":"YulBlock","src":"9971:220:8","statements":[{"nodeType":"YulAssignment","src":"9981:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:8","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:8"},"nodeType":"YulFunctionCall","src":"9988:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:8"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:8"},"nodeType":"YulFunctionCall","src":"10064:93:8"},"nodeType":"YulExpressionStatement","src":"10064:93:8"},{"nodeType":"YulAssignment","src":"10166:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:8"},"nodeType":"YulFunctionCall","src":"10173:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:8"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:8","type":""}],"src":"9825:366:8"},{"body":{"nodeType":"YulBlock","src":"10368:248:8","statements":[{"nodeType":"YulAssignment","src":"10378:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:8"},"nodeType":"YulFunctionCall","src":"10386:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:8"},"nodeType":"YulFunctionCall","src":"10421:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:8"},"nodeType":"YulFunctionCall","src":"10440:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:8"},"nodeType":"YulFunctionCall","src":"10414:47:8"},"nodeType":"YulExpressionStatement","src":"10414:47:8"},{"nodeType":"YulAssignment","src":"10470:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:8"},"nodeType":"YulFunctionCall","src":"10478:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:8","type":""}],"src":"10197:419:8"},{"body":{"nodeType":"YulBlock","src":"10728:118:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:8"},"nodeType":"YulFunctionCall","src":"10746:14:8"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:8","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:8"},"nodeType":"YulFunctionCall","src":"10739:58:8"},"nodeType":"YulExpressionStatement","src":"10739:58:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:8"},"nodeType":"YulFunctionCall","src":"10814:15:8"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:8","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:8"},"nodeType":"YulFunctionCall","src":"10807:32:8"},"nodeType":"YulExpressionStatement","src":"10807:32:8"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:8","type":""}],"src":"10622:224:8"},{"body":{"nodeType":"YulBlock","src":"10998:220:8","statements":[{"nodeType":"YulAssignment","src":"11008:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:8","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:8"},"nodeType":"YulFunctionCall","src":"11015:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:8"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:8"},"nodeType":"YulFunctionCall","src":"11091:93:8"},"nodeType":"YulExpressionStatement","src":"11091:93:8"},{"nodeType":"YulAssignment","src":"11193:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:8"},"nodeType":"YulFunctionCall","src":"11200:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:8"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:8","type":""}],"src":"10852:366:8"},{"body":{"nodeType":"YulBlock","src":"11395:248:8","statements":[{"nodeType":"YulAssignment","src":"11405:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:8"},"nodeType":"YulFunctionCall","src":"11413:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:8"},"nodeType":"YulFunctionCall","src":"11448:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:8"},"nodeType":"YulFunctionCall","src":"11467:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:8"},"nodeType":"YulFunctionCall","src":"11441:47:8"},"nodeType":"YulExpressionStatement","src":"11441:47:8"},{"nodeType":"YulAssignment","src":"11497:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:8"},"nodeType":"YulFunctionCall","src":"11505:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:8","type":""}],"src":"11224:419:8"},{"body":{"nodeType":"YulBlock","src":"11755:116:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:8"},"nodeType":"YulFunctionCall","src":"11773:14:8"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:8","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:8"},"nodeType":"YulFunctionCall","src":"11766:58:8"},"nodeType":"YulExpressionStatement","src":"11766:58:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:8"},"nodeType":"YulFunctionCall","src":"11841:15:8"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:8","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:8"},"nodeType":"YulFunctionCall","src":"11834:30:8"},"nodeType":"YulExpressionStatement","src":"11834:30:8"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:8","type":""}],"src":"11649:222:8"},{"body":{"nodeType":"YulBlock","src":"12023:220:8","statements":[{"nodeType":"YulAssignment","src":"12033:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:8","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:8"},"nodeType":"YulFunctionCall","src":"12040:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:8"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:8"},"nodeType":"YulFunctionCall","src":"12116:93:8"},"nodeType":"YulExpressionStatement","src":"12116:93:8"},{"nodeType":"YulAssignment","src":"12218:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:8"},"nodeType":"YulFunctionCall","src":"12225:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:8"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:8","type":""}],"src":"11877:366:8"},{"body":{"nodeType":"YulBlock","src":"12420:248:8","statements":[{"nodeType":"YulAssignment","src":"12430:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:8"},"nodeType":"YulFunctionCall","src":"12438:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:8"},"nodeType":"YulFunctionCall","src":"12473:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:8"},"nodeType":"YulFunctionCall","src":"12492:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:8"},"nodeType":"YulFunctionCall","src":"12466:47:8"},"nodeType":"YulExpressionStatement","src":"12466:47:8"},{"nodeType":"YulAssignment","src":"12522:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:8"},"nodeType":"YulFunctionCall","src":"12530:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:8","type":""}],"src":"12249:419:8"},{"body":{"nodeType":"YulBlock","src":"12780:119:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:8"},"nodeType":"YulFunctionCall","src":"12798:14:8"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:8","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:8"},"nodeType":"YulFunctionCall","src":"12791:58:8"},"nodeType":"YulExpressionStatement","src":"12791:58:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:8"},"nodeType":"YulFunctionCall","src":"12866:15:8"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:8","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:8"},"nodeType":"YulFunctionCall","src":"12859:33:8"},"nodeType":"YulExpressionStatement","src":"12859:33:8"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:8","type":""}],"src":"12674:225:8"},{"body":{"nodeType":"YulBlock","src":"13051:220:8","statements":[{"nodeType":"YulAssignment","src":"13061:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:8","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:8"},"nodeType":"YulFunctionCall","src":"13068:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:8"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:8"},"nodeType":"YulFunctionCall","src":"13144:93:8"},"nodeType":"YulExpressionStatement","src":"13144:93:8"},{"nodeType":"YulAssignment","src":"13246:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:8"},"nodeType":"YulFunctionCall","src":"13253:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:8"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:8","type":""}],"src":"12905:366:8"},{"body":{"nodeType":"YulBlock","src":"13448:248:8","statements":[{"nodeType":"YulAssignment","src":"13458:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:8"},"nodeType":"YulFunctionCall","src":"13466:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:8"},"nodeType":"YulFunctionCall","src":"13501:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:8"},"nodeType":"YulFunctionCall","src":"13520:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:8"},"nodeType":"YulFunctionCall","src":"13494:47:8"},"nodeType":"YulExpressionStatement","src":"13494:47:8"},{"nodeType":"YulAssignment","src":"13550:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:8"},"nodeType":"YulFunctionCall","src":"13558:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:8","type":""}],"src":"13277:419:8"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea2646970667358221220183d5a0e2248a04947293bb80feb25e4832139060ff57231762d688e3687bc0064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR RETURNDATASIZE GAS 0xE 0x22 BASEFEE LOG0 0x49 SELFBALANCE 0x29 EXTCODESIZE 0xB8 0xF 0xEB 0x25 0xE4 DUP4 0x21 CODECOPY MOD 0xF CREATE2 PUSH19 0x31762D688E3687BC0064736F6C634300081100 CALLER ","sourceMap":"1532:11312:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3419:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3987:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;3104:91::-;3162:5;3186:2;3179:9;;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;3419:125::-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;3987:149::-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;655:96:3:-;708:7;734:10;727:17;;655:96;:::o;10457:340:0:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;12073:91::-;;;;:::o;12752:90::-;;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"931000","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"432","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":15,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":21,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":23,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":25,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":27,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c29294e9a7945ee1c17aea97a4c738ac270bec445d37cd6cae443fc0caddb41264736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP3 SWAP5 0xE9 0xA7 SWAP5 0x5E 0xE1 0xC1 PUSH27 0xEA97A4C738AC270BEC445D37CD6CAE443FC0CADDB41264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"220:2559:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c29294e9a7945ee1c17aea97a4c738ac270bec445d37cd6cae443fc0caddb41264736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP3 SWAP5 0xE9 0xA7 SWAP5 0x5E 0xE1 0xC1 PUSH27 0xEA97A4C738AC270BEC445D37CD6CAE443FC0CADDB41264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"220:2559:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(int256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d49866380d66d8d35d4a9114da523643ad70362ac2115bf943870317c5f76df964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SWAP9 PUSH7 0x380D66D8D35D4A SWAP2 EQ 0xDA MSTORE CALLDATASIZE NUMBER 0xAD PUSH17 0x362AC2115BF943870317C5F76DF964736F PUSH13 0x63430008110033000000000000 ","sourceMap":"202:12582:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d49866380d66d8d35d4a9114da523643ad70362ac2115bf943870317c5f76df964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SWAP9 PUSH7 0x380D66D8D35D4A SWAP2 EQ 0xDA MSTORE CALLDATASIZE NUMBER 0xAD PUSH17 0x362AC2115BF943870317C5F76DF964736F PUSH13 0x63430008110033000000000000 ","sourceMap":"202:12582:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f629ff033a0960039f8fa55117e2507e2e6b7ce094b0faef9e4566377b8c5c964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x629FF033A0960039F8FA55117E2507E2 0xE6 0xB7 0xCE MULMOD 0x4B 0xF 0xAE 0xF9 0xE4 JUMP PUSH4 0x77B8C5C9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1047:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f629ff033a0960039f8fa55117e2507e2e6b7ce094b0faef9e4566377b8c5c964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x629FF033A0960039F8FA55117E2507E2 0xE6 0xB7 0xCE MULMOD 0x4B 0xF 0xAE 0xF9 0xE4 JUMP PUSH4 0x77B8C5C9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1047:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/PlanetDAO.sol":{"PlanetDAO":{"abi":[{"inputs":[],"name":"_dao_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_dao_uris","outputs":[{"internalType":"string","name":"dao_wallet","type":"string"},{"internalType":"string","name":"dao_uri","type":"string"},{"internalType":"string","name":"finished","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_donated","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_donations","outputs":[{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"uint256","name":"userid","type":"uint256"},{"internalType":"uint256","name":"donation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_donations_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_goal_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_goal_uris","outputs":[{"internalType":"string","name":"dao_id","type":"string"},{"internalType":"string","name":"goal_uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_ideas_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_ideas_uris","outputs":[{"internalType":"uint256","name":"goal_id","type":"uint256"},{"internalType":"string","name":"ideas_uri","type":"string"},{"internalType":"uint256","name":"donation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_ideas_vote_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_join_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_joined_person","outputs":[{"internalType":"uint256","name":"daoid","type":"uint256"},{"internalType":"uint256","name":"user_id","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_message_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_message_read_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_reply_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_smart_contract_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_smart_contracts_uris","outputs":[{"internalType":"uint256","name":"smart_contract_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"smart_contract_uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_template_uris","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_user_badges","outputs":[{"internalType":"uint256","name":"user_id","type":"uint256"},{"internalType":"bool","name":"dao","type":"bool"},{"internalType":"bool","name":"joined","type":"bool"},{"internalType":"bool","name":"goal","type":"bool"},{"internalType":"bool","name":"ideas","type":"bool"},{"internalType":"bool","name":"vote","type":"bool"},{"internalType":"bool","name":"donation","type":"bool"},{"internalType":"bool","name":"comment","type":"bool"},{"internalType":"bool","name":"reply","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"uint256","name":"_doantion","type":"uint256"},{"internalType":"uint256","name":"_userid","type":"uint256"}],"name":"add_donation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_goal_ideas_votes","outputs":[{"internalType":"uint256","name":"goal_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"uint256","name":"user_id","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_messages","outputs":[{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"message","type":"string"},{"internalType":"string","name":"sender","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_read_messages","outputs":[{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"uint256","name":"user_id","type":"uint256"},{"internalType":"string","name":"msg_type","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_replies","outputs":[{"internalType":"uint256","name":"reply_id","type":"uint256"},{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_dao_wallet","type":"string"},{"internalType":"string","name":"_dao_uri","type":"string"},{"internalType":"string","name":"_template","type":"string"},{"internalType":"uint256","name":"user_id","type":"uint256"}],"name":"create_dao","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_uri","type":"string"},{"internalType":"string","name":"_dao_id","type":"string"},{"internalType":"uint256","name":"_user_id","type":"uint256"}],"name":"create_goal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"uint256","name":"_user_id","type":"uint256"}],"name":"create_goal_ideas_vote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"},{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"string[]","name":"_smart_contracts","type":"string[]"},{"internalType":"uint256","name":"_user_id","type":"uint256"}],"name":"create_ideas","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"}],"name":"dao_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"ideas_id","type":"uint256"}],"name":"getMsgIDs","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_message_id","type":"uint256"},{"internalType":"string","name":"msg_type","type":"string"}],"name":"getReadMsg","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"message_id","type":"uint256"}],"name":"getReplyIDs","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_daos","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_goals","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_dao_id","type":"string"}],"name":"get_all_goals_by_dao_id","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_ideas","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"}],"name":"get_all_ideas_by_goal_id","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_uri","type":"string"}],"name":"get_goal_id_by_goal_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"get_goal_id_from_ideas_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"get_ideas_id_by_ideas_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"}],"name":"get_ideas_votes_from_goal","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"}],"name":"goal_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"}],"name":"ideas_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"person","type":"uint256"}],"name":"is_person_joined","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"dao_id","type":"uint256"},{"internalType":"uint256","name":"person","type":"uint256"}],"name":"join_community","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reset_all","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_message","type":"string"},{"internalType":"string","name":"_sender","type":"string"},{"internalType":"uint256","name":"_user_id","type":"uint256"}],"name":"sendMsg","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_message_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"uint256","name":"_wallet","type":"uint256"},{"internalType":"string","name":"msg_type","type":"string"}],"name":"sendReadMsg","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_message_id","type":"uint256"},{"internalType":"string","name":"_reply","type":"string"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"uint256","name":"_userid","type":"uint256"}],"name":"sendReply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"},{"internalType":"string","name":"_dao_wallet","type":"string"},{"internalType":"string","name":"_dao_uri","type":"string"}],"name":"set_dao","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"string","name":"_goal_uri","type":"string"}],"name":"set_goal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"set_ideas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"},{"internalType":"string","name":"_template","type":"string"}],"name":"update_template","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4031 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x327 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87633EB2 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xC04E7430 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xCD230809 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD9FC52DB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD9FC52DB EQ PUSH2 0xB01 JUMPI DUP1 PUSH4 0xE32ACC1A EQ PUSH2 0xB31 JUMPI DUP1 PUSH4 0xEC245802 EQ PUSH2 0xB61 JUMPI DUP1 PUSH4 0xFF4A37EF EQ PUSH2 0xB7F JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0xCD230809 EQ PUSH2 0xA83 JUMPI DUP1 PUSH4 0xD3791B20 EQ PUSH2 0xAB3 JUMPI DUP1 PUSH4 0xD4EA3A36 EQ PUSH2 0xAD1 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0xC6182B34 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xC6182B34 EQ PUSH2 0x9E6 JUMPI DUP1 PUSH4 0xC7AF4EE5 EQ PUSH2 0xA02 JUMPI DUP1 PUSH4 0xCA013F17 EQ PUSH2 0xA32 JUMPI DUP1 PUSH4 0xCACE8D46 EQ PUSH2 0xA50 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0xC04E7430 EQ PUSH2 0x990 JUMPI DUP1 PUSH4 0xC04FE978 EQ PUSH2 0x9AC JUMPI DUP1 PUSH4 0xC29595C5 EQ PUSH2 0x9CA JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x97EE7606 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0xAA2BF5D3 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0xAA2BF5D3 EQ PUSH2 0x905 JUMPI DUP1 PUSH4 0xAA4CDF2A EQ PUSH2 0x923 JUMPI DUP1 PUSH4 0xB16060A6 EQ PUSH2 0x953 JUMPI DUP1 PUSH4 0xB527D45E EQ PUSH2 0x95D JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x97EE7606 EQ PUSH2 0x87F JUMPI DUP1 PUSH4 0xA1CA9178 EQ PUSH2 0x89D JUMPI DUP1 PUSH4 0xA428A47F EQ PUSH2 0x8CD JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x87633EB2 EQ PUSH2 0x7AD JUMPI DUP1 PUSH4 0x881DE858 EQ PUSH2 0x7C9 JUMPI DUP1 PUSH4 0x8D3D2595 EQ PUSH2 0x7E5 JUMPI DUP1 PUSH4 0x8E6280E6 EQ PUSH2 0x815 JUMPI DUP1 PUSH4 0x9077007D EQ PUSH2 0x831 JUMPI DUP1 PUSH4 0x934C5F00 EQ PUSH2 0x84F JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x4A797BD7 GT PUSH2 0x277 JUMPI DUP1 PUSH4 0x7BBD582D GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x803F5B9F GT PUSH2 0x20A JUMPI DUP1 PUSH4 0x803F5B9F EQ PUSH2 0x6ED JUMPI DUP1 PUSH4 0x812FAE1F EQ PUSH2 0x71D JUMPI DUP1 PUSH4 0x8413543E EQ PUSH2 0x74D JUMPI DUP1 PUSH4 0x86FFA45B EQ PUSH2 0x77D JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x7BBD582D EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0x7F2035D4 EQ PUSH2 0x68A JUMPI DUP1 PUSH4 0x7FC543EC EQ PUSH2 0x6BB JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x4A797BD7 EQ PUSH2 0x55E JUMPI DUP1 PUSH4 0x4BE7ADB5 EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0x4FF77421 EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0x5D907DA1 EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0x6ECDA4EE EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0x787F19C7 EQ PUSH2 0x63C JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x1E9AC9F5 GT PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x29B56F60 GT PUSH2 0x2BE JUMPI DUP1 PUSH4 0x29B56F60 EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x330B8F26 EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0x3F87A2F4 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x468D0C80 EQ PUSH2 0x52C JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x1E9AC9F5 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x20959ED0 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x27A568B9 EQ PUSH2 0x478 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x377D44A EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x1171B621 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x131D44F2 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x13BF4CEA EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x1B592AEB EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x1BA44C4C EQ PUSH2 0x3E6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x2F59 JUMP JUMPDEST PUSH2 0xBB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x30E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x364 PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x30E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B2 PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x400 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0xEBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3192 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x432 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x2F59 JUMP JUMPDEST PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x492 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B2 PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0x30E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x126C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP3 SWAP2 SWAP1 PUSH2 0x325F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x513 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x1290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x523 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x546 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x541 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x555 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x566 PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x596 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x3312 JUMP JUMPDEST PUSH2 0x1400 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A3 SWAP2 SWAP1 PUSH2 0x3410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0x3432 JUMP JUMPDEST PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x15AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x603 SWAP2 SWAP1 PUSH2 0x3485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x626 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x1654 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x633 SWAP2 SWAP1 PUSH2 0x3485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x656 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x34A7 JUMP JUMPDEST PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x663 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x674 PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x681 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69F SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x17CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B2 SWAP3 SWAP2 SWAP1 PUSH2 0x3546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D0 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x18FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3192 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x707 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x702 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x1929 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x3410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x737 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x732 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x744 SWAP2 SWAP1 PUSH2 0x3410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x767 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x762 SWAP2 SWAP1 PUSH2 0x357D JUMP JUMPDEST PUSH2 0x1AEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x774 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x797 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x792 SWAP2 SWAP1 PUSH2 0x3608 JUMP JUMPDEST PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A4 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C2 SWAP2 SWAP1 PUSH2 0x36C3 JUMP JUMPDEST PUSH2 0x1CBD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7DE SWAP2 SWAP1 PUSH2 0x371F JUMP JUMPDEST PUSH2 0x1CE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7FA SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x1D2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80C SWAP2 SWAP1 PUSH2 0x3485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82A SWAP2 SWAP1 PUSH2 0x3432 JUMP JUMPDEST PUSH2 0x1DD7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x839 PUSH2 0x1ECB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x846 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x869 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x864 SWAP2 SWAP1 PUSH2 0x37AA JUMP JUMPDEST PUSH2 0x1ED1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x876 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x887 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x894 SWAP2 SWAP1 PUSH2 0x30E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B2 SWAP2 SWAP1 PUSH2 0x2F59 JUMP JUMPDEST PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x2111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8FC SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90D PUSH2 0x21C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91A SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x938 SWAP2 SWAP1 PUSH2 0x2F59 JUMP JUMPDEST PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94A SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95B PUSH2 0x2254 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x977 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x972 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x2506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x987 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A5 SWAP2 SWAP1 PUSH2 0x36C3 JUMP JUMPDEST PUSH2 0x2646 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9B4 PUSH2 0x266E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C1 SWAP2 SWAP1 PUSH2 0x30E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9DF SWAP2 SWAP1 PUSH2 0x36C3 JUMP JUMPDEST PUSH2 0x27A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA00 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9FB SWAP2 SWAP1 PUSH2 0x3312 JUMP JUMPDEST PUSH2 0x27D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA1C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA17 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA29 SWAP2 SWAP1 PUSH2 0x3928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA3A PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA47 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x28B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA7A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA9D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA98 SWAP2 SWAP1 PUSH2 0x36C3 JUMP JUMPDEST PUSH2 0x2971 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAAA SWAP2 SWAP1 PUSH2 0x3928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xABB PUSH2 0x2A02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC8 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE6 SWAP2 SWAP1 PUSH2 0x3A29 JUMP JUMPDEST PUSH2 0x2A08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF8 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB16 SWAP2 SWAP1 PUSH2 0x3AC8 JUMP JUMPDEST PUSH2 0x2B1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB28 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB4B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB46 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x2BE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB58 SWAP2 SWAP1 PUSH2 0x3485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB69 PUSH2 0x2C8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB76 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB94 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x2C90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBA8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBD1 JUMPI PUSH2 0xBD0 PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC04 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xBEF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xD30 JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0xC44 SWAP2 SWAP1 PUSH2 0x3C8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xD1D JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xC72 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC9E SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCEB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCC0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCCE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD03 JUMPI PUSH2 0xD02 PUSH2 0x3CA3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xD19 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xD28 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC0F JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD61 JUMPI PUSH2 0xD60 PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD94 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD7F JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xEA5 JUMPI DUP5 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0xE84 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xDE7 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE13 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE60 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE35 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE60 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE43 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE78 JUMPI PUSH2 0xE77 PUSH2 0x3CA3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0xE8F SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0xE9D SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD9F JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xF4C JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0xF23 SWAP2 SWAP1 PUSH2 0x3C8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xF39 JUMPI DUP1 SWAP2 POP POP PUSH2 0xF52 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xF44 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEEE JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0xF92 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFBE SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x100B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFE0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x100B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFEE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1020 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x104C SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1099 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x106E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1099 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x107C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x10AE SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10DA SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1127 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10FC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1127 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x110A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1151 JUMPI PUSH2 0x1150 PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1184 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x116F JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1264 JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x11B5 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11E1 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x122E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1203 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x122E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1211 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1246 JUMPI PUSH2 0x1245 PUSH2 0x3CA3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x125C SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x118A JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x12C5 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12F1 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x133E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1313 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x133E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1321 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1371 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x139D SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1420 JUMPI PUSH2 0x141F PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x144E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x14FA JUMPI DUP6 PUSH1 0x12 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x149D JUMPI POP DUP5 PUSH1 0x12 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x12 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x14CC JUMPI PUSH2 0x14CB PUSH2 0x3CA3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP2 DUP1 PUSH2 0x14E4 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x14F2 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1459 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x16 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x12 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x159B SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x6 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x15CF SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15FB SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1648 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x161D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1648 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x162B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x1673 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x169F SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x16 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x13 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1786 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x179C SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x17B3 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x7 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x17EE SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x181A SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1867 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x183C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1867 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x184A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x187C SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18A8 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1949 JUMPI PUSH2 0x1948 PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1977 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1A01 JUMPI DUP5 PUSH1 0x13 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x19EE JUMPI PUSH1 0x13 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x19D3 JUMPI PUSH2 0x19D2 PUSH2 0x3CA3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x19EA SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x19F9 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1982 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x9 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A2C JUMPI PUSH2 0x1A2B PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A5A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1AE4 JUMPI DUP5 PUSH1 0x15 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1AD1 JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1AB6 JUMPI PUSH2 0x1AB5 PUSH2 0x3CA3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1ACD SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1ADC SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A65 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1B30 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1B46 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x16 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1B8C SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x2 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46616C7365000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0xA PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1C18 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1C2E SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1C44 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP SWAP1 POP POP DUP3 PUSH1 0xB PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x1C69 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x16 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1CAB SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x1CDD SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1D05 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP DUP1 PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1D29 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1D52 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D7E SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DCB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1DA0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DCB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1DAE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x16 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E2C SWAP2 SWAP1 PUSH2 0x3FC7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E56 SWAP2 SWAP1 PUSH2 0x3FC7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x10 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1EC1 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x14 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1F3C SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1F53 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x8 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F85 JUMPI PUSH2 0x1F84 PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FB8 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1FA3 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2098 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1FE9 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2015 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2062 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2037 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2062 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2045 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x207A JUMPI PUSH2 0x2079 PUSH2 0x3CA3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2090 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FBE JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2106 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x20DD SWAP2 SWAP1 PUSH2 0x3C8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x20F3 JUMPI DUP1 SWAP2 POP POP PUSH2 0x210C JUMP JUMPDEST DUP1 DUP1 PUSH2 0x20FE SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20A8 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2249 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x220A SWAP2 SWAP1 PUSH2 0x3C8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x2236 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP POP PUSH2 0x224F JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2241 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x21D5 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x22BA JUMPI PUSH1 0xA PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x2285 SWAP2 SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2295 SWAP2 SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x22A5 SWAP2 SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x22B2 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2257 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2311 JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x22EC SWAP2 SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x22FC SWAP2 SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2309 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x22BE JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2368 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x234B SWAP2 SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x2360 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2315 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x23BF JUMPI PUSH1 0x11 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x23AA SWAP2 SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x23B7 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x236C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2426 JUMPI PUSH1 0x13 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2401 SWAP2 SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x2411 SWAP2 SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x241E SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x23C3 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x2485 JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x2470 SWAP2 SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x247D SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x242A JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x24D4 JUMPI PUSH1 0x12 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x24CC SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2489 JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2535 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2561 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x25AE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2583 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x25AE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2591 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x25C3 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25EF SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x263C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2611 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x263C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x261F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2669 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x268D JUMPI PUSH2 0x268C PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x26C0 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x26AB JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x27A0 JUMPI PUSH1 0xA PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x26F1 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x271D SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x276A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x273F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x276A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x274D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2782 JUMPI PUSH2 0x2781 PUSH2 0x3CA3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2798 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26C6 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x27CB SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x16 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2853 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x28A8 JUMPI DUP3 PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x2895 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x28AE JUMP JUMPDEST DUP1 DUP1 PUSH2 0x28A0 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2864 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x28EE SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x291A SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2967 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x293C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2967 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x294A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x29F7 JUMPI DUP5 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x29DA JUMPI POP PUSH1 0x14 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x40 MLOAD PUSH2 0x29C8 SWAP2 SWAP1 PUSH2 0x3C8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST ISZERO PUSH2 0x29E4 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x29EF SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x297B JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2A5A SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x16 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2AAA SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2B0F JUMPI PUSH2 0x2AE4 PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2AD7 JUMPI PUSH2 0x2AD6 PUSH2 0x3CA3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2D42 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2AF7 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0x2B07 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2AB2 JUMP JUMPDEST POP PUSH1 0x3 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x16 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x15 PUSH1 0x0 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2BB9 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x9 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2BD0 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x9 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2C05 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C31 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C7E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C53 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C7E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C61 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2CBF SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CEB SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D38 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D0D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D38 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D1B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x11 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2D99 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2DAE SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2DC0 JUMPI POP PUSH2 0x2DDF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2DDE SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2DFB JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x2DE3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2E66 DUP3 PUSH2 0x2E1D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2E85 JUMPI PUSH2 0x2E84 PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E98 PUSH2 0x2DFF JUMP JUMPDEST SWAP1 POP PUSH2 0x2EA4 DUP3 DUP3 PUSH2 0x2E5D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2EC4 JUMPI PUSH2 0x2EC3 PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH2 0x2ECD DUP3 PUSH2 0x2E1D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EFC PUSH2 0x2EF7 DUP5 PUSH2 0x2EA9 JUMP JUMPDEST PUSH2 0x2E8E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2F18 JUMPI PUSH2 0x2F17 PUSH2 0x2E18 JUMP JUMPDEST JUMPDEST PUSH2 0x2F23 DUP5 DUP3 DUP6 PUSH2 0x2EDA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2F40 JUMPI PUSH2 0x2F3F PUSH2 0x2E13 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2F50 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2EE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F6F JUMPI PUSH2 0x2F6E PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F8D JUMPI PUSH2 0x2F8C PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x2F99 DUP5 DUP3 DUP6 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3008 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FED JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x301F DUP3 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x3029 DUP2 DUP6 PUSH2 0x2FD9 JUMP JUMPDEST SWAP4 POP PUSH2 0x3039 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x3042 DUP2 PUSH2 0x2E1D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3059 DUP4 DUP4 PUSH2 0x3014 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3079 DUP3 PUSH2 0x2FA2 JUMP JUMPDEST PUSH2 0x3083 DUP2 DUP6 PUSH2 0x2FAD JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3095 DUP6 PUSH2 0x2FBE JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x30D1 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x30B2 DUP6 DUP3 PUSH2 0x304D JUMP JUMPDEST SWAP5 POP PUSH2 0x30BD DUP4 PUSH2 0x3061 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3099 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30FD DUP2 DUP5 PUSH2 0x306E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3118 DUP2 PUSH2 0x3105 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3133 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x310F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3142 DUP2 PUSH2 0x3105 JUMP JUMPDEST DUP2 EQ PUSH2 0x314D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x315F DUP2 PUSH2 0x3139 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x317B JUMPI PUSH2 0x317A PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3189 DUP5 DUP3 DUP6 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x31A7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x310F JUMP JUMPDEST PUSH2 0x31B4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x310F JUMP JUMPDEST PUSH2 0x31C1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x310F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31E5 DUP3 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x31EF DUP2 DUP6 PUSH2 0x31C9 JUMP JUMPDEST SWAP4 POP PUSH2 0x31FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x3208 DUP2 PUSH2 0x2E1D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x322D DUP2 DUP7 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3241 DUP2 DUP6 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3255 DUP2 DUP5 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3274 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x310F JUMP JUMPDEST PUSH2 0x3281 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x310F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x329D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x310F JUMP JUMPDEST PUSH2 0x32AA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x310F JUMP JUMPDEST PUSH2 0x32B7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x310F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x32C9 DUP2 DUP5 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x32E9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x310F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x32FB DUP2 DUP6 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP PUSH2 0x330A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x310F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3329 JUMPI PUSH2 0x3328 PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3337 DUP6 DUP3 DUP7 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3348 DUP6 DUP3 DUP7 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3387 DUP2 PUSH2 0x3105 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3399 DUP4 DUP4 PUSH2 0x337E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33BD DUP3 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0x33C7 DUP2 DUP6 PUSH2 0x335D JUMP JUMPDEST SWAP4 POP PUSH2 0x33D2 DUP4 PUSH2 0x336E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3403 JUMPI DUP2 MLOAD PUSH2 0x33EA DUP9 DUP3 PUSH2 0x338D JUMP JUMPDEST SWAP8 POP PUSH2 0x33F5 DUP4 PUSH2 0x33A5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x33D6 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x342A DUP2 DUP5 PUSH2 0x33B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x344B JUMPI PUSH2 0x344A PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3459 DUP7 DUP3 DUP8 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x346A DUP7 DUP3 DUP8 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x347B DUP7 DUP3 DUP8 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x349F DUP2 DUP5 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x34C1 JUMPI PUSH2 0x34C0 PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34CF DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x34F0 JUMPI PUSH2 0x34EF PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x34FC DUP8 DUP3 DUP9 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x351D JUMPI PUSH2 0x351C PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x3529 DUP8 DUP3 DUP9 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x353A DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3560 DUP2 DUP6 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3574 DUP2 DUP5 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3596 JUMPI PUSH2 0x3595 PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35B4 JUMPI PUSH2 0x35B3 PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x35C0 DUP7 DUP3 DUP8 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35E1 JUMPI PUSH2 0x35E0 PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x35ED DUP7 DUP3 DUP8 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x35FE DUP7 DUP3 DUP8 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3622 JUMPI PUSH2 0x3621 PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3640 JUMPI PUSH2 0x363F PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x364C DUP8 DUP3 DUP9 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x366D JUMPI PUSH2 0x366C PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x3679 DUP8 DUP3 DUP9 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x369A JUMPI PUSH2 0x3699 PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x36A6 DUP8 DUP3 DUP9 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x36B7 DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36DA JUMPI PUSH2 0x36D9 PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36E8 DUP6 DUP3 DUP7 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3709 JUMPI PUSH2 0x3708 PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x3715 DUP6 DUP3 DUP7 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3738 JUMPI PUSH2 0x3737 PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3746 DUP7 DUP3 DUP8 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3767 JUMPI PUSH2 0x3766 PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x3773 DUP7 DUP3 DUP8 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3794 JUMPI PUSH2 0x3793 PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x37A0 DUP7 DUP3 DUP8 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x37C4 JUMPI PUSH2 0x37C3 PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37D2 DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x37E3 DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x37F4 DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3815 JUMPI PUSH2 0x3814 PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x3821 DUP8 DUP3 DUP9 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3842 DUP2 PUSH2 0x382D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x385E PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x310F JUMP JUMPDEST PUSH2 0x386B PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x3839 JUMP JUMPDEST PUSH2 0x3878 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x3839 JUMP JUMPDEST PUSH2 0x3885 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x3839 JUMP JUMPDEST PUSH2 0x3892 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x3839 JUMP JUMPDEST PUSH2 0x389F PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x3839 JUMP JUMPDEST PUSH2 0x38AC PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x3839 JUMP JUMPDEST PUSH2 0x38B9 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x3839 JUMP JUMPDEST PUSH2 0x38C7 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x3839 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x38EA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x310F JUMP JUMPDEST PUSH2 0x38F7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x310F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3909 DUP2 DUP6 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x391D DUP2 DUP5 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x393D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3839 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x395E JUMPI PUSH2 0x395D PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3987 PUSH2 0x3982 DUP5 PUSH2 0x3943 JUMP JUMPDEST PUSH2 0x2E8E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x39AA JUMPI PUSH2 0x39A9 PUSH2 0x396F JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39F1 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39CF JUMPI PUSH2 0x39CE PUSH2 0x2E13 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x39DC DUP10 DUP3 PUSH2 0x2F2B JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39AC JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A10 JUMPI PUSH2 0x3A0F PUSH2 0x2E13 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3A20 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3974 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3A43 JUMPI PUSH2 0x3A42 PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A61 JUMPI PUSH2 0x3A60 PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x3A6D DUP8 DUP3 DUP9 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3A7E DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A9F JUMPI PUSH2 0x3A9E PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x3AAB DUP8 DUP3 DUP9 ADD PUSH2 0x39FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3ABC DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3AE2 JUMPI PUSH2 0x3AE1 PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3AF0 DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B11 JUMPI PUSH2 0x3B10 PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x3B1D DUP8 DUP3 DUP9 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3B2E DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3B3F DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3B60 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x310F JUMP JUMPDEST PUSH2 0x3B6D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x310F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3B7F DUP2 DUP5 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3BD0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3BE3 JUMPI PUSH2 0x3BE2 PUSH2 0x3B89 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3C16 DUP2 PUSH2 0x3BB8 JUMP JUMPDEST PUSH2 0x3C20 DUP2 DUP7 PUSH2 0x3BE9 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x3C3B JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3C50 JUMPI PUSH2 0x3C83 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x3C83 JUMP JUMPDEST PUSH2 0x3C59 DUP6 PUSH2 0x3BF4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C7B JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3C5C JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C98 DUP3 DUP5 PUSH2 0x3C09 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3D0C DUP3 PUSH2 0x3105 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3D3E JUMPI PUSH2 0x3D3D PUSH2 0x3CD2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3DAB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3D6E JUMP JUMPDEST PUSH2 0x3DB5 DUP7 DUP4 PUSH2 0x3D6E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DF2 PUSH2 0x3DED PUSH2 0x3DE8 DUP5 PUSH2 0x3105 JUMP JUMPDEST PUSH2 0x3DCD JUMP JUMPDEST PUSH2 0x3105 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E0C DUP4 PUSH2 0x3DD7 JUMP JUMPDEST PUSH2 0x3E20 PUSH2 0x3E18 DUP3 PUSH2 0x3DF9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3D7B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3E35 PUSH2 0x3E28 JUMP JUMPDEST PUSH2 0x3E40 DUP2 DUP5 DUP5 PUSH2 0x3E03 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3E64 JUMPI PUSH2 0x3E59 PUSH1 0x0 DUP3 PUSH2 0x3E2D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3E46 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3EA9 JUMPI PUSH2 0x3E7A DUP2 PUSH2 0x3D49 JUMP JUMPDEST PUSH2 0x3E83 DUP5 PUSH2 0x3D5E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3E92 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3EA6 PUSH2 0x3E9E DUP6 PUSH2 0x3D5E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3E45 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ECC PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3EAE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EE5 DUP4 DUP4 PUSH2 0x3EBB JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3EFE DUP3 PUSH2 0x2FCE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F17 JUMPI PUSH2 0x3F16 PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH2 0x3F21 DUP3 SLOAD PUSH2 0x3BB8 JUMP JUMPDEST PUSH2 0x3F2C DUP3 DUP3 DUP6 PUSH2 0x3E68 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3F5F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3F4D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3F57 DUP6 DUP3 PUSH2 0x3ED9 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3FBF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3F6D DUP7 PUSH2 0x3D49 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3F95 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F70 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3FB2 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3FAE PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3EBB JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FD2 DUP3 PUSH2 0x3105 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FDD DUP4 PUSH2 0x3105 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3FF5 JUMPI PUSH2 0x3FF4 PUSH2 0x3CD2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY EXTCODEHASH DELEGATECALL 0xB2 PUSH8 0x6FF7B4E706261E2 0xD DUP12 SLT 0xA6 SWAP4 0x4E 0xE8 SWAP1 PUSH29 0xD13E8FD1853BAF27582964736F6C634300081100330000000000000000 ","sourceMap":"170:14514:7:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_dao_ids_2021":{"entryPoint":6085,"id":2021,"parameterSlots":0,"returnSlots":0},"@_dao_uris_2044":{"entryPoint":3951,"id":2044,"parameterSlots":0,"returnSlots":0},"@_donated_2067":{"entryPoint":3927,"id":2067,"parameterSlots":0,"returnSlots":0},"@_donations_2072":{"entryPoint":6399,"id":2072,"parameterSlots":0,"returnSlots":0},"@_donations_ids_2023":{"entryPoint":11402,"id":2023,"parameterSlots":0,"returnSlots":0},"@_goal_ids_2025":{"entryPoint":3760,"id":2025,"parameterSlots":0,"returnSlots":0},"@_goal_uris_2058":{"entryPoint":6091,"id":2058,"parameterSlots":0,"returnSlots":0},"@_ideas_ids_2027":{"entryPoint":10754,"id":2027,"parameterSlots":0,"returnSlots":0},"@_ideas_uris_2063":{"entryPoint":4936,"id":2063,"parameterSlots":0,"returnSlots":0},"@_ideas_vote_ids_2033":{"entryPoint":5114,"id":2033,"parameterSlots":0,"returnSlots":0},"@_join_ids_2029":{"entryPoint":3387,"id":2029,"parameterSlots":0,"returnSlots":0},"@_joined_person_2053":{"entryPoint":4716,"id":2053,"parameterSlots":0,"returnSlots":0},"@_message_ids_2035":{"entryPoint":7883,"id":2035,"parameterSlots":0,"returnSlots":0},"@_message_read_ids_2037":{"entryPoint":10419,"id":2037,"parameterSlots":0,"returnSlots":0},"@_reply_ids_2039":{"entryPoint":8647,"id":2039,"parameterSlots":0,"returnSlots":0},"@_smart_contract_ids_2031":{"entryPoint":3766,"id":2031,"parameterSlots":0,"returnSlots":0},"@_smart_contracts_uris_2077":{"entryPoint":11408,"id":2077,"parameterSlots":0,"returnSlots":0},"@_template_uris_2048":{"entryPoint":5716,"id":2048,"parameterSlots":0,"returnSlots":0},"@_user_badges_2102":{"entryPoint":8465,"id":2102,"parameterSlots":0,"returnSlots":0},"@add_donation_2585":{"entryPoint":7639,"id":2585,"parameterSlots":3,"returnSlots":0},"@all_goal_ideas_votes_2082":{"entryPoint":3772,"id":2082,"parameterSlots":0,"returnSlots":0},"@all_messages_2087":{"entryPoint":9478,"id":2087,"parameterSlots":0,"returnSlots":0},"@all_read_messages_2092":{"entryPoint":10425,"id":2092,"parameterSlots":0,"returnSlots":0},"@all_replies_2097":{"entryPoint":4752,"id":2097,"parameterSlots":0,"returnSlots":0},"@create_dao_2144":{"entryPoint":7069,"id":2144,"parameterSlots":4,"returnSlots":1},"@create_goal_2269":{"entryPoint":6895,"id":2269,"parameterSlots":3,"returnSlots":1},"@create_goal_ideas_vote_2872":{"entryPoint":5382,"id":2872,"parameterSlots":3,"returnSlots":1},"@create_ideas_2507":{"entryPoint":10760,"id":2507,"parameterSlots":4,"returnSlots":1},"@create_ideas_smart_contract_2527":{"entryPoint":11586,"id":2527,"parameterSlots":3,"returnSlots":0},"@dao_uri_2236":{"entryPoint":5548,"id":2236,"parameterSlots":1,"returnSlots":1},"@getMsgIDs_3031":{"entryPoint":6441,"id":3031,"parameterSlots":1,"returnSlots":1},"@getReadMsg_3212":{"entryPoint":10609,"id":3212,"parameterSlots":2,"returnSlots":1},"@getReplyIDs_3125":{"entryPoint":6668,"id":3125,"parameterSlots":1,"returnSlots":1},"@get_all_daos_2223":{"entryPoint":9838,"id":2223,"parameterSlots":0,"returnSlots":1},"@get_all_goals_2325":{"entryPoint":4401,"id":2325,"parameterSlots":0,"returnSlots":1},"@get_all_goals_by_dao_id_2392":{"entryPoint":2993,"id":2392,"parameterSlots":1,"returnSlots":1},"@get_all_ideas_2684":{"entryPoint":8037,"id":2684,"parameterSlots":0,"returnSlots":1},"@get_all_ideas_by_goal_id_2740":{"entryPoint":3393,"id":2740,"parameterSlots":1,"returnSlots":1},"@get_goal_id_by_goal_uri_2433":{"entryPoint":3814,"id":2433,"parameterSlots":1,"returnSlots":1},"@get_goal_id_from_ideas_uri_2825":{"entryPoint":8653,"id":2825,"parameterSlots":1,"returnSlots":1},"@get_ideas_id_by_ideas_uri_2781":{"entryPoint":8352,"id":2781,"parameterSlots":1,"returnSlots":1},"@get_ideas_votes_from_goal_2937":{"entryPoint":5120,"id":2937,"parameterSlots":2,"returnSlots":1},"@goal_uri_2446":{"entryPoint":11234,"id":2446,"parameterSlots":1,"returnSlots":1},"@ideas_uri_2838":{"entryPoint":7471,"id":2838,"parameterSlots":1,"returnSlots":1},"@is_person_joined_2643":{"entryPoint":10332,"id":2643,"parameterSlots":1,"returnSlots":1},"@join_community_2612":{"entryPoint":10192,"id":2612,"parameterSlots":2,"returnSlots":0},"@reset_all_3352":{"entryPoint":8788,"id":3352,"parameterSlots":0,"returnSlots":0},"@sendMsg_2974":{"entryPoint":5876,"id":2974,"parameterSlots":4,"returnSlots":1},"@sendReadMsg_3155":{"entryPoint":7889,"id":3155,"parameterSlots":4,"returnSlots":1},"@sendReply_3068":{"entryPoint":11037,"id":3068,"parameterSlots":4,"returnSlots":1},"@set_dao_2182":{"entryPoint":7394,"id":2182,"parameterSlots":3,"returnSlots":0},"@set_goal_2284":{"entryPoint":10152,"id":2284,"parameterSlots":2,"returnSlots":0},"@set_ideas_2542":{"entryPoint":9798,"id":2542,"parameterSlots":2,"returnSlots":0},"@update_template_2158":{"entryPoint":7357,"id":2158,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":14708,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":12009,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":14843,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":12075,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":12624,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":12121,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256":{"entryPoint":13832,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256":{"entryPoint":13693,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptrt_uint256":{"entryPoint":14889,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":12645,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":14019,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":14111,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256":{"entryPoint":13479,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_uint256":{"entryPoint":15048,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":13074,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_uint256":{"entryPoint":13362,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptr":{"entryPoint":14250,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":12365,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":13197,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":12398,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":13234,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":14393,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15369,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":12308,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":12762,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":13182,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":12559,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":15500,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":12515,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13328,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":14632,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13445,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13638,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12819,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":12574,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__to_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__fromStack_reversed":{"entryPoint":14408,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":13012,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":12895,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15179,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14549,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":12690,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12936,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_memory":{"entryPoint":11918,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":11775,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":14659,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":11945,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":12222,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13166,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage_ptr":{"entryPoint":15348,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":15689,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":12194,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13138,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":12238,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":12385,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13221,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":12205,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":13149,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15337,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":12249,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":12745,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":16327,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":15976,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_bool":{"entryPoint":14381,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":12549,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":15941,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":15831,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":16117,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":11994,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":12266,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":15710,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":15288,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":16089,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":11869,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":15821,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":15617,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":16059,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":15570,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":15241,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":15523,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":11822,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":15865,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":11795,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":14703,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":11800,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":11790,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":11785,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":11805,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":15726,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":16046,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":15917,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":15739,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":15875,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":12601,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":15912,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:34315:8","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:8","statements":[{"nodeType":"YulAssignment","src":"57:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:8"},"nodeType":"YulFunctionCall","src":"67:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:8","type":""}],"src":"7:75:8"},{"body":{"nodeType":"YulBlock","src":"177:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:8"},"nodeType":"YulFunctionCall","src":"187:12:8"},"nodeType":"YulExpressionStatement","src":"187:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:8"},{"body":{"nodeType":"YulBlock","src":"300:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:8"},"nodeType":"YulFunctionCall","src":"310:12:8"},"nodeType":"YulExpressionStatement","src":"310:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:8"},{"body":{"nodeType":"YulBlock","src":"423:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:8"},"nodeType":"YulFunctionCall","src":"433:12:8"},"nodeType":"YulExpressionStatement","src":"433:12:8"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:8"},{"body":{"nodeType":"YulBlock","src":"546:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:8"},"nodeType":"YulFunctionCall","src":"556:12:8"},"nodeType":"YulExpressionStatement","src":"556:12:8"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:8"},{"body":{"nodeType":"YulBlock","src":"628:54:8","statements":[{"nodeType":"YulAssignment","src":"638:38:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:8"},"nodeType":"YulFunctionCall","src":"652:14:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:8"},"nodeType":"YulFunctionCall","src":"668:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:8"},"nodeType":"YulFunctionCall","src":"648:28:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:8"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:8","type":""}],"src":"580:102:8"},{"body":{"nodeType":"YulBlock","src":"716:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:8"},"nodeType":"YulFunctionCall","src":"726:88:8"},"nodeType":"YulExpressionStatement","src":"726:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:8","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:8"},"nodeType":"YulFunctionCall","src":"823:15:8"},"nodeType":"YulExpressionStatement","src":"823:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:8"},"nodeType":"YulFunctionCall","src":"847:15:8"},"nodeType":"YulExpressionStatement","src":"847:15:8"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:8"},{"body":{"nodeType":"YulBlock","src":"917:238:8","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:8","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:8"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:8"},"nodeType":"YulFunctionCall","src":"957:27:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:8"},"nodeType":"YulFunctionCall","src":"945:40:8"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:8"},"nodeType":"YulFunctionCall","src":"1098:18:8"},"nodeType":"YulExpressionStatement","src":"1098:18:8"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:8"},"nodeType":"YulFunctionCall","src":"1036:34:8"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:8"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:8"},"nodeType":"YulFunctionCall","src":"1072:22:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:8"},"nodeType":"YulFunctionCall","src":"1033:62:8"},"nodeType":"YulIf","src":"1030:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:8","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:8"},"nodeType":"YulFunctionCall","src":"1127:22:8"},"nodeType":"YulExpressionStatement","src":"1127:22:8"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:8","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:8","type":""}],"src":"874:281:8"},{"body":{"nodeType":"YulBlock","src":"1202:88:8","statements":[{"nodeType":"YulAssignment","src":"1212:30:8","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:8"},"nodeType":"YulFunctionCall","src":"1222:20:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:8"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:8"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:8"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:8"},"nodeType":"YulFunctionCall","src":"1251:33:8"},"nodeType":"YulExpressionStatement","src":"1251:33:8"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:8","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:8","type":""}],"src":"1161:129:8"},{"body":{"nodeType":"YulBlock","src":"1363:241:8","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:8"},"nodeType":"YulFunctionCall","src":"1470:18:8"},"nodeType":"YulExpressionStatement","src":"1470:18:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:8"},"nodeType":"YulFunctionCall","src":"1437:30:8"},"nodeType":"YulIf","src":"1434:56:8"},{"nodeType":"YulAssignment","src":"1500:37:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:8"},"nodeType":"YulFunctionCall","src":"1508:29:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:8"}]},{"nodeType":"YulAssignment","src":"1574:23:8","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:8"},"nodeType":"YulFunctionCall","src":"1582:15:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:8"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:8","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:8","type":""}],"src":"1296:308:8"},{"body":{"nodeType":"YulBlock","src":"1674:82:8","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1697:3:8"},{"name":"src","nodeType":"YulIdentifier","src":"1702:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"1707:6:8"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1684:12:8"},"nodeType":"YulFunctionCall","src":"1684:30:8"},"nodeType":"YulExpressionStatement","src":"1684:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1734:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"1739:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:8"},"nodeType":"YulFunctionCall","src":"1730:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"1748:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1723:6:8"},"nodeType":"YulFunctionCall","src":"1723:27:8"},"nodeType":"YulExpressionStatement","src":"1723:27:8"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1656:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1661:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"1666:6:8","type":""}],"src":"1610:146:8"},{"body":{"nodeType":"YulBlock","src":"1846:341:8","statements":[{"nodeType":"YulAssignment","src":"1856:75:8","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1923:6:8"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1881:41:8"},"nodeType":"YulFunctionCall","src":"1881:49:8"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1865:15:8"},"nodeType":"YulFunctionCall","src":"1865:66:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1856:5:8"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1947:5:8"},{"name":"length","nodeType":"YulIdentifier","src":"1954:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:8"},"nodeType":"YulFunctionCall","src":"1940:21:8"},"nodeType":"YulExpressionStatement","src":"1940:21:8"},{"nodeType":"YulVariableDeclaration","src":"1970:27:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1985:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"1992:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1981:3:8"},"nodeType":"YulFunctionCall","src":"1981:16:8"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1974:3:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2035:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2037:77:8"},"nodeType":"YulFunctionCall","src":"2037:79:8"},"nodeType":"YulExpressionStatement","src":"2037:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2016:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"2021:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2012:3:8"},"nodeType":"YulFunctionCall","src":"2012:16:8"},{"name":"end","nodeType":"YulIdentifier","src":"2030:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2009:2:8"},"nodeType":"YulFunctionCall","src":"2009:25:8"},"nodeType":"YulIf","src":"2006:112:8"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2164:3:8"},{"name":"dst","nodeType":"YulIdentifier","src":"2169:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"2174:6:8"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2127:36:8"},"nodeType":"YulFunctionCall","src":"2127:54:8"},"nodeType":"YulExpressionStatement","src":"2127:54:8"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1819:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"1824:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"1832:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1840:5:8","type":""}],"src":"1762:425:8"},{"body":{"nodeType":"YulBlock","src":"2269:278:8","statements":[{"body":{"nodeType":"YulBlock","src":"2318:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2320:77:8"},"nodeType":"YulFunctionCall","src":"2320:79:8"},"nodeType":"YulExpressionStatement","src":"2320:79:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2297:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2305:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2293:3:8"},"nodeType":"YulFunctionCall","src":"2293:17:8"},{"name":"end","nodeType":"YulIdentifier","src":"2312:3:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2289:3:8"},"nodeType":"YulFunctionCall","src":"2289:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2282:6:8"},"nodeType":"YulFunctionCall","src":"2282:35:8"},"nodeType":"YulIf","src":"2279:122:8"},{"nodeType":"YulVariableDeclaration","src":"2410:34:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2437:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2424:12:8"},"nodeType":"YulFunctionCall","src":"2424:20:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2414:6:8","type":""}]},{"nodeType":"YulAssignment","src":"2453:88:8","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2514:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2522:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2510:3:8"},"nodeType":"YulFunctionCall","src":"2510:17:8"},{"name":"length","nodeType":"YulIdentifier","src":"2529:6:8"},{"name":"end","nodeType":"YulIdentifier","src":"2537:3:8"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2462:47:8"},"nodeType":"YulFunctionCall","src":"2462:79:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2453:5:8"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2247:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"2255:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2263:5:8","type":""}],"src":"2207:340:8"},{"body":{"nodeType":"YulBlock","src":"2629:433:8","statements":[{"body":{"nodeType":"YulBlock","src":"2675:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2677:77:8"},"nodeType":"YulFunctionCall","src":"2677:79:8"},"nodeType":"YulExpressionStatement","src":"2677:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2650:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"2659:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2646:3:8"},"nodeType":"YulFunctionCall","src":"2646:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"2671:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2642:3:8"},"nodeType":"YulFunctionCall","src":"2642:32:8"},"nodeType":"YulIf","src":"2639:119:8"},{"nodeType":"YulBlock","src":"2768:287:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2783:45:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2814:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2825:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2810:3:8"},"nodeType":"YulFunctionCall","src":"2810:17:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2797:12:8"},"nodeType":"YulFunctionCall","src":"2797:31:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2787:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2875:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2877:77:8"},"nodeType":"YulFunctionCall","src":"2877:79:8"},"nodeType":"YulExpressionStatement","src":"2877:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2847:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2855:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2844:2:8"},"nodeType":"YulFunctionCall","src":"2844:30:8"},"nodeType":"YulIf","src":"2841:117:8"},{"nodeType":"YulAssignment","src":"2972:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"3028:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:8"},"nodeType":"YulFunctionCall","src":"3013:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3037:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2982:30:8"},"nodeType":"YulFunctionCall","src":"2982:63:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2972:6:8"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2599:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2610:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2622:6:8","type":""}],"src":"2553:509:8"},{"body":{"nodeType":"YulBlock","src":"3152:40:8","statements":[{"nodeType":"YulAssignment","src":"3163:22:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3179:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3173:5:8"},"nodeType":"YulFunctionCall","src":"3173:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3163:6:8"}]}]},"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3135:5:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3145:6:8","type":""}],"src":"3068:124:8"},{"body":{"nodeType":"YulBlock","src":"3319:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3336:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"3341:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3329:6:8"},"nodeType":"YulFunctionCall","src":"3329:19:8"},"nodeType":"YulExpressionStatement","src":"3329:19:8"},{"nodeType":"YulAssignment","src":"3357:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3376:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"3381:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3372:3:8"},"nodeType":"YulFunctionCall","src":"3372:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3357:11:8"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3291:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"3296:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3307:11:8","type":""}],"src":"3198:194:8"},{"body":{"nodeType":"YulBlock","src":"3480:60:8","statements":[{"nodeType":"YulAssignment","src":"3490:11:8","value":{"name":"ptr","nodeType":"YulIdentifier","src":"3498:3:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3490:4:8"}]},{"nodeType":"YulAssignment","src":"3511:22:8","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3523:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"3528:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3519:3:8"},"nodeType":"YulFunctionCall","src":"3519:14:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:8"}]}]},"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3467:3:8","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"3475:4:8","type":""}],"src":"3398:142:8"},{"body":{"nodeType":"YulBlock","src":"3605:40:8","statements":[{"nodeType":"YulAssignment","src":"3616:22:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3632:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3626:5:8"},"nodeType":"YulFunctionCall","src":"3626:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3616:6:8"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3588:5:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3598:6:8","type":""}],"src":"3546:99:8"},{"body":{"nodeType":"YulBlock","src":"3737:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3754:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"3759:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3747:6:8"},"nodeType":"YulFunctionCall","src":"3747:19:8"},"nodeType":"YulExpressionStatement","src":"3747:19:8"},{"nodeType":"YulAssignment","src":"3775:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3794:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"3799:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3790:3:8"},"nodeType":"YulFunctionCall","src":"3790:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3775:11:8"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3709:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"3714:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3725:11:8","type":""}],"src":"3651:159:8"},{"body":{"nodeType":"YulBlock","src":"3878:184:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3888:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"3897:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3892:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"3957:63:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3982:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"3987:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3978:3:8"},"nodeType":"YulFunctionCall","src":"3978:11:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4001:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"4006:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3997:3:8"},"nodeType":"YulFunctionCall","src":"3997:11:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3991:5:8"},"nodeType":"YulFunctionCall","src":"3991:18:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3971:6:8"},"nodeType":"YulFunctionCall","src":"3971:39:8"},"nodeType":"YulExpressionStatement","src":"3971:39:8"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3918:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"3921:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3915:2:8"},"nodeType":"YulFunctionCall","src":"3915:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3929:19:8","statements":[{"nodeType":"YulAssignment","src":"3931:15:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3940:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"3943:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3936:3:8"},"nodeType":"YulFunctionCall","src":"3936:10:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3931:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"3911:3:8","statements":[]},"src":"3907:113:8"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4040:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"4045:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4036:3:8"},"nodeType":"YulFunctionCall","src":"4036:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"4054:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4029:6:8"},"nodeType":"YulFunctionCall","src":"4029:27:8"},"nodeType":"YulExpressionStatement","src":"4029:27:8"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3860:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3865:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"3870:6:8","type":""}],"src":"3816:246:8"},{"body":{"nodeType":"YulBlock","src":"4150:275:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4160:53:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4207:5:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4174:32:8"},"nodeType":"YulFunctionCall","src":"4174:39:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4164:6:8","type":""}]},{"nodeType":"YulAssignment","src":"4222:68:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4278:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"4283:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4229:48:8"},"nodeType":"YulFunctionCall","src":"4229:61:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4222:3:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4338:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"4345:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4334:3:8"},"nodeType":"YulFunctionCall","src":"4334:16:8"},{"name":"pos","nodeType":"YulIdentifier","src":"4352:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"4357:6:8"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4299:34:8"},"nodeType":"YulFunctionCall","src":"4299:65:8"},"nodeType":"YulExpressionStatement","src":"4299:65:8"},{"nodeType":"YulAssignment","src":"4373:46:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4384:3:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4411:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4389:21:8"},"nodeType":"YulFunctionCall","src":"4389:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4380:3:8"},"nodeType":"YulFunctionCall","src":"4380:39:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4373:3:8"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4131:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4138:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4146:3:8","type":""}],"src":"4068:357:8"},{"body":{"nodeType":"YulBlock","src":"4531:96:8","statements":[{"nodeType":"YulAssignment","src":"4541:80:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4609:6:8"},{"name":"pos","nodeType":"YulIdentifier","src":"4617:3:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4555:53:8"},"nodeType":"YulFunctionCall","src":"4555:66:8"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"4541:10:8"}]}]},"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"4504:6:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4512:3:8","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"4520:10:8","type":""}],"src":"4431:196:8"},{"body":{"nodeType":"YulBlock","src":"4718:38:8","statements":[{"nodeType":"YulAssignment","src":"4728:22:8","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4740:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"4745:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4736:3:8"},"nodeType":"YulFunctionCall","src":"4736:14:8"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"4728:4:8"}]}]},"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4705:3:8","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"4713:4:8","type":""}],"src":"4633:123:8"},{"body":{"nodeType":"YulBlock","src":"4934:847:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4944:78:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5016:5:8"}],"functionName":{"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4958:57:8"},"nodeType":"YulFunctionCall","src":"4958:64:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4948:6:8","type":""}]},{"nodeType":"YulAssignment","src":"5031:103:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5122:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"5127:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5038:83:8"},"nodeType":"YulFunctionCall","src":"5038:96:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5031:3:8"}]},{"nodeType":"YulVariableDeclaration","src":"5143:20:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"5160:3:8"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"5147:9:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5172:39:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5188:3:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5197:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"5205:4:8","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5193:3:8"},"nodeType":"YulFunctionCall","src":"5193:17:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5184:3:8"},"nodeType":"YulFunctionCall","src":"5184:27:8"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"5176:4:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5220:81:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5295:5:8"}],"functionName":{"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5235:59:8"},"nodeType":"YulFunctionCall","src":"5235:66:8"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"5224:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5310:21:8","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"5324:7:8"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5314:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"5400:336:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5421:3:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5430:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"5436:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5426:3:8"},"nodeType":"YulFunctionCall","src":"5426:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5414:6:8"},"nodeType":"YulFunctionCall","src":"5414:33:8"},"nodeType":"YulExpressionStatement","src":"5414:33:8"},{"nodeType":"YulVariableDeclaration","src":"5460:34:8","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5487:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5481:5:8"},"nodeType":"YulFunctionCall","src":"5481:13:8"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"5464:13:8","type":""}]},{"nodeType":"YulAssignment","src":"5507:92:8","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"5579:13:8"},{"name":"tail","nodeType":"YulIdentifier","src":"5594:4:8"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5515:63:8"},"nodeType":"YulFunctionCall","src":"5515:84:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5507:4:8"}]},{"nodeType":"YulAssignment","src":"5612:80:8","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5685:6:8"}],"functionName":{"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5622:62:8"},"nodeType":"YulFunctionCall","src":"5622:70:8"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5612:6:8"}]},{"nodeType":"YulAssignment","src":"5705:21:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5716:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"5721:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5712:3:8"},"nodeType":"YulFunctionCall","src":"5712:14:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5705:3:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5362:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"5365:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5359:2:8"},"nodeType":"YulFunctionCall","src":"5359:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5373:18:8","statements":[{"nodeType":"YulAssignment","src":"5375:14:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5384:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"5387:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:8"},"nodeType":"YulFunctionCall","src":"5380:9:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5375:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"5344:14:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5346:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5355:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5350:1:8","type":""}]}]},"src":"5340:396:8"},{"nodeType":"YulAssignment","src":"5745:11:8","value":{"name":"tail","nodeType":"YulIdentifier","src":"5752:4:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5745:3:8"}]},{"nodeType":"YulAssignment","src":"5765:10:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"5772:3:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5765:3:8"}]}]},"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4913:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4920:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4929:3:8","type":""}],"src":"4790:991:8"},{"body":{"nodeType":"YulBlock","src":"5955:245:8","statements":[{"nodeType":"YulAssignment","src":"5965:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5977:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"5988:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5973:3:8"},"nodeType":"YulFunctionCall","src":"5973:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5965:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6012:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"6023:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6008:3:8"},"nodeType":"YulFunctionCall","src":"6008:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6031:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"6037:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6027:3:8"},"nodeType":"YulFunctionCall","src":"6027:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6001:6:8"},"nodeType":"YulFunctionCall","src":"6001:47:8"},"nodeType":"YulExpressionStatement","src":"6001:47:8"},{"nodeType":"YulAssignment","src":"6057:136:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6179:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"6188:4:8"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6065:113:8"},"nodeType":"YulFunctionCall","src":"6065:128:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6057:4:8"}]}]},"name":"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5927:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5939:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5950:4:8","type":""}],"src":"5787:413:8"},{"body":{"nodeType":"YulBlock","src":"6251:32:8","statements":[{"nodeType":"YulAssignment","src":"6261:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"6272:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6261:7:8"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6233:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6243:7:8","type":""}],"src":"6206:77:8"},{"body":{"nodeType":"YulBlock","src":"6354:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6371:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6394:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6376:17:8"},"nodeType":"YulFunctionCall","src":"6376:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6364:6:8"},"nodeType":"YulFunctionCall","src":"6364:37:8"},"nodeType":"YulExpressionStatement","src":"6364:37:8"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6342:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6349:3:8","type":""}],"src":"6289:118:8"},{"body":{"nodeType":"YulBlock","src":"6511:124:8","statements":[{"nodeType":"YulAssignment","src":"6521:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6533:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"6544:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6529:3:8"},"nodeType":"YulFunctionCall","src":"6529:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6521:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6601:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6614:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"6625:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6610:3:8"},"nodeType":"YulFunctionCall","src":"6610:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6557:43:8"},"nodeType":"YulFunctionCall","src":"6557:71:8"},"nodeType":"YulExpressionStatement","src":"6557:71:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6483:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6495:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6506:4:8","type":""}],"src":"6413:222:8"},{"body":{"nodeType":"YulBlock","src":"6684:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"6741:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6750:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6753:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6743:6:8"},"nodeType":"YulFunctionCall","src":"6743:12:8"},"nodeType":"YulExpressionStatement","src":"6743:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6707:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6732:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6714:17:8"},"nodeType":"YulFunctionCall","src":"6714:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6704:2:8"},"nodeType":"YulFunctionCall","src":"6704:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6697:6:8"},"nodeType":"YulFunctionCall","src":"6697:43:8"},"nodeType":"YulIf","src":"6694:63:8"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6677:5:8","type":""}],"src":"6641:122:8"},{"body":{"nodeType":"YulBlock","src":"6821:87:8","statements":[{"nodeType":"YulAssignment","src":"6831:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6853:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6840:12:8"},"nodeType":"YulFunctionCall","src":"6840:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6831:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6896:5:8"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6869:26:8"},"nodeType":"YulFunctionCall","src":"6869:33:8"},"nodeType":"YulExpressionStatement","src":"6869:33:8"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6799:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"6807:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6815:5:8","type":""}],"src":"6769:139:8"},{"body":{"nodeType":"YulBlock","src":"6980:263:8","statements":[{"body":{"nodeType":"YulBlock","src":"7026:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7028:77:8"},"nodeType":"YulFunctionCall","src":"7028:79:8"},"nodeType":"YulExpressionStatement","src":"7028:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7001:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"7010:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6997:3:8"},"nodeType":"YulFunctionCall","src":"6997:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"7022:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6993:3:8"},"nodeType":"YulFunctionCall","src":"6993:32:8"},"nodeType":"YulIf","src":"6990:119:8"},{"nodeType":"YulBlock","src":"7119:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7134:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"7148:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7138:6:8","type":""}]},{"nodeType":"YulAssignment","src":"7163:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7198:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"7209:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7194:3:8"},"nodeType":"YulFunctionCall","src":"7194:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7218:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7173:20:8"},"nodeType":"YulFunctionCall","src":"7173:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7163:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6950:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6961:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6973:6:8","type":""}],"src":"6914:329:8"},{"body":{"nodeType":"YulBlock","src":"7403:288:8","statements":[{"nodeType":"YulAssignment","src":"7413:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7425:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7436:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7421:3:8"},"nodeType":"YulFunctionCall","src":"7421:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7413:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7493:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7506:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7517:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7502:3:8"},"nodeType":"YulFunctionCall","src":"7502:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7449:43:8"},"nodeType":"YulFunctionCall","src":"7449:71:8"},"nodeType":"YulExpressionStatement","src":"7449:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7574:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7587:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7598:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7583:3:8"},"nodeType":"YulFunctionCall","src":"7583:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7530:43:8"},"nodeType":"YulFunctionCall","src":"7530:72:8"},"nodeType":"YulExpressionStatement","src":"7530:72:8"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7656:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7669:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7680:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7665:3:8"},"nodeType":"YulFunctionCall","src":"7665:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7612:43:8"},"nodeType":"YulFunctionCall","src":"7612:72:8"},"nodeType":"YulExpressionStatement","src":"7612:72:8"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7359:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7371:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7379:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7387:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7398:4:8","type":""}],"src":"7249:442:8"},{"body":{"nodeType":"YulBlock","src":"7793:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7810:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"7815:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7803:6:8"},"nodeType":"YulFunctionCall","src":"7803:19:8"},"nodeType":"YulExpressionStatement","src":"7803:19:8"},{"nodeType":"YulAssignment","src":"7831:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7850:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"7855:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7846:3:8"},"nodeType":"YulFunctionCall","src":"7846:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7831:11:8"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7765:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"7770:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7781:11:8","type":""}],"src":"7697:169:8"},{"body":{"nodeType":"YulBlock","src":"7964:285:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7974:53:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8021:5:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7988:32:8"},"nodeType":"YulFunctionCall","src":"7988:39:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7978:6:8","type":""}]},{"nodeType":"YulAssignment","src":"8036:78:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8102:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"8107:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8043:58:8"},"nodeType":"YulFunctionCall","src":"8043:71:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8036:3:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8162:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"8169:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8158:3:8"},"nodeType":"YulFunctionCall","src":"8158:16:8"},{"name":"pos","nodeType":"YulIdentifier","src":"8176:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"8181:6:8"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8123:34:8"},"nodeType":"YulFunctionCall","src":"8123:65:8"},"nodeType":"YulExpressionStatement","src":"8123:65:8"},{"nodeType":"YulAssignment","src":"8197:46:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8208:3:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8235:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8213:21:8"},"nodeType":"YulFunctionCall","src":"8213:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8204:3:8"},"nodeType":"YulFunctionCall","src":"8204:39:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8197:3:8"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7945:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7952:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7960:3:8","type":""}],"src":"7872:377:8"},{"body":{"nodeType":"YulBlock","src":"8469:501:8","statements":[{"nodeType":"YulAssignment","src":"8479:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8491:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8502:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8487:3:8"},"nodeType":"YulFunctionCall","src":"8487:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8479:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8526:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8537:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8522:3:8"},"nodeType":"YulFunctionCall","src":"8522:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8545:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"8551:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8541:3:8"},"nodeType":"YulFunctionCall","src":"8541:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8515:6:8"},"nodeType":"YulFunctionCall","src":"8515:47:8"},"nodeType":"YulExpressionStatement","src":"8515:47:8"},{"nodeType":"YulAssignment","src":"8571:86:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8643:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"8652:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8579:63:8"},"nodeType":"YulFunctionCall","src":"8579:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8571:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8678:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8689:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8674:3:8"},"nodeType":"YulFunctionCall","src":"8674:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8698:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"8704:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8694:3:8"},"nodeType":"YulFunctionCall","src":"8694:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8667:6:8"},"nodeType":"YulFunctionCall","src":"8667:48:8"},"nodeType":"YulExpressionStatement","src":"8667:48:8"},{"nodeType":"YulAssignment","src":"8724:86:8","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8796:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"8805:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8732:63:8"},"nodeType":"YulFunctionCall","src":"8732:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8724:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8831:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8842:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8827:3:8"},"nodeType":"YulFunctionCall","src":"8827:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8851:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"8857:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8847:3:8"},"nodeType":"YulFunctionCall","src":"8847:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8820:6:8"},"nodeType":"YulFunctionCall","src":"8820:48:8"},"nodeType":"YulExpressionStatement","src":"8820:48:8"},{"nodeType":"YulAssignment","src":"8877:86:8","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8949:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"8958:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8885:63:8"},"nodeType":"YulFunctionCall","src":"8885:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8877:4:8"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8425:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8437:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8445:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8453:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8464:4:8","type":""}],"src":"8255:715:8"},{"body":{"nodeType":"YulBlock","src":"9102:206:8","statements":[{"nodeType":"YulAssignment","src":"9112:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9124:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9135:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9120:3:8"},"nodeType":"YulFunctionCall","src":"9120:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9112:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9192:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9205:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9216:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9201:3:8"},"nodeType":"YulFunctionCall","src":"9201:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9148:43:8"},"nodeType":"YulFunctionCall","src":"9148:71:8"},"nodeType":"YulExpressionStatement","src":"9148:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9273:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9286:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9297:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9282:3:8"},"nodeType":"YulFunctionCall","src":"9282:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9229:43:8"},"nodeType":"YulFunctionCall","src":"9229:72:8"},"nodeType":"YulExpressionStatement","src":"9229:72:8"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9066:9:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9078:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9086:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9097:4:8","type":""}],"src":"8976:332:8"},{"body":{"nodeType":"YulBlock","src":"9516:442:8","statements":[{"nodeType":"YulAssignment","src":"9526:27:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9538:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9549:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9534:3:8"},"nodeType":"YulFunctionCall","src":"9534:19:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9526:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9607:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9620:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9631:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9616:3:8"},"nodeType":"YulFunctionCall","src":"9616:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9563:43:8"},"nodeType":"YulFunctionCall","src":"9563:71:8"},"nodeType":"YulExpressionStatement","src":"9563:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9688:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9701:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9712:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9697:3:8"},"nodeType":"YulFunctionCall","src":"9697:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9644:43:8"},"nodeType":"YulFunctionCall","src":"9644:72:8"},"nodeType":"YulExpressionStatement","src":"9644:72:8"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9770:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9783:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9794:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9779:3:8"},"nodeType":"YulFunctionCall","src":"9779:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9726:43:8"},"nodeType":"YulFunctionCall","src":"9726:72:8"},"nodeType":"YulExpressionStatement","src":"9726:72:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9819:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9830:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9815:3:8"},"nodeType":"YulFunctionCall","src":"9815:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9839:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"9845:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9835:3:8"},"nodeType":"YulFunctionCall","src":"9835:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9808:6:8"},"nodeType":"YulFunctionCall","src":"9808:48:8"},"nodeType":"YulExpressionStatement","src":"9808:48:8"},{"nodeType":"YulAssignment","src":"9865:86:8","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9937:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"9946:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9873:63:8"},"nodeType":"YulFunctionCall","src":"9873:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9865:4:8"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9464:9:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9476:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9484:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9492:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9500:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9511:4:8","type":""}],"src":"9314:644:8"},{"body":{"nodeType":"YulBlock","src":"10138:359:8","statements":[{"nodeType":"YulAssignment","src":"10148:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10160:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10171:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10156:3:8"},"nodeType":"YulFunctionCall","src":"10156:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10148:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10228:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10241:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10252:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10237:3:8"},"nodeType":"YulFunctionCall","src":"10237:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10184:43:8"},"nodeType":"YulFunctionCall","src":"10184:71:8"},"nodeType":"YulExpressionStatement","src":"10184:71:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10276:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10287:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10272:3:8"},"nodeType":"YulFunctionCall","src":"10272:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10296:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"10302:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10292:3:8"},"nodeType":"YulFunctionCall","src":"10292:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10265:6:8"},"nodeType":"YulFunctionCall","src":"10265:48:8"},"nodeType":"YulExpressionStatement","src":"10265:48:8"},{"nodeType":"YulAssignment","src":"10322:86:8","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10394:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"10403:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10330:63:8"},"nodeType":"YulFunctionCall","src":"10330:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10322:4:8"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10462:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10475:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10486:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10471:3:8"},"nodeType":"YulFunctionCall","src":"10471:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10418:43:8"},"nodeType":"YulFunctionCall","src":"10418:72:8"},"nodeType":"YulExpressionStatement","src":"10418:72:8"}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10094:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10106:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10114:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10122:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10133:4:8","type":""}],"src":"9964:533:8"},{"body":{"nodeType":"YulBlock","src":"10586:391:8","statements":[{"body":{"nodeType":"YulBlock","src":"10632:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10634:77:8"},"nodeType":"YulFunctionCall","src":"10634:79:8"},"nodeType":"YulExpressionStatement","src":"10634:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10607:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"10616:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10603:3:8"},"nodeType":"YulFunctionCall","src":"10603:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"10628:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10599:3:8"},"nodeType":"YulFunctionCall","src":"10599:32:8"},"nodeType":"YulIf","src":"10596:119:8"},{"nodeType":"YulBlock","src":"10725:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"10740:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"10754:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10744:6:8","type":""}]},{"nodeType":"YulAssignment","src":"10769:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10804:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"10815:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10800:3:8"},"nodeType":"YulFunctionCall","src":"10800:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10824:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10779:20:8"},"nodeType":"YulFunctionCall","src":"10779:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10769:6:8"}]}]},{"nodeType":"YulBlock","src":"10852:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"10867:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"10881:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10871:6:8","type":""}]},{"nodeType":"YulAssignment","src":"10897:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10932:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"10943:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10928:3:8"},"nodeType":"YulFunctionCall","src":"10928:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10952:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10907:20:8"},"nodeType":"YulFunctionCall","src":"10907:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10897:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10548:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10559:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10571:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10579:6:8","type":""}],"src":"10503:474:8"},{"body":{"nodeType":"YulBlock","src":"11057:40:8","statements":[{"nodeType":"YulAssignment","src":"11068:22:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11084:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11078:5:8"},"nodeType":"YulFunctionCall","src":"11078:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11068:6:8"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11040:5:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11050:6:8","type":""}],"src":"10983:114:8"},{"body":{"nodeType":"YulBlock","src":"11214:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11231:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"11236:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11224:6:8"},"nodeType":"YulFunctionCall","src":"11224:19:8"},"nodeType":"YulExpressionStatement","src":"11224:19:8"},{"nodeType":"YulAssignment","src":"11252:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11271:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"11276:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11267:3:8"},"nodeType":"YulFunctionCall","src":"11267:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11252:11:8"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11186:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"11191:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11202:11:8","type":""}],"src":"11103:184:8"},{"body":{"nodeType":"YulBlock","src":"11365:60:8","statements":[{"nodeType":"YulAssignment","src":"11375:11:8","value":{"name":"ptr","nodeType":"YulIdentifier","src":"11383:3:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11375:4:8"}]},{"nodeType":"YulAssignment","src":"11396:22:8","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"11408:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"11413:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11404:3:8"},"nodeType":"YulFunctionCall","src":"11404:14:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11396:4:8"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11352:3:8","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"11360:4:8","type":""}],"src":"11293:132:8"},{"body":{"nodeType":"YulBlock","src":"11486:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11503:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11526:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11508:17:8"},"nodeType":"YulFunctionCall","src":"11508:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11496:6:8"},"nodeType":"YulFunctionCall","src":"11496:37:8"},"nodeType":"YulExpressionStatement","src":"11496:37:8"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11474:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11481:3:8","type":""}],"src":"11431:108:8"},{"body":{"nodeType":"YulBlock","src":"11625:99:8","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11669:6:8"},{"name":"pos","nodeType":"YulIdentifier","src":"11677:3:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11635:33:8"},"nodeType":"YulFunctionCall","src":"11635:46:8"},"nodeType":"YulExpressionStatement","src":"11635:46:8"},{"nodeType":"YulAssignment","src":"11690:28:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11708:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"11713:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11704:3:8"},"nodeType":"YulFunctionCall","src":"11704:14:8"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"11690:10:8"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"11598:6:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11606:3:8","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"11614:10:8","type":""}],"src":"11545:179:8"},{"body":{"nodeType":"YulBlock","src":"11805:38:8","statements":[{"nodeType":"YulAssignment","src":"11815:22:8","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"11827:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"11832:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11823:3:8"},"nodeType":"YulFunctionCall","src":"11823:14:8"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"11815:4:8"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11792:3:8","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"11800:4:8","type":""}],"src":"11730:113:8"},{"body":{"nodeType":"YulBlock","src":"12003:608:8","statements":[{"nodeType":"YulVariableDeclaration","src":"12013:68:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12075:5:8"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12027:47:8"},"nodeType":"YulFunctionCall","src":"12027:54:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12017:6:8","type":""}]},{"nodeType":"YulAssignment","src":"12090:93:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12171:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"12176:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12097:73:8"},"nodeType":"YulFunctionCall","src":"12097:86:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12090:3:8"}]},{"nodeType":"YulVariableDeclaration","src":"12192:71:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12257:5:8"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12207:49:8"},"nodeType":"YulFunctionCall","src":"12207:56:8"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"12196:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12272:21:8","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"12286:7:8"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"12276:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"12362:224:8","statements":[{"nodeType":"YulVariableDeclaration","src":"12376:34:8","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12403:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12397:5:8"},"nodeType":"YulFunctionCall","src":"12397:13:8"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"12380:13:8","type":""}]},{"nodeType":"YulAssignment","src":"12423:70:8","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"12474:13:8"},{"name":"pos","nodeType":"YulIdentifier","src":"12489:3:8"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12430:43:8"},"nodeType":"YulFunctionCall","src":"12430:63:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12423:3:8"}]},{"nodeType":"YulAssignment","src":"12506:70:8","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12569:6:8"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12516:52:8"},"nodeType":"YulFunctionCall","src":"12516:60:8"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12506:6:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12324:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"12327:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12321:2:8"},"nodeType":"YulFunctionCall","src":"12321:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12335:18:8","statements":[{"nodeType":"YulAssignment","src":"12337:14:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12346:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"12349:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12342:3:8"},"nodeType":"YulFunctionCall","src":"12342:9:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12337:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"12306:14:8","statements":[{"nodeType":"YulVariableDeclaration","src":"12308:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"12317:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12312:1:8","type":""}]}]},"src":"12302:284:8"},{"nodeType":"YulAssignment","src":"12595:10:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"12602:3:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12595:3:8"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11982:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11989:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11998:3:8","type":""}],"src":"11879:732:8"},{"body":{"nodeType":"YulBlock","src":"12765:225:8","statements":[{"nodeType":"YulAssignment","src":"12775:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12787:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"12798:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12783:3:8"},"nodeType":"YulFunctionCall","src":"12783:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12775:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12822:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"12833:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12818:3:8"},"nodeType":"YulFunctionCall","src":"12818:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12841:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"12847:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12837:3:8"},"nodeType":"YulFunctionCall","src":"12837:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12811:6:8"},"nodeType":"YulFunctionCall","src":"12811:47:8"},"nodeType":"YulExpressionStatement","src":"12811:47:8"},{"nodeType":"YulAssignment","src":"12867:116:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12969:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"12978:4:8"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12875:93:8"},"nodeType":"YulFunctionCall","src":"12875:108:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12867:4:8"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12737:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12749:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12760:4:8","type":""}],"src":"12617:373:8"},{"body":{"nodeType":"YulBlock","src":"13096:519:8","statements":[{"body":{"nodeType":"YulBlock","src":"13142:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13144:77:8"},"nodeType":"YulFunctionCall","src":"13144:79:8"},"nodeType":"YulExpressionStatement","src":"13144:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13117:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"13126:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13113:3:8"},"nodeType":"YulFunctionCall","src":"13113:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"13138:2:8","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13109:3:8"},"nodeType":"YulFunctionCall","src":"13109:32:8"},"nodeType":"YulIf","src":"13106:119:8"},{"nodeType":"YulBlock","src":"13235:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"13250:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"13264:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13254:6:8","type":""}]},{"nodeType":"YulAssignment","src":"13279:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13314:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"13325:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13310:3:8"},"nodeType":"YulFunctionCall","src":"13310:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13334:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13289:20:8"},"nodeType":"YulFunctionCall","src":"13289:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13279:6:8"}]}]},{"nodeType":"YulBlock","src":"13362:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"13377:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"13391:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13381:6:8","type":""}]},{"nodeType":"YulAssignment","src":"13407:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13442:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"13453:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13438:3:8"},"nodeType":"YulFunctionCall","src":"13438:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13462:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13417:20:8"},"nodeType":"YulFunctionCall","src":"13417:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13407:6:8"}]}]},{"nodeType":"YulBlock","src":"13490:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"13505:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"13519:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13509:6:8","type":""}]},{"nodeType":"YulAssignment","src":"13535:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13570:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"13581:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13566:3:8"},"nodeType":"YulFunctionCall","src":"13566:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13590:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13545:20:8"},"nodeType":"YulFunctionCall","src":"13545:53:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13535:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13050:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13061:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13073:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13081:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13089:6:8","type":""}],"src":"12996:619:8"},{"body":{"nodeType":"YulBlock","src":"13739:195:8","statements":[{"nodeType":"YulAssignment","src":"13749:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13761:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"13772:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13757:3:8"},"nodeType":"YulFunctionCall","src":"13757:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13749:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13796:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"13807:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13792:3:8"},"nodeType":"YulFunctionCall","src":"13792:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13815:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"13821:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13811:3:8"},"nodeType":"YulFunctionCall","src":"13811:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13785:6:8"},"nodeType":"YulFunctionCall","src":"13785:47:8"},"nodeType":"YulExpressionStatement","src":"13785:47:8"},{"nodeType":"YulAssignment","src":"13841:86:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13913:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"13922:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13849:63:8"},"nodeType":"YulFunctionCall","src":"13849:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13841:4:8"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13711:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13723:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13734:4:8","type":""}],"src":"13621:313:8"},{"body":{"nodeType":"YulBlock","src":"14077:988:8","statements":[{"body":{"nodeType":"YulBlock","src":"14124:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14126:77:8"},"nodeType":"YulFunctionCall","src":"14126:79:8"},"nodeType":"YulExpressionStatement","src":"14126:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14098:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"14107:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14094:3:8"},"nodeType":"YulFunctionCall","src":"14094:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"14119:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14090:3:8"},"nodeType":"YulFunctionCall","src":"14090:33:8"},"nodeType":"YulIf","src":"14087:120:8"},{"nodeType":"YulBlock","src":"14217:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"14232:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"14246:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14236:6:8","type":""}]},{"nodeType":"YulAssignment","src":"14261:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14296:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"14307:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14292:3:8"},"nodeType":"YulFunctionCall","src":"14292:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14316:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14271:20:8"},"nodeType":"YulFunctionCall","src":"14271:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14261:6:8"}]}]},{"nodeType":"YulBlock","src":"14344:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"14359:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14390:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"14401:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14386:3:8"},"nodeType":"YulFunctionCall","src":"14386:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14373:12:8"},"nodeType":"YulFunctionCall","src":"14373:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14363:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"14452:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14454:77:8"},"nodeType":"YulFunctionCall","src":"14454:79:8"},"nodeType":"YulExpressionStatement","src":"14454:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14424:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"14432:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14421:2:8"},"nodeType":"YulFunctionCall","src":"14421:30:8"},"nodeType":"YulIf","src":"14418:117:8"},{"nodeType":"YulAssignment","src":"14549:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14594:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"14605:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14590:3:8"},"nodeType":"YulFunctionCall","src":"14590:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14614:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14559:30:8"},"nodeType":"YulFunctionCall","src":"14559:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14549:6:8"}]}]},{"nodeType":"YulBlock","src":"14642:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"14657:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14688:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"14699:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14684:3:8"},"nodeType":"YulFunctionCall","src":"14684:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14671:12:8"},"nodeType":"YulFunctionCall","src":"14671:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14661:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"14750:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14752:77:8"},"nodeType":"YulFunctionCall","src":"14752:79:8"},"nodeType":"YulExpressionStatement","src":"14752:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14722:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"14730:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14719:2:8"},"nodeType":"YulFunctionCall","src":"14719:30:8"},"nodeType":"YulIf","src":"14716:117:8"},{"nodeType":"YulAssignment","src":"14847:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14892:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"14903:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14888:3:8"},"nodeType":"YulFunctionCall","src":"14888:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14912:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14857:30:8"},"nodeType":"YulFunctionCall","src":"14857:63:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14847:6:8"}]}]},{"nodeType":"YulBlock","src":"14940:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"14955:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"14969:2:8","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14959:6:8","type":""}]},{"nodeType":"YulAssignment","src":"14985:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15020:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"15031:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15016:3:8"},"nodeType":"YulFunctionCall","src":"15016:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15040:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14995:20:8"},"nodeType":"YulFunctionCall","src":"14995:53:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"14985:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14023:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14034:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14046:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14054:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14062:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14070:6:8","type":""}],"src":"13940:1125:8"},{"body":{"nodeType":"YulBlock","src":"15237:348:8","statements":[{"nodeType":"YulAssignment","src":"15247:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15259:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"15270:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15255:3:8"},"nodeType":"YulFunctionCall","src":"15255:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15247:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15294:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"15305:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15290:3:8"},"nodeType":"YulFunctionCall","src":"15290:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15313:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"15319:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15309:3:8"},"nodeType":"YulFunctionCall","src":"15309:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15283:6:8"},"nodeType":"YulFunctionCall","src":"15283:47:8"},"nodeType":"YulExpressionStatement","src":"15283:47:8"},{"nodeType":"YulAssignment","src":"15339:86:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15411:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"15420:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15347:63:8"},"nodeType":"YulFunctionCall","src":"15347:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15339:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15446:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"15457:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15442:3:8"},"nodeType":"YulFunctionCall","src":"15442:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15466:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"15472:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15462:3:8"},"nodeType":"YulFunctionCall","src":"15462:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15435:6:8"},"nodeType":"YulFunctionCall","src":"15435:48:8"},"nodeType":"YulExpressionStatement","src":"15435:48:8"},{"nodeType":"YulAssignment","src":"15492:86:8","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15564:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"15573:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15500:63:8"},"nodeType":"YulFunctionCall","src":"15500:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15492:4:8"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15201:9:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15213:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15221:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15232:4:8","type":""}],"src":"15071:514:8"},{"body":{"nodeType":"YulBlock","src":"15711:859:8","statements":[{"body":{"nodeType":"YulBlock","src":"15757:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15759:77:8"},"nodeType":"YulFunctionCall","src":"15759:79:8"},"nodeType":"YulExpressionStatement","src":"15759:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15732:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"15741:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15728:3:8"},"nodeType":"YulFunctionCall","src":"15728:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"15753:2:8","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15724:3:8"},"nodeType":"YulFunctionCall","src":"15724:32:8"},"nodeType":"YulIf","src":"15721:119:8"},{"nodeType":"YulBlock","src":"15850:287:8","statements":[{"nodeType":"YulVariableDeclaration","src":"15865:45:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15896:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"15907:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15892:3:8"},"nodeType":"YulFunctionCall","src":"15892:17:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15879:12:8"},"nodeType":"YulFunctionCall","src":"15879:31:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15869:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"15957:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15959:77:8"},"nodeType":"YulFunctionCall","src":"15959:79:8"},"nodeType":"YulExpressionStatement","src":"15959:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15929:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"15937:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15926:2:8"},"nodeType":"YulFunctionCall","src":"15926:30:8"},"nodeType":"YulIf","src":"15923:117:8"},{"nodeType":"YulAssignment","src":"16054:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16099:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"16110:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16095:3:8"},"nodeType":"YulFunctionCall","src":"16095:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16119:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16064:30:8"},"nodeType":"YulFunctionCall","src":"16064:63:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16054:6:8"}]}]},{"nodeType":"YulBlock","src":"16147:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"16162:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16193:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"16204:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16189:3:8"},"nodeType":"YulFunctionCall","src":"16189:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16176:12:8"},"nodeType":"YulFunctionCall","src":"16176:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16166:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"16255:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"16257:77:8"},"nodeType":"YulFunctionCall","src":"16257:79:8"},"nodeType":"YulExpressionStatement","src":"16257:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16227:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"16235:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16224:2:8"},"nodeType":"YulFunctionCall","src":"16224:30:8"},"nodeType":"YulIf","src":"16221:117:8"},{"nodeType":"YulAssignment","src":"16352:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16397:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"16408:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16393:3:8"},"nodeType":"YulFunctionCall","src":"16393:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16417:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16362:30:8"},"nodeType":"YulFunctionCall","src":"16362:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16352:6:8"}]}]},{"nodeType":"YulBlock","src":"16445:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"16460:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"16474:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16464:6:8","type":""}]},{"nodeType":"YulAssignment","src":"16490:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16525:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"16536:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16521:3:8"},"nodeType":"YulFunctionCall","src":"16521:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16545:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"16500:20:8"},"nodeType":"YulFunctionCall","src":"16500:53:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"16490:6:8"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15665:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15676:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15688:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15696:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15704:6:8","type":""}],"src":"15591:979:8"},{"body":{"nodeType":"YulBlock","src":"16723:1158:8","statements":[{"body":{"nodeType":"YulBlock","src":"16770:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16772:77:8"},"nodeType":"YulFunctionCall","src":"16772:79:8"},"nodeType":"YulExpressionStatement","src":"16772:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16744:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"16753:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16740:3:8"},"nodeType":"YulFunctionCall","src":"16740:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"16765:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16736:3:8"},"nodeType":"YulFunctionCall","src":"16736:33:8"},"nodeType":"YulIf","src":"16733:120:8"},{"nodeType":"YulBlock","src":"16863:287:8","statements":[{"nodeType":"YulVariableDeclaration","src":"16878:45:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16909:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"16920:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16905:3:8"},"nodeType":"YulFunctionCall","src":"16905:17:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16892:12:8"},"nodeType":"YulFunctionCall","src":"16892:31:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16882:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"16970:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"16972:77:8"},"nodeType":"YulFunctionCall","src":"16972:79:8"},"nodeType":"YulExpressionStatement","src":"16972:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16942:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"16950:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16939:2:8"},"nodeType":"YulFunctionCall","src":"16939:30:8"},"nodeType":"YulIf","src":"16936:117:8"},{"nodeType":"YulAssignment","src":"17067:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17112:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"17123:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17108:3:8"},"nodeType":"YulFunctionCall","src":"17108:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17132:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17077:30:8"},"nodeType":"YulFunctionCall","src":"17077:63:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17067:6:8"}]}]},{"nodeType":"YulBlock","src":"17160:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"17175:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17206:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"17217:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17202:3:8"},"nodeType":"YulFunctionCall","src":"17202:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17189:12:8"},"nodeType":"YulFunctionCall","src":"17189:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17179:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"17268:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17270:77:8"},"nodeType":"YulFunctionCall","src":"17270:79:8"},"nodeType":"YulExpressionStatement","src":"17270:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17240:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"17248:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17237:2:8"},"nodeType":"YulFunctionCall","src":"17237:30:8"},"nodeType":"YulIf","src":"17234:117:8"},{"nodeType":"YulAssignment","src":"17365:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17410:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"17421:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17406:3:8"},"nodeType":"YulFunctionCall","src":"17406:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17430:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17375:30:8"},"nodeType":"YulFunctionCall","src":"17375:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17365:6:8"}]}]},{"nodeType":"YulBlock","src":"17458:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"17473:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17504:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"17515:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17500:3:8"},"nodeType":"YulFunctionCall","src":"17500:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17487:12:8"},"nodeType":"YulFunctionCall","src":"17487:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17477:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"17566:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17568:77:8"},"nodeType":"YulFunctionCall","src":"17568:79:8"},"nodeType":"YulExpressionStatement","src":"17568:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17538:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"17546:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17535:2:8"},"nodeType":"YulFunctionCall","src":"17535:30:8"},"nodeType":"YulIf","src":"17532:117:8"},{"nodeType":"YulAssignment","src":"17663:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17708:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"17719:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17704:3:8"},"nodeType":"YulFunctionCall","src":"17704:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17728:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17673:30:8"},"nodeType":"YulFunctionCall","src":"17673:63:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"17663:6:8"}]}]},{"nodeType":"YulBlock","src":"17756:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"17771:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"17785:2:8","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17775:6:8","type":""}]},{"nodeType":"YulAssignment","src":"17801:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17836:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"17847:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17832:3:8"},"nodeType":"YulFunctionCall","src":"17832:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17856:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"17811:20:8"},"nodeType":"YulFunctionCall","src":"17811:53:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"17801:6:8"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16669:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16680:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16692:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16700:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16708:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16716:6:8","type":""}],"src":"16576:1305:8"},{"body":{"nodeType":"YulBlock","src":"17980:561:8","statements":[{"body":{"nodeType":"YulBlock","src":"18026:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18028:77:8"},"nodeType":"YulFunctionCall","src":"18028:79:8"},"nodeType":"YulExpressionStatement","src":"18028:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18001:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"18010:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17997:3:8"},"nodeType":"YulFunctionCall","src":"17997:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"18022:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17993:3:8"},"nodeType":"YulFunctionCall","src":"17993:32:8"},"nodeType":"YulIf","src":"17990:119:8"},{"nodeType":"YulBlock","src":"18119:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"18134:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"18148:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18138:6:8","type":""}]},{"nodeType":"YulAssignment","src":"18163:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18198:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"18209:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18194:3:8"},"nodeType":"YulFunctionCall","src":"18194:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18218:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18173:20:8"},"nodeType":"YulFunctionCall","src":"18173:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18163:6:8"}]}]},{"nodeType":"YulBlock","src":"18246:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"18261:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18292:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"18303:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18288:3:8"},"nodeType":"YulFunctionCall","src":"18288:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18275:12:8"},"nodeType":"YulFunctionCall","src":"18275:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18265:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"18354:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18356:77:8"},"nodeType":"YulFunctionCall","src":"18356:79:8"},"nodeType":"YulExpressionStatement","src":"18356:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18326:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"18334:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18323:2:8"},"nodeType":"YulFunctionCall","src":"18323:30:8"},"nodeType":"YulIf","src":"18320:117:8"},{"nodeType":"YulAssignment","src":"18451:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18496:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"18507:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18492:3:8"},"nodeType":"YulFunctionCall","src":"18492:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18516:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18461:30:8"},"nodeType":"YulFunctionCall","src":"18461:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18451:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17942:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17953:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17965:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17973:6:8","type":""}],"src":"17887:654:8"},{"body":{"nodeType":"YulBlock","src":"18667:859:8","statements":[{"body":{"nodeType":"YulBlock","src":"18713:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18715:77:8"},"nodeType":"YulFunctionCall","src":"18715:79:8"},"nodeType":"YulExpressionStatement","src":"18715:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18688:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"18697:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18684:3:8"},"nodeType":"YulFunctionCall","src":"18684:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"18709:2:8","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18680:3:8"},"nodeType":"YulFunctionCall","src":"18680:32:8"},"nodeType":"YulIf","src":"18677:119:8"},{"nodeType":"YulBlock","src":"18806:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"18821:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"18835:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18825:6:8","type":""}]},{"nodeType":"YulAssignment","src":"18850:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18885:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"18896:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18881:3:8"},"nodeType":"YulFunctionCall","src":"18881:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18905:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18860:20:8"},"nodeType":"YulFunctionCall","src":"18860:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18850:6:8"}]}]},{"nodeType":"YulBlock","src":"18933:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"18948:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18979:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"18990:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18975:3:8"},"nodeType":"YulFunctionCall","src":"18975:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18962:12:8"},"nodeType":"YulFunctionCall","src":"18962:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18952:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"19041:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19043:77:8"},"nodeType":"YulFunctionCall","src":"19043:79:8"},"nodeType":"YulExpressionStatement","src":"19043:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19013:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"19021:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19010:2:8"},"nodeType":"YulFunctionCall","src":"19010:30:8"},"nodeType":"YulIf","src":"19007:117:8"},{"nodeType":"YulAssignment","src":"19138:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19183:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"19194:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19179:3:8"},"nodeType":"YulFunctionCall","src":"19179:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19203:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19148:30:8"},"nodeType":"YulFunctionCall","src":"19148:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19138:6:8"}]}]},{"nodeType":"YulBlock","src":"19231:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"19246:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19277:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"19288:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19273:3:8"},"nodeType":"YulFunctionCall","src":"19273:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19260:12:8"},"nodeType":"YulFunctionCall","src":"19260:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19250:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"19339:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19341:77:8"},"nodeType":"YulFunctionCall","src":"19341:79:8"},"nodeType":"YulExpressionStatement","src":"19341:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19311:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"19319:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19308:2:8"},"nodeType":"YulFunctionCall","src":"19308:30:8"},"nodeType":"YulIf","src":"19305:117:8"},{"nodeType":"YulAssignment","src":"19436:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19481:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"19492:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19477:3:8"},"nodeType":"YulFunctionCall","src":"19477:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19501:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19446:30:8"},"nodeType":"YulFunctionCall","src":"19446:63:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"19436:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18621:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18632:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18644:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18652:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18660:6:8","type":""}],"src":"18547:979:8"},{"body":{"nodeType":"YulBlock","src":"19659:818:8","statements":[{"body":{"nodeType":"YulBlock","src":"19706:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19708:77:8"},"nodeType":"YulFunctionCall","src":"19708:79:8"},"nodeType":"YulExpressionStatement","src":"19708:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19680:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"19689:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19676:3:8"},"nodeType":"YulFunctionCall","src":"19676:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"19701:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19672:3:8"},"nodeType":"YulFunctionCall","src":"19672:33:8"},"nodeType":"YulIf","src":"19669:120:8"},{"nodeType":"YulBlock","src":"19799:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"19814:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"19828:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19818:6:8","type":""}]},{"nodeType":"YulAssignment","src":"19843:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19878:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"19889:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19874:3:8"},"nodeType":"YulFunctionCall","src":"19874:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19898:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"19853:20:8"},"nodeType":"YulFunctionCall","src":"19853:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19843:6:8"}]}]},{"nodeType":"YulBlock","src":"19926:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"19941:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"19955:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19945:6:8","type":""}]},{"nodeType":"YulAssignment","src":"19971:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20006:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"20017:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20002:3:8"},"nodeType":"YulFunctionCall","src":"20002:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20026:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"19981:20:8"},"nodeType":"YulFunctionCall","src":"19981:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19971:6:8"}]}]},{"nodeType":"YulBlock","src":"20054:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"20069:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"20083:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20073:6:8","type":""}]},{"nodeType":"YulAssignment","src":"20099:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20134:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"20145:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20130:3:8"},"nodeType":"YulFunctionCall","src":"20130:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20154:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"20109:20:8"},"nodeType":"YulFunctionCall","src":"20109:53:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"20099:6:8"}]}]},{"nodeType":"YulBlock","src":"20182:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"20197:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20228:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"20239:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20224:3:8"},"nodeType":"YulFunctionCall","src":"20224:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20211:12:8"},"nodeType":"YulFunctionCall","src":"20211:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20201:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"20290:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"20292:77:8"},"nodeType":"YulFunctionCall","src":"20292:79:8"},"nodeType":"YulExpressionStatement","src":"20292:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20262:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"20270:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20259:2:8"},"nodeType":"YulFunctionCall","src":"20259:30:8"},"nodeType":"YulIf","src":"20256:117:8"},{"nodeType":"YulAssignment","src":"20387:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20432:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"20443:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20428:3:8"},"nodeType":"YulFunctionCall","src":"20428:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20452:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"20397:30:8"},"nodeType":"YulFunctionCall","src":"20397:63:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"20387:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19605:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19616:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19628:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19636:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19644:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19652:6:8","type":""}],"src":"19532:945:8"},{"body":{"nodeType":"YulBlock","src":"20525:48:8","statements":[{"nodeType":"YulAssignment","src":"20535:32:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20560:5:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20553:6:8"},"nodeType":"YulFunctionCall","src":"20553:13:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20546:6:8"},"nodeType":"YulFunctionCall","src":"20546:21:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20535:7:8"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20507:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"20517:7:8","type":""}],"src":"20483:90:8"},{"body":{"nodeType":"YulBlock","src":"20638:50:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20655:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20675:5:8"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"20660:14:8"},"nodeType":"YulFunctionCall","src":"20660:21:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20648:6:8"},"nodeType":"YulFunctionCall","src":"20648:34:8"},"nodeType":"YulExpressionStatement","src":"20648:34:8"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20626:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20633:3:8","type":""}],"src":"20579:109:8"},{"body":{"nodeType":"YulBlock","src":"20968:738:8","statements":[{"nodeType":"YulAssignment","src":"20978:27:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20990:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"21001:3:8","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20986:3:8"},"nodeType":"YulFunctionCall","src":"20986:19:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20978:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21059:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21072:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"21083:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21068:3:8"},"nodeType":"YulFunctionCall","src":"21068:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21015:43:8"},"nodeType":"YulFunctionCall","src":"21015:71:8"},"nodeType":"YulExpressionStatement","src":"21015:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21134:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21147:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"21158:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21143:3:8"},"nodeType":"YulFunctionCall","src":"21143:18:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"21096:37:8"},"nodeType":"YulFunctionCall","src":"21096:66:8"},"nodeType":"YulExpressionStatement","src":"21096:66:8"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21210:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21223:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"21234:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21219:3:8"},"nodeType":"YulFunctionCall","src":"21219:18:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"21172:37:8"},"nodeType":"YulFunctionCall","src":"21172:66:8"},"nodeType":"YulExpressionStatement","src":"21172:66:8"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"21286:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21299:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"21310:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21295:3:8"},"nodeType":"YulFunctionCall","src":"21295:18:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"21248:37:8"},"nodeType":"YulFunctionCall","src":"21248:66:8"},"nodeType":"YulExpressionStatement","src":"21248:66:8"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"21362:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21375:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"21386:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21371:3:8"},"nodeType":"YulFunctionCall","src":"21371:19:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"21324:37:8"},"nodeType":"YulFunctionCall","src":"21324:67:8"},"nodeType":"YulExpressionStatement","src":"21324:67:8"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"21439:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21452:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"21463:3:8","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21448:3:8"},"nodeType":"YulFunctionCall","src":"21448:19:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"21401:37:8"},"nodeType":"YulFunctionCall","src":"21401:67:8"},"nodeType":"YulExpressionStatement","src":"21401:67:8"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"21516:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21529:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"21540:3:8","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21525:3:8"},"nodeType":"YulFunctionCall","src":"21525:19:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"21478:37:8"},"nodeType":"YulFunctionCall","src":"21478:67:8"},"nodeType":"YulExpressionStatement","src":"21478:67:8"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"21593:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21606:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"21617:3:8","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21602:3:8"},"nodeType":"YulFunctionCall","src":"21602:19:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"21555:37:8"},"nodeType":"YulFunctionCall","src":"21555:67:8"},"nodeType":"YulExpressionStatement","src":"21555:67:8"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"21670:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21683:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"21694:3:8","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21679:3:8"},"nodeType":"YulFunctionCall","src":"21679:19:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"21632:37:8"},"nodeType":"YulFunctionCall","src":"21632:67:8"},"nodeType":"YulExpressionStatement","src":"21632:67:8"}]},"name":"abi_encode_tuple_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__to_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20876:9:8","type":""},{"name":"value8","nodeType":"YulTypedName","src":"20888:6:8","type":""},{"name":"value7","nodeType":"YulTypedName","src":"20896:6:8","type":""},{"name":"value6","nodeType":"YulTypedName","src":"20904:6:8","type":""},{"name":"value5","nodeType":"YulTypedName","src":"20912:6:8","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20920:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20928:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20936:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20944:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20952:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20963:4:8","type":""}],"src":"20694:1012:8"},{"body":{"nodeType":"YulBlock","src":"21934:513:8","statements":[{"nodeType":"YulAssignment","src":"21944:27:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21956:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"21967:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21952:3:8"},"nodeType":"YulFunctionCall","src":"21952:19:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21944:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22025:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22038:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"22049:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22034:3:8"},"nodeType":"YulFunctionCall","src":"22034:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21981:43:8"},"nodeType":"YulFunctionCall","src":"21981:71:8"},"nodeType":"YulExpressionStatement","src":"21981:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22106:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22119:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"22130:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22115:3:8"},"nodeType":"YulFunctionCall","src":"22115:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22062:43:8"},"nodeType":"YulFunctionCall","src":"22062:72:8"},"nodeType":"YulExpressionStatement","src":"22062:72:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22155:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"22166:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22151:3:8"},"nodeType":"YulFunctionCall","src":"22151:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22175:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"22181:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22171:3:8"},"nodeType":"YulFunctionCall","src":"22171:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22144:6:8"},"nodeType":"YulFunctionCall","src":"22144:48:8"},"nodeType":"YulExpressionStatement","src":"22144:48:8"},{"nodeType":"YulAssignment","src":"22201:86:8","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22273:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"22282:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22209:63:8"},"nodeType":"YulFunctionCall","src":"22209:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22201:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22308:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"22319:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22304:3:8"},"nodeType":"YulFunctionCall","src":"22304:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22328:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"22334:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22324:3:8"},"nodeType":"YulFunctionCall","src":"22324:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22297:6:8"},"nodeType":"YulFunctionCall","src":"22297:48:8"},"nodeType":"YulExpressionStatement","src":"22297:48:8"},{"nodeType":"YulAssignment","src":"22354:86:8","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22426:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"22435:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22362:63:8"},"nodeType":"YulFunctionCall","src":"22362:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22354:4:8"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21882:9:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21894:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21902:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21910:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21918:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21929:4:8","type":""}],"src":"21712:735:8"},{"body":{"nodeType":"YulBlock","src":"22545:118:8","statements":[{"nodeType":"YulAssignment","src":"22555:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22567:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"22578:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22563:3:8"},"nodeType":"YulFunctionCall","src":"22563:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22555:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22629:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22642:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"22653:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22638:3:8"},"nodeType":"YulFunctionCall","src":"22638:17:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"22591:37:8"},"nodeType":"YulFunctionCall","src":"22591:65:8"},"nodeType":"YulExpressionStatement","src":"22591:65:8"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22517:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22529:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22540:4:8","type":""}],"src":"22453:210:8"},{"body":{"nodeType":"YulBlock","src":"22761:229:8","statements":[{"body":{"nodeType":"YulBlock","src":"22866:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"22868:16:8"},"nodeType":"YulFunctionCall","src":"22868:18:8"},"nodeType":"YulExpressionStatement","src":"22868:18:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22838:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"22846:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22835:2:8"},"nodeType":"YulFunctionCall","src":"22835:30:8"},"nodeType":"YulIf","src":"22832:56:8"},{"nodeType":"YulAssignment","src":"22898:25:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22910:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"22918:4:8","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"22906:3:8"},"nodeType":"YulFunctionCall","src":"22906:17:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"22898:4:8"}]},{"nodeType":"YulAssignment","src":"22960:23:8","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"22972:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"22978:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22968:3:8"},"nodeType":"YulFunctionCall","src":"22968:15:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"22960:4:8"}]}]},"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"22745:6:8","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"22756:4:8","type":""}],"src":"22669:321:8"},{"body":{"nodeType":"YulBlock","src":"23085:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23102:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23105:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23095:6:8"},"nodeType":"YulFunctionCall","src":"23095:12:8"},"nodeType":"YulExpressionStatement","src":"23095:12:8"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"22996:117:8"},{"body":{"nodeType":"YulBlock","src":"23247:833:8","statements":[{"nodeType":"YulAssignment","src":"23257:100:8","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23349:6:8"}],"functionName":{"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"23282:66:8"},"nodeType":"YulFunctionCall","src":"23282:74:8"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"23266:15:8"},"nodeType":"YulFunctionCall","src":"23266:91:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"23257:5:8"}]},{"nodeType":"YulVariableDeclaration","src":"23366:16:8","value":{"name":"array","nodeType":"YulIdentifier","src":"23377:5:8"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"23370:3:8","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"23399:5:8"},{"name":"length","nodeType":"YulIdentifier","src":"23406:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23392:6:8"},"nodeType":"YulFunctionCall","src":"23392:21:8"},"nodeType":"YulExpressionStatement","src":"23392:21:8"},{"nodeType":"YulAssignment","src":"23422:23:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"23433:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"23440:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23429:3:8"},"nodeType":"YulFunctionCall","src":"23429:16:8"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"23422:3:8"}]},{"nodeType":"YulVariableDeclaration","src":"23455:44:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23473:6:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23485:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"23493:4:8","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23481:3:8"},"nodeType":"YulFunctionCall","src":"23481:17:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23469:3:8"},"nodeType":"YulFunctionCall","src":"23469:30:8"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"23459:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"23527:103:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"23541:77:8"},"nodeType":"YulFunctionCall","src":"23541:79:8"},"nodeType":"YulExpressionStatement","src":"23541:79:8"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"23514:6:8"},{"name":"end","nodeType":"YulIdentifier","src":"23522:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23511:2:8"},"nodeType":"YulFunctionCall","src":"23511:15:8"},"nodeType":"YulIf","src":"23508:122:8"},{"body":{"nodeType":"YulBlock","src":"23715:359:8","statements":[{"nodeType":"YulVariableDeclaration","src":"23730:36:8","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23762:3:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23749:12:8"},"nodeType":"YulFunctionCall","src":"23749:17:8"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"23734:11:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"23818:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"23820:77:8"},"nodeType":"YulFunctionCall","src":"23820:79:8"},"nodeType":"YulExpressionStatement","src":"23820:79:8"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"23785:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"23798:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23782:2:8"},"nodeType":"YulFunctionCall","src":"23782:35:8"},"nodeType":"YulIf","src":"23779:122:8"},{"nodeType":"YulVariableDeclaration","src":"23914:42:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23936:6:8"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"23944:11:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23932:3:8"},"nodeType":"YulFunctionCall","src":"23932:24:8"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"23918:10:8","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"23977:3:8"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"24013:10:8"},{"name":"end","nodeType":"YulIdentifier","src":"24025:3:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"23982:30:8"},"nodeType":"YulFunctionCall","src":"23982:47:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23970:6:8"},"nodeType":"YulFunctionCall","src":"23970:60:8"},"nodeType":"YulExpressionStatement","src":"23970:60:8"},{"nodeType":"YulAssignment","src":"24043:21:8","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"24054:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"24059:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24050:3:8"},"nodeType":"YulFunctionCall","src":"24050:14:8"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"24043:3:8"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23668:3:8"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"23673:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23665:2:8"},"nodeType":"YulFunctionCall","src":"23665:15:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23681:25:8","statements":[{"nodeType":"YulAssignment","src":"23683:21:8","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23694:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"23699:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23690:3:8"},"nodeType":"YulFunctionCall","src":"23690:14:8"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"23683:3:8"}]}]},"pre":{"nodeType":"YulBlock","src":"23643:21:8","statements":[{"nodeType":"YulVariableDeclaration","src":"23645:17:8","value":{"name":"offset","nodeType":"YulIdentifier","src":"23656:6:8"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"23649:3:8","type":""}]}]},"src":"23639:435:8"}]},"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"23217:6:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"23225:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"23233:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"23241:5:8","type":""}],"src":"23135:945:8"},{"body":{"nodeType":"YulBlock","src":"24189:303:8","statements":[{"body":{"nodeType":"YulBlock","src":"24238:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"24240:77:8"},"nodeType":"YulFunctionCall","src":"24240:79:8"},"nodeType":"YulExpressionStatement","src":"24240:79:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24217:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"24225:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24213:3:8"},"nodeType":"YulFunctionCall","src":"24213:17:8"},{"name":"end","nodeType":"YulIdentifier","src":"24232:3:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24209:3:8"},"nodeType":"YulFunctionCall","src":"24209:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24202:6:8"},"nodeType":"YulFunctionCall","src":"24202:35:8"},"nodeType":"YulIf","src":"24199:122:8"},{"nodeType":"YulVariableDeclaration","src":"24330:34:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24357:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24344:12:8"},"nodeType":"YulFunctionCall","src":"24344:20:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"24334:6:8","type":""}]},{"nodeType":"YulAssignment","src":"24373:113:8","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24459:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"24467:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24455:3:8"},"nodeType":"YulFunctionCall","src":"24455:17:8"},{"name":"length","nodeType":"YulIdentifier","src":"24474:6:8"},{"name":"end","nodeType":"YulIdentifier","src":"24482:3:8"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"24382:72:8"},"nodeType":"YulFunctionCall","src":"24382:104:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"24373:5:8"}]}]},"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"24167:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"24175:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"24183:5:8","type":""}],"src":"24102:390:8"},{"body":{"nodeType":"YulBlock","src":"24660:1013:8","statements":[{"body":{"nodeType":"YulBlock","src":"24707:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24709:77:8"},"nodeType":"YulFunctionCall","src":"24709:79:8"},"nodeType":"YulExpressionStatement","src":"24709:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24681:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"24690:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24677:3:8"},"nodeType":"YulFunctionCall","src":"24677:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"24702:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24673:3:8"},"nodeType":"YulFunctionCall","src":"24673:33:8"},"nodeType":"YulIf","src":"24670:120:8"},{"nodeType":"YulBlock","src":"24800:287:8","statements":[{"nodeType":"YulVariableDeclaration","src":"24815:45:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24846:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"24857:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24842:3:8"},"nodeType":"YulFunctionCall","src":"24842:17:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24829:12:8"},"nodeType":"YulFunctionCall","src":"24829:31:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24819:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"24907:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"24909:77:8"},"nodeType":"YulFunctionCall","src":"24909:79:8"},"nodeType":"YulExpressionStatement","src":"24909:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24879:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"24887:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24876:2:8"},"nodeType":"YulFunctionCall","src":"24876:30:8"},"nodeType":"YulIf","src":"24873:117:8"},{"nodeType":"YulAssignment","src":"25004:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25049:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"25060:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25045:3:8"},"nodeType":"YulFunctionCall","src":"25045:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25069:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"25014:30:8"},"nodeType":"YulFunctionCall","src":"25014:63:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25004:6:8"}]}]},{"nodeType":"YulBlock","src":"25097:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"25112:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"25126:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25116:6:8","type":""}]},{"nodeType":"YulAssignment","src":"25142:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25177:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"25188:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25173:3:8"},"nodeType":"YulFunctionCall","src":"25173:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25197:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"25152:20:8"},"nodeType":"YulFunctionCall","src":"25152:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"25142:6:8"}]}]},{"nodeType":"YulBlock","src":"25225:313:8","statements":[{"nodeType":"YulVariableDeclaration","src":"25240:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25271:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"25282:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25267:3:8"},"nodeType":"YulFunctionCall","src":"25267:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25254:12:8"},"nodeType":"YulFunctionCall","src":"25254:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25244:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"25333:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25335:77:8"},"nodeType":"YulFunctionCall","src":"25335:79:8"},"nodeType":"YulExpressionStatement","src":"25335:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25305:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"25313:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25302:2:8"},"nodeType":"YulFunctionCall","src":"25302:30:8"},"nodeType":"YulIf","src":"25299:117:8"},{"nodeType":"YulAssignment","src":"25430:98:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25500:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"25511:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25496:3:8"},"nodeType":"YulFunctionCall","src":"25496:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25520:7:8"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"25440:55:8"},"nodeType":"YulFunctionCall","src":"25440:88:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"25430:6:8"}]}]},{"nodeType":"YulBlock","src":"25548:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"25563:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"25577:2:8","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25567:6:8","type":""}]},{"nodeType":"YulAssignment","src":"25593:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25628:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"25639:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25624:3:8"},"nodeType":"YulFunctionCall","src":"25624:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25648:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"25603:20:8"},"nodeType":"YulFunctionCall","src":"25603:53:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"25593:6:8"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24606:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24617:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24629:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24637:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24645:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24653:6:8","type":""}],"src":"24498:1175:8"},{"body":{"nodeType":"YulBlock","src":"25806:818:8","statements":[{"body":{"nodeType":"YulBlock","src":"25853:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"25855:77:8"},"nodeType":"YulFunctionCall","src":"25855:79:8"},"nodeType":"YulExpressionStatement","src":"25855:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"25827:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"25836:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25823:3:8"},"nodeType":"YulFunctionCall","src":"25823:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"25848:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25819:3:8"},"nodeType":"YulFunctionCall","src":"25819:33:8"},"nodeType":"YulIf","src":"25816:120:8"},{"nodeType":"YulBlock","src":"25946:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"25961:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"25975:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25965:6:8","type":""}]},{"nodeType":"YulAssignment","src":"25990:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26025:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"26036:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26021:3:8"},"nodeType":"YulFunctionCall","src":"26021:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26045:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"26000:20:8"},"nodeType":"YulFunctionCall","src":"26000:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25990:6:8"}]}]},{"nodeType":"YulBlock","src":"26073:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"26088:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26119:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"26130:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26115:3:8"},"nodeType":"YulFunctionCall","src":"26115:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"26102:12:8"},"nodeType":"YulFunctionCall","src":"26102:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26092:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"26181:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"26183:77:8"},"nodeType":"YulFunctionCall","src":"26183:79:8"},"nodeType":"YulExpressionStatement","src":"26183:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26153:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"26161:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26150:2:8"},"nodeType":"YulFunctionCall","src":"26150:30:8"},"nodeType":"YulIf","src":"26147:117:8"},{"nodeType":"YulAssignment","src":"26278:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26323:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"26334:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26319:3:8"},"nodeType":"YulFunctionCall","src":"26319:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26343:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"26288:30:8"},"nodeType":"YulFunctionCall","src":"26288:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"26278:6:8"}]}]},{"nodeType":"YulBlock","src":"26371:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"26386:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"26400:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26390:6:8","type":""}]},{"nodeType":"YulAssignment","src":"26416:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26451:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"26462:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26447:3:8"},"nodeType":"YulFunctionCall","src":"26447:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26471:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"26426:20:8"},"nodeType":"YulFunctionCall","src":"26426:53:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"26416:6:8"}]}]},{"nodeType":"YulBlock","src":"26499:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"26514:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"26528:2:8","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26518:6:8","type":""}]},{"nodeType":"YulAssignment","src":"26544:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26579:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"26590:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26575:3:8"},"nodeType":"YulFunctionCall","src":"26575:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26599:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"26554:20:8"},"nodeType":"YulFunctionCall","src":"26554:53:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"26544:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25752:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"25763:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"25775:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25783:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25791:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25799:6:8","type":""}],"src":"25679:945:8"},{"body":{"nodeType":"YulBlock","src":"26804:359:8","statements":[{"nodeType":"YulAssignment","src":"26814:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26826:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"26837:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26822:3:8"},"nodeType":"YulFunctionCall","src":"26822:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26814:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26894:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26907:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"26918:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26903:3:8"},"nodeType":"YulFunctionCall","src":"26903:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26850:43:8"},"nodeType":"YulFunctionCall","src":"26850:71:8"},"nodeType":"YulExpressionStatement","src":"26850:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26975:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26988:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"26999:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26984:3:8"},"nodeType":"YulFunctionCall","src":"26984:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26931:43:8"},"nodeType":"YulFunctionCall","src":"26931:72:8"},"nodeType":"YulExpressionStatement","src":"26931:72:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27024:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"27035:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27020:3:8"},"nodeType":"YulFunctionCall","src":"27020:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27044:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"27050:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27040:3:8"},"nodeType":"YulFunctionCall","src":"27040:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27013:6:8"},"nodeType":"YulFunctionCall","src":"27013:48:8"},"nodeType":"YulExpressionStatement","src":"27013:48:8"},{"nodeType":"YulAssignment","src":"27070:86:8","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27142:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"27151:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27078:63:8"},"nodeType":"YulFunctionCall","src":"27078:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27070:4:8"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26760:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26772:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26780:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26788:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26799:4:8","type":""}],"src":"26630:533:8"},{"body":{"nodeType":"YulBlock","src":"27197:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27214:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27217:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27207:6:8"},"nodeType":"YulFunctionCall","src":"27207:88:8"},"nodeType":"YulExpressionStatement","src":"27207:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27311:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27314:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27304:6:8"},"nodeType":"YulFunctionCall","src":"27304:15:8"},"nodeType":"YulExpressionStatement","src":"27304:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27335:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27338:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27328:6:8"},"nodeType":"YulFunctionCall","src":"27328:15:8"},"nodeType":"YulExpressionStatement","src":"27328:15:8"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"27169:180:8"},{"body":{"nodeType":"YulBlock","src":"27406:269:8","statements":[{"nodeType":"YulAssignment","src":"27416:22:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"27430:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"27436:1:8","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"27426:3:8"},"nodeType":"YulFunctionCall","src":"27426:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"27416:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"27447:38:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"27477:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"27483:1:8","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27473:3:8"},"nodeType":"YulFunctionCall","src":"27473:12:8"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"27451:18:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"27524:51:8","statements":[{"nodeType":"YulAssignment","src":"27538:27:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27552:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"27560:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27548:3:8"},"nodeType":"YulFunctionCall","src":"27548:17:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"27538:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"27504:18:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27497:6:8"},"nodeType":"YulFunctionCall","src":"27497:26:8"},"nodeType":"YulIf","src":"27494:81:8"},{"body":{"nodeType":"YulBlock","src":"27627:42:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"27641:16:8"},"nodeType":"YulFunctionCall","src":"27641:18:8"},"nodeType":"YulExpressionStatement","src":"27641:18:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"27591:18:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27614:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"27622:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27611:2:8"},"nodeType":"YulFunctionCall","src":"27611:14:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"27588:2:8"},"nodeType":"YulFunctionCall","src":"27588:38:8"},"nodeType":"YulIf","src":"27585:84:8"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"27390:4:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"27399:6:8","type":""}],"src":"27355:320:8"},{"body":{"nodeType":"YulBlock","src":"27794:34:8","statements":[{"nodeType":"YulAssignment","src":"27804:18:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"27819:3:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"27804:11:8"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27766:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"27771:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"27782:11:8","type":""}],"src":"27681:147:8"},{"body":{"nodeType":"YulBlock","src":"27891:87:8","statements":[{"nodeType":"YulAssignment","src":"27901:11:8","value":{"name":"ptr","nodeType":"YulIdentifier","src":"27909:3:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"27901:4:8"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27929:1:8","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"27932:3:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27922:6:8"},"nodeType":"YulFunctionCall","src":"27922:14:8"},"nodeType":"YulExpressionStatement","src":"27922:14:8"},{"nodeType":"YulAssignment","src":"27945:26:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27963:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27966:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"27953:9:8"},"nodeType":"YulFunctionCall","src":"27953:18:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"27945:4:8"}]}]},"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"27878:3:8","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"27886:4:8","type":""}],"src":"27834:144:8"},{"body":{"nodeType":"YulBlock","src":"28115:769:8","statements":[{"nodeType":"YulVariableDeclaration","src":"28125:29:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28148:5:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"28142:5:8"},"nodeType":"YulFunctionCall","src":"28142:12:8"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"28129:9:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28163:50:8","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"28203:9:8"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"28177:25:8"},"nodeType":"YulFunctionCall","src":"28177:36:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"28167:6:8","type":""}]},{"nodeType":"YulAssignment","src":"28222:95:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28305:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"28310:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28229:75:8"},"nodeType":"YulFunctionCall","src":"28229:88:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28222:3:8"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"28366:159:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28419:3:8"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"28428:9:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28443:4:8","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"28439:3:8"},"nodeType":"YulFunctionCall","src":"28439:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28424:3:8"},"nodeType":"YulFunctionCall","src":"28424:25:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28412:6:8"},"nodeType":"YulFunctionCall","src":"28412:38:8"},"nodeType":"YulExpressionStatement","src":"28412:38:8"},{"nodeType":"YulAssignment","src":"28463:52:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28474:3:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28483:6:8"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28505:6:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28498:6:8"},"nodeType":"YulFunctionCall","src":"28498:14:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28491:6:8"},"nodeType":"YulFunctionCall","src":"28491:22:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"28479:3:8"},"nodeType":"YulFunctionCall","src":"28479:35:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28470:3:8"},"nodeType":"YulFunctionCall","src":"28470:45:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"28463:3:8"}]}]},"nodeType":"YulCase","src":"28359:166:8","value":{"kind":"number","nodeType":"YulLiteral","src":"28364:1:8","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"28541:337:8","statements":[{"nodeType":"YulVariableDeclaration","src":"28586:56:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28636:5:8"}],"functionName":{"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulIdentifier","src":"28601:34:8"},"nodeType":"YulFunctionCall","src":"28601:41:8"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"28590:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28655:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"28664:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"28659:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"28722:110:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28751:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"28756:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28747:3:8"},"nodeType":"YulFunctionCall","src":"28747:11:8"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"28766:7:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"28760:5:8"},"nodeType":"YulFunctionCall","src":"28760:14:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28740:6:8"},"nodeType":"YulFunctionCall","src":"28740:35:8"},"nodeType":"YulExpressionStatement","src":"28740:35:8"},{"nodeType":"YulAssignment","src":"28792:26:8","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"28807:7:8"},{"kind":"number","nodeType":"YulLiteral","src":"28816:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28803:3:8"},"nodeType":"YulFunctionCall","src":"28803:15:8"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"28792:7:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"28689:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"28692:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28686:2:8"},"nodeType":"YulFunctionCall","src":"28686:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"28700:21:8","statements":[{"nodeType":"YulAssignment","src":"28702:17:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"28711:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"28714:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28707:3:8"},"nodeType":"YulFunctionCall","src":"28707:12:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"28702:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"28682:3:8","statements":[]},"src":"28678:154:8"},{"nodeType":"YulAssignment","src":"28845:23:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28856:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"28861:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28852:3:8"},"nodeType":"YulFunctionCall","src":"28852:16:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"28845:3:8"}]}]},"nodeType":"YulCase","src":"28534:344:8","value":{"kind":"number","nodeType":"YulLiteral","src":"28539:1:8","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"28337:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"28348:1:8","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28333:3:8"},"nodeType":"YulFunctionCall","src":"28333:17:8"},"nodeType":"YulSwitch","src":"28326:552:8"}]},"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28096:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"28103:3:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"28111:3:8","type":""}],"src":"28006:878:8"},{"body":{"nodeType":"YulBlock","src":"29025:138:8","statements":[{"nodeType":"YulAssignment","src":"29036:101:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29124:6:8"},{"name":"pos","nodeType":"YulIdentifier","src":"29133:3:8"}],"functionName":{"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"29043:80:8"},"nodeType":"YulFunctionCall","src":"29043:94:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29036:3:8"}]},{"nodeType":"YulAssignment","src":"29147:10:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"29154:3:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29147:3:8"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29004:3:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29010:6:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29021:3:8","type":""}],"src":"28890:273:8"},{"body":{"nodeType":"YulBlock","src":"29197:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29214:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29217:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29207:6:8"},"nodeType":"YulFunctionCall","src":"29207:88:8"},"nodeType":"YulExpressionStatement","src":"29207:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29311:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"29314:4:8","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29304:6:8"},"nodeType":"YulFunctionCall","src":"29304:15:8"},"nodeType":"YulExpressionStatement","src":"29304:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29335:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29338:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29328:6:8"},"nodeType":"YulFunctionCall","src":"29328:15:8"},"nodeType":"YulExpressionStatement","src":"29328:15:8"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"29169:180:8"},{"body":{"nodeType":"YulBlock","src":"29383:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29400:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29403:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29393:6:8"},"nodeType":"YulFunctionCall","src":"29393:88:8"},"nodeType":"YulExpressionStatement","src":"29393:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29497:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"29500:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29490:6:8"},"nodeType":"YulFunctionCall","src":"29490:15:8"},"nodeType":"YulExpressionStatement","src":"29490:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29521:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29524:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29514:6:8"},"nodeType":"YulFunctionCall","src":"29514:15:8"},"nodeType":"YulExpressionStatement","src":"29514:15:8"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"29355:180:8"},{"body":{"nodeType":"YulBlock","src":"29584:190:8","statements":[{"nodeType":"YulAssignment","src":"29594:33:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29621:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29603:17:8"},"nodeType":"YulFunctionCall","src":"29603:24:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"29594:5:8"}]},{"body":{"nodeType":"YulBlock","src":"29717:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29719:16:8"},"nodeType":"YulFunctionCall","src":"29719:18:8"},"nodeType":"YulExpressionStatement","src":"29719:18:8"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29642:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"29649:66:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"29639:2:8"},"nodeType":"YulFunctionCall","src":"29639:77:8"},"nodeType":"YulIf","src":"29636:103:8"},{"nodeType":"YulAssignment","src":"29748:20:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29759:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"29766:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29755:3:8"},"nodeType":"YulFunctionCall","src":"29755:13:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"29748:3:8"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29570:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"29580:3:8","type":""}],"src":"29541:233:8"},{"body":{"nodeType":"YulBlock","src":"29834:87:8","statements":[{"nodeType":"YulAssignment","src":"29844:11:8","value":{"name":"ptr","nodeType":"YulIdentifier","src":"29852:3:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"29844:4:8"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29872:1:8","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"29875:3:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29865:6:8"},"nodeType":"YulFunctionCall","src":"29865:14:8"},"nodeType":"YulExpressionStatement","src":"29865:14:8"},{"nodeType":"YulAssignment","src":"29888:26:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29906:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29909:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"29896:9:8"},"nodeType":"YulFunctionCall","src":"29896:18:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"29888:4:8"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"29821:3:8","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"29829:4:8","type":""}],"src":"29780:141:8"},{"body":{"nodeType":"YulBlock","src":"29971:49:8","statements":[{"nodeType":"YulAssignment","src":"29981:33:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29999:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"30006:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29995:3:8"},"nodeType":"YulFunctionCall","src":"29995:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"30011:2:8","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"29991:3:8"},"nodeType":"YulFunctionCall","src":"29991:23:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"29981:6:8"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29954:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"29964:6:8","type":""}],"src":"29927:93:8"},{"body":{"nodeType":"YulBlock","src":"30079:54:8","statements":[{"nodeType":"YulAssignment","src":"30089:37:8","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"30114:4:8"},{"name":"value","nodeType":"YulIdentifier","src":"30120:5:8"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"30110:3:8"},"nodeType":"YulFunctionCall","src":"30110:16:8"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"30089:8:8"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"30054:4:8","type":""},{"name":"value","nodeType":"YulTypedName","src":"30060:5:8","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"30070:8:8","type":""}],"src":"30026:107:8"},{"body":{"nodeType":"YulBlock","src":"30215:317:8","statements":[{"nodeType":"YulVariableDeclaration","src":"30225:35:8","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"30246:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"30258:1:8","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"30242:3:8"},"nodeType":"YulFunctionCall","src":"30242:18:8"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"30229:9:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"30269:109:8","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"30300:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"30311:66:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"30281:18:8"},"nodeType":"YulFunctionCall","src":"30281:97:8"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"30273:4:8","type":""}]},{"nodeType":"YulAssignment","src":"30387:51:8","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"30418:9:8"},{"name":"toInsert","nodeType":"YulIdentifier","src":"30429:8:8"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"30399:18:8"},"nodeType":"YulFunctionCall","src":"30399:39:8"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"30387:8:8"}]},{"nodeType":"YulAssignment","src":"30447:30:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30460:5:8"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"30471:4:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"30467:3:8"},"nodeType":"YulFunctionCall","src":"30467:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30456:3:8"},"nodeType":"YulFunctionCall","src":"30456:21:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"30447:5:8"}]},{"nodeType":"YulAssignment","src":"30486:40:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30499:5:8"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"30510:8:8"},{"name":"mask","nodeType":"YulIdentifier","src":"30520:4:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30506:3:8"},"nodeType":"YulFunctionCall","src":"30506:19:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"30496:2:8"},"nodeType":"YulFunctionCall","src":"30496:30:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"30486:6:8"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30176:5:8","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"30183:10:8","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"30195:8:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"30208:6:8","type":""}],"src":"30139:393:8"},{"body":{"nodeType":"YulBlock","src":"30570:28:8","statements":[{"nodeType":"YulAssignment","src":"30580:12:8","value":{"name":"value","nodeType":"YulIdentifier","src":"30587:5:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"30580:3:8"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30556:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"30566:3:8","type":""}],"src":"30538:60:8"},{"body":{"nodeType":"YulBlock","src":"30664:82:8","statements":[{"nodeType":"YulAssignment","src":"30674:66:8","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30732:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30714:17:8"},"nodeType":"YulFunctionCall","src":"30714:24:8"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"30705:8:8"},"nodeType":"YulFunctionCall","src":"30705:34:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30687:17:8"},"nodeType":"YulFunctionCall","src":"30687:53:8"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"30674:9:8"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30644:5:8","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"30654:9:8","type":""}],"src":"30604:142:8"},{"body":{"nodeType":"YulBlock","src":"30799:28:8","statements":[{"nodeType":"YulAssignment","src":"30809:12:8","value":{"name":"value","nodeType":"YulIdentifier","src":"30816:5:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"30809:3:8"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30785:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"30795:3:8","type":""}],"src":"30752:75:8"},{"body":{"nodeType":"YulBlock","src":"30909:193:8","statements":[{"nodeType":"YulVariableDeclaration","src":"30919:63:8","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"30974:7:8"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"30943:30:8"},"nodeType":"YulFunctionCall","src":"30943:39:8"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"30923:16:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"30998:4:8"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31038:4:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"31032:5:8"},"nodeType":"YulFunctionCall","src":"31032:11:8"},{"name":"offset","nodeType":"YulIdentifier","src":"31045:6:8"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"31077:16:8"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"31053:23:8"},"nodeType":"YulFunctionCall","src":"31053:41:8"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"31004:27:8"},"nodeType":"YulFunctionCall","src":"31004:91:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"30991:6:8"},"nodeType":"YulFunctionCall","src":"30991:105:8"},"nodeType":"YulExpressionStatement","src":"30991:105:8"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"30886:4:8","type":""},{"name":"offset","nodeType":"YulTypedName","src":"30892:6:8","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"30900:7:8","type":""}],"src":"30833:269:8"},{"body":{"nodeType":"YulBlock","src":"31157:24:8","statements":[{"nodeType":"YulAssignment","src":"31167:8:8","value":{"kind":"number","nodeType":"YulLiteral","src":"31174:1:8","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"31167:3:8"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"31153:3:8","type":""}],"src":"31108:73:8"},{"body":{"nodeType":"YulBlock","src":"31240:136:8","statements":[{"nodeType":"YulVariableDeclaration","src":"31250:46:8","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"31264:30:8"},"nodeType":"YulFunctionCall","src":"31264:32:8"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"31254:6:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31349:4:8"},{"name":"offset","nodeType":"YulIdentifier","src":"31355:6:8"},{"name":"zero_0","nodeType":"YulIdentifier","src":"31363:6:8"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"31305:43:8"},"nodeType":"YulFunctionCall","src":"31305:65:8"},"nodeType":"YulExpressionStatement","src":"31305:65:8"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"31226:4:8","type":""},{"name":"offset","nodeType":"YulTypedName","src":"31232:6:8","type":""}],"src":"31187:189:8"},{"body":{"nodeType":"YulBlock","src":"31432:136:8","statements":[{"body":{"nodeType":"YulBlock","src":"31499:63:8","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"31543:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"31550:1:8","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"31513:29:8"},"nodeType":"YulFunctionCall","src":"31513:39:8"},"nodeType":"YulExpressionStatement","src":"31513:39:8"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"31452:5:8"},{"name":"end","nodeType":"YulIdentifier","src":"31459:3:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31449:2:8"},"nodeType":"YulFunctionCall","src":"31449:14:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"31464:26:8","statements":[{"nodeType":"YulAssignment","src":"31466:22:8","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"31479:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"31486:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31475:3:8"},"nodeType":"YulFunctionCall","src":"31475:13:8"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"31466:5:8"}]}]},"pre":{"nodeType":"YulBlock","src":"31446:2:8","statements":[]},"src":"31442:120:8"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"31420:5:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"31427:3:8","type":""}],"src":"31382:186:8"},{"body":{"nodeType":"YulBlock","src":"31653:464:8","statements":[{"body":{"nodeType":"YulBlock","src":"31679:431:8","statements":[{"nodeType":"YulVariableDeclaration","src":"31693:54:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"31741:5:8"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"31709:31:8"},"nodeType":"YulFunctionCall","src":"31709:38:8"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"31697:8:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31760:63:8","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"31783:8:8"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"31811:10:8"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"31793:17:8"},"nodeType":"YulFunctionCall","src":"31793:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31779:3:8"},"nodeType":"YulFunctionCall","src":"31779:44:8"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"31764:11:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"31980:27:8","statements":[{"nodeType":"YulAssignment","src":"31982:23:8","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"31997:8:8"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"31982:11:8"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"31964:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"31976:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31961:2:8"},"nodeType":"YulFunctionCall","src":"31961:18:8"},"nodeType":"YulIf","src":"31958:49:8"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"32049:11:8"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"32066:8:8"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"32094:3:8"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"32076:17:8"},"nodeType":"YulFunctionCall","src":"32076:22:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32062:3:8"},"nodeType":"YulFunctionCall","src":"32062:37:8"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"32020:28:8"},"nodeType":"YulFunctionCall","src":"32020:80:8"},"nodeType":"YulExpressionStatement","src":"32020:80:8"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"31670:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"31675:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31667:2:8"},"nodeType":"YulFunctionCall","src":"31667:11:8"},"nodeType":"YulIf","src":"31664:446:8"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"31629:5:8","type":""},{"name":"len","nodeType":"YulTypedName","src":"31636:3:8","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"31641:10:8","type":""}],"src":"31574:543:8"},{"body":{"nodeType":"YulBlock","src":"32186:54:8","statements":[{"nodeType":"YulAssignment","src":"32196:37:8","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"32221:4:8"},{"name":"value","nodeType":"YulIdentifier","src":"32227:5:8"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"32217:3:8"},"nodeType":"YulFunctionCall","src":"32217:16:8"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"32196:8:8"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"32161:4:8","type":""},{"name":"value","nodeType":"YulTypedName","src":"32167:5:8","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"32177:8:8","type":""}],"src":"32123:117:8"},{"body":{"nodeType":"YulBlock","src":"32297:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"32307:68:8","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32356:1:8","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"32359:5:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"32352:3:8"},"nodeType":"YulFunctionCall","src":"32352:13:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32371:1:8","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"32367:3:8"},"nodeType":"YulFunctionCall","src":"32367:6:8"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"32323:28:8"},"nodeType":"YulFunctionCall","src":"32323:51:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"32319:3:8"},"nodeType":"YulFunctionCall","src":"32319:56:8"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"32311:4:8","type":""}]},{"nodeType":"YulAssignment","src":"32384:25:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"32398:4:8"},{"name":"mask","nodeType":"YulIdentifier","src":"32404:4:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32394:3:8"},"nodeType":"YulFunctionCall","src":"32394:15:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"32384:6:8"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"32274:4:8","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"32280:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"32290:6:8","type":""}],"src":"32246:169:8"},{"body":{"nodeType":"YulBlock","src":"32501:214:8","statements":[{"nodeType":"YulAssignment","src":"32634:37:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"32661:4:8"},{"name":"len","nodeType":"YulIdentifier","src":"32667:3:8"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"32642:18:8"},"nodeType":"YulFunctionCall","src":"32642:29:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"32634:4:8"}]},{"nodeType":"YulAssignment","src":"32680:29:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"32691:4:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32701:1:8","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"32704:3:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"32697:3:8"},"nodeType":"YulFunctionCall","src":"32697:11:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"32688:2:8"},"nodeType":"YulFunctionCall","src":"32688:21:8"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"32680:4:8"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"32482:4:8","type":""},{"name":"len","nodeType":"YulTypedName","src":"32488:3:8","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"32496:4:8","type":""}],"src":"32420:295:8"},{"body":{"nodeType":"YulBlock","src":"32812:1303:8","statements":[{"nodeType":"YulVariableDeclaration","src":"32823:51:8","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"32870:3:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"32837:32:8"},"nodeType":"YulFunctionCall","src":"32837:37:8"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"32827:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"32959:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"32961:16:8"},"nodeType":"YulFunctionCall","src":"32961:18:8"},"nodeType":"YulExpressionStatement","src":"32961:18:8"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"32931:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"32939:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32928:2:8"},"nodeType":"YulFunctionCall","src":"32928:30:8"},"nodeType":"YulIf","src":"32925:56:8"},{"nodeType":"YulVariableDeclaration","src":"32991:52:8","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"33037:4:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"33031:5:8"},"nodeType":"YulFunctionCall","src":"33031:11:8"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"33005:25:8"},"nodeType":"YulFunctionCall","src":"33005:38:8"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"32995:6:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"33136:4:8"},{"name":"oldLen","nodeType":"YulIdentifier","src":"33142:6:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"33150:6:8"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"33090:45:8"},"nodeType":"YulFunctionCall","src":"33090:67:8"},"nodeType":"YulExpressionStatement","src":"33090:67:8"},{"nodeType":"YulVariableDeclaration","src":"33167:18:8","value":{"kind":"number","nodeType":"YulLiteral","src":"33184:1:8","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"33171:9:8","type":""}]},{"nodeType":"YulAssignment","src":"33195:17:8","value":{"kind":"number","nodeType":"YulLiteral","src":"33208:4:8","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"33195:9:8"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"33259:611:8","statements":[{"nodeType":"YulVariableDeclaration","src":"33273:37:8","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"33292:6:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33304:4:8","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"33300:3:8"},"nodeType":"YulFunctionCall","src":"33300:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33288:3:8"},"nodeType":"YulFunctionCall","src":"33288:22:8"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"33277:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"33324:51:8","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"33370:4:8"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"33338:31:8"},"nodeType":"YulFunctionCall","src":"33338:37:8"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"33328:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"33388:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"33397:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"33392:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"33456:163:8","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"33481:6:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"33499:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"33504:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33495:3:8"},"nodeType":"YulFunctionCall","src":"33495:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33489:5:8"},"nodeType":"YulFunctionCall","src":"33489:26:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"33474:6:8"},"nodeType":"YulFunctionCall","src":"33474:42:8"},"nodeType":"YulExpressionStatement","src":"33474:42:8"},{"nodeType":"YulAssignment","src":"33533:24:8","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"33547:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"33555:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33543:3:8"},"nodeType":"YulFunctionCall","src":"33543:14:8"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"33533:6:8"}]},{"nodeType":"YulAssignment","src":"33574:31:8","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"33591:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"33602:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33587:3:8"},"nodeType":"YulFunctionCall","src":"33587:18:8"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"33574:9:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"33422:1:8"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"33425:7:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33419:2:8"},"nodeType":"YulFunctionCall","src":"33419:14:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"33434:21:8","statements":[{"nodeType":"YulAssignment","src":"33436:17:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"33445:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"33448:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33441:3:8"},"nodeType":"YulFunctionCall","src":"33441:12:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"33436:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"33415:3:8","statements":[]},"src":"33411:208:8"},{"body":{"nodeType":"YulBlock","src":"33655:156:8","statements":[{"nodeType":"YulVariableDeclaration","src":"33673:43:8","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"33700:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"33705:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33696:3:8"},"nodeType":"YulFunctionCall","src":"33696:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33690:5:8"},"nodeType":"YulFunctionCall","src":"33690:26:8"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"33677:9:8","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"33740:6:8"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"33767:9:8"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"33782:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"33790:4:8","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33778:3:8"},"nodeType":"YulFunctionCall","src":"33778:17:8"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"33748:18:8"},"nodeType":"YulFunctionCall","src":"33748:48:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"33733:6:8"},"nodeType":"YulFunctionCall","src":"33733:64:8"},"nodeType":"YulExpressionStatement","src":"33733:64:8"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"33638:7:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"33647:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33635:2:8"},"nodeType":"YulFunctionCall","src":"33635:19:8"},"nodeType":"YulIf","src":"33632:179:8"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"33831:4:8"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"33845:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"33853:1:8","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"33841:3:8"},"nodeType":"YulFunctionCall","src":"33841:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"33857:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33837:3:8"},"nodeType":"YulFunctionCall","src":"33837:22:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"33824:6:8"},"nodeType":"YulFunctionCall","src":"33824:36:8"},"nodeType":"YulExpressionStatement","src":"33824:36:8"}]},"nodeType":"YulCase","src":"33252:618:8","value":{"kind":"number","nodeType":"YulLiteral","src":"33257:1:8","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"33887:222:8","statements":[{"nodeType":"YulVariableDeclaration","src":"33901:14:8","value":{"kind":"number","nodeType":"YulLiteral","src":"33914:1:8","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"33905:5:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"33938:67:8","statements":[{"nodeType":"YulAssignment","src":"33956:35:8","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"33975:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"33980:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33971:3:8"},"nodeType":"YulFunctionCall","src":"33971:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33965:5:8"},"nodeType":"YulFunctionCall","src":"33965:26:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"33956:5:8"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"33931:6:8"},"nodeType":"YulIf","src":"33928:77:8"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34025:4:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34084:5:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"34091:6:8"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"34031:52:8"},"nodeType":"YulFunctionCall","src":"34031:67:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"34018:6:8"},"nodeType":"YulFunctionCall","src":"34018:81:8"},"nodeType":"YulExpressionStatement","src":"34018:81:8"}]},"nodeType":"YulCase","src":"33879:230:8","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"33232:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"33240:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33229:2:8"},"nodeType":"YulFunctionCall","src":"33229:14:8"},"nodeType":"YulSwitch","src":"33222:887:8"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"32801:4:8","type":""},{"name":"src","nodeType":"YulTypedName","src":"32807:3:8","type":""}],"src":"32720:1395:8"},{"body":{"nodeType":"YulBlock","src":"34165:147:8","statements":[{"nodeType":"YulAssignment","src":"34175:25:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34198:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34180:17:8"},"nodeType":"YulFunctionCall","src":"34180:20:8"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"34175:1:8"}]},{"nodeType":"YulAssignment","src":"34209:25:8","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34232:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34214:17:8"},"nodeType":"YulFunctionCall","src":"34214:20:8"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"34209:1:8"}]},{"nodeType":"YulAssignment","src":"34243:16:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34254:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"34257:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34250:3:8"},"nodeType":"YulFunctionCall","src":"34250:9:8"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"34243:3:8"}]},{"body":{"nodeType":"YulBlock","src":"34283:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"34285:16:8"},"nodeType":"YulFunctionCall","src":"34285:18:8"},"nodeType":"YulExpressionStatement","src":"34285:18:8"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34275:1:8"},{"name":"sum","nodeType":"YulIdentifier","src":"34278:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34272:2:8"},"nodeType":"YulFunctionCall","src":"34272:10:8"},"nodeType":"YulIf","src":"34269:36:8"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"34152:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"34155:1:8","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"34161:3:8","type":""}],"src":"34121:191:8"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__to_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string[]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[]\n    function abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_bytes_storage_ptr(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_bytes_storage_ptr(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x327 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87633EB2 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xC04E7430 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xCD230809 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD9FC52DB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD9FC52DB EQ PUSH2 0xB01 JUMPI DUP1 PUSH4 0xE32ACC1A EQ PUSH2 0xB31 JUMPI DUP1 PUSH4 0xEC245802 EQ PUSH2 0xB61 JUMPI DUP1 PUSH4 0xFF4A37EF EQ PUSH2 0xB7F JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0xCD230809 EQ PUSH2 0xA83 JUMPI DUP1 PUSH4 0xD3791B20 EQ PUSH2 0xAB3 JUMPI DUP1 PUSH4 0xD4EA3A36 EQ PUSH2 0xAD1 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0xC6182B34 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xC6182B34 EQ PUSH2 0x9E6 JUMPI DUP1 PUSH4 0xC7AF4EE5 EQ PUSH2 0xA02 JUMPI DUP1 PUSH4 0xCA013F17 EQ PUSH2 0xA32 JUMPI DUP1 PUSH4 0xCACE8D46 EQ PUSH2 0xA50 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0xC04E7430 EQ PUSH2 0x990 JUMPI DUP1 PUSH4 0xC04FE978 EQ PUSH2 0x9AC JUMPI DUP1 PUSH4 0xC29595C5 EQ PUSH2 0x9CA JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x97EE7606 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0xAA2BF5D3 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0xAA2BF5D3 EQ PUSH2 0x905 JUMPI DUP1 PUSH4 0xAA4CDF2A EQ PUSH2 0x923 JUMPI DUP1 PUSH4 0xB16060A6 EQ PUSH2 0x953 JUMPI DUP1 PUSH4 0xB527D45E EQ PUSH2 0x95D JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x97EE7606 EQ PUSH2 0x87F JUMPI DUP1 PUSH4 0xA1CA9178 EQ PUSH2 0x89D JUMPI DUP1 PUSH4 0xA428A47F EQ PUSH2 0x8CD JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x87633EB2 EQ PUSH2 0x7AD JUMPI DUP1 PUSH4 0x881DE858 EQ PUSH2 0x7C9 JUMPI DUP1 PUSH4 0x8D3D2595 EQ PUSH2 0x7E5 JUMPI DUP1 PUSH4 0x8E6280E6 EQ PUSH2 0x815 JUMPI DUP1 PUSH4 0x9077007D EQ PUSH2 0x831 JUMPI DUP1 PUSH4 0x934C5F00 EQ PUSH2 0x84F JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x4A797BD7 GT PUSH2 0x277 JUMPI DUP1 PUSH4 0x7BBD582D GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x803F5B9F GT PUSH2 0x20A JUMPI DUP1 PUSH4 0x803F5B9F EQ PUSH2 0x6ED JUMPI DUP1 PUSH4 0x812FAE1F EQ PUSH2 0x71D JUMPI DUP1 PUSH4 0x8413543E EQ PUSH2 0x74D JUMPI DUP1 PUSH4 0x86FFA45B EQ PUSH2 0x77D JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x7BBD582D EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0x7F2035D4 EQ PUSH2 0x68A JUMPI DUP1 PUSH4 0x7FC543EC EQ PUSH2 0x6BB JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x4A797BD7 EQ PUSH2 0x55E JUMPI DUP1 PUSH4 0x4BE7ADB5 EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0x4FF77421 EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0x5D907DA1 EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0x6ECDA4EE EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0x787F19C7 EQ PUSH2 0x63C JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x1E9AC9F5 GT PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x29B56F60 GT PUSH2 0x2BE JUMPI DUP1 PUSH4 0x29B56F60 EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x330B8F26 EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0x3F87A2F4 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x468D0C80 EQ PUSH2 0x52C JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x1E9AC9F5 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x20959ED0 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x27A568B9 EQ PUSH2 0x478 JUMPI PUSH2 0x327 JUMP JUMPDEST DUP1 PUSH4 0x377D44A EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x1171B621 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x131D44F2 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x13BF4CEA EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x1B592AEB EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x1BA44C4C EQ PUSH2 0x3E6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x2F59 JUMP JUMPDEST PUSH2 0xBB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x30E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x364 PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x30E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B2 PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x400 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0xEBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3192 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x432 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x2F59 JUMP JUMPDEST PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x492 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B2 PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0x30E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x126C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP3 SWAP2 SWAP1 PUSH2 0x325F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x513 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x1290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x523 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x546 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x541 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x555 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x566 PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x596 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x3312 JUMP JUMPDEST PUSH2 0x1400 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A3 SWAP2 SWAP1 PUSH2 0x3410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0x3432 JUMP JUMPDEST PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x15AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x603 SWAP2 SWAP1 PUSH2 0x3485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x626 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x1654 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x633 SWAP2 SWAP1 PUSH2 0x3485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x656 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x34A7 JUMP JUMPDEST PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x663 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x674 PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x681 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69F SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x17CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B2 SWAP3 SWAP2 SWAP1 PUSH2 0x3546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D0 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x18FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3192 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x707 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x702 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x1929 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x3410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x737 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x732 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x744 SWAP2 SWAP1 PUSH2 0x3410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x767 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x762 SWAP2 SWAP1 PUSH2 0x357D JUMP JUMPDEST PUSH2 0x1AEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x774 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x797 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x792 SWAP2 SWAP1 PUSH2 0x3608 JUMP JUMPDEST PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A4 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C2 SWAP2 SWAP1 PUSH2 0x36C3 JUMP JUMPDEST PUSH2 0x1CBD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7DE SWAP2 SWAP1 PUSH2 0x371F JUMP JUMPDEST PUSH2 0x1CE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7FA SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x1D2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80C SWAP2 SWAP1 PUSH2 0x3485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82A SWAP2 SWAP1 PUSH2 0x3432 JUMP JUMPDEST PUSH2 0x1DD7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x839 PUSH2 0x1ECB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x846 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x869 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x864 SWAP2 SWAP1 PUSH2 0x37AA JUMP JUMPDEST PUSH2 0x1ED1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x876 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x887 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x894 SWAP2 SWAP1 PUSH2 0x30E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B2 SWAP2 SWAP1 PUSH2 0x2F59 JUMP JUMPDEST PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x2111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8FC SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90D PUSH2 0x21C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91A SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x938 SWAP2 SWAP1 PUSH2 0x2F59 JUMP JUMPDEST PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94A SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95B PUSH2 0x2254 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x977 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x972 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x2506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x987 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A5 SWAP2 SWAP1 PUSH2 0x36C3 JUMP JUMPDEST PUSH2 0x2646 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9B4 PUSH2 0x266E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C1 SWAP2 SWAP1 PUSH2 0x30E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9DF SWAP2 SWAP1 PUSH2 0x36C3 JUMP JUMPDEST PUSH2 0x27A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA00 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9FB SWAP2 SWAP1 PUSH2 0x3312 JUMP JUMPDEST PUSH2 0x27D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA1C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA17 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA29 SWAP2 SWAP1 PUSH2 0x3928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA3A PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA47 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x28B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA7A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA9D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA98 SWAP2 SWAP1 PUSH2 0x36C3 JUMP JUMPDEST PUSH2 0x2971 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAAA SWAP2 SWAP1 PUSH2 0x3928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xABB PUSH2 0x2A02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC8 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE6 SWAP2 SWAP1 PUSH2 0x3A29 JUMP JUMPDEST PUSH2 0x2A08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF8 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB16 SWAP2 SWAP1 PUSH2 0x3AC8 JUMP JUMPDEST PUSH2 0x2B1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB28 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB4B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB46 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x2BE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB58 SWAP2 SWAP1 PUSH2 0x3485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB69 PUSH2 0x2C8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB76 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB94 SWAP2 SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH2 0x2C90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBA8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBD1 JUMPI PUSH2 0xBD0 PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC04 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xBEF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xD30 JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0xC44 SWAP2 SWAP1 PUSH2 0x3C8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xD1D JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xC72 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC9E SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCEB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCC0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCCE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD03 JUMPI PUSH2 0xD02 PUSH2 0x3CA3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xD19 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xD28 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC0F JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD61 JUMPI PUSH2 0xD60 PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD94 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD7F JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xEA5 JUMPI DUP5 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0xE84 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xDE7 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE13 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE60 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE35 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE60 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE43 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE78 JUMPI PUSH2 0xE77 PUSH2 0x3CA3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0xE8F SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0xE9D SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD9F JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xF4C JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0xF23 SWAP2 SWAP1 PUSH2 0x3C8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xF39 JUMPI DUP1 SWAP2 POP POP PUSH2 0xF52 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xF44 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEEE JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0xF92 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFBE SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x100B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFE0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x100B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFEE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1020 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x104C SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1099 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x106E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1099 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x107C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x10AE SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10DA SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1127 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10FC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1127 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x110A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1151 JUMPI PUSH2 0x1150 PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1184 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x116F JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1264 JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x11B5 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11E1 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x122E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1203 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x122E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1211 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1246 JUMPI PUSH2 0x1245 PUSH2 0x3CA3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x125C SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x118A JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x12C5 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12F1 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x133E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1313 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x133E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1321 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1371 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x139D SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1420 JUMPI PUSH2 0x141F PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x144E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x14FA JUMPI DUP6 PUSH1 0x12 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x149D JUMPI POP DUP5 PUSH1 0x12 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x12 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x14CC JUMPI PUSH2 0x14CB PUSH2 0x3CA3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP2 DUP1 PUSH2 0x14E4 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x14F2 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1459 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x16 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x12 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x159B SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x6 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x15CF SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15FB SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1648 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x161D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1648 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x162B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x1673 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x169F SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x16 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x13 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1786 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x179C SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x17B3 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x7 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x17EE SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x181A SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1867 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x183C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1867 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x184A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x187C SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18A8 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1949 JUMPI PUSH2 0x1948 PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1977 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1A01 JUMPI DUP5 PUSH1 0x13 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x19EE JUMPI PUSH1 0x13 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x19D3 JUMPI PUSH2 0x19D2 PUSH2 0x3CA3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x19EA SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x19F9 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1982 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x9 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A2C JUMPI PUSH2 0x1A2B PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A5A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1AE4 JUMPI DUP5 PUSH1 0x15 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1AD1 JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1AB6 JUMPI PUSH2 0x1AB5 PUSH2 0x3CA3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1ACD SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1ADC SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A65 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1B30 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1B46 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x16 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1B8C SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x2 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46616C7365000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0xA PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1C18 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1C2E SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1C44 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP SWAP1 POP POP DUP3 PUSH1 0xB PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x1C69 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x16 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1CAB SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x1CDD SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1D05 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP DUP1 PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1D29 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1D52 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D7E SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DCB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1DA0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DCB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1DAE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x16 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E2C SWAP2 SWAP1 PUSH2 0x3FC7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E56 SWAP2 SWAP1 PUSH2 0x3FC7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x10 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1EC1 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x14 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1F3C SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1F53 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x8 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F85 JUMPI PUSH2 0x1F84 PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FB8 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1FA3 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2098 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1FE9 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2015 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2062 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2037 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2062 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2045 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x207A JUMPI PUSH2 0x2079 PUSH2 0x3CA3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2090 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FBE JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2106 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x20DD SWAP2 SWAP1 PUSH2 0x3C8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x20F3 JUMPI DUP1 SWAP2 POP POP PUSH2 0x210C JUMP JUMPDEST DUP1 DUP1 PUSH2 0x20FE SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20A8 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2249 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x220A SWAP2 SWAP1 PUSH2 0x3C8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x2236 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP POP PUSH2 0x224F JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2241 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x21D5 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x22BA JUMPI PUSH1 0xA PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x2285 SWAP2 SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2295 SWAP2 SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x22A5 SWAP2 SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x22B2 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2257 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2311 JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x22EC SWAP2 SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x22FC SWAP2 SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2309 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x22BE JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2368 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x234B SWAP2 SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x2360 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2315 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x23BF JUMPI PUSH1 0x11 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x23AA SWAP2 SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x23B7 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x236C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2426 JUMPI PUSH1 0x13 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2401 SWAP2 SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x2411 SWAP2 SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x241E SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x23C3 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x2485 JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x2470 SWAP2 SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x247D SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x242A JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x24D4 JUMPI PUSH1 0x12 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x24CC SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2489 JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2535 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2561 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x25AE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2583 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x25AE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2591 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x25C3 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25EF SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x263C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2611 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x263C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x261F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2669 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x268D JUMPI PUSH2 0x268C PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x26C0 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x26AB JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x27A0 JUMPI PUSH1 0xA PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x26F1 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x271D SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x276A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x273F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x276A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x274D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2782 JUMPI PUSH2 0x2781 PUSH2 0x3CA3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2798 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26C6 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x27CB SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x16 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2853 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x28A8 JUMPI DUP3 PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x2895 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x28AE JUMP JUMPDEST DUP1 DUP1 PUSH2 0x28A0 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2864 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x28EE SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x291A SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2967 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x293C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2967 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x294A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x29F7 JUMPI DUP5 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x29DA JUMPI POP PUSH1 0x14 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x40 MLOAD PUSH2 0x29C8 SWAP2 SWAP1 PUSH2 0x3C8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST ISZERO PUSH2 0x29E4 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x29EF SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x297B JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2A5A SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x16 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2AAA SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2B0F JUMPI PUSH2 0x2AE4 PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2AD7 JUMPI PUSH2 0x2AD6 PUSH2 0x3CA3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2D42 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2AF7 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0x2B07 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2AB2 JUMP JUMPDEST POP PUSH1 0x3 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x16 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x15 PUSH1 0x0 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2BB9 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x9 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2BD0 SWAP1 PUSH2 0x3D01 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x9 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2C05 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C31 SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C7E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C53 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C7E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C61 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2CBF SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CEB SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D38 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D0D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D38 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D1B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x11 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2D99 SWAP2 SWAP1 PUSH2 0x3EF5 JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2DAE SWAP1 PUSH2 0x3BB8 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2DC0 JUMPI POP PUSH2 0x2DDF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2DDE SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2DFB JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x2DE3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2E66 DUP3 PUSH2 0x2E1D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2E85 JUMPI PUSH2 0x2E84 PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E98 PUSH2 0x2DFF JUMP JUMPDEST SWAP1 POP PUSH2 0x2EA4 DUP3 DUP3 PUSH2 0x2E5D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2EC4 JUMPI PUSH2 0x2EC3 PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH2 0x2ECD DUP3 PUSH2 0x2E1D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EFC PUSH2 0x2EF7 DUP5 PUSH2 0x2EA9 JUMP JUMPDEST PUSH2 0x2E8E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2F18 JUMPI PUSH2 0x2F17 PUSH2 0x2E18 JUMP JUMPDEST JUMPDEST PUSH2 0x2F23 DUP5 DUP3 DUP6 PUSH2 0x2EDA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2F40 JUMPI PUSH2 0x2F3F PUSH2 0x2E13 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2F50 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2EE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F6F JUMPI PUSH2 0x2F6E PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F8D JUMPI PUSH2 0x2F8C PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x2F99 DUP5 DUP3 DUP6 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3008 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FED JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x301F DUP3 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x3029 DUP2 DUP6 PUSH2 0x2FD9 JUMP JUMPDEST SWAP4 POP PUSH2 0x3039 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x3042 DUP2 PUSH2 0x2E1D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3059 DUP4 DUP4 PUSH2 0x3014 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3079 DUP3 PUSH2 0x2FA2 JUMP JUMPDEST PUSH2 0x3083 DUP2 DUP6 PUSH2 0x2FAD JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3095 DUP6 PUSH2 0x2FBE JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x30D1 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x30B2 DUP6 DUP3 PUSH2 0x304D JUMP JUMPDEST SWAP5 POP PUSH2 0x30BD DUP4 PUSH2 0x3061 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3099 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30FD DUP2 DUP5 PUSH2 0x306E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3118 DUP2 PUSH2 0x3105 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3133 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x310F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3142 DUP2 PUSH2 0x3105 JUMP JUMPDEST DUP2 EQ PUSH2 0x314D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x315F DUP2 PUSH2 0x3139 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x317B JUMPI PUSH2 0x317A PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3189 DUP5 DUP3 DUP6 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x31A7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x310F JUMP JUMPDEST PUSH2 0x31B4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x310F JUMP JUMPDEST PUSH2 0x31C1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x310F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31E5 DUP3 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x31EF DUP2 DUP6 PUSH2 0x31C9 JUMP JUMPDEST SWAP4 POP PUSH2 0x31FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x3208 DUP2 PUSH2 0x2E1D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x322D DUP2 DUP7 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3241 DUP2 DUP6 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3255 DUP2 DUP5 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3274 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x310F JUMP JUMPDEST PUSH2 0x3281 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x310F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x329D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x310F JUMP JUMPDEST PUSH2 0x32AA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x310F JUMP JUMPDEST PUSH2 0x32B7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x310F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x32C9 DUP2 DUP5 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x32E9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x310F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x32FB DUP2 DUP6 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP PUSH2 0x330A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x310F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3329 JUMPI PUSH2 0x3328 PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3337 DUP6 DUP3 DUP7 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3348 DUP6 DUP3 DUP7 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3387 DUP2 PUSH2 0x3105 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3399 DUP4 DUP4 PUSH2 0x337E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33BD DUP3 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0x33C7 DUP2 DUP6 PUSH2 0x335D JUMP JUMPDEST SWAP4 POP PUSH2 0x33D2 DUP4 PUSH2 0x336E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3403 JUMPI DUP2 MLOAD PUSH2 0x33EA DUP9 DUP3 PUSH2 0x338D JUMP JUMPDEST SWAP8 POP PUSH2 0x33F5 DUP4 PUSH2 0x33A5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x33D6 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x342A DUP2 DUP5 PUSH2 0x33B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x344B JUMPI PUSH2 0x344A PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3459 DUP7 DUP3 DUP8 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x346A DUP7 DUP3 DUP8 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x347B DUP7 DUP3 DUP8 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x349F DUP2 DUP5 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x34C1 JUMPI PUSH2 0x34C0 PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34CF DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x34F0 JUMPI PUSH2 0x34EF PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x34FC DUP8 DUP3 DUP9 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x351D JUMPI PUSH2 0x351C PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x3529 DUP8 DUP3 DUP9 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x353A DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3560 DUP2 DUP6 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3574 DUP2 DUP5 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3596 JUMPI PUSH2 0x3595 PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35B4 JUMPI PUSH2 0x35B3 PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x35C0 DUP7 DUP3 DUP8 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35E1 JUMPI PUSH2 0x35E0 PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x35ED DUP7 DUP3 DUP8 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x35FE DUP7 DUP3 DUP8 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3622 JUMPI PUSH2 0x3621 PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3640 JUMPI PUSH2 0x363F PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x364C DUP8 DUP3 DUP9 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x366D JUMPI PUSH2 0x366C PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x3679 DUP8 DUP3 DUP9 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x369A JUMPI PUSH2 0x3699 PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x36A6 DUP8 DUP3 DUP9 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x36B7 DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36DA JUMPI PUSH2 0x36D9 PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36E8 DUP6 DUP3 DUP7 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3709 JUMPI PUSH2 0x3708 PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x3715 DUP6 DUP3 DUP7 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3738 JUMPI PUSH2 0x3737 PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3746 DUP7 DUP3 DUP8 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3767 JUMPI PUSH2 0x3766 PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x3773 DUP7 DUP3 DUP8 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3794 JUMPI PUSH2 0x3793 PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x37A0 DUP7 DUP3 DUP8 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x37C4 JUMPI PUSH2 0x37C3 PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37D2 DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x37E3 DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x37F4 DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3815 JUMPI PUSH2 0x3814 PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x3821 DUP8 DUP3 DUP9 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3842 DUP2 PUSH2 0x382D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x385E PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x310F JUMP JUMPDEST PUSH2 0x386B PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x3839 JUMP JUMPDEST PUSH2 0x3878 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x3839 JUMP JUMPDEST PUSH2 0x3885 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x3839 JUMP JUMPDEST PUSH2 0x3892 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x3839 JUMP JUMPDEST PUSH2 0x389F PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x3839 JUMP JUMPDEST PUSH2 0x38AC PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x3839 JUMP JUMPDEST PUSH2 0x38B9 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x3839 JUMP JUMPDEST PUSH2 0x38C7 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x3839 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x38EA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x310F JUMP JUMPDEST PUSH2 0x38F7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x310F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3909 DUP2 DUP6 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x391D DUP2 DUP5 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x393D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3839 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x395E JUMPI PUSH2 0x395D PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3987 PUSH2 0x3982 DUP5 PUSH2 0x3943 JUMP JUMPDEST PUSH2 0x2E8E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x39AA JUMPI PUSH2 0x39A9 PUSH2 0x396F JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39F1 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39CF JUMPI PUSH2 0x39CE PUSH2 0x2E13 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x39DC DUP10 DUP3 PUSH2 0x2F2B JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39AC JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A10 JUMPI PUSH2 0x3A0F PUSH2 0x2E13 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3A20 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3974 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3A43 JUMPI PUSH2 0x3A42 PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A61 JUMPI PUSH2 0x3A60 PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x3A6D DUP8 DUP3 DUP9 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3A7E DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A9F JUMPI PUSH2 0x3A9E PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x3AAB DUP8 DUP3 DUP9 ADD PUSH2 0x39FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3ABC DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3AE2 JUMPI PUSH2 0x3AE1 PUSH2 0x2E09 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3AF0 DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B11 JUMPI PUSH2 0x3B10 PUSH2 0x2E0E JUMP JUMPDEST JUMPDEST PUSH2 0x3B1D DUP8 DUP3 DUP9 ADD PUSH2 0x2F2B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3B2E DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3B3F DUP8 DUP3 DUP9 ADD PUSH2 0x3150 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3B60 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x310F JUMP JUMPDEST PUSH2 0x3B6D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x310F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3B7F DUP2 DUP5 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3BD0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3BE3 JUMPI PUSH2 0x3BE2 PUSH2 0x3B89 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3C16 DUP2 PUSH2 0x3BB8 JUMP JUMPDEST PUSH2 0x3C20 DUP2 DUP7 PUSH2 0x3BE9 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x3C3B JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3C50 JUMPI PUSH2 0x3C83 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x3C83 JUMP JUMPDEST PUSH2 0x3C59 DUP6 PUSH2 0x3BF4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C7B JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3C5C JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C98 DUP3 DUP5 PUSH2 0x3C09 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3D0C DUP3 PUSH2 0x3105 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3D3E JUMPI PUSH2 0x3D3D PUSH2 0x3CD2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3DAB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3D6E JUMP JUMPDEST PUSH2 0x3DB5 DUP7 DUP4 PUSH2 0x3D6E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DF2 PUSH2 0x3DED PUSH2 0x3DE8 DUP5 PUSH2 0x3105 JUMP JUMPDEST PUSH2 0x3DCD JUMP JUMPDEST PUSH2 0x3105 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E0C DUP4 PUSH2 0x3DD7 JUMP JUMPDEST PUSH2 0x3E20 PUSH2 0x3E18 DUP3 PUSH2 0x3DF9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3D7B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3E35 PUSH2 0x3E28 JUMP JUMPDEST PUSH2 0x3E40 DUP2 DUP5 DUP5 PUSH2 0x3E03 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3E64 JUMPI PUSH2 0x3E59 PUSH1 0x0 DUP3 PUSH2 0x3E2D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3E46 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3EA9 JUMPI PUSH2 0x3E7A DUP2 PUSH2 0x3D49 JUMP JUMPDEST PUSH2 0x3E83 DUP5 PUSH2 0x3D5E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3E92 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3EA6 PUSH2 0x3E9E DUP6 PUSH2 0x3D5E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3E45 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ECC PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3EAE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EE5 DUP4 DUP4 PUSH2 0x3EBB JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3EFE DUP3 PUSH2 0x2FCE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F17 JUMPI PUSH2 0x3F16 PUSH2 0x2E2E JUMP JUMPDEST JUMPDEST PUSH2 0x3F21 DUP3 SLOAD PUSH2 0x3BB8 JUMP JUMPDEST PUSH2 0x3F2C DUP3 DUP3 DUP6 PUSH2 0x3E68 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3F5F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3F4D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3F57 DUP6 DUP3 PUSH2 0x3ED9 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3FBF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3F6D DUP7 PUSH2 0x3D49 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3F95 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F70 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3FB2 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3FAE PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3EBB JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FD2 DUP3 PUSH2 0x3105 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FDD DUP4 PUSH2 0x3105 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3FF5 JUMPI PUSH2 0x3FF4 PUSH2 0x3CD2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY EXTCODEHASH DELEGATECALL 0xB2 PUSH8 0x6FF7B4E706261E2 0xD DUP12 SLT 0xA6 SWAP4 0x4E 0xE8 SWAP1 PUSH29 0xD13E8FD1853BAF27582964736F6C634300081100330000000000000000 ","sourceMap":"170:14514:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5864:522;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1887:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9042:452;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3126:71;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6394:313;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2758:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2101:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5548:308;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2370:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3550:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2624:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1959:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10760:551;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10368:384;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4881:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2245:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11335:386;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1758:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2494:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2873;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;11729:514;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12619:523;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5055:325;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3780:400;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4188:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4324:239;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10182:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7891:350;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1996:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13150:357;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8722:312;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9502:321;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3660:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2069:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9831:343;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13953:721;;;:::i;:::-;;3287:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;7748:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4571:302;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5388:152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8249:222;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8479:235;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2030:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;13517:424;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1855:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6895:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12251:360;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6715:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1788:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2973:74;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5864:522;5941:15;6008:26;6050:9;;6037:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6008:52;;6071:17;6104:9;6116:1;6104:13;;6099:250;6123:9;;6119:1;:13;6099:250;;;6216:7;6200:25;;;;;;6174:10;:13;6185:1;6174:13;;;;;;;;;;;:20;;6158:38;;;;;;:::i;:::-;;;;;;;;:67;6154:184;;6270:10;:13;6281:1;6270:13;;;;;;;;;;;:22;;6246:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;6257:9;6246:21;;;;;;;;:::i;:::-;;;;;;;:46;;;;6311:11;;;;;:::i;:::-;;;;6154:184;6134:3;;;;;:::i;:::-;;;;6099:250;;;;6368:10;6361:17;;;;5864:522;;;:::o;1887:24::-;;;;:::o;9042:452::-;9115:15;9183:26;9225:10;;9212:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9183:53;;9247:17;9280:9;9292:1;9280:13;;9275:182;9299:10;;9295:1;:14;9275:182;;;9361:8;9335:11;:14;9347:1;9335:14;;;;;;;;;;;:22;;;:34;9331:88;;9395:11;:14;9407:1;9395:14;;;;;;;;;;;:24;;9371:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;9382:9;9371:21;;;;;;;;:::i;:::-;;;;;;;:48;;;;9331:88;9434:11;;;;;:::i;:::-;;;;9311:3;;;;;:::i;:::-;;;;9275:182;;;;9476:10;9469:17;;;;9042:452;;;:::o;1824:24::-;;;;:::o;1918:34::-;;;;:::o;3126:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6394:313::-;6473:7;6532:9;6544:1;6532:13;;6527:152;6551:9;;6547:1;:13;6527:152;;;6646:9;6630:27;;;;;;6602:10;:13;6613:1;6602:13;;;;;;;;;;;:22;;6586:40;;;;;;:::i;:::-;;;;;;;;:71;6582:85;;6666:1;6659:8;;;;;6582:85;6562:3;;;;;:::i;:::-;;;;6527:152;;;;6698:1;6691:8;;6394:313;;;;:::o;2758:43::-;;;;;;;;;;;;;;;;;:::o;2101:51::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5548:308::-;5594:15;5651:26;5693:9;;5680:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5651:52;;5719:9;5714:105;5738:9;;5734:1;:13;5714:105;;;5785:10;:13;5796:1;5785:13;;;;;;;;;;;:22;;5769:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;5780:1;5769:13;;;;;;;;:::i;:::-;;;;;;;:38;;;;5749:3;;;;;:::i;:::-;;;;5714:105;;;;5838:10;5831:17;;;5548:308;:::o;2370:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3550:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2624:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1959:30::-;;;;:::o;10760:551::-;10853:16;10925:27;10969:15;;10955:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10925:60;;10996:17;11029:9;11041:1;11029:13;;11024:252;11048:15;;11044:1;:19;11024:252;;;11124:8;11089:20;:23;11110:1;11089:23;;;;;;;;;;;:31;;;:43;:92;;;;;11172:9;11136:20;:23;11157:1;11136:23;;;;;;;;;;;:32;;;:45;11089:92;11085:153;;;11207:20;:23;11228:1;11207:23;;;;;;;;;;;:31;;;11183:10;11194:9;11183:21;;;;;;;;:::i;:::-;;;;;;;:55;;;;;11085:153;11253:11;;;;;:::i;:::-;;;;11065:3;;;;;:::i;:::-;;;;11024:252;;;;11293:10;11286:17;;;;10760:551;;;;:::o;10368:384::-;10471:7;10522:4;10492:12;:22;10505:8;10492:22;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;10627:54;;;;;;;;10651:8;10627:54;;;;10661:9;10627:54;;;;10672:8;10627:54;;;10587:20;:37;10608:15;;10587:37;;;;;;;;;;;:94;;;;;;;;;;;;;;;;;;;;;;;;;;;10692:15;;:17;;;;;;;;;:::i;:::-;;;;;;10729:15;;10722:22;;10368:384;;;;;:::o;4881:153::-;4936:13;5000:9;:18;5010:7;5000:18;;;;;;;;;;;:26;;4993:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4881:153;;;:::o;2245:48::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11335:386::-;11452:7;11509:4;11476:12;:22;11489:8;11476:22;;;;;;;;;;;:30;;;:37;;;;;;;;;;;;;;;;;;11598:58;;;;;;;;11613:12;;11598:58;;;;11627:9;11598:58;;;;11638:8;11598:58;;;;11648:7;11598:58;;;11569:12;:26;11582:12;;11569:26;;;;;;;;;;;:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;11667:12;;:14;;;;;;;;;:::i;:::-;;;;;;11701:12;;11694:19;;11335:386;;;;;;:::o;1758:23::-;;;;:::o;2494:53::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2873:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11729:514::-;11787:16;11863:36;11916:12;;11902:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11863:66;;11940:15;11971:9;11983:1;11971:13;;11966:231;11990:12;;11986:1;:16;11966:231;;;12056:8;12028:12;:15;12041:1;12028:15;;;;;;;;;;;:24;;;:36;12024:162;;12116:12;:15;12129:1;12116:15;;;;;;;;;;;:26;;;12085:19;12105:7;12085:28;;;;;;;;:::i;:::-;;;;;;;:57;;;;;12161:9;;;;;:::i;:::-;;;;12024:162;12004:3;;;;;:::i;:::-;;;;11966:231;;;;12216:19;12209:26;;;;11729:514;;;:::o;12619:523::-;12681:16;12757:37;12811:10;;12797:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12757:65;;12833:17;12866:9;12878:1;12866:13;;12861:234;12885:10;;12881:1;:14;12861:234;;;12950:10;12921:11;:14;12933:1;12921:14;;;;;;;;;;;:25;;;:39;12917:167;;13015:11;:14;13027:1;13015:14;;;;;;;;;;;:23;;;12981:20;13002:9;12981:31;;;;;;;;:::i;:::-;;;;;;;:57;;;;;13057:11;;;;;:::i;:::-;;;;12917:167;12897:3;;;;;:::i;:::-;;;;12861:234;;;;13114:20;13107:27;;;;12619:523;;;:::o;5055:325::-;5158:7;5241:35;;;;;;;;5257:7;5241:35;;;;5266:9;5241:35;;;5217:10;:21;5228:9;;5217:21;;;;;;;;;;;:59;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;5317:4;5287:12;:22;5300:8;5287:22;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;5332:9;;:11;;;;;;;;;:::i;:::-;;;;;;5363:9;;5356:16;;5055:325;;;;;:::o;3780:400::-;3908:7;3987:46;;;;;;;;4002:11;3987:46;;;;4015:8;3987:46;;;;;;;;;;;;;;;;;;;;;;;;3965:9;:19;3975:8;;3965:19;;;;;;;;;;;:68;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;4071:9;4044:14;:24;4059:8;;4044:24;;;;;;;;;;;:36;;;;;;:::i;:::-;;4119:4;4091:12;:21;4104:7;4091:21;;;;;;;;;;;:25;;;:32;;;;;;;;;;;;;;;;;;4134:8;;:10;;;;;;;;;:::i;:::-;;;;;;4164:8;;4157:15;;3780:400;;;;;;:::o;4188:128::-;4299:9;4273:14;:23;4288:7;4273:23;;;;;;;;;;;:35;;;;;;:::i;:::-;;4188:128;;:::o;4324:239::-;4496:11;4464:9;:18;4474:7;4464:18;;;;;;;;;;;:29;;:43;;;;;;:::i;:::-;;4547:8;4518:9;:18;4528:7;4518:18;;;;;;;;;;;:26;;:37;;;;;;:::i;:::-;;4324:239;;;:::o;10182:165::-;10241:13;10307:11;:22;10319:9;10307:22;;;;;;;;;;;:32;;10300:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10182:165;;;:::o;7891:350::-;8020:4;7987:12;:21;8000:7;7987:21;;;;;;;;;;;:30;;;:37;;;;;;;;;;;;;;;;;;8070:9;8035:11;:22;8047:9;8035:22;;;;;;;;;;;:31;;;:44;;;;;;;:::i;:::-;;;;;;;;8111:9;8090:8;:17;8099:7;8090:17;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;8160:46;;;;;;;;8176:9;8160:46;;;;8187:7;8160:46;;;;8196:9;8160:46;;;8131:10;:26;8142:14;;8131:26;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;;;;;;;;;;8217:14;;:16;;;;;;;;;:::i;:::-;;;;;;7891:350;;;:::o;1996:27::-;;;;:::o;13150:357::-;13267:7;13371:61;;;;;;;;13391:11;13371:61;;;;13404:9;13371:61;;;;13415:7;13371:61;;;;13423:8;13371:61;;;13332:17;:36;13350:17;;13332:36;;;;;;;;;;;:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;13443:17;;:19;;;;;;;;;:::i;:::-;;;;;;13482:17;;13475:24;;13150:357;;;;;;:::o;8722:312::-;8768:15;8825:26;8867:10;;8854:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8825:53;;8894:9;8889:108;8913:10;;8909:1;:14;8889:108;;;8961:11;:14;8973:1;8961:14;;;;;;;;;;;:24;;8945:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;8956:1;8945:13;;;;;;;;:::i;:::-;;;;;;;:40;;;;8925:3;;;;;:::i;:::-;;;;8889:108;;;;9016:10;9009:17;;;8722:312;:::o;9502:321::-;9584:7;9644:9;9656:1;9644:13;;9639:156;9663:10;;9659:1;:14;9639:156;;;9761:10;9745:28;;;;;;9715:11;:14;9727:1;9715:14;;;;;;;;;;;:24;;9699:42;;;;;;:::i;:::-;;;;;;;;:74;9695:88;;9782:1;9775:8;;;;;9695:88;9675:3;;;;;:::i;:::-;;;;9639:156;;;;9814:1;9807:8;;9502:321;;;;:::o;3660:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2069:25::-;;;;:::o;9831:343::-;9914:7;9974:9;9986:1;9974:13;;9969:177;9993:10;;9989:1;:14;9969:177;;;10091:10;10075:28;;;;;;10045:11;:14;10057:1;10045:14;;;;;;;;;;;:24;;10029:42;;;;;;:::i;:::-;;;;;;;;:74;10025:109;;10112:11;:14;10124:1;10112:14;;;;;;;;;;;:22;;;10105:29;;;;;10025:109;10005:3;;;;;:::i;:::-;;;;9969:177;;;;10165:1;10158:8;;9831:343;;;;:::o;13953:721::-;13997:9;13992:58;14016:8;;14012:1;:12;13992:58;;;14038:9;:12;14048:1;14038:12;;;;;;;;;;;;14031:19;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;14026:3;;;;;:::i;:::-;;;;13992:58;;;;14066:9;14061:60;14085:9;;14081:1;:13;14061:60;;;14108:10;:13;14119:1;14108:13;;;;;;;;;;;;14101:20;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;14096:3;;;;;:::i;:::-;;;;14061:60;;;;14137:9;14132:62;14156:10;;14152:1;:14;14132:62;;;14180:11;:14;14192:1;14180:14;;;;;;;;;;;;14173:21;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;14168:3;;;;;:::i;:::-;;;;14132:62;;;;14210:9;14205:71;14229:9;;14225:1;:13;14205:71;;;14252:21;:24;14274:1;14252:24;;;;;;;;;;;;14245:31;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14240:3;;;;;:::i;:::-;;;;14205:71;;;;14292:9;14287:65;14311:12;;14307:1;:16;14287:65;;;14337:12;:15;14350:1;14337:15;;;;;;;;;;;;14330:22;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;14325:3;;;;;:::i;:::-;;;;14287:65;;;;14368:9;14363:62;14387:10;;14383:1;:14;14363:62;;;14411:11;:14;14423:1;14411:14;;;;;;;;;;;;14404:21;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14399:3;;;;;:::i;:::-;;;;14363:62;;;;14441:9;14436:76;14460:15;;14456:1;:19;14436:76;;;14489:20;:23;14510:1;14489:23;;;;;;;;;;;;14482:30;;;;;;;;;;;;;;;;;;;;14477:3;;;;;:::i;:::-;;;;14436:76;;;;14534:1;14523:8;:12;;;;14558:1;14546:9;:13;;;;14583:1;14570:10;:14;;;;14610:1;14595:12;:16;;;;14635:1;14622:10;:14;;;;14665:1;14647:15;:19;;;;13953:721::o;3287:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7748:135::-;7865:10;7830:11;:22;7842:9;7830:22;;;;;;;;;;;:32;;:45;;;;;;:::i;:::-;;7748:135;;:::o;4571:302::-;4616:15;4672:26;4714:8;;4701:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4672:51;;4739:9;4734:102;4758:8;;4754:1;:12;4734:102;;;4804:9;:12;4814:1;4804:12;;;;;;;;;;;:20;;4788:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;4799:1;4788:13;;;;;;;;:::i;:::-;;;;;;;:36;;;;4768:3;;;;;:::i;:::-;;;;4734:102;;;;4855:10;4848:17;;;4571:302;:::o;5388:152::-;5523:9;5491:10;:20;5502:8;5491:20;;;;;;;;;;;:29;;:41;;;;;;:::i;:::-;;5388:152;;:::o;8249:222::-;8353:4;8323:12;:20;8336:6;8323:20;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;8396:45;;;;;;;;8416:6;8396:45;;;;8433:6;8396:45;;;8368:14;:25;8383:9;;8368:25;;;;;;;;;;;:73;;;;;;;;;;;;;;;;;;;8452:9;;:11;;;;;;;;;:::i;:::-;;;;;;8249:222;;:::o;8479:235::-;8543:4;8568:9;8580:1;8568:13;;8563:119;8587:9;;8583:1;:13;8563:119;;;8651:6;8622:14;:17;8637:1;8622:17;;;;;;;;;;;:25;;;:35;8618:52;;8666:4;8659:11;;;;;8618:52;8598:3;;;;;:::i;:::-;;;;8563:119;;;;8701:5;8694:12;;8479:235;;;;:::o;2030:32::-;;;;:::o;3406:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;13517:424::-;13604:4;13629:9;13641:5;13629:17;;13662:9;13657:253;13681:17;;13677:1;:21;13657:253;;;13759:11;13724:17;:20;13742:1;13724:20;;;;;;;;;;;:31;;;:46;:127;;;;;13820:17;:20;13838:1;13820:20;;;;;;;;;;;:29;;13804:47;;;;;;:::i;:::-;;;;;;;;13790:8;13774:26;;;;;;:77;13724:127;13720:179;;;13878:4;13871:11;;13720:179;13700:3;;;;;:::i;:::-;;;;13657:253;;;;13929:4;13922:11;;;13517:424;;;;:::o;1855:25::-;;;;:::o;6895:578::-;7028:7;7115:41;;;;;;;;7132:8;7115:41;;;;7142:10;7115:41;;;;7154:1;7115:41;;;7089:11;:23;7101:10;;7089:23;;;;;;;;;;;:67;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7198:4;7167:12;:22;7180:8;7167:22;;;;;;;;;;;:28;;;:35;;;;;;;;;;;;;;;;;;7213:10;;:12;;;;;;;;;:::i;:::-;;;;;;7243:9;7238:198;7262:16;:23;7258:1;:27;7238:198;;;7307:81;7335:10;;7347:19;;7368:16;7385:1;7368:19;;;;;;;;:::i;:::-;;;;;;;;7307:27;:81::i;:::-;7403:19;;:21;;;;;;;;;:::i;:::-;;;;;;7287:3;;;;;:::i;:::-;;;;7238:198;;;;7455:10;;7448:17;;6895:578;;;;;;:::o;12251:360::-;12362:7;12414:4;12384:12;:21;12397:7;12384:21;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;12496:54;;;;;;;;12509:10;;12496:54;;;;12521:11;12496:54;;;;12533:8;12496:54;;;;12543:6;12496:54;;;12470:11;:23;12482:10;;12470:23;;;;;;;;;;;:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;12561:10;;:12;;;;;;;;;:::i;:::-;;;;;;12593:10;;12586:17;;12251:360;;;;;;:::o;6715:159::-;6772:13;6837:10;:20;6848:8;6837:20;;;;;;;;;;;:29;;6830:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6715:159;;;:::o;1788:29::-;;;;:::o;2973:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7481:259::-;7659:73;;;;;;;;7685:9;7659:73;;;;7696:18;7659:73;;;;7716:15;7659:73;;;7615:21;:41;7637:18;7615:41;;;;;;;;;;;:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7481:259;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:146::-;1707:6;1702:3;1697;1684:30;1748:1;1739:6;1734:3;1730:16;1723:27;1610:146;;;:::o;1762:425::-;1840:5;1865:66;1881:49;1923:6;1881:49;:::i;:::-;1865:66;:::i;:::-;1856:75;;1954:6;1947:5;1940:21;1992:4;1985:5;1981:16;2030:3;2021:6;2016:3;2012:16;2009:25;2006:112;;;2037:79;;:::i;:::-;2006:112;2127:54;2174:6;2169:3;2164;2127:54;:::i;:::-;1846:341;1762:425;;;;;:::o;2207:340::-;2263:5;2312:3;2305:4;2297:6;2293:17;2289:27;2279:122;;2320:79;;:::i;:::-;2279:122;2437:6;2424:20;2462:79;2537:3;2529:6;2522:4;2514:6;2510:17;2462:79;:::i;:::-;2453:88;;2269:278;2207:340;;;;:::o;2553:509::-;2622:6;2671:2;2659:9;2650:7;2646:23;2642:32;2639:119;;;2677:79;;:::i;:::-;2639:119;2825:1;2814:9;2810:17;2797:31;2855:18;2847:6;2844:30;2841:117;;;2877:79;;:::i;:::-;2841:117;2982:63;3037:7;3028:6;3017:9;3013:22;2982:63;:::i;:::-;2972:73;;2768:287;2553:509;;;;:::o;3068:124::-;3145:6;3179:5;3173:12;3163:22;;3068:124;;;:::o;3198:194::-;3307:11;3341:6;3336:3;3329:19;3381:4;3376:3;3372:14;3357:29;;3198:194;;;;:::o;3398:142::-;3475:4;3498:3;3490:11;;3528:4;3523:3;3519:14;3511:22;;3398:142;;;:::o;3546:99::-;3598:6;3632:5;3626:12;3616:22;;3546:99;;;:::o;3651:159::-;3725:11;3759:6;3754:3;3747:19;3799:4;3794:3;3790:14;3775:29;;3651:159;;;;:::o;3816:246::-;3897:1;3907:113;3921:6;3918:1;3915:13;3907:113;;;4006:1;4001:3;3997:11;3991:18;3987:1;3982:3;3978:11;3971:39;3943:2;3940:1;3936:10;3931:15;;3907:113;;;4054:1;4045:6;4040:3;4036:16;4029:27;3878:184;3816:246;;;:::o;4068:357::-;4146:3;4174:39;4207:5;4174:39;:::i;:::-;4229:61;4283:6;4278:3;4229:61;:::i;:::-;4222:68;;4299:65;4357:6;4352:3;4345:4;4338:5;4334:16;4299:65;:::i;:::-;4389:29;4411:6;4389:29;:::i;:::-;4384:3;4380:39;4373:46;;4150:275;4068:357;;;;:::o;4431:196::-;4520:10;4555:66;4617:3;4609:6;4555:66;:::i;:::-;4541:80;;4431:196;;;;:::o;4633:123::-;4713:4;4745;4740:3;4736:14;4728:22;;4633:123;;;:::o;4790:991::-;4929:3;4958:64;5016:5;4958:64;:::i;:::-;5038:96;5127:6;5122:3;5038:96;:::i;:::-;5031:103;;5160:3;5205:4;5197:6;5193:17;5188:3;5184:27;5235:66;5295:5;5235:66;:::i;:::-;5324:7;5355:1;5340:396;5365:6;5362:1;5359:13;5340:396;;;5436:9;5430:4;5426:20;5421:3;5414:33;5487:6;5481:13;5515:84;5594:4;5579:13;5515:84;:::i;:::-;5507:92;;5622:70;5685:6;5622:70;:::i;:::-;5612:80;;5721:4;5716:3;5712:14;5705:21;;5400:336;5387:1;5384;5380:9;5375:14;;5340:396;;;5344:14;5752:4;5745:11;;5772:3;5765:10;;4934:847;;;;;4790:991;;;;:::o;5787:413::-;5950:4;5988:2;5977:9;5973:18;5965:26;;6037:9;6031:4;6027:20;6023:1;6012:9;6008:17;6001:47;6065:128;6188:4;6179:6;6065:128;:::i;:::-;6057:136;;5787:413;;;;:::o;6206:77::-;6243:7;6272:5;6261:16;;6206:77;;;:::o;6289:118::-;6376:24;6394:5;6376:24;:::i;:::-;6371:3;6364:37;6289:118;;:::o;6413:222::-;6506:4;6544:2;6533:9;6529:18;6521:26;;6557:71;6625:1;6614:9;6610:17;6601:6;6557:71;:::i;:::-;6413:222;;;;:::o;6641:122::-;6714:24;6732:5;6714:24;:::i;:::-;6707:5;6704:35;6694:63;;6753:1;6750;6743:12;6694:63;6641:122;:::o;6769:139::-;6815:5;6853:6;6840:20;6831:29;;6869:33;6896:5;6869:33;:::i;:::-;6769:139;;;;:::o;6914:329::-;6973:6;7022:2;7010:9;7001:7;6997:23;6993:32;6990:119;;;7028:79;;:::i;:::-;6990:119;7148:1;7173:53;7218:7;7209:6;7198:9;7194:22;7173:53;:::i;:::-;7163:63;;7119:117;6914:329;;;;:::o;7249:442::-;7398:4;7436:2;7425:9;7421:18;7413:26;;7449:71;7517:1;7506:9;7502:17;7493:6;7449:71;:::i;:::-;7530:72;7598:2;7587:9;7583:18;7574:6;7530:72;:::i;:::-;7612;7680:2;7669:9;7665:18;7656:6;7612:72;:::i;:::-;7249:442;;;;;;:::o;7697:169::-;7781:11;7815:6;7810:3;7803:19;7855:4;7850:3;7846:14;7831:29;;7697:169;;;;:::o;7872:377::-;7960:3;7988:39;8021:5;7988:39;:::i;:::-;8043:71;8107:6;8102:3;8043:71;:::i;:::-;8036:78;;8123:65;8181:6;8176:3;8169:4;8162:5;8158:16;8123:65;:::i;:::-;8213:29;8235:6;8213:29;:::i;:::-;8208:3;8204:39;8197:46;;7964:285;7872:377;;;;:::o;8255:715::-;8464:4;8502:2;8491:9;8487:18;8479:26;;8551:9;8545:4;8541:20;8537:1;8526:9;8522:17;8515:47;8579:78;8652:4;8643:6;8579:78;:::i;:::-;8571:86;;8704:9;8698:4;8694:20;8689:2;8678:9;8674:18;8667:48;8732:78;8805:4;8796:6;8732:78;:::i;:::-;8724:86;;8857:9;8851:4;8847:20;8842:2;8831:9;8827:18;8820:48;8885:78;8958:4;8949:6;8885:78;:::i;:::-;8877:86;;8255:715;;;;;;:::o;8976:332::-;9097:4;9135:2;9124:9;9120:18;9112:26;;9148:71;9216:1;9205:9;9201:17;9192:6;9148:71;:::i;:::-;9229:72;9297:2;9286:9;9282:18;9273:6;9229:72;:::i;:::-;8976:332;;;;;:::o;9314:644::-;9511:4;9549:3;9538:9;9534:19;9526:27;;9563:71;9631:1;9620:9;9616:17;9607:6;9563:71;:::i;:::-;9644:72;9712:2;9701:9;9697:18;9688:6;9644:72;:::i;:::-;9726;9794:2;9783:9;9779:18;9770:6;9726:72;:::i;:::-;9845:9;9839:4;9835:20;9830:2;9819:9;9815:18;9808:48;9873:78;9946:4;9937:6;9873:78;:::i;:::-;9865:86;;9314:644;;;;;;;:::o;9964:533::-;10133:4;10171:2;10160:9;10156:18;10148:26;;10184:71;10252:1;10241:9;10237:17;10228:6;10184:71;:::i;:::-;10302:9;10296:4;10292:20;10287:2;10276:9;10272:18;10265:48;10330:78;10403:4;10394:6;10330:78;:::i;:::-;10322:86;;10418:72;10486:2;10475:9;10471:18;10462:6;10418:72;:::i;:::-;9964:533;;;;;;:::o;10503:474::-;10571:6;10579;10628:2;10616:9;10607:7;10603:23;10599:32;10596:119;;;10634:79;;:::i;:::-;10596:119;10754:1;10779:53;10824:7;10815:6;10804:9;10800:22;10779:53;:::i;:::-;10769:63;;10725:117;10881:2;10907:53;10952:7;10943:6;10932:9;10928:22;10907:53;:::i;:::-;10897:63;;10852:118;10503:474;;;;;:::o;10983:114::-;11050:6;11084:5;11078:12;11068:22;;10983:114;;;:::o;11103:184::-;11202:11;11236:6;11231:3;11224:19;11276:4;11271:3;11267:14;11252:29;;11103:184;;;;:::o;11293:132::-;11360:4;11383:3;11375:11;;11413:4;11408:3;11404:14;11396:22;;11293:132;;;:::o;11431:108::-;11508:24;11526:5;11508:24;:::i;:::-;11503:3;11496:37;11431:108;;:::o;11545:179::-;11614:10;11635:46;11677:3;11669:6;11635:46;:::i;:::-;11713:4;11708:3;11704:14;11690:28;;11545:179;;;;:::o;11730:113::-;11800:4;11832;11827:3;11823:14;11815:22;;11730:113;;;:::o;11879:732::-;11998:3;12027:54;12075:5;12027:54;:::i;:::-;12097:86;12176:6;12171:3;12097:86;:::i;:::-;12090:93;;12207:56;12257:5;12207:56;:::i;:::-;12286:7;12317:1;12302:284;12327:6;12324:1;12321:13;12302:284;;;12403:6;12397:13;12430:63;12489:3;12474:13;12430:63;:::i;:::-;12423:70;;12516:60;12569:6;12516:60;:::i;:::-;12506:70;;12362:224;12349:1;12346;12342:9;12337:14;;12302:284;;;12306:14;12602:3;12595:10;;12003:608;;;11879:732;;;;:::o;12617:373::-;12760:4;12798:2;12787:9;12783:18;12775:26;;12847:9;12841:4;12837:20;12833:1;12822:9;12818:17;12811:47;12875:108;12978:4;12969:6;12875:108;:::i;:::-;12867:116;;12617:373;;;;:::o;12996:619::-;13073:6;13081;13089;13138:2;13126:9;13117:7;13113:23;13109:32;13106:119;;;13144:79;;:::i;:::-;13106:119;13264:1;13289:53;13334:7;13325:6;13314:9;13310:22;13289:53;:::i;:::-;13279:63;;13235:117;13391:2;13417:53;13462:7;13453:6;13442:9;13438:22;13417:53;:::i;:::-;13407:63;;13362:118;13519:2;13545:53;13590:7;13581:6;13570:9;13566:22;13545:53;:::i;:::-;13535:63;;13490:118;12996:619;;;;;:::o;13621:313::-;13734:4;13772:2;13761:9;13757:18;13749:26;;13821:9;13815:4;13811:20;13807:1;13796:9;13792:17;13785:47;13849:78;13922:4;13913:6;13849:78;:::i;:::-;13841:86;;13621:313;;;;:::o;13940:1125::-;14046:6;14054;14062;14070;14119:3;14107:9;14098:7;14094:23;14090:33;14087:120;;;14126:79;;:::i;:::-;14087:120;14246:1;14271:53;14316:7;14307:6;14296:9;14292:22;14271:53;:::i;:::-;14261:63;;14217:117;14401:2;14390:9;14386:18;14373:32;14432:18;14424:6;14421:30;14418:117;;;14454:79;;:::i;:::-;14418:117;14559:63;14614:7;14605:6;14594:9;14590:22;14559:63;:::i;:::-;14549:73;;14344:288;14699:2;14688:9;14684:18;14671:32;14730:18;14722:6;14719:30;14716:117;;;14752:79;;:::i;:::-;14716:117;14857:63;14912:7;14903:6;14892:9;14888:22;14857:63;:::i;:::-;14847:73;;14642:288;14969:2;14995:53;15040:7;15031:6;15020:9;15016:22;14995:53;:::i;:::-;14985:63;;14940:118;13940:1125;;;;;;;:::o;15071:514::-;15232:4;15270:2;15259:9;15255:18;15247:26;;15319:9;15313:4;15309:20;15305:1;15294:9;15290:17;15283:47;15347:78;15420:4;15411:6;15347:78;:::i;:::-;15339:86;;15472:9;15466:4;15462:20;15457:2;15446:9;15442:18;15435:48;15500:78;15573:4;15564:6;15500:78;:::i;:::-;15492:86;;15071:514;;;;;:::o;15591:979::-;15688:6;15696;15704;15753:2;15741:9;15732:7;15728:23;15724:32;15721:119;;;15759:79;;:::i;:::-;15721:119;15907:1;15896:9;15892:17;15879:31;15937:18;15929:6;15926:30;15923:117;;;15959:79;;:::i;:::-;15923:117;16064:63;16119:7;16110:6;16099:9;16095:22;16064:63;:::i;:::-;16054:73;;15850:287;16204:2;16193:9;16189:18;16176:32;16235:18;16227:6;16224:30;16221:117;;;16257:79;;:::i;:::-;16221:117;16362:63;16417:7;16408:6;16397:9;16393:22;16362:63;:::i;:::-;16352:73;;16147:288;16474:2;16500:53;16545:7;16536:6;16525:9;16521:22;16500:53;:::i;:::-;16490:63;;16445:118;15591:979;;;;;:::o;16576:1305::-;16692:6;16700;16708;16716;16765:3;16753:9;16744:7;16740:23;16736:33;16733:120;;;16772:79;;:::i;:::-;16733:120;16920:1;16909:9;16905:17;16892:31;16950:18;16942:6;16939:30;16936:117;;;16972:79;;:::i;:::-;16936:117;17077:63;17132:7;17123:6;17112:9;17108:22;17077:63;:::i;:::-;17067:73;;16863:287;17217:2;17206:9;17202:18;17189:32;17248:18;17240:6;17237:30;17234:117;;;17270:79;;:::i;:::-;17234:117;17375:63;17430:7;17421:6;17410:9;17406:22;17375:63;:::i;:::-;17365:73;;17160:288;17515:2;17504:9;17500:18;17487:32;17546:18;17538:6;17535:30;17532:117;;;17568:79;;:::i;:::-;17532:117;17673:63;17728:7;17719:6;17708:9;17704:22;17673:63;:::i;:::-;17663:73;;17458:288;17785:2;17811:53;17856:7;17847:6;17836:9;17832:22;17811:53;:::i;:::-;17801:63;;17756:118;16576:1305;;;;;;;:::o;17887:654::-;17965:6;17973;18022:2;18010:9;18001:7;17997:23;17993:32;17990:119;;;18028:79;;:::i;:::-;17990:119;18148:1;18173:53;18218:7;18209:6;18198:9;18194:22;18173:53;:::i;:::-;18163:63;;18119:117;18303:2;18292:9;18288:18;18275:32;18334:18;18326:6;18323:30;18320:117;;;18356:79;;:::i;:::-;18320:117;18461:63;18516:7;18507:6;18496:9;18492:22;18461:63;:::i;:::-;18451:73;;18246:288;17887:654;;;;;:::o;18547:979::-;18644:6;18652;18660;18709:2;18697:9;18688:7;18684:23;18680:32;18677:119;;;18715:79;;:::i;:::-;18677:119;18835:1;18860:53;18905:7;18896:6;18885:9;18881:22;18860:53;:::i;:::-;18850:63;;18806:117;18990:2;18979:9;18975:18;18962:32;19021:18;19013:6;19010:30;19007:117;;;19043:79;;:::i;:::-;19007:117;19148:63;19203:7;19194:6;19183:9;19179:22;19148:63;:::i;:::-;19138:73;;18933:288;19288:2;19277:9;19273:18;19260:32;19319:18;19311:6;19308:30;19305:117;;;19341:79;;:::i;:::-;19305:117;19446:63;19501:7;19492:6;19481:9;19477:22;19446:63;:::i;:::-;19436:73;;19231:288;18547:979;;;;;:::o;19532:945::-;19628:6;19636;19644;19652;19701:3;19689:9;19680:7;19676:23;19672:33;19669:120;;;19708:79;;:::i;:::-;19669:120;19828:1;19853:53;19898:7;19889:6;19878:9;19874:22;19853:53;:::i;:::-;19843:63;;19799:117;19955:2;19981:53;20026:7;20017:6;20006:9;20002:22;19981:53;:::i;:::-;19971:63;;19926:118;20083:2;20109:53;20154:7;20145:6;20134:9;20130:22;20109:53;:::i;:::-;20099:63;;20054:118;20239:2;20228:9;20224:18;20211:32;20270:18;20262:6;20259:30;20256:117;;;20292:79;;:::i;:::-;20256:117;20397:63;20452:7;20443:6;20432:9;20428:22;20397:63;:::i;:::-;20387:73;;20182:288;19532:945;;;;;;;:::o;20483:90::-;20517:7;20560:5;20553:13;20546:21;20535:32;;20483:90;;;:::o;20579:109::-;20660:21;20675:5;20660:21;:::i;:::-;20655:3;20648:34;20579:109;;:::o;20694:1012::-;20963:4;21001:3;20990:9;20986:19;20978:27;;21015:71;21083:1;21072:9;21068:17;21059:6;21015:71;:::i;:::-;21096:66;21158:2;21147:9;21143:18;21134:6;21096:66;:::i;:::-;21172;21234:2;21223:9;21219:18;21210:6;21172:66;:::i;:::-;21248;21310:2;21299:9;21295:18;21286:6;21248:66;:::i;:::-;21324:67;21386:3;21375:9;21371:19;21362:6;21324:67;:::i;:::-;21401;21463:3;21452:9;21448:19;21439:6;21401:67;:::i;:::-;21478;21540:3;21529:9;21525:19;21516:6;21478:67;:::i;:::-;21555;21617:3;21606:9;21602:19;21593:6;21555:67;:::i;:::-;21632;21694:3;21683:9;21679:19;21670:6;21632:67;:::i;:::-;20694:1012;;;;;;;;;;;;:::o;21712:735::-;21929:4;21967:3;21956:9;21952:19;21944:27;;21981:71;22049:1;22038:9;22034:17;22025:6;21981:71;:::i;:::-;22062:72;22130:2;22119:9;22115:18;22106:6;22062:72;:::i;:::-;22181:9;22175:4;22171:20;22166:2;22155:9;22151:18;22144:48;22209:78;22282:4;22273:6;22209:78;:::i;:::-;22201:86;;22334:9;22328:4;22324:20;22319:2;22308:9;22304:18;22297:48;22362:78;22435:4;22426:6;22362:78;:::i;:::-;22354:86;;21712:735;;;;;;;:::o;22453:210::-;22540:4;22578:2;22567:9;22563:18;22555:26;;22591:65;22653:1;22642:9;22638:17;22629:6;22591:65;:::i;:::-;22453:210;;;;:::o;22669:321::-;22756:4;22846:18;22838:6;22835:30;22832:56;;;22868:18;;:::i;:::-;22832:56;22918:4;22910:6;22906:17;22898:25;;22978:4;22972;22968:15;22960:23;;22669:321;;;:::o;22996:117::-;23105:1;23102;23095:12;23135:945;23241:5;23266:91;23282:74;23349:6;23282:74;:::i;:::-;23266:91;:::i;:::-;23257:100;;23377:5;23406:6;23399:5;23392:21;23440:4;23433:5;23429:16;23422:23;;23493:4;23485:6;23481:17;23473:6;23469:30;23522:3;23514:6;23511:15;23508:122;;;23541:79;;:::i;:::-;23508:122;23656:6;23639:435;23673:6;23668:3;23665:15;23639:435;;;23762:3;23749:17;23798:18;23785:11;23782:35;23779:122;;;23820:79;;:::i;:::-;23779:122;23944:11;23936:6;23932:24;23982:47;24025:3;24013:10;23982:47;:::i;:::-;23977:3;23970:60;24059:4;24054:3;24050:14;24043:21;;23715:359;;23699:4;23694:3;23690:14;23683:21;;23639:435;;;23643:21;23247:833;;23135:945;;;;;:::o;24102:390::-;24183:5;24232:3;24225:4;24217:6;24213:17;24209:27;24199:122;;24240:79;;:::i;:::-;24199:122;24357:6;24344:20;24382:104;24482:3;24474:6;24467:4;24459:6;24455:17;24382:104;:::i;:::-;24373:113;;24189:303;24102:390;;;;:::o;24498:1175::-;24629:6;24637;24645;24653;24702:3;24690:9;24681:7;24677:23;24673:33;24670:120;;;24709:79;;:::i;:::-;24670:120;24857:1;24846:9;24842:17;24829:31;24887:18;24879:6;24876:30;24873:117;;;24909:79;;:::i;:::-;24873:117;25014:63;25069:7;25060:6;25049:9;25045:22;25014:63;:::i;:::-;25004:73;;24800:287;25126:2;25152:53;25197:7;25188:6;25177:9;25173:22;25152:53;:::i;:::-;25142:63;;25097:118;25282:2;25271:9;25267:18;25254:32;25313:18;25305:6;25302:30;25299:117;;;25335:79;;:::i;:::-;25299:117;25440:88;25520:7;25511:6;25500:9;25496:22;25440:88;:::i;:::-;25430:98;;25225:313;25577:2;25603:53;25648:7;25639:6;25628:9;25624:22;25603:53;:::i;:::-;25593:63;;25548:118;24498:1175;;;;;;;:::o;25679:945::-;25775:6;25783;25791;25799;25848:3;25836:9;25827:7;25823:23;25819:33;25816:120;;;25855:79;;:::i;:::-;25816:120;25975:1;26000:53;26045:7;26036:6;26025:9;26021:22;26000:53;:::i;:::-;25990:63;;25946:117;26130:2;26119:9;26115:18;26102:32;26161:18;26153:6;26150:30;26147:117;;;26183:79;;:::i;:::-;26147:117;26288:63;26343:7;26334:6;26323:9;26319:22;26288:63;:::i;:::-;26278:73;;26073:288;26400:2;26426:53;26471:7;26462:6;26451:9;26447:22;26426:53;:::i;:::-;26416:63;;26371:118;26528:2;26554:53;26599:7;26590:6;26579:9;26575:22;26554:53;:::i;:::-;26544:63;;26499:118;25679:945;;;;;;;:::o;26630:533::-;26799:4;26837:2;26826:9;26822:18;26814:26;;26850:71;26918:1;26907:9;26903:17;26894:6;26850:71;:::i;:::-;26931:72;26999:2;26988:9;26984:18;26975:6;26931:72;:::i;:::-;27050:9;27044:4;27040:20;27035:2;27024:9;27020:18;27013:48;27078:78;27151:4;27142:6;27078:78;:::i;:::-;27070:86;;26630:533;;;;;;:::o;27169:180::-;27217:77;27214:1;27207:88;27314:4;27311:1;27304:15;27338:4;27335:1;27328:15;27355:320;27399:6;27436:1;27430:4;27426:12;27416:22;;27483:1;27477:4;27473:12;27504:18;27494:81;;27560:4;27552:6;27548:17;27538:27;;27494:81;27622:2;27614:6;27611:14;27591:18;27588:38;27585:84;;27641:18;;:::i;:::-;27585:84;27406:269;27355:320;;;:::o;27681:147::-;27782:11;27819:3;27804:18;;27681:147;;;;:::o;27834:144::-;27886:4;27909:3;27901:11;;27932:3;27929:1;27922:14;27966:4;27963:1;27953:18;27945:26;;27834:144;;;:::o;28006:878::-;28111:3;28148:5;28142:12;28177:36;28203:9;28177:36;:::i;:::-;28229:88;28310:6;28305:3;28229:88;:::i;:::-;28222:95;;28348:1;28337:9;28333:17;28364:1;28359:166;;;;28539:1;28534:344;;;;28326:552;;28359:166;28443:4;28439:9;28428;28424:25;28419:3;28412:38;28505:6;28498:14;28491:22;28483:6;28479:35;28474:3;28470:45;28463:52;;28359:166;;28534:344;28601:41;28636:5;28601:41;:::i;:::-;28664:1;28678:154;28692:6;28689:1;28686:13;28678:154;;;28766:7;28760:14;28756:1;28751:3;28747:11;28740:35;28816:1;28807:7;28803:15;28792:26;;28714:4;28711:1;28707:12;28702:17;;28678:154;;;28861:6;28856:3;28852:16;28845:23;;28541:337;;28326:552;;28115:769;;28006:878;;;;:::o;28890:273::-;29021:3;29043:94;29133:3;29124:6;29043:94;:::i;:::-;29036:101;;29154:3;29147:10;;28890:273;;;;:::o;29169:180::-;29217:77;29214:1;29207:88;29314:4;29311:1;29304:15;29338:4;29335:1;29328:15;29355:180;29403:77;29400:1;29393:88;29500:4;29497:1;29490:15;29524:4;29521:1;29514:15;29541:233;29580:3;29603:24;29621:5;29603:24;:::i;:::-;29594:33;;29649:66;29642:5;29639:77;29636:103;;29719:18;;:::i;:::-;29636:103;29766:1;29759:5;29755:13;29748:20;;29541:233;;;:::o;29780:141::-;29829:4;29852:3;29844:11;;29875:3;29872:1;29865:14;29909:4;29906:1;29896:18;29888:26;;29780:141;;;:::o;29927:93::-;29964:6;30011:2;30006;29999:5;29995:14;29991:23;29981:33;;29927:93;;;:::o;30026:107::-;30070:8;30120:5;30114:4;30110:16;30089:37;;30026:107;;;;:::o;30139:393::-;30208:6;30258:1;30246:10;30242:18;30281:97;30311:66;30300:9;30281:97;:::i;:::-;30399:39;30429:8;30418:9;30399:39;:::i;:::-;30387:51;;30471:4;30467:9;30460:5;30456:21;30447:30;;30520:4;30510:8;30506:19;30499:5;30496:30;30486:40;;30215:317;;30139:393;;;;;:::o;30538:60::-;30566:3;30587:5;30580:12;;30538:60;;;:::o;30604:142::-;30654:9;30687:53;30705:34;30714:24;30732:5;30714:24;:::i;:::-;30705:34;:::i;:::-;30687:53;:::i;:::-;30674:66;;30604:142;;;:::o;30752:75::-;30795:3;30816:5;30809:12;;30752:75;;;:::o;30833:269::-;30943:39;30974:7;30943:39;:::i;:::-;31004:91;31053:41;31077:16;31053:41;:::i;:::-;31045:6;31038:4;31032:11;31004:91;:::i;:::-;30998:4;30991:105;30909:193;30833:269;;;:::o;31108:73::-;31153:3;31108:73;:::o;31187:189::-;31264:32;;:::i;:::-;31305:65;31363:6;31355;31349:4;31305:65;:::i;:::-;31240:136;31187:189;;:::o;31382:186::-;31442:120;31459:3;31452:5;31449:14;31442:120;;;31513:39;31550:1;31543:5;31513:39;:::i;:::-;31486:1;31479:5;31475:13;31466:22;;31442:120;;;31382:186;;:::o;31574:543::-;31675:2;31670:3;31667:11;31664:446;;;31709:38;31741:5;31709:38;:::i;:::-;31793:29;31811:10;31793:29;:::i;:::-;31783:8;31779:44;31976:2;31964:10;31961:18;31958:49;;;31997:8;31982:23;;31958:49;32020:80;32076:22;32094:3;32076:22;:::i;:::-;32066:8;32062:37;32049:11;32020:80;:::i;:::-;31679:431;;31664:446;31574:543;;;:::o;32123:117::-;32177:8;32227:5;32221:4;32217:16;32196:37;;32123:117;;;;:::o;32246:169::-;32290:6;32323:51;32371:1;32367:6;32359:5;32356:1;32352:13;32323:51;:::i;:::-;32319:56;32404:4;32398;32394:15;32384:25;;32297:118;32246:169;;;;:::o;32420:295::-;32496:4;32642:29;32667:3;32661:4;32642:29;:::i;:::-;32634:37;;32704:3;32701:1;32697:11;32691:4;32688:21;32680:29;;32420:295;;;;:::o;32720:1395::-;32837:37;32870:3;32837:37;:::i;:::-;32939:18;32931:6;32928:30;32925:56;;;32961:18;;:::i;:::-;32925:56;33005:38;33037:4;33031:11;33005:38;:::i;:::-;33090:67;33150:6;33142;33136:4;33090:67;:::i;:::-;33184:1;33208:4;33195:17;;33240:2;33232:6;33229:14;33257:1;33252:618;;;;33914:1;33931:6;33928:77;;;33980:9;33975:3;33971:19;33965:26;33956:35;;33928:77;34031:67;34091:6;34084:5;34031:67;:::i;:::-;34025:4;34018:81;33887:222;33222:887;;33252:618;33304:4;33300:9;33292:6;33288:22;33338:37;33370:4;33338:37;:::i;:::-;33397:1;33411:208;33425:7;33422:1;33419:14;33411:208;;;33504:9;33499:3;33495:19;33489:26;33481:6;33474:42;33555:1;33547:6;33543:14;33533:24;;33602:2;33591:9;33587:18;33574:31;;33448:4;33445:1;33441:12;33436:17;;33411:208;;;33647:6;33638:7;33635:19;33632:179;;;33705:9;33700:3;33696:19;33690:26;33748:48;33790:4;33782:6;33778:17;33767:9;33748:48;:::i;:::-;33740:6;33733:64;33655:156;33632:179;33857:1;33853;33845:6;33841:14;33837:22;33831:4;33824:36;33259:611;;;33222:887;;32812:1303;;;32720:1395;;:::o;34121:191::-;34161:3;34180:20;34198:1;34180:20;:::i;:::-;34175:25;;34214:20;34232:1;34214:20;:::i;:::-;34209:25;;34257:1;34254;34250:9;34243:16;;34278:3;34275:1;34272:10;34269:36;;;34285:18;;:::i;:::-;34269:36;34121:191;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"3286600","executionCost":"3651","totalCost":"3290251"},"external":{"_dao_ids()":"2497","_dao_uris(uint256)":"infinite","_donated(uint256)":"infinite","_donations(uint256)":"infinite","_donations_ids()":"2539","_goal_ids()":"2542","_goal_uris(uint256)":"infinite","_ideas_ids()":"2518","_ideas_uris(uint256)":"infinite","_ideas_vote_ids()":"2475","_join_ids()":"2498","_joined_person(uint256)":"infinite","_message_ids()":"2563","_message_read_ids()":"2540","_reply_ids()":"2496","_smart_contract_ids()":"2564","_smart_contracts_uris(uint256)":"infinite","_template_uris(uint256)":"infinite","_user_badges(uint256)":"infinite","add_donation(uint256,uint256,uint256)":"infinite","all_goal_ideas_votes(uint256)":"infinite","all_messages(uint256)":"infinite","all_read_messages(uint256)":"infinite","all_replies(uint256)":"infinite","create_dao(string,string,string,uint256)":"infinite","create_goal(string,string,uint256)":"infinite","create_goal_ideas_vote(uint256,uint256,uint256)":"infinite","create_ideas(string,uint256,string[],uint256)":"infinite","dao_uri(uint256)":"infinite","getMsgIDs(uint256)":"infinite","getReadMsg(uint256,string)":"infinite","getReplyIDs(uint256)":"infinite","get_all_daos()":"infinite","get_all_goals()":"infinite","get_all_goals_by_dao_id(string)":"infinite","get_all_ideas()":"infinite","get_all_ideas_by_goal_id(uint256)":"infinite","get_goal_id_by_goal_uri(string)":"infinite","get_goal_id_from_ideas_uri(string)":"infinite","get_ideas_id_by_ideas_uri(string)":"infinite","get_ideas_votes_from_goal(uint256,uint256)":"infinite","goal_uri(uint256)":"infinite","ideas_uri(uint256)":"infinite","is_person_joined(uint256)":"infinite","join_community(uint256,uint256)":"infinite","reset_all()":"infinite","sendMsg(uint256,string,string,uint256)":"infinite","sendReadMsg(uint256,uint256,uint256,string)":"infinite","sendReply(uint256,string,uint256,uint256)":"infinite","set_dao(uint256,string,string)":"infinite","set_goal(uint256,string)":"infinite","set_ideas(uint256,string)":"infinite","update_template(uint256,string)":"infinite"},"internal":{"create_ideas_smart_contract(uint256,uint256,string memory)":"infinite"}},"methodIdentifiers":{"_dao_ids()":"7bbd582d","_dao_uris(uint256)":"27a568b9","_donated(uint256)":"20959ed0","_donations(uint256)":"7fc543ec","_donations_ids()":"ec245802","_goal_ids()":"13bf4cea","_goal_uris(uint256)":"7f2035d4","_ideas_ids()":"d3791b20","_ideas_uris(uint256)":"468d0c80","_ideas_vote_ids()":"4a797bd7","_join_ids()":"1171b621","_joined_person(uint256)":"330b8f26","_message_ids()":"9077007d","_message_read_ids()":"ca013f17","_reply_ids()":"aa2bf5d3","_smart_contract_ids()":"1b592aeb","_smart_contracts_uris(uint256)":"ff4a37ef","_template_uris(uint256)":"6ecda4ee","_user_badges(uint256)":"a428a47f","add_donation(uint256,uint256,uint256)":"8e6280e6","all_goal_ideas_votes(uint256)":"1ba44c4c","all_messages(uint256)":"b527d45e","all_read_messages(uint256)":"cace8d46","all_replies(uint256)":"3f87a2f4","create_dao(string,string,string,uint256)":"86ffa45b","create_goal(string,string,uint256)":"8413543e","create_goal_ideas_vote(uint256,uint256,uint256)":"4ff77421","create_ideas(string,uint256,string[],uint256)":"d4ea3a36","dao_uri(uint256)":"5d907da1","getMsgIDs(uint256)":"803f5b9f","getReadMsg(uint256,string)":"cd230809","getReplyIDs(uint256)":"812fae1f","get_all_daos()":"c04fe978","get_all_goals()":"29b56f60","get_all_goals_by_dao_id(string)":"0377d44a","get_all_ideas()":"97ee7606","get_all_ideas_by_goal_id(uint256)":"131d44f2","get_goal_id_by_goal_uri(string)":"1e9ac9f5","get_goal_id_from_ideas_uri(string)":"aa4cdf2a","get_ideas_id_by_ideas_uri(string)":"a1ca9178","get_ideas_votes_from_goal(uint256,uint256)":"4be7adb5","goal_uri(uint256)":"e32acc1a","ideas_uri(uint256)":"8d3d2595","is_person_joined(uint256)":"c7af4ee5","join_community(uint256,uint256)":"c6182b34","reset_all()":"b16060a6","sendMsg(uint256,string,string,uint256)":"787f19c7","sendReadMsg(uint256,uint256,uint256,string)":"934c5f00","sendReply(uint256,string,uint256,uint256)":"d9fc52db","set_dao(uint256,string,string)":"881de858","set_goal(uint256,string)":"c29595c5","set_ideas(uint256,string)":"c04e7430","update_template(uint256,string)":"87633eb2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"_dao_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_dao_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dao_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"finished\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_donated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_donations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"donation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_donations_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_goal_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_goal_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"dao_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"goal_uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ideas_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_ideas_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ideas_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"donation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ideas_vote_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_join_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_joined_person\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"daoid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_message_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_message_read_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_reply_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_smart_contract_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_smart_contracts_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"smart_contract_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"smart_contract_uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_template_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_user_badges\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"dao\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"joined\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"goal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"ideas\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"donation\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"comment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reply\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_doantion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userid\",\"type\":\"uint256\"}],\"name\":\"add_donation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_goal_ideas_votes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_messages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sender\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_read_messages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_replies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reply_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_template\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"}],\"name\":\"create_dao\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_user_id\",\"type\":\"uint256\"}],\"name\":\"create_goal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_user_id\",\"type\":\"uint256\"}],\"name\":\"create_goal_ideas_vote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"_smart_contracts\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"_user_id\",\"type\":\"uint256\"}],\"name\":\"create_ideas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"}],\"name\":\"dao_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"}],\"name\":\"getMsgIDs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"name\":\"getReadMsg\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"}],\"name\":\"getReplyIDs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_daos\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_goals\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dao_id\",\"type\":\"string\"}],\"name\":\"get_all_goals_by_dao_id\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_ideas\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"}],\"name\":\"get_all_ideas_by_goal_id\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"}],\"name\":\"get_goal_id_by_goal_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"get_goal_id_from_ideas_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"get_ideas_id_by_ideas_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"}],\"name\":\"get_ideas_votes_from_goal\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"}],\"name\":\"goal_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"}],\"name\":\"ideas_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"person\",\"type\":\"uint256\"}],\"name\":\"is_person_joined\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dao_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"person\",\"type\":\"uint256\"}],\"name\":\"join_community\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reset_all\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_sender\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_user_id\",\"type\":\"uint256\"}],\"name\":\"sendMsg\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_wallet\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"name\":\"sendReadMsg\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_reply\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userid\",\"type\":\"uint256\"}],\"name\":\"sendReply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_uri\",\"type\":\"string\"}],\"name\":\"set_dao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"}],\"name\":\"set_goal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"set_ideas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_template\",\"type\":\"string\"}],\"name\":\"update_template\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PlanetDAO.sol\":\"PlanetDAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"contracts/PlanetDAO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\nimport '@openzeppelin/contracts/utils/Strings.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\n\\r\\ncontract PlanetDAO {\\r\\n    struct dao_uri_struct {\\r\\n        string dao_wallet;\\r\\n        string dao_uri;\\r\\n        string finished;\\r\\n    }\\r\\n    struct goal_uri_struct {\\r\\n        string dao_id;\\r\\n        string goal_uri;\\r\\n    }\\r\\n\\r\\n    struct ideas_uri_struct {\\r\\n        uint256 goal_id;\\r\\n        string ideas_uri;\\r\\n        uint256 donation;\\r\\n    }\\r\\n\\r\\n    struct donation_struct {\\r\\n        uint256 ideas_id;\\r\\n        uint256 userid;\\r\\n        uint256 donation;\\r\\n    }\\r\\n\\r\\n    struct smart_contract_uri_struct {\\r\\n        uint256 smart_contract_id;\\r\\n        uint256 ideas_id;\\r\\n        string smart_contract_uri;\\r\\n    }\\r\\n    struct goal_ideas_votes_struct {\\r\\n        uint256 goal_id;\\r\\n        uint256 ideas_id;\\r\\n        uint256 user_id;\\r\\n    }\\r\\n    struct message_struct {\\r\\n        uint256 message_id;\\r\\n        uint256 ideas_id;\\r\\n        string message;\\r\\n        string sender;\\r\\n    }\\r\\n    struct message_read_struct {\\r\\n        uint256 message_id;\\r\\n        uint256 ideas_id;\\r\\n        uint256 user_id;\\r\\n        string msg_type;\\r\\n    }\\r\\n    struct reply_struct {\\r\\n        uint256 reply_id;\\r\\n        uint256 message_id;\\r\\n        uint256 ideas_id;\\r\\n        string message;\\r\\n    }\\r\\n\\r\\n    struct UnbondingRequest {\\r\\n        int64 completionTime;\\r\\n        uint256 amount;\\r\\n    }\\r\\n\\r\\n    struct join_struct {\\r\\n        uint256 daoid;\\r\\n        uint256 user_id;\\r\\n    }\\r\\n\\r\\n    struct user_badge_struct {\\r\\n        uint256 user_id;\\r\\n        bool dao;\\r\\n        bool joined;\\r\\n        bool goal;\\r\\n        bool ideas;\\r\\n        bool vote;\\r\\n        bool donation;\\r\\n        bool comment;\\r\\n        bool reply;\\r\\n    }\\r\\n    uint256 public _dao_ids;\\r\\n    uint256 public _donations_ids;\\r\\n    uint256 public _goal_ids;\\r\\n    uint256 public _ideas_ids;\\r\\n    uint256 public _join_ids;\\r\\n    uint256 public _smart_contract_ids;\\r\\n    uint256 public _ideas_vote_ids;\\r\\n    uint256 public _message_ids;\\r\\n    uint256 public _message_read_ids;\\r\\n    uint256 public _reply_ids;\\r\\n    mapping(uint256 => dao_uri_struct) public _dao_uris; //_dao_ids              => (Dao)                    Dao Wallet + Dao URI   + Finished\\r\\n    mapping(uint256 => string) public _template_uris; //_dao_ids              => (Dao)                   Template HTML Code\\r\\n    mapping(uint256 => join_struct) public _joined_person; //_join_ids             => (Dao)                  join_struct\\r\\n\\r\\n    mapping(uint256 => goal_uri_struct) public _goal_uris; //_goal_ids             => (Goal)                   Dao ID + Goal URI\\r\\n    mapping(uint256 => ideas_uri_struct) public _ideas_uris; //_ideas_ids            => (Ideas)                  Goal ID + Ideas URI\\r\\n    mapping(uint256 => uint256) public _donated; //uint256            => (Donated to ideas)                amount\\r\\n    mapping(uint256 => donation_struct) public _donations; //uint256            => donation_struct\\r\\n    mapping(uint256 => smart_contract_uri_struct) public _smart_contracts_uris; //_smart_contract_ids   => (Ideas Smart contract)   Goal ID + Ideas URI\\r\\n    mapping(uint256 => goal_ideas_votes_struct) public all_goal_ideas_votes; //_ideas_vote_ids       => (Vote)                   Goal ID + Ideas ID + User Id\\r\\n\\r\\n    mapping(uint256 => message_struct) public all_messages; // all_messages        => _message_ids + message_struct\\r\\n\\r\\n    mapping(uint256 => message_read_struct) public all_read_messages; // all_read_messages        => _message_read_ids + message_read_struct\\r\\n\\r\\n    mapping(uint256 => reply_struct) public all_replies; // all_messages        => _reply_ids + reply_struct\\r\\n    mapping(uint256 => user_badge_struct) public _user_badges; //user_id            => user_badge_struct\\r\\n\\r\\n    //Daos\\r\\n    function create_dao(string memory _dao_wallet, string memory _dao_uri, string memory _template,uint256 user_id) public returns (uint256) {\\r\\n        //Create Dao into _dao_uris\\r\\n        _dao_uris[_dao_ids] = dao_uri_struct(_dao_wallet, _dao_uri, 'False');\\r\\n        _template_uris[_dao_ids] = _template;\\r\\n        _user_badges[user_id].dao = true;\\r\\n        _dao_ids++;\\r\\n\\r\\n        return _dao_ids;\\r\\n    }\\r\\n\\r\\n    function update_template(uint256 _dao_id, string memory _template) public {\\r\\n        _template_uris[_dao_id] = _template;\\r\\n    }\\r\\n\\r\\n    function set_dao(uint256 _dao_id, string memory _dao_wallet, string memory _dao_uri) public {\\r\\n        //Set Dao of wallet and uri\\r\\n        _dao_uris[_dao_id].dao_wallet = _dao_wallet;\\r\\n        _dao_uris[_dao_id].dao_uri = _dao_uri;\\r\\n    }\\r\\n\\r\\n    function get_all_daos() public view returns (string[] memory) {\\r\\n        //Getting all doas\\r\\n        string[] memory _StoreInfo = new string[](_dao_ids);\\r\\n        for (uint256 i = 0; i < _dao_ids; i++) {\\r\\n            _StoreInfo[i] = _dao_uris[i].dao_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function dao_uri(uint256 _dao_id) public view returns (string memory) {\\r\\n        //Getting one dao URI\\r\\n        return _dao_uris[_dao_id].dao_uri;\\r\\n    }\\r\\n\\r\\n    //Goals\\r\\n    function create_goal(string memory _goal_uri, string memory  _dao_id,uint256 _user_id) public returns (uint256) {\\r\\n        //Create goal into _goal_uris\\r\\n        _goal_uris[_goal_ids] = goal_uri_struct(_dao_id, _goal_uri);\\r\\n        _user_badges[_user_id].goal = true;\\r\\n        _goal_ids++;\\r\\n\\r\\n        return _goal_ids;\\r\\n    }\\r\\n\\r\\n    function set_goal(uint256 _goal_id, string memory _goal_uri) public {\\r\\n        //Set goal uri\\r\\n        _goal_uris[_goal_id].goal_uri = _goal_uri;\\r\\n    }\\r\\n\\r\\n    function get_all_goals() public view returns (string[] memory) {\\r\\n        //Getting all goals\\r\\n        string[] memory _StoreInfo = new string[](_goal_ids);\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n            _StoreInfo[i] = _goal_uris[i].goal_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_all_goals_by_dao_id(string memory _dao_id) public view returns (string[] memory) {\\r\\n        //Getting all goals by dao id\\r\\n        string[] memory _StoreInfo = new string[](_goal_ids);\\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n            if (keccak256(bytes(_goal_uris[i].dao_id)) == keccak256(bytes(_dao_id))) {\\r\\n                _StoreInfo[_store_id] = _goal_uris[i].goal_uri;\\r\\n                _store_id++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_goal_id_by_goal_uri(string memory _goal_uri) public view returns (uint256) {\\r\\n        //Getting goal id by uri\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n            if (keccak256(bytes(_goal_uris[i].goal_uri)) == keccak256(bytes(_goal_uri))) return i;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function goal_uri(uint256 _goal_id) public view returns (string memory) {\\r\\n        //Getting one goal URI\\r\\n        return _goal_uris[_goal_id].goal_uri;\\r\\n    }\\r\\n\\r\\n    //Ideas\\r\\n    function create_ideas(string memory _ideas_uri, uint256 _goal_id, string[] memory _smart_contracts,uint256 _user_id) public returns (uint256) {\\r\\n        //Create ideas into _ideas_uris\\r\\n        _ideas_uris[_ideas_ids] = ideas_uri_struct(_goal_id, _ideas_uri, 0);\\r\\n        _user_badges[_user_id].ideas = true;\\r\\n        _ideas_ids++;\\r\\n\\r\\n        for (uint256 i = 0; i < _smart_contracts.length; i++) {\\r\\n            create_ideas_smart_contract(_ideas_ids, _smart_contract_ids, _smart_contracts[i]);\\r\\n            _smart_contract_ids++;\\r\\n        }\\r\\n\\r\\n        return _ideas_ids;\\r\\n    }\\r\\n\\r\\n    function create_ideas_smart_contract(uint256 _ideas_id, uint256 _smart_contract_id, string memory _smart_contract) private {\\r\\n        _smart_contracts_uris[_smart_contract_id] = smart_contract_uri_struct(_ideas_id, _smart_contract_id, _smart_contract);\\r\\n    }\\r\\n\\r\\n    function set_ideas(uint256 _ideas_id, string memory _ideas_uri) public {\\r\\n        _ideas_uris[_ideas_id].ideas_uri = _ideas_uri;\\r\\n    }\\r\\n\\r\\n    function add_donation(uint256 _ideas_id, uint256 _doantion,  uint256 _userid) public {\\r\\n        _user_badges[_userid].donation = true;\\r\\n        _ideas_uris[_ideas_id].donation += _doantion;\\r\\n        _donated[_userid] += _doantion;\\r\\n        _donations[_donations_ids] = donation_struct(_ideas_id, _userid, _doantion);\\r\\n        _donations_ids++;\\r\\n    }\\r\\n\\r\\n    function join_community(uint256 dao_id, uint256 person) public {\\r\\n        _user_badges[person].joined = true;\\r\\n        _joined_person[_join_ids] = join_struct({daoid: dao_id, user_id: person});\\r\\n        _join_ids++;\\r\\n    }\\r\\n\\r\\n    function is_person_joined( uint256 person) public view returns (bool) {\\r\\n \\r\\n        for (uint256 i = 0; i < _join_ids; i++) {\\r\\n            if (_joined_person[i].user_id == person) return true;\\r\\n        }\\r\\n\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function get_all_ideas() public view returns (string[] memory) {\\r\\n        //Getting all ideas\\r\\n        string[] memory _StoreInfo = new string[](_ideas_ids);\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            _StoreInfo[i] = _ideas_uris[i].ideas_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_all_ideas_by_goal_id(uint256 _goal_id) public view returns (string[] memory) {\\r\\n        //Getting all ideas by goal id\\r\\n        string[] memory _StoreInfo = new string[](_ideas_ids);\\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            if (_ideas_uris[i].goal_id == _goal_id) _StoreInfo[_store_id] = _ideas_uris[i].ideas_uri;\\r\\n            _store_id++;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_ideas_id_by_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\\r\\n        //Getting ideas id by uri\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return i;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function get_goal_id_from_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\\r\\n        //Getting ideas id by uri\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return _ideas_uris[i].goal_id;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function ideas_uri(uint256 _ideas_id) public view returns (string memory) {\\r\\n        //Getting one ideas URI\\r\\n        return _ideas_uris[_ideas_id].ideas_uri;\\r\\n    }\\r\\n\\r\\n    //Votes\\r\\n    function create_goal_ideas_vote(uint256 _goal_id, uint256 _ideas_id, uint256 _user_id) public returns (uint256) {\\r\\n         _user_badges[_user_id].vote = true;\\r\\n        //Create votes into all_goal_ideas_votes\\r\\n        all_goal_ideas_votes[_ideas_vote_ids] = goal_ideas_votes_struct(_goal_id, _ideas_id, _user_id);\\r\\n        _ideas_vote_ids++;\\r\\n\\r\\n        return _ideas_vote_ids;\\r\\n    }\\r\\n\\r\\n    function get_ideas_votes_from_goal(uint256 _goal_id, uint256 _ideas_id) public view returns (uint256[] memory ) {\\r\\n        //gets all ideas votes from goal\\r\\n        uint256[] memory _StoreInfo = new uint256[](_ideas_vote_ids);\\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _ideas_vote_ids; i++) {\\r\\n            if (all_goal_ideas_votes[i].goal_id == _goal_id && all_goal_ideas_votes[i].ideas_id == _ideas_id) _StoreInfo[_store_id] = all_goal_ideas_votes[i].user_id;\\r\\n            _store_id++;\\r\\n        }\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    //Messages\\r\\n    function sendMsg(uint256 _ideas_id, string memory _message, string memory _sender, uint256 _user_id) public returns (uint256) {\\r\\n            _user_badges[_user_id].comment = true;\\r\\n        //Create messsage into all_messages\\r\\n        all_messages[_message_ids] = message_struct(_message_ids, _ideas_id, _message, _sender);\\r\\n        _message_ids++;\\r\\n\\r\\n        return _message_ids;\\r\\n    }\\r\\n\\r\\n    function getMsgIDs(uint256 ideas_id) public view returns (uint256[] memory) {\\r\\n        //Getting all messages ids by idea id\\r\\n        uint256[] memory _All_Ideas_Messages = new uint256[](_message_ids);\\r\\n        uint256 _msg_id;\\r\\n        for (uint256 i = 0; i < _message_ids; i++) {\\r\\n            if (all_messages[i].ideas_id == ideas_id) {\\r\\n                _All_Ideas_Messages[_msg_id] = all_messages[i].message_id;\\r\\n                _msg_id++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _All_Ideas_Messages;\\r\\n    }\\r\\n\\r\\n    function sendReply(uint256 _message_id, string memory _reply,uint256 ideas_id,uint256 _userid) public returns (uint256) {\\r\\n          _user_badges[_userid].reply = true;\\r\\n        //Create reply into all_replies\\r\\n        all_replies[_reply_ids] = reply_struct(_reply_ids, _message_id,ideas_id, _reply);\\r\\n        _reply_ids++;\\r\\n\\r\\n        return _reply_ids;\\r\\n    }\\r\\n\\r\\n    function getReplyIDs(uint256 message_id) public view returns (uint256[] memory) {\\r\\n        //Getting all messages ids by idea id\\r\\n        uint256[] memory _All_Messages_Replys = new uint256[](_reply_ids);\\r\\n        uint256 _reply_id;\\r\\n        for (uint256 i = 0; i < _reply_ids; i++) {\\r\\n            if (all_replies[i].message_id == message_id) {\\r\\n                _All_Messages_Replys[_reply_id] = all_replies[i].reply_id;\\r\\n                _reply_id++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _All_Messages_Replys;\\r\\n    }\\r\\n\\r\\n    function sendReadMsg(uint256 _message_id, uint256 _ideas_id,uint256 _wallet, string memory msg_type) public returns (uint256) {\\r\\n        //Create messsage into all_messages\\r\\n        all_read_messages[_message_read_ids] = message_read_struct(_message_id, _ideas_id, _wallet,msg_type);\\r\\n        _message_read_ids++;\\r\\n\\r\\n        return _message_read_ids;\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n  function getReadMsg(uint256 _message_id, string memory msg_type)  public view returns (bool) {\\r\\n       \\r\\n       bool read = false;\\r\\n        for (uint256 i = 0; i < _message_read_ids; i++) {\\r\\n            if (all_read_messages[i].message_id == _message_id && keccak256(bytes(msg_type)) == keccak256(bytes(all_read_messages[i].msg_type))) {\\r\\n               read = true; \\r\\n            }\\r\\n        }\\r\\n\\r\\n        return read;\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n    function reset_all() public {\\r\\n        for (uint256 i = 0; i < _dao_ids; i++) delete _dao_uris[i];\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) delete _goal_uris[i];\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) delete _ideas_uris[i];\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) delete _smart_contracts_uris[i];\\r\\n        for (uint256 i = 0; i < _message_ids; i++) delete all_messages[i];\\r\\n        for (uint256 i = 0; i < _reply_ids; i++) delete all_replies[i];\\r\\n        for (uint256 i = 0; i < _ideas_vote_ids; i++) delete all_goal_ideas_votes[i];\\r\\n        _dao_ids = 0;\\r\\n        _goal_ids = 0;\\r\\n        _ideas_ids = 0;\\r\\n        _message_ids = 0;\\r\\n        _reply_ids = 0;\\r\\n        _ideas_vote_ids = 0;\\r\\n    }\\r\\n\\r\\n   \\r\\n}\\r\\n\",\"keccak256\":\"0xb276653afc2173ed60eb8a29d45e97b37588a9aa65f6ba62d1d57f6271e7ffb0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2021,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_dao_ids","offset":0,"slot":"0","type":"t_uint256"},{"astId":2023,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_donations_ids","offset":0,"slot":"1","type":"t_uint256"},{"astId":2025,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_goal_ids","offset":0,"slot":"2","type":"t_uint256"},{"astId":2027,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_ideas_ids","offset":0,"slot":"3","type":"t_uint256"},{"astId":2029,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_join_ids","offset":0,"slot":"4","type":"t_uint256"},{"astId":2031,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_smart_contract_ids","offset":0,"slot":"5","type":"t_uint256"},{"astId":2033,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_ideas_vote_ids","offset":0,"slot":"6","type":"t_uint256"},{"astId":2035,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_message_ids","offset":0,"slot":"7","type":"t_uint256"},{"astId":2037,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_message_read_ids","offset":0,"slot":"8","type":"t_uint256"},{"astId":2039,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_reply_ids","offset":0,"slot":"9","type":"t_uint256"},{"astId":2044,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_dao_uris","offset":0,"slot":"10","type":"t_mapping(t_uint256,t_struct(dao_uri_struct)1930_storage)"},{"astId":2048,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_template_uris","offset":0,"slot":"11","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":2053,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_joined_person","offset":0,"slot":"12","type":"t_mapping(t_uint256,t_struct(join_struct)2000_storage)"},{"astId":2058,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_goal_uris","offset":0,"slot":"13","type":"t_mapping(t_uint256,t_struct(goal_uri_struct)1935_storage)"},{"astId":2063,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_ideas_uris","offset":0,"slot":"14","type":"t_mapping(t_uint256,t_struct(ideas_uri_struct)1942_storage)"},{"astId":2067,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_donated","offset":0,"slot":"15","type":"t_mapping(t_uint256,t_uint256)"},{"astId":2072,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_donations","offset":0,"slot":"16","type":"t_mapping(t_uint256,t_struct(donation_struct)1949_storage)"},{"astId":2077,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_smart_contracts_uris","offset":0,"slot":"17","type":"t_mapping(t_uint256,t_struct(smart_contract_uri_struct)1956_storage)"},{"astId":2082,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"all_goal_ideas_votes","offset":0,"slot":"18","type":"t_mapping(t_uint256,t_struct(goal_ideas_votes_struct)1963_storage)"},{"astId":2087,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"all_messages","offset":0,"slot":"19","type":"t_mapping(t_uint256,t_struct(message_struct)1972_storage)"},{"astId":2092,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"all_read_messages","offset":0,"slot":"20","type":"t_mapping(t_uint256,t_struct(message_read_struct)1981_storage)"},{"astId":2097,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"all_replies","offset":0,"slot":"21","type":"t_mapping(t_uint256,t_struct(reply_struct)1990_storage)"},{"astId":2102,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_user_badges","offset":0,"slot":"22","type":"t_mapping(t_uint256,t_struct(user_badge_struct)2019_storage)"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_uint256,t_struct(dao_uri_struct)1930_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.dao_uri_struct)","numberOfBytes":"32","value":"t_struct(dao_uri_struct)1930_storage"},"t_mapping(t_uint256,t_struct(donation_struct)1949_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.donation_struct)","numberOfBytes":"32","value":"t_struct(donation_struct)1949_storage"},"t_mapping(t_uint256,t_struct(goal_ideas_votes_struct)1963_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct)","numberOfBytes":"32","value":"t_struct(goal_ideas_votes_struct)1963_storage"},"t_mapping(t_uint256,t_struct(goal_uri_struct)1935_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.goal_uri_struct)","numberOfBytes":"32","value":"t_struct(goal_uri_struct)1935_storage"},"t_mapping(t_uint256,t_struct(ideas_uri_struct)1942_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct)","numberOfBytes":"32","value":"t_struct(ideas_uri_struct)1942_storage"},"t_mapping(t_uint256,t_struct(join_struct)2000_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.join_struct)","numberOfBytes":"32","value":"t_struct(join_struct)2000_storage"},"t_mapping(t_uint256,t_struct(message_read_struct)1981_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.message_read_struct)","numberOfBytes":"32","value":"t_struct(message_read_struct)1981_storage"},"t_mapping(t_uint256,t_struct(message_struct)1972_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.message_struct)","numberOfBytes":"32","value":"t_struct(message_struct)1972_storage"},"t_mapping(t_uint256,t_struct(reply_struct)1990_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.reply_struct)","numberOfBytes":"32","value":"t_struct(reply_struct)1990_storage"},"t_mapping(t_uint256,t_struct(smart_contract_uri_struct)1956_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.smart_contract_uri_struct)","numberOfBytes":"32","value":"t_struct(smart_contract_uri_struct)1956_storage"},"t_mapping(t_uint256,t_struct(user_badge_struct)2019_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.user_badge_struct)","numberOfBytes":"32","value":"t_struct(user_badge_struct)2019_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(dao_uri_struct)1930_storage":{"encoding":"inplace","label":"struct PlanetDAO.dao_uri_struct","members":[{"astId":1925,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"dao_wallet","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1927,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"dao_uri","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1929,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"finished","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(donation_struct)1949_storage":{"encoding":"inplace","label":"struct PlanetDAO.donation_struct","members":[{"astId":1944,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1946,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"userid","offset":0,"slot":"1","type":"t_uint256"},{"astId":1948,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"donation","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(goal_ideas_votes_struct)1963_storage":{"encoding":"inplace","label":"struct PlanetDAO.goal_ideas_votes_struct","members":[{"astId":1958,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"goal_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1960,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1962,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"user_id","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(goal_uri_struct)1935_storage":{"encoding":"inplace","label":"struct PlanetDAO.goal_uri_struct","members":[{"astId":1932,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"dao_id","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1934,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"goal_uri","offset":0,"slot":"1","type":"t_string_storage"}],"numberOfBytes":"64"},"t_struct(ideas_uri_struct)1942_storage":{"encoding":"inplace","label":"struct PlanetDAO.ideas_uri_struct","members":[{"astId":1937,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"goal_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1939,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_uri","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1941,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"donation","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(join_struct)2000_storage":{"encoding":"inplace","label":"struct PlanetDAO.join_struct","members":[{"astId":1997,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"daoid","offset":0,"slot":"0","type":"t_uint256"},{"astId":1999,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"user_id","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_struct(message_read_struct)1981_storage":{"encoding":"inplace","label":"struct PlanetDAO.message_read_struct","members":[{"astId":1974,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"message_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1976,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1978,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"user_id","offset":0,"slot":"2","type":"t_uint256"},{"astId":1980,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"msg_type","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(message_struct)1972_storage":{"encoding":"inplace","label":"struct PlanetDAO.message_struct","members":[{"astId":1965,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"message_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1967,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1969,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"message","offset":0,"slot":"2","type":"t_string_storage"},{"astId":1971,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"sender","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(reply_struct)1990_storage":{"encoding":"inplace","label":"struct PlanetDAO.reply_struct","members":[{"astId":1983,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"reply_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1985,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"message_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1987,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"2","type":"t_uint256"},{"astId":1989,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"message","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(smart_contract_uri_struct)1956_storage":{"encoding":"inplace","label":"struct PlanetDAO.smart_contract_uri_struct","members":[{"astId":1951,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"smart_contract_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1953,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1955,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"smart_contract_uri","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(user_badge_struct)2019_storage":{"encoding":"inplace","label":"struct PlanetDAO.user_badge_struct","members":[{"astId":2002,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"user_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2004,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"dao","offset":0,"slot":"1","type":"t_bool"},{"astId":2006,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"joined","offset":1,"slot":"1","type":"t_bool"},{"astId":2008,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"goal","offset":2,"slot":"1","type":"t_bool"},{"astId":2010,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas","offset":3,"slot":"1","type":"t_bool"},{"astId":2012,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"vote","offset":4,"slot":"1","type":"t_bool"},{"astId":2014,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"donation","offset":5,"slot":"1","type":"t_bool"},{"astId":2016,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"comment","offset":6,"slot":"1","type":"t_bool"},{"astId":2018,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"reply","offset":7,"slot":"1","type":"t_bool"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}