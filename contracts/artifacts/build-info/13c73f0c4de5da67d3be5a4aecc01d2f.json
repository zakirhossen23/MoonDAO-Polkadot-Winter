{"id":"13c73f0c4de5da67d3be5a4aecc01d2f","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/HyperContract.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity >=0.6.11;\nimport \"./precompiles/InterchainAccountRouter.sol\";\nimport \"./precompiles/InterchainGasPaymaster.sol\";\nimport {CallLib} from \"./precompiles/libs/Call.sol\";\n\ncontract HyperContract {\n    bytes32 public lastMessageID ;\n    function sendTransaction(\n        uint32 ethereumDomain,\n        address routerAddress,\n        address toAddress,\n        uint256 value,\n        bytes memory data\n    ) public {\n        IInterchainAccountRouter router = IInterchainAccountRouter(\n            routerAddress\n        );\n        lastMessageID = router.callRemote(\n            ethereumDomain,\n            (toAddress),\n            value,\n            data\n        );\n    }\n\n function processMessage(\n        uint32 ethereumDomain,\n        address igpAddress,\n        uint256 gasAmount\n    ) public payable {\n      \n        // The testnet DefaultIsmInterchainGasPaymaster\n        IInterchainGasPaymaster igp = IInterchainGasPaymaster(igpAddress);\n        igp.payForGas{value: msg.value}(\n            // The ID of the message\n            lastMessageID,\n            // Destination domain\n            ethereumDomain,\n            // The total gas amount. This should be the\n            // overhead gas amount + gas used by the call being made\n            gasAmount,\n            // Refund the msg.sender\n            msg.sender\n        );\n    }\n\n    \n}\n"},"contracts/MoonDAO.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport '@openzeppelin/contracts/utils/Strings.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\n\r\ncontract MoonDAO {\r\n    struct dao_uri_struct {\r\n        string dao_wallet;\r\n        string dao_uri;\r\n        string finished;\r\n    }\r\n    struct goal_uri_struct {\r\n        uint256 dao_id;\r\n        string goal_uri;\r\n    }\r\n\r\n    struct ideas_uri_struct {\r\n        uint256 goal_id;\r\n        string ideas_uri;\r\n        uint256 donation;\r\n    }\r\n\r\n    struct donation_struct {\r\n        uint256 ideas_id;\r\n        string wallet;\r\n        uint256 donation;\r\n    }\r\n\r\n    struct smart_contract_uri_struct {\r\n        uint256 smart_contract_id;\r\n        uint256 ideas_id;\r\n        string smart_contract_uri;\r\n    }\r\n    struct goal_ideas_votes_struct {\r\n        uint256 goal_id;\r\n        uint256 ideas_id;\r\n        string wallet;\r\n    }\r\n    struct message_struct {\r\n        uint256 message_id;\r\n        uint256 ideas_id;\r\n        string message;\r\n        string sender;\r\n    }\r\n    struct message_read_struct {\r\n        uint256 message_id;\r\n        uint256 ideas_id;\r\n        string wallet;\r\n        string msg_type;\r\n    }\r\n    struct reply_struct {\r\n        uint256 reply_id;\r\n        uint256 message_id;\r\n        uint256 ideas_id;\r\n        string message;\r\n    }\r\n\r\n    struct UnbondingRequest {\r\n        int64 completionTime;\r\n        uint256 amount;\r\n    }\r\n\r\n    struct join_struct {\r\n        uint256 daoid;\r\n        string wallet;\r\n    }\r\n\r\n    struct user_badge_struct {\r\n        string wallet;\r\n        bool dao;\r\n        bool joined;\r\n        bool goal;\r\n        bool ideas;\r\n        bool vote;\r\n        bool donation;\r\n        bool comment;\r\n        bool reply;\r\n    }\r\n    uint256 public _dao_ids;\r\n    uint256 public _donations_ids;\r\n    uint256 public _goal_ids;\r\n    uint256 public _ideas_ids;\r\n    uint256 public _join_ids;\r\n    uint256 public _smart_contract_ids;\r\n    uint256 public _ideas_vote_ids;\r\n    uint256 public _message_ids;\r\n    uint256 public _message_read_ids;\r\n    uint256 public _reply_ids;\r\n    mapping(uint256 => dao_uri_struct) public _dao_uris; //_dao_ids              => (Dao)                    Dao Wallet + Dao URI   + Finished\r\n    mapping(uint256 => string) public _template_uris; //_dao_ids              => (Dao)                   Template HTML Code\r\n    mapping(uint256 => join_struct) public _joined_person; //_join_ids             => (Dao)                  join_struct\r\n\r\n    mapping(uint256 => goal_uri_struct) public _goal_uris; //_goal_ids             => (Goal)                   Dao ID + Goal URI\r\n    mapping(uint256 => ideas_uri_struct) public _ideas_uris; //_ideas_ids            => (Ideas)                  Goal ID + Ideas URI\r\n    mapping(string => uint256) public _donated; //string            => (Donated to ideas)                amount\r\n    mapping(uint256 => donation_struct) public _donations; //uint256            => donation_struct\r\n    mapping(uint256 => smart_contract_uri_struct) public _smart_contracts_uris; //_smart_contract_ids   => (Ideas Smart contract)   Goal ID + Ideas URI\r\n    mapping(uint256 => goal_ideas_votes_struct) public all_goal_ideas_votes; //_ideas_vote_ids       => (Vote)                   Goal ID + Ideas ID + Wallet\r\n\r\n    mapping(uint256 => message_struct) public all_messages; // all_messages        => _message_ids + message_struct\r\n\r\n    mapping(uint256 => message_read_struct) public all_read_messages; // all_read_messages        => _message_read_ids + message_read_struct\r\n\r\n    mapping(uint256 => reply_struct) public all_replies; // all_messages        => _reply_ids + reply_struct\r\n    mapping(string => user_badge_struct) public _user_badges; //string            => user_badge_struct\r\n\r\n    //Daos\r\n    function create_dao(string memory _dao_wallet, string memory _dao_uri, string memory _template) public returns (uint256) {\r\n        //Create Dao into _dao_uris\r\n        _dao_uris[_dao_ids] = dao_uri_struct(_dao_wallet, _dao_uri, 'False');\r\n        _template_uris[_dao_ids] = _template;\r\n        _user_badges[_dao_wallet].dao = true;\r\n        _dao_ids++;\r\n\r\n        return _dao_ids;\r\n    }\r\n\r\n    function update_template(uint256 _dao_id, string memory _template) public {\r\n        _template_uris[_dao_id] = _template;\r\n    }\r\n\r\n    function set_dao(uint256 _dao_id, string memory _dao_wallet, string memory _dao_uri) public {\r\n        //Set Dao of wallet and uri\r\n        _dao_uris[_dao_id].dao_wallet = _dao_wallet;\r\n        _dao_uris[_dao_id].dao_uri = _dao_uri;\r\n    }\r\n\r\n    function get_all_daos() public view returns (string[] memory) {\r\n        //Getting all doas\r\n        string[] memory _StoreInfo = new string[](_dao_ids);\r\n        for (uint256 i = 0; i < _dao_ids; i++) {\r\n            _StoreInfo[i] = _dao_uris[i].dao_uri;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function dao_uri(uint256 _dao_id) public view returns (string memory) {\r\n        //Getting one dao URI\r\n        return _dao_uris[_dao_id].dao_uri;\r\n    }\r\n\r\n    //Goals\r\n    function create_goal(string memory _goal_uri, uint256 _dao_id,string memory _wallet) public returns (uint256) {\r\n        //Create goal into _goal_uris\r\n        _goal_uris[_goal_ids] = goal_uri_struct(_dao_id, _goal_uri);\r\n        _user_badges[_wallet].goal = true;\r\n        _goal_ids++;\r\n\r\n        return _goal_ids;\r\n    }\r\n\r\n    function set_goal(uint256 _goal_id, string memory _goal_uri) public {\r\n        //Set goal uri\r\n        _goal_uris[_goal_id].goal_uri = _goal_uri;\r\n    }\r\n\r\n    function get_all_goals() public view returns (string[] memory) {\r\n        //Getting all goals\r\n        string[] memory _StoreInfo = new string[](_goal_ids);\r\n        for (uint256 i = 0; i < _goal_ids; i++) {\r\n            _StoreInfo[i] = _goal_uris[i].goal_uri;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_all_goals_by_dao_id(uint256 _dao_id) public view returns (string[] memory) {\r\n        //Getting all goals by dao id\r\n        string[] memory _StoreInfo = new string[](_goal_ids);\r\n        uint256 _store_id;\r\n        for (uint256 i = 0; i < _goal_ids; i++) {\r\n            if (_goal_uris[i].dao_id == _dao_id) {\r\n                _StoreInfo[_store_id] = _goal_uris[i].goal_uri;\r\n                _store_id++;\r\n            }\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_goal_id_by_goal_uri(string memory _goal_uri) public view returns (uint256) {\r\n        //Getting goal id by uri\r\n        for (uint256 i = 0; i < _goal_ids; i++) {\r\n            if (keccak256(bytes(_goal_uris[i].goal_uri)) == keccak256(bytes(_goal_uri))) return i;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function goal_uri(uint256 _goal_id) public view returns (string memory) {\r\n        //Getting one goal URI\r\n        return _goal_uris[_goal_id].goal_uri;\r\n    }\r\n\r\n    //Ideas\r\n    function create_ideas(string memory _ideas_uri, uint256 _goal_id, string[] memory _smart_contracts,string memory _wallet) public returns (uint256) {\r\n        //Create ideas into _ideas_uris\r\n        _ideas_uris[_ideas_ids] = ideas_uri_struct(_goal_id, _ideas_uri, 0);\r\n        _user_badges[_wallet].ideas = true;\r\n        _ideas_ids++;\r\n\r\n        for (uint256 i = 0; i < _smart_contracts.length; i++) {\r\n            create_ideas_smart_contract(_ideas_ids, _smart_contract_ids, _smart_contracts[i]);\r\n            _smart_contract_ids++;\r\n        }\r\n\r\n        return _ideas_ids;\r\n    }\r\n\r\n    function create_ideas_smart_contract(uint256 _ideas_id, uint256 _smart_contract_id, string memory _smart_contract) private {\r\n        _smart_contracts_uris[_smart_contract_id] = smart_contract_uri_struct(_ideas_id, _smart_contract_id, _smart_contract);\r\n    }\r\n\r\n    function set_ideas(uint256 _ideas_id, string memory _ideas_uri) public {\r\n        _ideas_uris[_ideas_id].ideas_uri = _ideas_uri;\r\n    }\r\n\r\n    function add_donation(uint256 _ideas_id, uint256 _doantion, string memory _donator) public {\r\n        _user_badges[_donator].donation = true;\r\n        _ideas_uris[_ideas_id].donation += _doantion;\r\n        _donated[_donator] += _doantion;\r\n        _donations[_donations_ids] = donation_struct(_ideas_id, _donator, _doantion);\r\n        _donations_ids++;\r\n    }\r\n\r\n    function join_community(uint256 dao_id, string memory person) public {\r\n        _user_badges[person].joined = true;\r\n        _joined_person[_join_ids] = join_struct({daoid: dao_id, wallet: person});\r\n        _join_ids++;\r\n    }\r\n\r\n    function is_person_joined(string memory wallet) public view returns (bool) {\r\n        //Getting goal id by uri\r\n        for (uint256 i = 0; i < _join_ids; i++) {\r\n            if (keccak256(bytes(_joined_person[i].wallet)) == keccak256(bytes(wallet))) return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function get_all_ideas() public view returns (string[] memory) {\r\n        //Getting all ideas\r\n        string[] memory _StoreInfo = new string[](_ideas_ids);\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            _StoreInfo[i] = _ideas_uris[i].ideas_uri;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_all_ideas_by_goal_id(uint256 _goal_id) public view returns (string[] memory) {\r\n        //Getting all ideas by goal id\r\n        string[] memory _StoreInfo = new string[](_ideas_ids);\r\n        uint256 _store_id;\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            if (_ideas_uris[i].goal_id == _goal_id) _StoreInfo[_store_id] = _ideas_uris[i].ideas_uri;\r\n            _store_id++;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_ideas_id_by_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\r\n        //Getting ideas id by uri\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return i;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function get_goal_id_from_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\r\n        //Getting ideas id by uri\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return _ideas_uris[i].goal_id;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function ideas_uri(uint256 _ideas_id) public view returns (string memory) {\r\n        //Getting one ideas URI\r\n        return _ideas_uris[_ideas_id].ideas_uri;\r\n    }\r\n\r\n    //Votes\r\n    function create_goal_ideas_vote(uint256 _goal_id, uint256 _ideas_id, string memory _wallet) public returns (uint256) {\r\n         _user_badges[_wallet].vote = true;\r\n        //Create votes into all_goal_ideas_votes\r\n        all_goal_ideas_votes[_ideas_vote_ids] = goal_ideas_votes_struct(_goal_id, _ideas_id, _wallet);\r\n        _ideas_vote_ids++;\r\n\r\n        return _ideas_vote_ids;\r\n    }\r\n\r\n    function get_ideas_votes_from_goal(uint256 _goal_id, uint256 _ideas_id) public view returns (string[] memory) {\r\n        //gets all ideas votes from goal\r\n        string[] memory _StoreInfo = new string[](_ideas_vote_ids);\r\n        uint256 _store_id;\r\n        for (uint256 i = 0; i < _ideas_vote_ids; i++) {\r\n            if (all_goal_ideas_votes[i].goal_id == _goal_id && all_goal_ideas_votes[i].ideas_id == _ideas_id) _StoreInfo[_store_id] = all_goal_ideas_votes[i].wallet;\r\n            _store_id++;\r\n        }\r\n        return _StoreInfo;\r\n    }\r\n\r\n    //Messages\r\n    function sendMsg(uint256 _ideas_id, string memory _message, string memory _sender) public returns (uint256) {\r\n            _user_badges[_sender].comment = true;\r\n        //Create messsage into all_messages\r\n        all_messages[_message_ids] = message_struct(_message_ids, _ideas_id, _message, _sender);\r\n        _message_ids++;\r\n\r\n        return _message_ids;\r\n    }\r\n\r\n    function getMsgIDs(uint256 ideas_id) public view returns (uint256[] memory) {\r\n        //Getting all messages ids by idea id\r\n        uint256[] memory _All_Ideas_Messages = new uint256[](_message_ids);\r\n        uint256 _msg_id;\r\n        for (uint256 i = 0; i < _message_ids; i++) {\r\n            if (all_messages[i].ideas_id == ideas_id) {\r\n                _All_Ideas_Messages[_msg_id] = all_messages[i].message_id;\r\n                _msg_id++;\r\n            }\r\n        }\r\n\r\n        return _All_Ideas_Messages;\r\n    }\r\n\r\n    function sendReply(uint256 _message_id, string memory _reply,uint256 ideas_id,string memory _wallet) public returns (uint256) {\r\n          _user_badges[_wallet].reply = true;\r\n        //Create reply into all_replies\r\n        all_replies[_reply_ids] = reply_struct(_reply_ids, _message_id,ideas_id, _reply);\r\n        _reply_ids++;\r\n\r\n        return _reply_ids;\r\n    }\r\n\r\n    function getReplyIDs(uint256 message_id) public view returns (uint256[] memory) {\r\n        //Getting all messages ids by idea id\r\n        uint256[] memory _All_Messages_Replys = new uint256[](_reply_ids);\r\n        uint256 _reply_id;\r\n        for (uint256 i = 0; i < _reply_ids; i++) {\r\n            if (all_replies[i].message_id == message_id) {\r\n                _All_Messages_Replys[_reply_id] = all_replies[i].reply_id;\r\n                _reply_id++;\r\n            }\r\n        }\r\n\r\n        return _All_Messages_Replys;\r\n    }\r\n\r\n    function sendReadMsg(uint256 _message_id, uint256 _ideas_id,string memory _wallet, string memory msg_type) public returns (uint256) {\r\n        //Create messsage into all_messages\r\n        all_read_messages[_message_read_ids] = message_read_struct(_message_id, _ideas_id, _wallet,msg_type);\r\n        _message_read_ids++;\r\n\r\n        return _message_read_ids;\r\n    }\r\n\r\n\r\n\r\n  function getReadMsg(uint256 _message_id, string memory msg_type)  public view returns (bool) {\r\n       \r\n       bool read = false;\r\n        for (uint256 i = 0; i < _message_read_ids; i++) {\r\n            if (all_read_messages[i].message_id == _message_id && keccak256(bytes(msg_type)) == keccak256(bytes(all_read_messages[i].msg_type))) {\r\n               read = true; \r\n            }\r\n        }\r\n\r\n        return read;\r\n    }\r\n\r\n\r\n\r\n    function reset_all() public {\r\n        for (uint256 i = 0; i < _dao_ids; i++) delete _dao_uris[i];\r\n        for (uint256 i = 0; i < _goal_ids; i++) delete _goal_uris[i];\r\n        for (uint256 i = 0; i < _ideas_ids; i++) delete _ideas_uris[i];\r\n        for (uint256 i = 0; i < _goal_ids; i++) delete _smart_contracts_uris[i];\r\n        for (uint256 i = 0; i < _message_ids; i++) delete all_messages[i];\r\n        for (uint256 i = 0; i < _reply_ids; i++) delete all_replies[i];\r\n        for (uint256 i = 0; i < _ideas_vote_ids; i++) delete all_goal_ideas_votes[i];\r\n        _dao_ids = 0;\r\n        _goal_ids = 0;\r\n        _ideas_ids = 0;\r\n        _message_ids = 0;\r\n        _reply_ids = 0;\r\n        _ideas_vote_ids = 0;\r\n    }\r\n\r\n    function addTempData() public {\r\n        create_dao(\r\n            '0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4',\r\n            '{\"title\":\"Asset Metadata\",\"type\":\"object\",\"properties\":{\"Title\":{\"type\":\"string\",\"description\":\"Lake Nona, Orlando US\"},\"Description\":{\"type\":\"string\",\"description\":\"\"},\"Start_Date\":{\"type\":\"string\",\"description\":\"2023-08-16T11:14\"},\"logo\":{\"type\":\"string\",\"description\":{\"url\":\"https://bafybeicb5yy36ocs4yulph6zpx7ggsyeginsjwnft7ml7cxojywpbsjuq4.ipfs.nftstorage.link\",\"type\":\"image/png\"}},\"wallet\":{\"type\":\"string\",\"description\":\"0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4\"},\"SubsPrice\":{\"type\":\"number\",\"description\":\"0.05\"},\"typeimg\":{\"type\":\"string\",\"description\":\"Dao\"},\"allFiles\":[{\"url\":\"https://bafybeicb5yy36ocs4yulph6zpx7ggsyeginsjwnft7ml7cxojywpbsjuq4.ipfs.nftstorage.link\",\"type\":\"image/png\"}]}}',\r\n            '<body><div id=\"dao-container\"><div class=\"dao-container flex items-center flex-col gap-8 relative\"><div class=\"dao-title gap-8 flex flex-col relative\"><div><h1 id=\"dao-title\" class=\"text-moon-32 font-bold\">Lake Nona, Orlando US</h1></div><div class=\"flex gap-4 justify-between tabs\"><div class=\"flex\"><a href=\"/?q=All\" class=\"DonationBarLink tab block px-3 py-2 active\">All</a><a href=\"/?q=Today\" class=\"DonationBarLink tab block px-3 py-2\">Today</a><a href=\"/?q=This%20Month\" class=\"DonationBarLink tab block px-3 py-2\">This Month</a></div><button type=\"button\" value=\"Create Goal\" class=\"py-2 px-4 gap-2 text-moon-14 rounded-moon-i-sm z-0 flex justify-center items-center font-medium no-underline overflow-hidden select-none outline-none transition duration-200 active:scale-90 focus-visible:shadow-focus btn-primary create-goal-block\"><div class=\"gap-2\" id=\"iqokj\">\\n       \\n      </div></button></div></div><div class=\"dao-divider\">\\n  </div><div class=\"flex flex-col gap-8\"><img id=\"dao-image\" src=\"https://bafybeicb5yy36ocs4yulph6zpx7ggsyeginsjwnft7ml7cxojywpbsjuq4.ipfs.nftstorage.link\"/></div><div id=\"goal-container\" class=\"flex flex-col gap-8\">\\n\\n  </div></div></div></body><style>* { box-sizing: border-box; } body {margin: 0;}#dao-title{width:78%;}#iqokj{flex-direction:row-reverse;display:flex;}.py-2.px-4.gap-2.text-moon-14.rounded-moon-i-sm.relative.z-0.flex.justify-center.items-center.font-medium.no-underline.overflow-hidden.select-none.outline-none.transition.duration-200.active\\\\:scale-90.focus-visible\\\\:shadow-focus.btn-primary.create-goal-block.{position:relative;right:0px;}.py-2.px-4.gap-2.text-moon-14.rounded-moon-i-sm.z-0.flex.justify-center.items-center.font-medium.no-underline.overflow-hidden.select-none.outline-none.transition.duration-200.active\\\\:scale-90.focus-visible\\\\:shadow-focus.btn-primary.create-goal-block.{right:10px;position:absolute;}</style>'\r\n        );\r\n        create_goal('{\"title\":\"Asset Metadata\",\"type\":\"object\",\"properties\":{\"Title\":{\"type\":\"string\",\"description\":\"Renewable energy\"},\"Description\":{\"type\":\"string\",\"description\":\"Our DAO is starting it\\'s own renewable energy company that delivers energy for the whole community\"},\"Budget\":{\"type\":\"string\",\"description\":\"$1,000,000\"},\"End_Date\":{\"type\":\"string\",\"description\":\"2023-08-31T22:40\"},\"wallet\":{\"type\":\"string\",\"description\":\"0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4\"},\"logo\":{\"type\":\"string\",\"description\":{\"url\":\"https://bafybeic5g4xvj7myrgkb62lenld7orpl2hrspmzlzcdbzpyotc33tqygpe.ipfs.nftstorage.link\",\"type\":\"image/jpeg\"}},\"allFiles\":[{\"url\":\"https://bafybeic5g4xvj7myrgkb62lenld7orpl2hrspmzlzcdbzpyotc33tqygpe.ipfs.nftstorage.link\",\"type\":\"image/jpeg\"}]}}', 0, '0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4');\r\n        string[] memory row;\r\n        create_ideas('{\"title\":\"Asset Metadata\",\"type\":\"object\",\"properties\":{\"Title\":{\"type\":\"string\",\"description\":\"Solar panels on the Consequences Nona community center \"},\"Description\":{\"type\":\"string\",\"description\":\"We can ins\\\\n\"},\"StructureLeft\":{\"type\":\"string\",\"description\":[\"Representatives Berlin\",\"Community\",\"Children\"]},\"StructureRight\":{\"type\":\"string\",\"description\":[\"20%\",\"70%\",\"10%\"]},\"Qoutation\":{\"link\":\"https://uploadify.net/5273d350dfd001d1/quotation_Consequences_Nona_community_center.pdf\",\"prize\":\"$48,071.55\"},\"wallet\":{\"type\":\"string\",\"description\":\"0xD60bC0b00c1D8a718FB6fDeDc4466c7A1180868c\"},\"logo\":{\"type\":\"string\",\"description\":{\"url\":\"https://bafybeif4fk6twikkcyopglhppdo7dd3l34bm6qedje3mxftec5e7b4he54.ipfs.nftstorage.link\",\"type\":\"image/png\"}},\"allFiles\":[{\"url\":\"https://bafybeif4fk6twikkcyopglhppdo7dd3l34bm6qedje3mxftec5e7b4he54.ipfs.nftstorage.link\",\"type\":\"image/png\"}]}}', 0, row, '0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4');\r\n    }\r\n}\r\n"},"contracts/precompiles/Batch.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.8.3;\n\n/// @dev The Batch contract's address.\naddress constant BATCH_ADDRESS = 0x0000000000000000000000000000000000000808;\n\n/// @dev The Batch contract's instance.\nBatch constant BATCH_CONTRACT = Batch(BATCH_ADDRESS);\n\n/// @author The Moonbeam Team\n/// @title Batch precompile\n/// @dev Allows to perform multiple calls throught one call to the precompile.\n/// Can be used by EOA to do multiple calls in a single transaction.\n/// @custom:address 0x0000000000000000000000000000000000000808\ninterface Batch {\n    /// @dev Batch multiple calls into a single transaction.\n    /// All calls are performed from the address calling this precompile.\n    ///\n    /// In case of one subcall reverting following subcalls will still be attempted.\n    ///\n    /// @param to List of addresses to call.\n    /// @param value List of values for each subcall. If array is shorter than \"to\" then additional\n    /// calls will be performed with a value of 0.\n    /// @param callData Call data for each `to` address. If array is shorter than \"to\" then\n    /// additional calls will be performed with an empty call data.\n    /// @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\n    /// If array is shorter than \"to\" then the remaining gas available will be used.\n    /// @custom:selector 79df4b9c\n    function batchSome(\n        address[] memory to,\n        uint256[] memory value,\n        bytes[] memory callData,\n        uint64[] memory gasLimit\n    ) external;\n\n    /// @dev Batch multiple calls into a single transaction.\n    /// All calls are performed from the address calling this precompile.\n    ///\n    /// In case of one subcall reverting, no more subcalls will be executed but\n    /// the batch transaction will succeed. Use batchAll to revert on any subcall revert.\n    ///\n    /// @param to List of addresses to call.\n    /// @param value List of values for each subcall. If array is shorter than \"to\" then additional\n    /// calls will be performed with a value of 0.\n    /// @param callData Call data for each `to` address. If array is shorter than \"to\" then\n    /// additional calls will be performed with an empty call data.\n    /// @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\n    /// If array is shorter than \"to\" then the remaining gas available will be used.\n    /// @custom:selector cf0491c7\n    function batchSomeUntilFailure(\n        address[] memory to,\n        uint256[] memory value,\n        bytes[] memory callData,\n        uint64[] memory gasLimit\n    ) external;\n\n    /// @dev Batch multiple calls into a single transaction.\n    /// All calls are performed from the address calling this precompile.\n    ///\n    /// In case of one subcall reverting, the entire batch will revert.\n    ///\n    /// @param to List of addresses to call.\n    /// @param value List of values for each subcall. If array is shorter than \"to\" then additional\n    /// calls will be performed with a value of 0.\n    /// @param callData Call data for each `to` address. If array is shorter than \"to\" then\n    /// additional calls will be performed with an empty call data.\n    /// @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\n    /// If array is shorter than \"to\" then the remaining gas available will be used.\n    /// @custom:selector 96e292b8\n    function batchAll(\n        address[] memory to,\n        uint256[] memory value,\n        bytes[] memory callData,\n        uint64[] memory gasLimit\n    ) external;\n\n    /// Emitted when a subcall succeeds.\n    event SubcallSucceeded(uint256 index);\n\n    /// Emitted when a subcall fails.\n    event SubcallFailed(uint256 index);\n}"},"contracts/precompiles/InterchainAccountRouter.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity >=0.6.11;\n\nimport {CallLib} from \"./libs/Call.sol\";\n\ninterface IInterchainAccountRouter {\n    function callRemote(\n        uint32 _destinationDomain,\n         address to,\n        uint256 value,\n        bytes memory data\n    ) external returns (bytes32);\n\n    function getRemoteInterchainAccount(uint32 _destination, address _owner)\n        external\n        view\n        returns (address);\n}\n"},"contracts/precompiles/InterchainGasPaymaster.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity >=0.6.11;\n\ninterface IInterchainGasPaymaster {\n    function payForGas(\n        bytes32 _messageId,\n         uint32 _destinationDomain,\n        uint256 _gasAmount,\n        address _refundAddress\n    ) external payable;\n}\n"},"contracts/precompiles/libs/Call.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.13;\n\nimport {Address} from \"@openzeppelin/contracts/utils/Address.sol\";\n\nimport {TypeCasts} from \"./TypeCasts.sol\";\n\nlibrary CallLib {\n    struct StaticCall {\n        // supporting non EVM targets\n        bytes32 to;\n        bytes data;\n    }\n\n    struct Call {\n        // supporting non EVM targets\n        bytes32 to;\n        uint256 value;\n        bytes data;\n    }\n\n    struct StaticCallWithCallback {\n        StaticCall _call;\n        bytes callback;\n    }\n\n    function call(Call memory _call)\n        internal\n        returns (bytes memory returnData)\n    {\n        return\n            Address.functionCallWithValue(\n                TypeCasts.bytes32ToAddress(_call.to),\n                _call.data,\n                _call.value\n            );\n    }\n\n    function staticcall(StaticCall memory _call)\n        private\n        view\n        returns (bytes memory)\n    {\n        return\n            Address.functionStaticCall(\n                TypeCasts.bytes32ToAddress(_call.to),\n                _call.data\n            );\n    }\n\n    function staticcall(StaticCallWithCallback memory _call)\n        internal\n        view\n        returns (bytes memory callback)\n    {\n        return bytes.concat(_call.callback, staticcall(_call._call));\n    }\n\n    function multicall(Call[] memory calls) internal {\n        uint256 i = 0;\n        uint256 len = calls.length;\n        while (i < len) {\n            call(calls[i]);\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    function multistaticcall(StaticCallWithCallback[] memory _calls)\n        internal\n        view\n        returns (bytes[] memory)\n    {\n        uint256 i = 0;\n        uint256 len = _calls.length;\n        bytes[] memory callbacks = new bytes[](len);\n        while (i < len) {\n            callbacks[i] = staticcall(_calls[i]);\n            unchecked {\n                ++i;\n            }\n        }\n        return callbacks;\n    }\n\n    function multicallto(address to, bytes[] memory calls) internal {\n        uint256 i = 0;\n        uint256 len = calls.length;\n        while (i < len) {\n            Address.functionCall(to, calls[i]);\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    function build(bytes32 to, bytes memory data)\n        internal\n        pure\n        returns (StaticCall memory)\n    {\n        return StaticCall(to, data);\n    }\n\n    function build(address to, bytes memory data)\n        internal\n        pure\n        returns (StaticCall memory)\n    {\n        return build(TypeCasts.addressToBytes32(to), data);\n    }\n\n    function build(\n        bytes32 to,\n        uint256 value,\n        bytes memory data\n    ) internal pure returns (Call memory) {\n        return Call(to, value, data);\n    }\n\n    function build(\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal pure returns (Call memory) {\n        return Call(TypeCasts.addressToBytes32(to), value, data);\n    }\n\n    function build(\n        bytes32 to,\n        bytes memory data,\n        bytes memory callback\n    ) internal pure returns (StaticCallWithCallback memory) {\n        return StaticCallWithCallback(build(to, data), callback);\n    }\n\n    function build(\n        address to,\n        bytes memory data,\n        bytes memory callback\n    ) internal pure returns (StaticCallWithCallback memory) {\n        return StaticCallWithCallback(build(to, data), callback);\n    }\n}"},"contracts/precompiles/libs/TypeCasts.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity >=0.6.11;\n\nlibrary TypeCasts {\n    // alignment preserving cast\n    function addressToBytes32(address _addr) internal pure returns (bytes32) {\n        return bytes32(uint256(uint160(_addr)));\n    }\n\n    // alignment preserving cast\n    function bytes32ToAddress(bytes32 _buf) internal pure returns (address) {\n        return address(uint160(uint256(_buf)));\n    }\n}"},"contracts/precompiles/PriceFeed.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n    /**\n     * Returns the decimals to offset on the getLatestPrice call\n     */\n    function decimals() external view returns (uint8);\n\n    /**\n     * Returns the description of the underlying price feed aggregator\n     */\n    function description() external view returns (string memory);\n\n    /**\n     * Returns the version number representing the type of aggregator the proxy points to\n     */\n    function version() external view returns (uint256);\n\n    /**\n     * Returns price data about a specific round\n     */\n    function getRoundData(uint80 _roundId) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n    /**\n     * Returns price data from the latest round\n     */\n    function latestRoundData() external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1041],"ERC20":[586],"IERC20":[664],"IERC20Metadata":[689]},"id":587,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:0"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":665,"src":"130:22:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":690,"src":"153:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":1042,"src":"195:33:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6,"name":"Context","nameLocations":["1550:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1041,"src":"1550:7:0"},"id":7,"nodeType":"InheritanceSpecifier","src":"1550:7:0"},{"baseName":{"id":8,"name":"IERC20","nameLocations":["1559:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"1559:6:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"1559:6:0"},{"baseName":{"id":10,"name":"IERC20Metadata","nameLocations":["1567:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"1567:14:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"1567:14:0"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"230:1301:0","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":586,"linearizedBaseContracts":[586,689,664,1041],"name":"ERC20","nameLocation":"1541:5:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":15,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:0","nodeType":"VariableDeclaration","scope":586,"src":"1588:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":14,"keyType":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":21,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:0","nodeType":"VariableDeclaration","scope":586,"src":"1640:67:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":20,"keyType":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":19,"keyType":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":23,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:0","nodeType":"VariableDeclaration","scope":586,"src":"1714:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":22,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":25,"mutability":"mutable","name":"_name","nameLocation":"1764:5:0","nodeType":"VariableDeclaration","scope":586,"src":"1749:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":24,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":27,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:0","nodeType":"VariableDeclaration","scope":586,"src":"1775:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":26,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":43,"nodeType":"Block","src":"2036:57:0","statements":[{"expression":{"id":37,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":35,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2046:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":36,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2054:5:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":38,"nodeType":"ExpressionStatement","src":"2046:13:0"},{"expression":{"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2069:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2079:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":42,"nodeType":"ExpressionStatement","src":"2069:17:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"1804:171:0","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":44,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"name_","nameLocation":"2006:5:0","nodeType":"VariableDeclaration","scope":44,"src":"1992:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:0","nodeType":"VariableDeclaration","scope":44,"src":"2013:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":31,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:0"},"returnParameters":{"id":34,"nodeType":"ParameterList","parameters":[],"src":"2036:0:0"},"scope":586,"src":"1980:113:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[676],"body":{"id":53,"nodeType":"Block","src":"2227:29:0","statements":[{"expression":{"id":51,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2244:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"2237:12:0"}]},"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"2099:54:0","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:0","nodeType":"FunctionDefinition","overrides":{"id":47,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:0"},"parameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"2171:2:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"2212:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":48,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:0"},"scope":586,"src":"2158:98:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[682],"body":{"id":63,"nodeType":"Block","src":"2440:31:0","statements":[{"expression":{"id":61,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2457:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":60,"id":62,"nodeType":"Return","src":"2450:14:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"2262:102:0","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":64,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:0","nodeType":"FunctionDefinition","overrides":{"id":57,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:0"},"parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"2384:2:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64,"src":"2425:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":58,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:0"},"scope":586,"src":"2369:102:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[688],"body":{"id":73,"nodeType":"Block","src":"3169:26:0","statements":[{"expression":{"hexValue":"3138","id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:0","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":70,"id":72,"nodeType":"Return","src":"3179:9:0"}]},"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"2477:622:0","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":74,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[],"src":"3121:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":74,"src":"3162:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":68,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:0"},"scope":586,"src":"3104:91:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[613],"body":{"id":83,"nodeType":"Block","src":"3325:36:0","statements":[{"expression":{"id":81,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"3342:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":80,"id":82,"nodeType":"Return","src":"3335:19:0"}]},"documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"3201:49:0","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":84,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:0","nodeType":"FunctionDefinition","overrides":{"id":77,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:0"},"parameters":{"id":76,"nodeType":"ParameterList","parameters":[],"src":"3275:2:0"},"returnParameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":84,"src":"3316:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":78,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:0"},"scope":586,"src":"3255:106:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[621],"body":{"id":97,"nodeType":"Block","src":"3502:42:0","statements":[{"expression":{"baseExpression":{"id":93,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"3519:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":95,"indexExpression":{"id":94,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"3529:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":92,"id":96,"nodeType":"Return","src":"3512:25:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"3367:47:0","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":98,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:0","nodeType":"FunctionDefinition","overrides":{"id":89,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:0"},"parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"account","nameLocation":"3446:7:0","nodeType":"VariableDeclaration","scope":98,"src":"3438:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:0"},"returnParameters":{"id":92,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":98,"src":"3493:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":90,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:0"},"scope":586,"src":"3419:125:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[631],"body":{"id":122,"nodeType":"Block","src":"3825:104:0","statements":[{"assignments":[110],"declarations":[{"constant":false,"id":110,"mutability":"mutable","name":"owner","nameLocation":"3843:5:0","nodeType":"VariableDeclaration","scope":122,"src":"3835:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":109,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":113,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"3851:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:0"},{"expression":{"arguments":[{"id":115,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"3883:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":116,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"3890:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":117,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3894:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":114,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"3873:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":119,"nodeType":"ExpressionStatement","src":"3873:28:0"},{"expression":{"hexValue":"74727565","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":108,"id":121,"nodeType":"Return","src":"3911:11:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"3550:185:0","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":123,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:0","nodeType":"FunctionDefinition","overrides":{"id":105,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:0"},"parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"to","nameLocation":"3766:2:0","nodeType":"VariableDeclaration","scope":123,"src":"3758:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"amount","nameLocation":"3778:6:0","nodeType":"VariableDeclaration","scope":123,"src":"3770:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":123,"src":"3819:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":106,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:0"},"scope":586,"src":"3740:189:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[641],"body":{"id":140,"nodeType":"Block","src":"4085:51:0","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":134,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"4102:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":136,"indexExpression":{"id":135,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"4114:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":138,"indexExpression":{"id":137,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4121:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":133,"id":139,"nodeType":"Return","src":"4095:34:0"}]},"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"3935:47:0","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":141,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:0","nodeType":"FunctionDefinition","overrides":{"id":130,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:0"},"parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"owner","nameLocation":"4014:5:0","nodeType":"VariableDeclaration","scope":141,"src":"4006:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":128,"mutability":"mutable","name":"spender","nameLocation":"4029:7:0","nodeType":"VariableDeclaration","scope":141,"src":"4021:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:0"},"returnParameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"4076:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:0"},"scope":586,"src":"3987:149:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[651],"body":{"id":165,"nodeType":"Block","src":"4533:108:0","statements":[{"assignments":[153],"declarations":[{"constant":false,"id":153,"mutability":"mutable","name":"owner","nameLocation":"4551:5:0","nodeType":"VariableDeclaration","scope":165,"src":"4543:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":156,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":154,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"4559:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:0"},{"expression":{"arguments":[{"id":158,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4590:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":159,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"4597:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":160,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4606:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":157,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"4581:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"4581:32:0"},{"expression":{"hexValue":"74727565","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":151,"id":164,"nodeType":"Return","src":"4623:11:0"}]},"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"4142:297:0","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":166,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:0","nodeType":"FunctionDefinition","overrides":{"id":148,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:0"},"parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"spender","nameLocation":"4469:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4461:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"amount","nameLocation":"4486:6:0","nodeType":"VariableDeclaration","scope":166,"src":"4478:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:0"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":166,"src":"4527:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":149,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:0"},"scope":586,"src":"4444:197:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[663],"body":{"id":198,"nodeType":"Block","src":"5306:153:0","statements":[{"assignments":[180],"declarations":[{"constant":false,"id":180,"mutability":"mutable","name":"spender","nameLocation":"5324:7:0","nodeType":"VariableDeclaration","scope":198,"src":"5316:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":183,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":181,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"5334:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:0"},{"expression":{"arguments":[{"id":185,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5372:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":186,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"5378:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":187,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5387:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":184,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"5356:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":189,"nodeType":"ExpressionStatement","src":"5356:38:0"},{"expression":{"arguments":[{"id":191,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5414:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":192,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5420:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":193,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5424:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":190,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5404:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"5404:27:0"},{"expression":{"hexValue":"74727565","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":178,"id":197,"nodeType":"Return","src":"5441:11:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4647:551:0","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":199,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:0","nodeType":"FunctionDefinition","overrides":{"id":175,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:0"},"parameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"from","nameLocation":"5233:4:0","nodeType":"VariableDeclaration","scope":199,"src":"5225:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":168,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"5247:2:0","nodeType":"VariableDeclaration","scope":199,"src":"5239:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"amount","nameLocation":"5259:6:0","nodeType":"VariableDeclaration","scope":199,"src":"5251:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:0"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"5300:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":176,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:0"},"scope":586,"src":"5203:256:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":227,"nodeType":"Block","src":"5948:140:0","statements":[{"assignments":[210],"declarations":[{"constant":false,"id":210,"mutability":"mutable","name":"owner","nameLocation":"5966:5:0","nodeType":"VariableDeclaration","scope":227,"src":"5958:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":213,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":211,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"5974:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:0"},{"expression":{"arguments":[{"id":215,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"6005:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":216,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"6012:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":218,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"6031:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":219,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"6038:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6021:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":221,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6049:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":214,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5996:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":224,"nodeType":"ExpressionStatement","src":"5996:64:0"},{"expression":{"hexValue":"74727565","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":208,"id":226,"nodeType":"Return","src":"6070:11:0"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"5465:384:0","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":228,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:0","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"spender","nameLocation":"5889:7:0","nodeType":"VariableDeclaration","scope":228,"src":"5881:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:0","nodeType":"VariableDeclaration","scope":228,"src":"5898:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:0"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"5942:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":206,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:0"},"scope":586,"src":"5854:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":268,"nodeType":"Block","src":"6674:328:0","statements":[{"assignments":[239],"declarations":[{"constant":false,"id":239,"mutability":"mutable","name":"owner","nameLocation":"6692:5:0","nodeType":"VariableDeclaration","scope":268,"src":"6684:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":242,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":240,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"6700:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:0"},{"assignments":[244],"declarations":[{"constant":false,"id":244,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:0","nodeType":"VariableDeclaration","scope":268,"src":"6722:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":249,"initialValue":{"arguments":[{"id":246,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"6759:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":247,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"6766:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":245,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6749:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":251,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6792:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":252,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"6812:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":256,"nodeType":"ExpressionStatement","src":"6784:85:0"},{"id":265,"nodeType":"UncheckedBlock","src":"6879:95:0","statements":[{"expression":{"arguments":[{"id":258,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"6912:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":259,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"6919:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":260,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6928:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":261,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"6947:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":257,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6903:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":264,"nodeType":"ExpressionStatement","src":"6903:60:0"}]},{"expression":{"hexValue":"74727565","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":237,"id":267,"nodeType":"Return","src":"6984:11:0"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"6094:476:0","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":269,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:0","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"spender","nameLocation":"6610:7:0","nodeType":"VariableDeclaration","scope":269,"src":"6602:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:0","nodeType":"VariableDeclaration","scope":269,"src":"6619:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:0"},"returnParameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":269,"src":"6668:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":235,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:0"},"scope":586,"src":"6575:427:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":345,"nodeType":"Block","src":"7534:710:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":280,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7552:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:0","typeDescriptions":{}}},"id":284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":288,"nodeType":"ExpressionStatement","src":"7544:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":290,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7630:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:0","typeDescriptions":{}}},"id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":289,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"7622:64:0"},{"expression":{"arguments":[{"id":300,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7718:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":301,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7724:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":302,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7728:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":299,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"7697:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":304,"nodeType":"ExpressionStatement","src":"7697:38:0"},{"assignments":[306],"declarations":[{"constant":false,"id":306,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:0","nodeType":"VariableDeclaration","scope":345,"src":"7746:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":310,"initialValue":{"baseExpression":{"id":307,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"7768:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":309,"indexExpression":{"id":308,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7778:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":312,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7801:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":313,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7816:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":317,"nodeType":"ExpressionStatement","src":"7793:72:0"},{"id":332,"nodeType":"UncheckedBlock","src":"7875:273:0","statements":[{"expression":{"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":318,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"7899:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":320,"indexExpression":{"id":319,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7909:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":321,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7917:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":322,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7931:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":325,"nodeType":"ExpressionStatement","src":"7899:38:0"},{"expression":{"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":326,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"8114:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":328,"indexExpression":{"id":327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8124:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":329,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8131:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":331,"nodeType":"ExpressionStatement","src":"8114:23:0"}]},{"eventCall":{"arguments":[{"id":334,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"8172:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":335,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8178:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":336,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8182:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":333,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"8163:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":338,"nodeType":"EmitStatement","src":"8158:31:0"},{"expression":{"arguments":[{"id":340,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"8220:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":341,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8226:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":342,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8230:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":339,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"8200:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":344,"nodeType":"ExpressionStatement","src":"8200:37:0"}]},"documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"7008:443:0","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":346,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:0","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"from","nameLocation":"7483:4:0","nodeType":"VariableDeclaration","scope":346,"src":"7475:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"to","nameLocation":"7497:2:0","nodeType":"VariableDeclaration","scope":346,"src":"7489:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"amount","nameLocation":"7509:6:0","nodeType":"VariableDeclaration","scope":346,"src":"7501:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:0"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[],"src":"7534:0:0"},"scope":586,"src":"7456:788:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":402,"nodeType":"Block","src":"8585:470:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":355,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8603:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:0","typeDescriptions":{}}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":363,"nodeType":"ExpressionStatement","src":"8595:65:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:0","typeDescriptions":{}}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":369,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8704:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":370,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8713:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":364,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"8671:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"ExpressionStatement","src":"8671:49:0"},{"expression":{"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":373,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"8731:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":374,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8747:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":376,"nodeType":"ExpressionStatement","src":"8731:22:0"},{"id":383,"nodeType":"UncheckedBlock","src":"8763:175:0","statements":[{"expression":{"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":377,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"8899:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":379,"indexExpression":{"id":378,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8909:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":380,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8921:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":382,"nodeType":"ExpressionStatement","src":"8899:28:0"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:0","typeDescriptions":{}}},"id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":389,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8973:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":390,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8982:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":384,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"8952:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":392,"nodeType":"EmitStatement","src":"8947:42:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:0","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":398,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"9032:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":399,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"9041:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":393,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"9000:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"ExpressionStatement","src":"9000:48:0"}]},"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"8250:265:0","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":403,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:0","nodeType":"FunctionDefinition","parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"account","nameLocation":"8543:7:0","nodeType":"VariableDeclaration","scope":403,"src":"8535:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"amount","nameLocation":"8560:6:0","nodeType":"VariableDeclaration","scope":403,"src":"8552:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:0"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[],"src":"8585:0:0"},"scope":586,"src":"8520:535:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":474,"nodeType":"Block","src":"9440:594:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":412,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9458:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:0","typeDescriptions":{}}},"id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":420,"nodeType":"ExpressionStatement","src":"9450:67:0"},{"expression":{"arguments":[{"id":422,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9549:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:0","typeDescriptions":{}}},"id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9570:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":421,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"9528:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"9528:49:0"},{"assignments":[431],"declarations":[{"constant":false,"id":431,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:0","nodeType":"VariableDeclaration","scope":474,"src":"9588:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":435,"initialValue":{"baseExpression":{"id":432,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"9613:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":434,"indexExpression":{"id":433,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9623:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":437,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"9649:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":438,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9667:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":436,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":442,"nodeType":"ExpressionStatement","src":"9641:71:0"},{"id":455,"nodeType":"UncheckedBlock","src":"9722:194:0","statements":[{"expression":{"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":443,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"9746:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":445,"indexExpression":{"id":444,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9756:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":446,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"9767:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":447,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9784:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":450,"nodeType":"ExpressionStatement","src":"9746:44:0"},{"expression":{"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":451,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"9883:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":452,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9899:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":454,"nodeType":"ExpressionStatement","src":"9883:22:0"}]},{"eventCall":{"arguments":[{"id":457,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:0","typeDescriptions":{}}},"id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":462,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9961:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":456,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"9931:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":464,"nodeType":"EmitStatement","src":"9926:42:0"},{"expression":{"arguments":[{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9999:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:0","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":471,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"10020:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":465,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"9979:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":473,"nodeType":"ExpressionStatement","src":"9979:48:0"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"9061:309:0","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":475,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:0","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"account","nameLocation":"9398:7:0","nodeType":"VariableDeclaration","scope":475,"src":"9390:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":408,"mutability":"mutable","name":"amount","nameLocation":"9415:6:0","nodeType":"VariableDeclaration","scope":475,"src":"9407:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":407,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:0"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"9440:0:0"},"scope":586,"src":"9375:659:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":519,"nodeType":"Block","src":"10540:257:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":486,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10558:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:0","typeDescriptions":{}}},"id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":494,"nodeType":"ExpressionStatement","src":"10550:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":496,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10636:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:0","typeDescriptions":{}}},"id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":495,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"10628:68:0"},{"expression":{"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":505,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"10707:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":508,"indexExpression":{"id":506,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10719:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":509,"indexExpression":{"id":507,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10726:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":510,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"10737:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":512,"nodeType":"ExpressionStatement","src":"10707:36:0"},{"eventCall":{"arguments":[{"id":514,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10767:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":515,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10774:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":516,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"10783:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":513,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10758:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":518,"nodeType":"EmitStatement","src":"10753:37:0"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"10040:412:0","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":520,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:0","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"owner","nameLocation":"10483:5:0","nodeType":"VariableDeclaration","scope":520,"src":"10475:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"spender","nameLocation":"10498:7:0","nodeType":"VariableDeclaration","scope":520,"src":"10490:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"amount","nameLocation":"10515:6:0","nodeType":"VariableDeclaration","scope":520,"src":"10507:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:0"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"10540:0:0"},"scope":586,"src":"10457:340:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":562,"nodeType":"Block","src":"11168:321:0","statements":[{"assignments":[531],"declarations":[{"constant":false,"id":531,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:0","nodeType":"VariableDeclaration","scope":562,"src":"11178:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":536,"initialValue":{"arguments":[{"id":533,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"11215:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"11222:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":532,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"11205:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":537,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11244:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":539,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":538,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:0","memberName":"max","nodeType":"MemberAccess","src":"11264:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"IfStatement","src":"11240:243:0","trueBody":{"id":560,"nodeType":"Block","src":"11283:200:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":545,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11305:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":546,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"11325:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":544,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":550,"nodeType":"ExpressionStatement","src":"11297:68:0"},{"id":559,"nodeType":"UncheckedBlock","src":"11379:94:0","statements":[{"expression":{"arguments":[{"id":552,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"11416:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":553,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"11423:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11432:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":555,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"11451:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":551,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"11407:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"ExpressionStatement","src":"11407:51:0"}]}]}}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"10803:270:0","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":563,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:0","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"owner","nameLocation":"11111:5:0","nodeType":"VariableDeclaration","scope":563,"src":"11103:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"spender","nameLocation":"11126:7:0","nodeType":"VariableDeclaration","scope":563,"src":"11118:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"amount","nameLocation":"11143:6:0","nodeType":"VariableDeclaration","scope":563,"src":"11135:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":526,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:0"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"11168:0:0"},"scope":586,"src":"11078:411:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":573,"nodeType":"Block","src":"12162:2:0","statements":[]},"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"11495:573:0","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":574,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:0","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"from","nameLocation":"12111:4:0","nodeType":"VariableDeclaration","scope":574,"src":"12103:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"to","nameLocation":"12125:2:0","nodeType":"VariableDeclaration","scope":574,"src":"12117:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"amount","nameLocation":"12137:6:0","nodeType":"VariableDeclaration","scope":574,"src":"12129:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:0"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"12162:0:0"},"scope":586,"src":"12073:91:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":584,"nodeType":"Block","src":"12840:2:0","statements":[]},"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"12170:577:0","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":585,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:0","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"from","nameLocation":"12789:4:0","nodeType":"VariableDeclaration","scope":585,"src":"12781:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"to","nameLocation":"12803:2:0","nodeType":"VariableDeclaration","scope":585,"src":"12795:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"amount","nameLocation":"12815:6:0","nodeType":"VariableDeclaration","scope":585,"src":"12807:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:0"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"12840:0:0"},"scope":586,"src":"12752:90:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":587,"src":"1532:11312:0","usedErrors":[]}],"src":"105:12740:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[664]},"id":665,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":588,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"131:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":664,"linearizedBaseContracts":[664],"name":"IERC20","nameLocation":"212:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"225:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":598,"name":"Transfer","nameLocation":"394:8:1","nodeType":"EventDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:1","nodeType":"VariableDeclaration","scope":598,"src":"403:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":594,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:1","nodeType":"VariableDeclaration","scope":598,"src":"425:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":593,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":596,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:1","nodeType":"VariableDeclaration","scope":598,"src":"445:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":595,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:1"},"src":"388:72:1"},{"anonymous":false,"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"466:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":607,"name":"Approval","nameLocation":"625:8:1","nodeType":"EventDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:1","nodeType":"VariableDeclaration","scope":607,"src":"634:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":603,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:1","nodeType":"VariableDeclaration","scope":607,"src":"657:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:1","nodeType":"VariableDeclaration","scope":607,"src":"682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:1"},"src":"619:78:1"},{"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"703:66:1","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":613,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":613,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":664,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"835:72:1","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":621,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":621,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":621,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":664,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"986:202:1","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":631,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:1","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"1219:2:1","nodeType":"VariableDeclaration","scope":631,"src":"1211:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"amount","nameLocation":"1231:6:1","nodeType":"VariableDeclaration","scope":631,"src":"1223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:1"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":631,"src":"1257:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":628,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:1"},"scope":664,"src":"1193:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"1269:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":641,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:1","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"owner","nameLocation":"1565:5:1","nodeType":"VariableDeclaration","scope":641,"src":"1557:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"spender","nameLocation":"1580:7:1","nodeType":"VariableDeclaration","scope":641,"src":"1572:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:1"},"returnParameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":641,"src":"1612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:1"},"scope":664,"src":"1538:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"1627:642:1","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":651,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:1","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":644,"mutability":"mutable","name":"spender","nameLocation":"2299:7:1","nodeType":"VariableDeclaration","scope":651,"src":"2291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":646,"mutability":"mutable","name":"amount","nameLocation":"2316:6:1","nodeType":"VariableDeclaration","scope":651,"src":"2308:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:1"},"returnParameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":651,"src":"2342:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":648,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:1"},"scope":664,"src":"2274:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"2354:287:1","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":663,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:1","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"from","nameLocation":"2676:4:1","nodeType":"VariableDeclaration","scope":663,"src":"2668:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"to","nameLocation":"2690:2:1","nodeType":"VariableDeclaration","scope":663,"src":"2682:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"amount","nameLocation":"2702:6:1","nodeType":"VariableDeclaration","scope":663,"src":"2694:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:1"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":663,"src":"2728:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":660,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:1"},"scope":664,"src":"2646:88:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":665,"src":"202:2534:1","usedErrors":[]}],"src":"106:2631:1"},"id":1},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[664],"IERC20Metadata":[689]},"id":690,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":666,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":667,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":690,"sourceUnit":665,"src":"135:23:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":669,"name":"IERC20","nameLocations":["305:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"305:6:2"},"id":670,"nodeType":"InheritanceSpecifier","src":"305:6:2"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":668,"nodeType":"StructuredDocumentation","src":"160:116:2","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":689,"linearizedBaseContracts":[689,664],"name":"IERC20Metadata","nameLocation":"287:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"318:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":676,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:2","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[],"src":"390:2:2"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":676,"src":"416:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":673,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:2"},"scope":689,"src":"377:54:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"437:56:2","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":682,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:2","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[],"src":"513:2:2"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":682,"src":"539:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":679,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:2"},"scope":689,"src":"498:56:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"560:65:2","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":688,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:2","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"647:2:2"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":688,"src":"673:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":685,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:2"},"scope":689,"src":"630:50:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":690,"src":"277:405:2","usedErrors":[]}],"src":"110:573:2"},"id":2},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1019]},"id":1020,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":691,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"126:67:3","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1019,"linearizedBaseContracts":[1019],"name":"Address","nameLocation":"202:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":706,"nodeType":"Block","src":"1478:254:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":700,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"1702:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:3","memberName":"code","nodeType":"MemberAccess","src":"1702:12:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:3","memberName":"length","nodeType":"MemberAccess","src":"1702:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":699,"id":705,"nodeType":"Return","src":"1695:30:3"}]},"documentation":{"id":693,"nodeType":"StructuredDocumentation","src":"216:1191:3","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":707,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:3","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"account","nameLocation":"1440:7:3","nodeType":"VariableDeclaration","scope":707,"src":"1432:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:3"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":707,"src":"1472:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":697,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:3"},"scope":1019,"src":"1412:320:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":740,"nodeType":"Block","src":"2718:241:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":718,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1019","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1019","typeString":"library Address"}],"id":717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:3","typeDescriptions":{}}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:3","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":721,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"2761:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":715,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":725,"nodeType":"ExpressionStatement","src":"2728:73:3"},{"assignments":[727,null],"declarations":[{"constant":false,"id":727,"mutability":"mutable","name":"success","nameLocation":"2818:7:3","nodeType":"VariableDeclaration","scope":740,"src":"2813:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":726,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":734,"initialValue":{"arguments":[{"hexValue":"","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":728,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"2831:9:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:3","memberName":"call","nodeType":"MemberAccess","src":"2831:14:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":730,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"2853:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:3"},{"expression":{"arguments":[{"id":736,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"2882:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":735,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":739,"nodeType":"ExpressionStatement","src":"2874:78:3"}]},"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"1738:904:3","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":741,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:3","nodeType":"FunctionDefinition","parameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:3","nodeType":"VariableDeclaration","scope":741,"src":"2666:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"amount","nameLocation":"2701:6:3","nodeType":"VariableDeclaration","scope":741,"src":"2693:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":711,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:3"},"returnParameters":{"id":714,"nodeType":"ParameterList","parameters":[],"src":"2718:0:3"},"scope":1019,"src":"2647:312:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":758,"nodeType":"Block","src":"3790:96:3","statements":[{"expression":{"arguments":[{"id":752,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"3829:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":753,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"3837:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":751,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[799,843],"referencedDeclaration":843,"src":"3807:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":750,"id":757,"nodeType":"Return","src":"3800:79:3"}]},"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"2965:731:3","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":759,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:3","nodeType":"FunctionDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"target","nameLocation":"3731:6:3","nodeType":"VariableDeclaration","scope":759,"src":"3723:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"data","nameLocation":"3752:4:3","nodeType":"VariableDeclaration","scope":759,"src":"3739:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":745,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:3"},"returnParameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":759,"src":"3776:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":748,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:3"},"scope":1019,"src":"3701:185:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":778,"nodeType":"Block","src":"4255:76:3","statements":[{"expression":{"arguments":[{"id":772,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"4294:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":773,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"4302:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":775,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"4311:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":771,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[799,843],"referencedDeclaration":843,"src":"4272:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":770,"id":777,"nodeType":"Return","src":"4265:59:3"}]},"documentation":{"id":760,"nodeType":"StructuredDocumentation","src":"3892:211:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":779,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:3","nodeType":"FunctionDefinition","parameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"target","nameLocation":"4147:6:3","nodeType":"VariableDeclaration","scope":779,"src":"4139:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"data","nameLocation":"4176:4:3","nodeType":"VariableDeclaration","scope":779,"src":"4163:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":763,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:3","nodeType":"VariableDeclaration","scope":779,"src":"4190:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":765,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:3"},"returnParameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":779,"src":"4241:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":768,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:3"},"scope":1019,"src":"4108:223:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":798,"nodeType":"Block","src":"4806:111:3","statements":[{"expression":{"arguments":[{"id":792,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"4845:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":793,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"4853:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"4859:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":791,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[799,843],"referencedDeclaration":843,"src":"4823:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":790,"id":797,"nodeType":"Return","src":"4816:94:3"}]},"documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"4337:351:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":799,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:3","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"target","nameLocation":"4732:6:3","nodeType":"VariableDeclaration","scope":799,"src":"4724:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":781,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"data","nameLocation":"4753:4:3","nodeType":"VariableDeclaration","scope":799,"src":"4740:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":783,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"value","nameLocation":"4767:5:3","nodeType":"VariableDeclaration","scope":799,"src":"4759:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:3"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":799,"src":"4792:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":788,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:3"},"scope":1019,"src":"4693:224:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":842,"nodeType":"Block","src":"5344:267:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":816,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1019","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1019","typeString":"library Address"}],"id":815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":814,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:3","typeDescriptions":{}}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:3","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"5387:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":813,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":823,"nodeType":"ExpressionStatement","src":"5354:81:3"},{"assignments":[825,827],"declarations":[{"constant":false,"id":825,"mutability":"mutable","name":"success","nameLocation":"5451:7:3","nodeType":"VariableDeclaration","scope":842,"src":"5446:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":824,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":827,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:3","nodeType":"VariableDeclaration","scope":842,"src":"5460:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":826,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":834,"initialValue":{"arguments":[{"id":832,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"5513:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":828,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"5487:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:3","memberName":"call","nodeType":"MemberAccess","src":"5487:11:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"5506:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:3"},{"expression":{"arguments":[{"id":836,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"5562:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":837,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"5570:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":838,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"5579:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":839,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"5591:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":835,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"5535:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":812,"id":841,"nodeType":"Return","src":"5528:76:3"}]},"documentation":{"id":800,"nodeType":"StructuredDocumentation","src":"4923:237:3","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":843,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:3","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"mutability":"mutable","name":"target","nameLocation":"5213:6:3","nodeType":"VariableDeclaration","scope":843,"src":"5205:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":804,"mutability":"mutable","name":"data","nameLocation":"5242:4:3","nodeType":"VariableDeclaration","scope":843,"src":"5229:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":803,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"value","nameLocation":"5264:5:3","nodeType":"VariableDeclaration","scope":843,"src":"5256:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:3","nodeType":"VariableDeclaration","scope":843,"src":"5279:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":807,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:3"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":843,"src":"5330:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":810,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:3"},"scope":1019,"src":"5165:446:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":859,"nodeType":"Block","src":"5888:97:3","statements":[{"expression":{"arguments":[{"id":854,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"5924:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":855,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"5932:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":853,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[860,889],"referencedDeclaration":889,"src":"5905:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":852,"id":858,"nodeType":"Return","src":"5898:80:3"}]},"documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"5617:166:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":860,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:3","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"target","nameLocation":"5824:6:3","nodeType":"VariableDeclaration","scope":860,"src":"5816:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"data","nameLocation":"5845:4:3","nodeType":"VariableDeclaration","scope":860,"src":"5832:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":847,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:3"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":860,"src":"5874:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":850,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:3"},"scope":1019,"src":"5788:197:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":888,"nodeType":"Block","src":"6327:168:3","statements":[{"assignments":[873,875],"declarations":[{"constant":false,"id":873,"mutability":"mutable","name":"success","nameLocation":"6343:7:3","nodeType":"VariableDeclaration","scope":888,"src":"6338:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":872,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:3","nodeType":"VariableDeclaration","scope":888,"src":"6352:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":874,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":880,"initialValue":{"arguments":[{"id":878,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"6397:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":876,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"6379:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:3","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:3","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:3"},{"expression":{"arguments":[{"id":882,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"6446:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":883,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"6454:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":884,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"6463:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":885,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"6475:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":881,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"6419:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":871,"id":887,"nodeType":"Return","src":"6412:76:3"}]},"documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"5991:173:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":889,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:3","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"target","nameLocation":"6214:6:3","nodeType":"VariableDeclaration","scope":889,"src":"6206:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":865,"mutability":"mutable","name":"data","nameLocation":"6243:4:3","nodeType":"VariableDeclaration","scope":889,"src":"6230:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":864,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:3","nodeType":"VariableDeclaration","scope":889,"src":"6257:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":866,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:3"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":889,"src":"6313:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":869,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:3"},"scope":1019,"src":"6169:326:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":905,"nodeType":"Block","src":"6771:101:3","statements":[{"expression":{"arguments":[{"id":900,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"6809:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":901,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"6817:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":899,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[906,935],"referencedDeclaration":935,"src":"6788:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":898,"id":904,"nodeType":"Return","src":"6781:84:3"}]},"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"6501:168:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":906,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:3","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"target","nameLocation":"6712:6:3","nodeType":"VariableDeclaration","scope":906,"src":"6704:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"data","nameLocation":"6733:4:3","nodeType":"VariableDeclaration","scope":906,"src":"6720:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":893,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:3"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":906,"src":"6757:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":896,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:3"},"scope":1019,"src":"6674:198:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":934,"nodeType":"Block","src":"7213:170:3","statements":[{"assignments":[919,921],"declarations":[{"constant":false,"id":919,"mutability":"mutable","name":"success","nameLocation":"7229:7:3","nodeType":"VariableDeclaration","scope":934,"src":"7224:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":918,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":921,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:3","nodeType":"VariableDeclaration","scope":934,"src":"7238:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":920,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":926,"initialValue":{"arguments":[{"id":924,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"7285:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":922,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"7265:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:3","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:3","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:3"},{"expression":{"arguments":[{"id":928,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"7334:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":929,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"7342:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":930,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"7351:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":931,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"7363:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":927,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"7307:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":917,"id":933,"nodeType":"Return","src":"7300:76:3"}]},"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"6878:175:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":935,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:3","nodeType":"FunctionDefinition","parameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"target","nameLocation":"7105:6:3","nodeType":"VariableDeclaration","scope":935,"src":"7097:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":911,"mutability":"mutable","name":"data","nameLocation":"7134:4:3","nodeType":"VariableDeclaration","scope":935,"src":"7121:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":910,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":913,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:3","nodeType":"VariableDeclaration","scope":935,"src":"7148:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":912,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:3"},"returnParameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":935,"src":"7199:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":915,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:3"},"scope":1019,"src":"7058:325:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":973,"nodeType":"Block","src":"7865:434:3","statements":[{"condition":{"id":949,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"7879:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":971,"nodeType":"Block","src":"8235:58:3","statements":[{"expression":{"arguments":[{"id":967,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"8257:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":968,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"8269:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":966,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"8249:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":970,"nodeType":"ExpressionStatement","src":"8249:33:3"}]},"id":972,"nodeType":"IfStatement","src":"7875:418:3","trueBody":{"id":965,"nodeType":"Block","src":"7888:341:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":950,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"7906:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:3","memberName":"length","nodeType":"MemberAccess","src":"7906:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":962,"nodeType":"IfStatement","src":"7902:286:3","trueBody":{"id":961,"nodeType":"Block","src":"7930:258:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":956,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"8132:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":955,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"8121:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":954,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":960,"nodeType":"ExpressionStatement","src":"8113:60:3"}]}},{"expression":{"id":963,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"8208:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":948,"id":964,"nodeType":"Return","src":"8201:17:3"}]}}]},"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"7389:277:3","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":974,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:3","nodeType":"FunctionDefinition","parameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"target","nameLocation":"7724:6:3","nodeType":"VariableDeclaration","scope":974,"src":"7716:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":940,"mutability":"mutable","name":"success","nameLocation":"7745:7:3","nodeType":"VariableDeclaration","scope":974,"src":"7740:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":939,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":942,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:3","nodeType":"VariableDeclaration","scope":974,"src":"7762:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":941,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":944,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:3","nodeType":"VariableDeclaration","scope":974,"src":"7795:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":943,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:3"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":974,"src":"7851:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":946,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:3"},"scope":1019,"src":"7671:628:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":997,"nodeType":"Block","src":"8680:135:3","statements":[{"condition":{"id":986,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"8694:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":995,"nodeType":"Block","src":"8751:58:3","statements":[{"expression":{"arguments":[{"id":991,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"8773:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":992,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"8785:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":990,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"8765:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":994,"nodeType":"ExpressionStatement","src":"8765:33:3"}]},"id":996,"nodeType":"IfStatement","src":"8690:119:3","trueBody":{"id":989,"nodeType":"Block","src":"8703:42:3","statements":[{"expression":{"id":987,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"8724:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":985,"id":988,"nodeType":"Return","src":"8717:17:3"}]}}]},"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"8305:210:3","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":998,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:3","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"success","nameLocation":"8560:7:3","nodeType":"VariableDeclaration","scope":998,"src":"8555:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":976,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:3","nodeType":"VariableDeclaration","scope":998,"src":"8577:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":978,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:3","nodeType":"VariableDeclaration","scope":998,"src":"8610:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":980,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:3"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":998,"src":"8666:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":983,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:3"},"scope":1019,"src":"8520:295:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1017,"nodeType":"Block","src":"8904:457:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1005,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"8980:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:3","memberName":"length","nodeType":"MemberAccess","src":"8980:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1015,"nodeType":"Block","src":"9310:45:3","statements":[{"expression":{"arguments":[{"id":1012,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"9331:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1011,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1014,"nodeType":"ExpressionStatement","src":"9324:20:3"}]},"id":1016,"nodeType":"IfStatement","src":"8976:379:3","trueBody":{"id":1010,"nodeType":"Block","src":"9003:301:3","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:3","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:3","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:3"},"nodeType":"YulFunctionCall","src":"9202:17:3"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:3","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:3","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:3"},"nodeType":"YulFunctionCall","src":"9243:19:3"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:3"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:3"},"nodeType":"YulFunctionCall","src":"9236:44:3"},"nodeType":"YulExpressionStatement","src":"9236:44:3"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1000,"isOffset":false,"isSlot":false,"src":"9208:10:3","valueSize":1},{"declaration":1000,"isOffset":false,"isSlot":false,"src":"9251:10:3","valueSize":1}],"id":1009,"nodeType":"InlineAssembly","src":"9152:142:3"}]}}]},"id":1018,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:3","nodeType":"FunctionDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:3","nodeType":"VariableDeclaration","scope":1018,"src":"8838:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":999,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1002,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:3","nodeType":"VariableDeclaration","scope":1018,"src":"8863:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1001,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:3"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[],"src":"8904:0:3"},"scope":1019,"src":"8821:540:3","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1020,"src":"194:9169:3","usedErrors":[]}],"src":"101:9263:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1041]},"id":1042,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1021,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1022,"nodeType":"StructuredDocumentation","src":"111:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1041,"linearizedBaseContracts":[1041],"name":"Context","nameLocation":"626:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1030,"nodeType":"Block","src":"702:34:4","statements":[{"expression":{"expression":{"id":1027,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:4","memberName":"sender","nodeType":"MemberAccess","src":"719:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1026,"id":1029,"nodeType":"Return","src":"712:17:4"}]},"id":1031,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:4","nodeType":"FunctionDefinition","parameters":{"id":1023,"nodeType":"ParameterList","parameters":[],"src":"659:2:4"},"returnParameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1031,"src":"693:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:4"},"scope":1041,"src":"640:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1039,"nodeType":"Block","src":"809:32:4","statements":[{"expression":{"expression":{"id":1036,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:4","memberName":"data","nodeType":"MemberAccess","src":"826:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1035,"id":1038,"nodeType":"Return","src":"819:15:4"}]},"id":1040,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:4","nodeType":"FunctionDefinition","parameters":{"id":1032,"nodeType":"ParameterList","parameters":[],"src":"759:2:4"},"returnParameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1040,"src":"793:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1033,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:4"},"scope":1041,"src":"742:99:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1042,"src":"608:235:4","usedErrors":[]}],"src":"86:758:4"},"id":4},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2136],"SignedMath":[2241],"Strings":[1270]},"id":1271,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1043,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1044,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1271,"sourceUnit":2137,"src":"126:25:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1045,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1271,"sourceUnit":2242,"src":"152:31:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1046,"nodeType":"StructuredDocumentation","src":"185:34:5","text":" @dev String operations."},"fullyImplemented":true,"id":1270,"linearizedBaseContracts":[1270],"name":"Strings","nameLocation":"228:7:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1049,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:5","nodeType":"VariableDeclaration","scope":1270,"src":"242:54:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1047,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:5","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1052,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:5","nodeType":"VariableDeclaration","scope":1270,"src":"302:43:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1050,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:5","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1099,"nodeType":"Block","src":"518:625:5","statements":[{"id":1098,"nodeType":"UncheckedBlock","src":"528:609:5","statements":[{"assignments":[1061],"declarations":[{"constant":false,"id":1061,"mutability":"mutable","name":"length","nameLocation":"560:6:5","nodeType":"VariableDeclaration","scope":1098,"src":"552:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1060,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1068,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"580:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1062,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"569:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2136_$","typeString":"type(library Math)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:5","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1973,"src":"569:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:5"},{"assignments":[1070],"declarations":[{"constant":false,"id":1070,"mutability":"mutable","name":"buffer","nameLocation":"618:6:5","nodeType":"VariableDeclaration","scope":1098,"src":"604:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1069,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1075,"initialValue":{"arguments":[{"id":1073,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"638:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1071,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:5"},{"assignments":[1077],"declarations":[{"constant":false,"id":1077,"mutability":"mutable","name":"ptr","nameLocation":"667:3:5","nodeType":"VariableDeclaration","scope":1098,"src":"659:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1078,"nodeType":"VariableDeclarationStatement","src":"659:11:5"},{"AST":{"nodeType":"YulBlock","src":"740:67:5","statements":[{"nodeType":"YulAssignment","src":"758:35:5","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:5","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:5"},"nodeType":"YulFunctionCall","src":"777:15:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:5"},"nodeType":"YulFunctionCall","src":"765:28:5"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:5"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1070,"isOffset":false,"isSlot":false,"src":"769:6:5","valueSize":1},{"declaration":1061,"isOffset":false,"isSlot":false,"src":"785:6:5","valueSize":1},{"declaration":1077,"isOffset":false,"isSlot":false,"src":"758:3:5","valueSize":1}],"id":1079,"nodeType":"InlineAssembly","src":"731:76:5"},{"body":{"id":1094,"nodeType":"Block","src":"833:267:5","statements":[{"expression":{"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:5","subExpression":{"id":1081,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"851:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1083,"nodeType":"ExpressionStatement","src":"851:5:5"},{"AST":{"nodeType":"YulBlock","src":"934:84:5","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:5"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:5","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:5"},"nodeType":"YulFunctionCall","src":"974:14:5"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:5"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:5"},"nodeType":"YulFunctionCall","src":"969:30:5"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:5"},"nodeType":"YulFunctionCall","src":"956:44:5"},"nodeType":"YulExpressionStatement","src":"956:44:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1049,"isOffset":false,"isSlot":false,"src":"990:8:5","valueSize":1},{"declaration":1077,"isOffset":false,"isSlot":false,"src":"964:3:5","valueSize":1},{"declaration":1055,"isOffset":false,"isSlot":false,"src":"978:5:5","valueSize":1}],"id":1084,"nodeType":"InlineAssembly","src":"925:93:5"},{"expression":{"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"1035:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1088,"nodeType":"ExpressionStatement","src":"1035:11:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"1068:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1093,"nodeType":"IfStatement","src":"1064:21:5","trueBody":{"id":1092,"nodeType":"Break","src":"1080:5:5"}}]},"condition":{"hexValue":"74727565","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1095,"nodeType":"WhileStatement","src":"820:280:5"},{"expression":{"id":1096,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"1120:6:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1059,"id":1097,"nodeType":"Return","src":"1113:13:5"}]}]},"documentation":{"id":1053,"nodeType":"StructuredDocumentation","src":"352:90:5","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1100,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:5","nodeType":"FunctionDefinition","parameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"value","nameLocation":"473:5:5","nodeType":"VariableDeclaration","scope":1100,"src":"465:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:5"},"returnParameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1100,"src":"503:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1057,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:5"},"scope":1270,"src":"447:696:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1127,"nodeType":"Block","src":"1313:103:5","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"1354:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:5","trueExpression":{"hexValue":"2d","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"1400:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1119,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"1385:10:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$2241_$","typeString":"type(library SignedMath)"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:5","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":2240,"src":"1385:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1118,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1100,1128],"referencedDeclaration":1100,"src":"1376:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1110,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:5","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1108,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:5","typeDescriptions":{}}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1107,"id":1126,"nodeType":"Return","src":"1323:86:5"}]},"documentation":{"id":1101,"nodeType":"StructuredDocumentation","src":"1149:89:5","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1128,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:5","nodeType":"FunctionDefinition","parameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"value","nameLocation":"1268:5:5","nodeType":"VariableDeclaration","scope":1128,"src":"1261:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1102,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:5"},"returnParameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1128,"src":"1298:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1105,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:5"},"scope":1270,"src":"1243:173:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1147,"nodeType":"Block","src":"1595:100:5","statements":[{"id":1146,"nodeType":"UncheckedBlock","src":"1605:84:5","statements":[{"expression":{"arguments":[{"id":1137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"1648:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"1667:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1138,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"1655:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2136_$","typeString":"type(library Math)"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:5","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2096,"src":"1655:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1136,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1148,1224,1244],"referencedDeclaration":1224,"src":"1636:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1135,"id":1145,"nodeType":"Return","src":"1629:49:5"}]}]},"documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"1422:94:5","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1148,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:5","nodeType":"FunctionDefinition","parameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"value","nameLocation":"1550:5:5","nodeType":"VariableDeclaration","scope":1148,"src":"1542:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1130,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:5"},"returnParameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1148,"src":"1580:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1133,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:5"},"scope":1270,"src":"1521:174:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1223,"nodeType":"Block","src":"1908:347:5","statements":[{"assignments":[1159],"declarations":[{"constant":false,"id":1159,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:5","nodeType":"VariableDeclaration","scope":1223,"src":"1918:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1158,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1168,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1163,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"1954:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1160,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:5"},{"expression":{"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1169,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"1975:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1171,"indexExpression":{"hexValue":"30","id":1170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1174,"nodeType":"ExpressionStatement","src":"1975:15:5"},{"expression":{"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1175,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"2000:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1177,"indexExpression":{"hexValue":"31","id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1180,"nodeType":"ExpressionStatement","src":"2000:15:5"},{"body":{"id":1209,"nodeType":"Block","src":"2070:83:5","statements":[{"expression":{"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1195,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"2084:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1197,"indexExpression":{"id":1196,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"2091:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1198,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"2096:8:5","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1202,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"2105:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:5","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1204,"nodeType":"ExpressionStatement","src":"2084:33:5"},{"expression":{"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"2131:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1208,"nodeType":"ExpressionStatement","src":"2131:11:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1189,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"2058:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1210,"initializationExpression":{"assignments":[1182],"declarations":[{"constant":false,"id":1182,"mutability":"mutable","name":"i","nameLocation":"2038:1:5","nodeType":"VariableDeclaration","scope":1210,"src":"2030:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1188,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1184,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"2046:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:5"},"loopExpression":{"expression":{"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:5","subExpression":{"id":1192,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"2067:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1194,"nodeType":"ExpressionStatement","src":"2065:3:5"},"nodeType":"ForStatement","src":"2025:128:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"2170:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1217,"nodeType":"ExpressionStatement","src":"2162:55:5"},{"expression":{"arguments":[{"id":1220,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"2241:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1218,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:5","typeDescriptions":{}}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1157,"id":1222,"nodeType":"Return","src":"2227:21:5"}]},"documentation":{"id":1149,"nodeType":"StructuredDocumentation","src":"1701:112:5","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1224,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:5","nodeType":"FunctionDefinition","parameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"mutability":"mutable","name":"value","nameLocation":"1847:5:5","nodeType":"VariableDeclaration","scope":1224,"src":"1839:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1150,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"length","nameLocation":"1862:6:5","nodeType":"VariableDeclaration","scope":1224,"src":"1854:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:5"},"returnParameters":{"id":1157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1224,"src":"1893:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1155,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:5"},"scope":1270,"src":"1818:437:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1243,"nodeType":"Block","src":"2480:76:5","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1237,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"2525:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1235,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:5","typeDescriptions":{}}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:5","typeDescriptions":{}}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1240,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2533:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1232,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1148,1224,1244],"referencedDeclaration":1224,"src":"2497:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1231,"id":1242,"nodeType":"Return","src":"2490:59:5"}]},"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"2261:141:5","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1244,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:5","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"addr","nameLocation":"2436:4:5","nodeType":"VariableDeclaration","scope":1244,"src":"2428:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:5"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1244,"src":"2465:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1229,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:5"},"scope":1270,"src":"2407:149:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1268,"nodeType":"Block","src":"2711:66:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1257,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"2744:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1255,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:5","typeDescriptions":{}}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1254,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1263,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"2767:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1261,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:5","typeDescriptions":{}}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1260,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1253,"id":1267,"nodeType":"Return","src":"2721:49:5"}]},"documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"2562:66:5","text":" @dev Returns true if the two strings are equal."},"id":1269,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:5","nodeType":"FunctionDefinition","parameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"a","nameLocation":"2662:1:5","nodeType":"VariableDeclaration","scope":1269,"src":"2648:15:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1246,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"b","nameLocation":"2679:1:5","nodeType":"VariableDeclaration","scope":1269,"src":"2665:15:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1248,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:5"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1269,"src":"2705:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1251,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:5"},"scope":1270,"src":"2633:144:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1271,"src":"220:2559:5","usedErrors":[]}],"src":"101:2679:5"},"id":5},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2136]},"id":2137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1272,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1273,"nodeType":"StructuredDocumentation","src":"128:73:6","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2136,"linearizedBaseContracts":[2136],"name":"Math","nameLocation":"210:4:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1277,"members":[{"id":1274,"name":"Down","nameLocation":"245:4:6","nodeType":"EnumValue","src":"245:4:6"},{"id":1275,"name":"Up","nameLocation":"287:2:6","nodeType":"EnumValue","src":"287:2:6"},{"id":1276,"name":"Zero","nameLocation":"318:4:6","nodeType":"EnumValue","src":"318:4:6"}],"name":"Rounding","nameLocation":"226:8:6","nodeType":"EnumDefinition","src":"221:122:6"},{"body":{"id":1294,"nodeType":"Block","src":"480:37:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1287,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"497:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1288,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"501:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1291,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"509:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:6","trueExpression":{"id":1290,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"505:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1286,"id":1293,"nodeType":"Return","src":"490:20:6"}]},"documentation":{"id":1278,"nodeType":"StructuredDocumentation","src":"349:59:6","text":" @dev Returns the largest of two numbers."},"id":1295,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:6","nodeType":"FunctionDefinition","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"a","nameLocation":"434:1:6","nodeType":"VariableDeclaration","scope":1295,"src":"426:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1282,"mutability":"mutable","name":"b","nameLocation":"445:1:6","nodeType":"VariableDeclaration","scope":1295,"src":"437:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:6"},"returnParameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1295,"src":"471:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1284,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:6"},"scope":2136,"src":"413:104:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1312,"nodeType":"Block","src":"655:37:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1305,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"672:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1306,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"676:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1309,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"684:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:6","trueExpression":{"id":1308,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"680:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1304,"id":1311,"nodeType":"Return","src":"665:20:6"}]},"documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"523:60:6","text":" @dev Returns the smallest of two numbers."},"id":1313,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:6","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"a","nameLocation":"609:1:6","nodeType":"VariableDeclaration","scope":1313,"src":"601:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"b","nameLocation":"620:1:6","nodeType":"VariableDeclaration","scope":1313,"src":"612:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:6"},"returnParameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1313,"src":"646:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:6"},"scope":2136,"src":"588:104:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1335,"nodeType":"Block","src":"876:82:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1323,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"931:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1324,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"935:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1327,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"941:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1328,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"945:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1330,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1322,"id":1334,"nodeType":"Return","src":"923:28:6"}]},"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"698:102:6","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1336,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:6","nodeType":"FunctionDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"a","nameLocation":"830:1:6","nodeType":"VariableDeclaration","scope":1336,"src":"822:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1315,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"b","nameLocation":"841:1:6","nodeType":"VariableDeclaration","scope":1336,"src":"833:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:6"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1336,"src":"867:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:6"},"scope":2136,"src":"805:153:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1360,"nodeType":"Block","src":"1228:123:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1346,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"1316:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1350,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"1330:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1353,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1354,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"1339:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:6","trueExpression":{"hexValue":"30","id":1349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1345,"id":1359,"nodeType":"Return","src":"1309:35:6"}]},"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"964:188:6","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1361,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:6","nodeType":"FunctionDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"a","nameLocation":"1182:1:6","nodeType":"VariableDeclaration","scope":1361,"src":"1174:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"b","nameLocation":"1193:1:6","nodeType":"VariableDeclaration","scope":1361,"src":"1185:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:6"},"returnParameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1361,"src":"1219:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1343,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:6"},"scope":2136,"src":"1157:194:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1483,"nodeType":"Block","src":"1765:4115:6","statements":[{"id":1482,"nodeType":"UncheckedBlock","src":"1775:4099:6","statements":[{"assignments":[1374],"declarations":[{"constant":false,"id":1374,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:6","nodeType":"VariableDeclaration","scope":1482,"src":"2096:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1375,"nodeType":"VariableDeclarationStatement","src":"2096:13:6"},{"assignments":[1377],"declarations":[{"constant":false,"id":1377,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:6","nodeType":"VariableDeclaration","scope":1482,"src":"2168:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1378,"nodeType":"VariableDeclarationStatement","src":"2168:13:6"},{"AST":{"nodeType":"YulBlock","src":"2248:157:6","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:6"},"nodeType":"YulFunctionCall","src":"2289:6:6"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:6"},"nodeType":"YulFunctionCall","src":"2276:20:6"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:6","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:6"},"nodeType":"YulFunctionCall","src":"2322:9:6"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:6"}]},{"nodeType":"YulAssignment","src":"2348:43:6","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:6"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:6"},"nodeType":"YulFunctionCall","src":"2361:14:6"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:6"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:6"},"nodeType":"YulFunctionCall","src":"2377:13:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:6"},"nodeType":"YulFunctionCall","src":"2357:34:6"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:6"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1374,"isOffset":false,"isSlot":false,"src":"2313:5:6","valueSize":1},{"declaration":1374,"isOffset":false,"isSlot":false,"src":"2369:5:6","valueSize":1},{"declaration":1374,"isOffset":false,"isSlot":false,"src":"2384:5:6","valueSize":1},{"declaration":1377,"isOffset":false,"isSlot":false,"src":"2348:5:6","valueSize":1},{"declaration":1364,"isOffset":false,"isSlot":false,"src":"2283:1:6","valueSize":1},{"declaration":1364,"isOffset":false,"isSlot":false,"src":"2326:1:6","valueSize":1},{"declaration":1366,"isOffset":false,"isSlot":false,"src":"2286:1:6","valueSize":1},{"declaration":1366,"isOffset":false,"isSlot":false,"src":"2329:1:6","valueSize":1}],"id":1379,"nodeType":"InlineAssembly","src":"2239:166:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1380,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"2486:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1388,"nodeType":"IfStatement","src":"2482:368:6","trueBody":{"id":1387,"nodeType":"Block","src":"2498:352:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1383,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"2816:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1384,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"2824:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1372,"id":1386,"nodeType":"Return","src":"2809:26:6"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1390,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"2960:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1391,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"2974:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":1389,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1395,"nodeType":"ExpressionStatement","src":"2952:53:6"},{"assignments":[1397],"declarations":[{"constant":false,"id":1397,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:6","nodeType":"VariableDeclaration","scope":1482,"src":"3261:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1398,"nodeType":"VariableDeclarationStatement","src":"3261:17:6"},{"AST":{"nodeType":"YulBlock","src":"3301:291:6","statements":[{"nodeType":"YulAssignment","src":"3370:38:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:6"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:6"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:6"},"nodeType":"YulFunctionCall","src":"3383:25:6"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:6"}]},{"nodeType":"YulAssignment","src":"3490:41:6","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:6"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:6"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:6"},"nodeType":"YulFunctionCall","src":"3510:20:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:6"},"nodeType":"YulFunctionCall","src":"3499:32:6"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:6"}]},{"nodeType":"YulAssignment","src":"3548:30:6","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:6"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:6"},"nodeType":"YulFunctionCall","src":"3557:21:6"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:6"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1368,"isOffset":false,"isSlot":false,"src":"3396:11:6","valueSize":1},{"declaration":1374,"isOffset":false,"isSlot":false,"src":"3524:5:6","valueSize":1},{"declaration":1374,"isOffset":false,"isSlot":false,"src":"3548:5:6","valueSize":1},{"declaration":1374,"isOffset":false,"isSlot":false,"src":"3561:5:6","valueSize":1},{"declaration":1377,"isOffset":false,"isSlot":false,"src":"3490:5:6","valueSize":1},{"declaration":1377,"isOffset":false,"isSlot":false,"src":"3503:5:6","valueSize":1},{"declaration":1397,"isOffset":false,"isSlot":false,"src":"3370:9:6","valueSize":1},{"declaration":1397,"isOffset":false,"isSlot":false,"src":"3513:9:6","valueSize":1},{"declaration":1397,"isOffset":false,"isSlot":false,"src":"3568:9:6","valueSize":1},{"declaration":1364,"isOffset":false,"isSlot":false,"src":"3390:1:6","valueSize":1},{"declaration":1366,"isOffset":false,"isSlot":false,"src":"3393:1:6","valueSize":1}],"id":1399,"nodeType":"InlineAssembly","src":"3292:300:6"},{"assignments":[1401],"declarations":[{"constant":false,"id":1401,"mutability":"mutable","name":"twos","nameLocation":"3907:4:6","nodeType":"VariableDeclaration","scope":1482,"src":"3899:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1409,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1402,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"3914:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:6","subExpression":{"id":1403,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"3930:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:6"},{"AST":{"nodeType":"YulBlock","src":"3969:362:6","statements":[{"nodeType":"YulAssignment","src":"4034:37:6","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:6"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:6"},"nodeType":"YulFunctionCall","src":"4049:22:6"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:6"}]},{"nodeType":"YulAssignment","src":"4138:25:6","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:6"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:6"},"nodeType":"YulFunctionCall","src":"4147:16:6"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:6"}]},{"nodeType":"YulAssignment","src":"4278:39:6","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:6","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:6"},"nodeType":"YulFunctionCall","src":"4294:12:6"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:6"},"nodeType":"YulFunctionCall","src":"4290:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:6"},"nodeType":"YulFunctionCall","src":"4286:31:6"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:6"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1368,"isOffset":false,"isSlot":false,"src":"4034:11:6","valueSize":1},{"declaration":1368,"isOffset":false,"isSlot":false,"src":"4053:11:6","valueSize":1},{"declaration":1374,"isOffset":false,"isSlot":false,"src":"4138:5:6","valueSize":1},{"declaration":1374,"isOffset":false,"isSlot":false,"src":"4151:5:6","valueSize":1},{"declaration":1401,"isOffset":false,"isSlot":false,"src":"4066:4:6","valueSize":1},{"declaration":1401,"isOffset":false,"isSlot":false,"src":"4158:4:6","valueSize":1},{"declaration":1401,"isOffset":false,"isSlot":false,"src":"4278:4:6","valueSize":1},{"declaration":1401,"isOffset":false,"isSlot":false,"src":"4301:4:6","valueSize":1},{"declaration":1401,"isOffset":false,"isSlot":false,"src":"4308:4:6","valueSize":1}],"id":1410,"nodeType":"InlineAssembly","src":"3960:371:6"},{"expression":{"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1411,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"4397:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1412,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"4406:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1413,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"4414:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1416,"nodeType":"ExpressionStatement","src":"4397:21:6"},{"assignments":[1418],"declarations":[{"constant":false,"id":1418,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:6","nodeType":"VariableDeclaration","scope":1482,"src":"4736:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1417,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1425,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1420,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"4759:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1422,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:6"},{"expression":{"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1426,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"4992:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1428,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"5007:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1429,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"5021:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1433,"nodeType":"ExpressionStatement","src":"4992:36:6"},{"expression":{"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1434,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"5061:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1436,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"5076:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1437,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"5090:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1441,"nodeType":"ExpressionStatement","src":"5061:36:6"},{"expression":{"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1442,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"5131:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1444,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"5146:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1445,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"5160:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1449,"nodeType":"ExpressionStatement","src":"5131:36:6"},{"expression":{"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1450,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"5201:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1452,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"5216:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1453,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"5230:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1457,"nodeType":"ExpressionStatement","src":"5201:36:6"},{"expression":{"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1458,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"5271:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1460,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"5286:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1461,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"5300:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1465,"nodeType":"ExpressionStatement","src":"5271:36:6"},{"expression":{"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1466,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"5342:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1468,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"5357:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1469,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"5371:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1473,"nodeType":"ExpressionStatement","src":"5342:36:6"},{"expression":{"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1474,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"5812:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1475,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"5821:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1476,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"5829:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1479,"nodeType":"ExpressionStatement","src":"5812:24:6"},{"expression":{"id":1480,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"5857:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1372,"id":1481,"nodeType":"Return","src":"5850:13:6"}]}]},"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"1357:305:6","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1484,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:6","nodeType":"FunctionDefinition","parameters":{"id":1369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"x","nameLocation":"1691:1:6","nodeType":"VariableDeclaration","scope":1484,"src":"1683:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1366,"mutability":"mutable","name":"y","nameLocation":"1702:1:6","nodeType":"VariableDeclaration","scope":1484,"src":"1694:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1368,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:6","nodeType":"VariableDeclaration","scope":1484,"src":"1705:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1367,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:6"},"returnParameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"result","nameLocation":"1757:6:6","nodeType":"VariableDeclaration","scope":1484,"src":"1749:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1370,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:6"},"scope":2136,"src":"1667:4213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1527,"nodeType":"Block","src":"6122:189:6","statements":[{"assignments":[1500],"declarations":[{"constant":false,"id":1500,"mutability":"mutable","name":"result","nameLocation":"6140:6:6","nodeType":"VariableDeclaration","scope":1527,"src":"6132:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1499,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1506,"initialValue":{"arguments":[{"id":1502,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"6156:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1503,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"6159:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1504,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"6162:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1501,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1484,1528],"referencedDeclaration":1484,"src":"6149:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1507,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"6188:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1508,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"6200:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1277_$","typeString":"type(enum Math.Rounding)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:6","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1275,"src":"6200:11:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"}},"src":"6188:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1512,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"6222:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1513,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"6225:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1514,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"6228:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1511,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:6","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1524,"nodeType":"IfStatement","src":"6184:98:6","trueBody":{"id":1523,"nodeType":"Block","src":"6246:36:6","statements":[{"expression":{"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1519,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"6260:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1522,"nodeType":"ExpressionStatement","src":"6260:11:6"}]}},{"expression":{"id":1525,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"6298:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1498,"id":1526,"nodeType":"Return","src":"6291:13:6"}]},"documentation":{"id":1485,"nodeType":"StructuredDocumentation","src":"5886:121:6","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1528,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:6","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"mutability":"mutable","name":"x","nameLocation":"6036:1:6","nodeType":"VariableDeclaration","scope":1528,"src":"6028:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1486,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1489,"mutability":"mutable","name":"y","nameLocation":"6047:1:6","nodeType":"VariableDeclaration","scope":1528,"src":"6039:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1491,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:6","nodeType":"VariableDeclaration","scope":1528,"src":"6050:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1490,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1494,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:6","nodeType":"VariableDeclaration","scope":1528,"src":"6071:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"},"typeName":{"id":1493,"nodeType":"UserDefinedTypeName","pathNode":{"id":1492,"name":"Rounding","nameLocations":["6071:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1277,"src":"6071:8:6"},"referencedDeclaration":1277,"src":"6071:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:6"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1528,"src":"6113:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:6"},"scope":2136,"src":"6012:299:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1639,"nodeType":"Block","src":"6587:1585:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"6601:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1542,"nodeType":"IfStatement","src":"6597:45:6","trueBody":{"id":1541,"nodeType":"Block","src":"6609:33:6","statements":[{"expression":{"hexValue":"30","id":1539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1535,"id":1540,"nodeType":"Return","src":"6623:8:6"}]}},{"assignments":[1544],"declarations":[{"constant":false,"id":1544,"mutability":"mutable","name":"result","nameLocation":"7329:6:6","nodeType":"VariableDeclaration","scope":1639,"src":"7321:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1543,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1553,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1547,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"7349:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1546,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1808,1844],"referencedDeclaration":1808,"src":"7344:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:6"},{"id":1638,"nodeType":"UncheckedBlock","src":"7758:408:6","statements":[{"expression":{"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1554,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7782:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1555,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7792:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1556,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"7801:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7805:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1564,"nodeType":"ExpressionStatement","src":"7782:35:6"},{"expression":{"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1565,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7831:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1566,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7841:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1567,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"7850:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1568,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7854:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1571,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1575,"nodeType":"ExpressionStatement","src":"7831:35:6"},{"expression":{"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1576,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7880:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1577,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7890:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1578,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"7899:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7903:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1582,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1586,"nodeType":"ExpressionStatement","src":"7880:35:6"},{"expression":{"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1587,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7929:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1588,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7939:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1589,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"7948:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1590,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7952:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1593,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1597,"nodeType":"ExpressionStatement","src":"7929:35:6"},{"expression":{"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1598,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7978:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1599,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"7988:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1600,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"7997:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1601,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"8001:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1608,"nodeType":"ExpressionStatement","src":"7978:35:6"},{"expression":{"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1609,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"8027:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1610,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"8037:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1611,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"8046:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1612,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"8050:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1615,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1619,"nodeType":"ExpressionStatement","src":"8027:35:6"},{"expression":{"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1620,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"8076:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1621,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"8086:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1622,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"8095:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1623,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"8099:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1626,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1630,"nodeType":"ExpressionStatement","src":"8076:35:6"},{"expression":{"arguments":[{"id":1632,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"8136:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1633,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"8144:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1634,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"8148:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1631,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"8132:3:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1535,"id":1637,"nodeType":"Return","src":"8125:30:6"}]}]},"documentation":{"id":1529,"nodeType":"StructuredDocumentation","src":"6317:208:6","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1640,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:6","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"mutability":"mutable","name":"a","nameLocation":"6552:1:6","nodeType":"VariableDeclaration","scope":1640,"src":"6544:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:6"},"returnParameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1640,"src":"6578:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1533,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:6"},"scope":2136,"src":"6530:1642:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1675,"nodeType":"Block","src":"8348:161:6","statements":[{"id":1674,"nodeType":"UncheckedBlock","src":"8358:145:6","statements":[{"assignments":[1652],"declarations":[{"constant":false,"id":1652,"mutability":"mutable","name":"result","nameLocation":"8390:6:6","nodeType":"VariableDeclaration","scope":1674,"src":"8382:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1651,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1656,"initialValue":{"arguments":[{"id":1654,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"8404:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1653,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1640,1676],"referencedDeclaration":1640,"src":"8399:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1657,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"8427:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1658,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"8437:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1659,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"8449:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1277_$","typeString":"type(enum Math.Rounding)"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:6","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1275,"src":"8449:11:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"}},"src":"8437:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1662,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"8464:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1663,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"8473:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1665,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"8482:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:6","trueExpression":{"hexValue":"31","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1650,"id":1673,"nodeType":"Return","src":"8420:72:6"}]}]},"documentation":{"id":1641,"nodeType":"StructuredDocumentation","src":"8178:89:6","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1676,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:6","nodeType":"FunctionDefinition","parameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"a","nameLocation":"8294:1:6","nodeType":"VariableDeclaration","scope":1676,"src":"8286:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1646,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:6","nodeType":"VariableDeclaration","scope":1676,"src":"8297:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"},"typeName":{"id":1645,"nodeType":"UserDefinedTypeName","pathNode":{"id":1644,"name":"Rounding","nameLocations":["8297:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1277,"src":"8297:8:6"},"referencedDeclaration":1277,"src":"8297:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:6"},"returnParameters":{"id":1650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1676,"src":"8339:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1648,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:6"},"scope":2136,"src":"8272:237:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1807,"nodeType":"Block","src":"8694:922:6","statements":[{"assignments":[1685],"declarations":[{"constant":false,"id":1685,"mutability":"mutable","name":"result","nameLocation":"8712:6:6","nodeType":"VariableDeclaration","scope":1807,"src":"8704:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1687,"initialValue":{"hexValue":"30","id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:6"},{"id":1804,"nodeType":"UncheckedBlock","src":"8732:855:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"8760:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1702,"nodeType":"IfStatement","src":"8756:99:6","trueBody":{"id":1701,"nodeType":"Block","src":"8778:77:6","statements":[{"expression":{"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"8796:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1696,"nodeType":"ExpressionStatement","src":"8796:13:6"},{"expression":{"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1697,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"8827:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1700,"nodeType":"ExpressionStatement","src":"8827:13:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"8872:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1717,"nodeType":"IfStatement","src":"8868:96:6","trueBody":{"id":1716,"nodeType":"Block","src":"8889:75:6","statements":[{"expression":{"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"8907:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1711,"nodeType":"ExpressionStatement","src":"8907:12:6"},{"expression":{"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1712,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"8937:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1715,"nodeType":"ExpressionStatement","src":"8937:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"8981:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1732,"nodeType":"IfStatement","src":"8977:96:6","trueBody":{"id":1731,"nodeType":"Block","src":"8998:75:6","statements":[{"expression":{"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"9016:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1726,"nodeType":"ExpressionStatement","src":"9016:12:6"},{"expression":{"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1727,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"9046:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1730,"nodeType":"ExpressionStatement","src":"9046:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"9090:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1747,"nodeType":"IfStatement","src":"9086:96:6","trueBody":{"id":1746,"nodeType":"Block","src":"9107:75:6","statements":[{"expression":{"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"9125:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1741,"nodeType":"ExpressionStatement","src":"9125:12:6"},{"expression":{"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1742,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"9155:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1745,"nodeType":"ExpressionStatement","src":"9155:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"9199:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1762,"nodeType":"IfStatement","src":"9195:93:6","trueBody":{"id":1761,"nodeType":"Block","src":"9215:73:6","statements":[{"expression":{"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"9233:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1756,"nodeType":"ExpressionStatement","src":"9233:11:6"},{"expression":{"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1757,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"9262:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1760,"nodeType":"ExpressionStatement","src":"9262:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"9305:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1777,"nodeType":"IfStatement","src":"9301:93:6","trueBody":{"id":1776,"nodeType":"Block","src":"9321:73:6","statements":[{"expression":{"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"9339:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1771,"nodeType":"ExpressionStatement","src":"9339:11:6"},{"expression":{"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1772,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"9368:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1775,"nodeType":"ExpressionStatement","src":"9368:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"9411:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1792,"nodeType":"IfStatement","src":"9407:93:6","trueBody":{"id":1791,"nodeType":"Block","src":"9427:73:6","statements":[{"expression":{"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"9445:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1786,"nodeType":"ExpressionStatement","src":"9445:11:6"},{"expression":{"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1787,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"9474:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1790,"nodeType":"ExpressionStatement","src":"9474:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"9517:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1803,"nodeType":"IfStatement","src":"9513:64:6","trueBody":{"id":1802,"nodeType":"Block","src":"9533:44:6","statements":[{"expression":{"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1798,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"9551:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1801,"nodeType":"ExpressionStatement","src":"9551:11:6"}]}}]},{"expression":{"id":1805,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"9603:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1683,"id":1806,"nodeType":"Return","src":"9596:13:6"}]},"documentation":{"id":1677,"nodeType":"StructuredDocumentation","src":"8515:113:6","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1808,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:6","nodeType":"FunctionDefinition","parameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"mutability":"mutable","name":"value","nameLocation":"8655:5:6","nodeType":"VariableDeclaration","scope":1808,"src":"8647:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1678,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:6"},"returnParameters":{"id":1683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1808,"src":"8685:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1681,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:6"},"scope":2136,"src":"8633:983:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1843,"nodeType":"Block","src":"9849:165:6","statements":[{"id":1842,"nodeType":"UncheckedBlock","src":"9859:149:6","statements":[{"assignments":[1820],"declarations":[{"constant":false,"id":1820,"mutability":"mutable","name":"result","nameLocation":"9891:6:6","nodeType":"VariableDeclaration","scope":1842,"src":"9883:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1824,"initialValue":{"arguments":[{"id":1822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"9905:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1821,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1808,1844],"referencedDeclaration":1808,"src":"9900:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1825,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"9932:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1826,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"9942:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1827,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"9954:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1277_$","typeString":"type(enum Math.Rounding)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:6","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1275,"src":"9954:11:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"}},"src":"9942:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1831,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"9974:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"9983:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:6","trueExpression":{"hexValue":"31","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1818,"id":1841,"nodeType":"Return","src":"9925:72:6"}]}]},"documentation":{"id":1809,"nodeType":"StructuredDocumentation","src":"9622:142:6","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1844,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:6","nodeType":"FunctionDefinition","parameters":{"id":1815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1811,"mutability":"mutable","name":"value","nameLocation":"9791:5:6","nodeType":"VariableDeclaration","scope":1844,"src":"9783:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1810,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1814,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:6","nodeType":"VariableDeclaration","scope":1844,"src":"9798:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"},"typeName":{"id":1813,"nodeType":"UserDefinedTypeName","pathNode":{"id":1812,"name":"Rounding","nameLocations":["9798:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1277,"src":"9798:8:6"},"referencedDeclaration":1277,"src":"9798:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:6"},"returnParameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1844,"src":"9840:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1816,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:6"},"scope":2136,"src":"9769:245:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1972,"nodeType":"Block","src":"10201:854:6","statements":[{"assignments":[1853],"declarations":[{"constant":false,"id":1853,"mutability":"mutable","name":"result","nameLocation":"10219:6:6","nodeType":"VariableDeclaration","scope":1972,"src":"10211:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1852,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1855,"initialValue":{"hexValue":"30","id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:6"},{"id":1969,"nodeType":"UncheckedBlock","src":"10239:787:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"10267:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1872,"nodeType":"IfStatement","src":"10263:103:6","trueBody":{"id":1871,"nodeType":"Block","src":"10286:80:6","statements":[{"expression":{"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"10304:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1866,"nodeType":"ExpressionStatement","src":"10304:17:6"},{"expression":{"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1867,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"10339:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1870,"nodeType":"ExpressionStatement","src":"10339:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"10383:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1889,"nodeType":"IfStatement","src":"10379:103:6","trueBody":{"id":1888,"nodeType":"Block","src":"10402:80:6","statements":[{"expression":{"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"10420:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1883,"nodeType":"ExpressionStatement","src":"10420:17:6"},{"expression":{"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1884,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"10455:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1887,"nodeType":"ExpressionStatement","src":"10455:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"10499:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1906,"nodeType":"IfStatement","src":"10495:103:6","trueBody":{"id":1905,"nodeType":"Block","src":"10518:80:6","statements":[{"expression":{"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"10536:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1900,"nodeType":"ExpressionStatement","src":"10536:17:6"},{"expression":{"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1901,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"10571:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1904,"nodeType":"ExpressionStatement","src":"10571:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"10615:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1923,"nodeType":"IfStatement","src":"10611:100:6","trueBody":{"id":1922,"nodeType":"Block","src":"10633:78:6","statements":[{"expression":{"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"10651:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1917,"nodeType":"ExpressionStatement","src":"10651:16:6"},{"expression":{"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1918,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"10685:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1921,"nodeType":"ExpressionStatement","src":"10685:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"10728:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1940,"nodeType":"IfStatement","src":"10724:100:6","trueBody":{"id":1939,"nodeType":"Block","src":"10746:78:6","statements":[{"expression":{"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"10764:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1934,"nodeType":"ExpressionStatement","src":"10764:16:6"},{"expression":{"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1935,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"10798:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1938,"nodeType":"ExpressionStatement","src":"10798:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"10841:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1957,"nodeType":"IfStatement","src":"10837:100:6","trueBody":{"id":1956,"nodeType":"Block","src":"10859:78:6","statements":[{"expression":{"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"10877:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1951,"nodeType":"ExpressionStatement","src":"10877:16:6"},{"expression":{"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1952,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"10911:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1955,"nodeType":"ExpressionStatement","src":"10911:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"10954:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1968,"nodeType":"IfStatement","src":"10950:66:6","trueBody":{"id":1967,"nodeType":"Block","src":"10972:44:6","statements":[{"expression":{"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1963,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"10990:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1966,"nodeType":"ExpressionStatement","src":"10990:11:6"}]}}]},{"expression":{"id":1970,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"11042:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1851,"id":1971,"nodeType":"Return","src":"11035:13:6"}]},"documentation":{"id":1845,"nodeType":"StructuredDocumentation","src":"10020:114:6","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1973,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:6","nodeType":"FunctionDefinition","parameters":{"id":1848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1847,"mutability":"mutable","name":"value","nameLocation":"10162:5:6","nodeType":"VariableDeclaration","scope":1973,"src":"10154:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1846,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:6"},"returnParameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1973,"src":"10192:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:6"},"scope":2136,"src":"10139:916:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2008,"nodeType":"Block","src":"11290:167:6","statements":[{"id":2007,"nodeType":"UncheckedBlock","src":"11300:151:6","statements":[{"assignments":[1985],"declarations":[{"constant":false,"id":1985,"mutability":"mutable","name":"result","nameLocation":"11332:6:6","nodeType":"VariableDeclaration","scope":2007,"src":"11324:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1984,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1989,"initialValue":{"arguments":[{"id":1987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"11347:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1986,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1973,2009],"referencedDeclaration":1973,"src":"11341:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1990,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"11374:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1991,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"11384:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1992,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"11396:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1277_$","typeString":"type(enum Math.Rounding)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:6","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1275,"src":"11396:11:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"}},"src":"11384:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1996,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"11417:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"11426:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:6","trueExpression":{"hexValue":"31","id":2001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2004,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1983,"id":2006,"nodeType":"Return","src":"11367:73:6"}]}]},"documentation":{"id":1974,"nodeType":"StructuredDocumentation","src":"11061:143:6","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2009,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:6","nodeType":"FunctionDefinition","parameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"value","nameLocation":"11232:5:6","nodeType":"VariableDeclaration","scope":2009,"src":"11224:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1975,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1979,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:6","nodeType":"VariableDeclaration","scope":2009,"src":"11239:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"},"typeName":{"id":1978,"nodeType":"UserDefinedTypeName","pathNode":{"id":1977,"name":"Rounding","nameLocations":["11239:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1277,"src":"11239:8:6"},"referencedDeclaration":1277,"src":"11239:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:6"},"returnParameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2009,"src":"11281:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:6"},"scope":2136,"src":"11209:248:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2095,"nodeType":"Block","src":"11771:600:6","statements":[{"assignments":[2018],"declarations":[{"constant":false,"id":2018,"mutability":"mutable","name":"result","nameLocation":"11789:6:6","nodeType":"VariableDeclaration","scope":2095,"src":"11781:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2017,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2020,"initialValue":{"hexValue":"30","id":2019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:6"},{"id":2092,"nodeType":"UncheckedBlock","src":"11809:533:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"11837:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2035,"nodeType":"IfStatement","src":"11833:98:6","trueBody":{"id":2034,"nodeType":"Block","src":"11855:76:6","statements":[{"expression":{"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"11873:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2029,"nodeType":"ExpressionStatement","src":"11873:13:6"},{"expression":{"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2030,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"11904:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2033,"nodeType":"ExpressionStatement","src":"11904:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"11948:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2050,"nodeType":"IfStatement","src":"11944:95:6","trueBody":{"id":2049,"nodeType":"Block","src":"11965:74:6","statements":[{"expression":{"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"11983:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2044,"nodeType":"ExpressionStatement","src":"11983:12:6"},{"expression":{"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2045,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"12013:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2048,"nodeType":"ExpressionStatement","src":"12013:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"12056:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2065,"nodeType":"IfStatement","src":"12052:95:6","trueBody":{"id":2064,"nodeType":"Block","src":"12073:74:6","statements":[{"expression":{"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"12091:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2059,"nodeType":"ExpressionStatement","src":"12091:12:6"},{"expression":{"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2060,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"12121:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2063,"nodeType":"ExpressionStatement","src":"12121:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"12164:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2080,"nodeType":"IfStatement","src":"12160:95:6","trueBody":{"id":2079,"nodeType":"Block","src":"12181:74:6","statements":[{"expression":{"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"12199:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2074,"nodeType":"ExpressionStatement","src":"12199:12:6"},{"expression":{"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2075,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"12229:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2078,"nodeType":"ExpressionStatement","src":"12229:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"12272:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2091,"nodeType":"IfStatement","src":"12268:64:6","trueBody":{"id":2090,"nodeType":"Block","src":"12288:44:6","statements":[{"expression":{"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2086,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"12306:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2089,"nodeType":"ExpressionStatement","src":"12306:11:6"}]}}]},{"expression":{"id":2093,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"12358:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2016,"id":2094,"nodeType":"Return","src":"12351:13:6"}]},"documentation":{"id":2010,"nodeType":"StructuredDocumentation","src":"11463:240:6","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2096,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:6","nodeType":"FunctionDefinition","parameters":{"id":2013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2012,"mutability":"mutable","name":"value","nameLocation":"11732:5:6","nodeType":"VariableDeclaration","scope":2096,"src":"11724:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2011,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:6"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2096,"src":"11762:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2014,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:6"},"scope":2136,"src":"11708:663:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2134,"nodeType":"Block","src":"12608:174:6","statements":[{"id":2133,"nodeType":"UncheckedBlock","src":"12618:158:6","statements":[{"assignments":[2108],"declarations":[{"constant":false,"id":2108,"mutability":"mutable","name":"result","nameLocation":"12650:6:6","nodeType":"VariableDeclaration","scope":2133,"src":"12642:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2107,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2112,"initialValue":{"arguments":[{"id":2110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"12666:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2109,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2096,2135],"referencedDeclaration":2096,"src":"12659:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2113,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"12693:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2114,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"12703:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2115,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"12715:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1277_$","typeString":"type(enum Math.Rounding)"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:6","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1275,"src":"12715:11:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"}},"src":"12703:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2119,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"12736:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2122,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"12751:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:6","trueExpression":{"hexValue":"31","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2130,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2106,"id":2132,"nodeType":"Return","src":"12686:79:6"}]}]},"documentation":{"id":2097,"nodeType":"StructuredDocumentation","src":"12377:144:6","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2135,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:6","nodeType":"FunctionDefinition","parameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"value","nameLocation":"12550:5:6","nodeType":"VariableDeclaration","scope":2135,"src":"12542:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2098,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2102,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:6","nodeType":"VariableDeclaration","scope":2135,"src":"12557:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"},"typeName":{"id":2101,"nodeType":"UserDefinedTypeName","pathNode":{"id":2100,"name":"Rounding","nameLocations":["12557:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1277,"src":"12557:8:6"},"referencedDeclaration":1277,"src":"12557:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1277","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:6"},"returnParameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2135,"src":"12599:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2104,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:6"},"scope":2136,"src":"12526:256:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2137,"src":"202:12582:6","usedErrors":[]}],"src":"103:12682:6"},"id":6},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[2241]},"id":2242,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2138,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":2139,"nodeType":"StructuredDocumentation","src":"134:80:7","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2241,"linearizedBaseContracts":[2241],"name":"SignedMath","nameLocation":"223:10:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":2156,"nodeType":"Block","src":"375:37:7","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2149,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"392:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2150,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"396:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2153,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"404:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:7","trueExpression":{"id":2152,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"400:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2148,"id":2155,"nodeType":"Return","src":"385:20:7"}]},"documentation":{"id":2140,"nodeType":"StructuredDocumentation","src":"240:66:7","text":" @dev Returns the largest of two signed numbers."},"id":2157,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:7","nodeType":"FunctionDefinition","parameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2142,"mutability":"mutable","name":"a","nameLocation":"331:1:7","nodeType":"VariableDeclaration","scope":2157,"src":"324:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2141,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2144,"mutability":"mutable","name":"b","nameLocation":"341:1:7","nodeType":"VariableDeclaration","scope":2157,"src":"334:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2143,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:7"},"returnParameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2157,"src":"367:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2146,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:7"},"scope":2241,"src":"311:101:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2174,"nodeType":"Block","src":"554:37:7","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2167,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"571:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2168,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"575:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2171,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"583:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:7","trueExpression":{"id":2170,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"579:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2166,"id":2173,"nodeType":"Return","src":"564:20:7"}]},"documentation":{"id":2158,"nodeType":"StructuredDocumentation","src":"418:67:7","text":" @dev Returns the smallest of two signed numbers."},"id":2175,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:7","nodeType":"FunctionDefinition","parameters":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"a","nameLocation":"510:1:7","nodeType":"VariableDeclaration","scope":2175,"src":"503:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2159,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2162,"mutability":"mutable","name":"b","nameLocation":"520:1:7","nodeType":"VariableDeclaration","scope":2175,"src":"513:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2161,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:7"},"returnParameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2175,"src":"546:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2164,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:7"},"scope":2241,"src":"490:101:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2218,"nodeType":"Block","src":"796:162:7","statements":[{"assignments":[2186],"declarations":[{"constant":false,"id":2186,"mutability":"mutable","name":"x","nameLocation":"865:1:7","nodeType":"VariableDeclaration","scope":2218,"src":"858:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2185,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2199,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2187,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"870:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2188,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"874:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2191,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"881:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2192,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"885:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2194,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2197,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:7"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2200,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"910:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2205,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"930:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2203,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:7","typeDescriptions":{}}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:7","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2201,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:7","typeDescriptions":{}}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2210,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"944:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2211,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"948:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2215,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2184,"id":2217,"nodeType":"Return","src":"903:48:7"}]},"documentation":{"id":2176,"nodeType":"StructuredDocumentation","src":"597:126:7","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":2219,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:7","nodeType":"FunctionDefinition","parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"a","nameLocation":"752:1:7","nodeType":"VariableDeclaration","scope":2219,"src":"745:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2177,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"b","nameLocation":"762:1:7","nodeType":"VariableDeclaration","scope":2219,"src":"755:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2179,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:7"},"returnParameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2219,"src":"788:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2182,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:7"},"scope":2241,"src":"728:230:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2239,"nodeType":"Block","src":"1102:158:7","statements":[{"id":2238,"nodeType":"UncheckedBlock","src":"1112:142:7","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2229,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"1227:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:7","subExpression":{"id":2233,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"1241:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:7","trueExpression":{"id":2232,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"1236:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:7","typeDescriptions":{}}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2226,"id":2237,"nodeType":"Return","src":"1212:31:7"}]}]},"documentation":{"id":2220,"nodeType":"StructuredDocumentation","src":"964:78:7","text":" @dev Returns the absolute unsigned value of a signed value."},"id":2240,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:7","nodeType":"FunctionDefinition","parameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2222,"mutability":"mutable","name":"n","nameLocation":"1067:1:7","nodeType":"VariableDeclaration","scope":2240,"src":"1060:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2221,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:7"},"returnParameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2240,"src":"1093:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:7"},"scope":2241,"src":"1047:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2242,"src":"215:1047:7","usedErrors":[]}],"src":"109:1154:7"},"id":7},"contracts/HyperContract.sol":{"ast":{"absolutePath":"contracts/HyperContract.sol","exportedSymbols":{"CallLib":[4261],"HyperContract":[2312],"IInterchainAccountRouter":[3871],"IInterchainGasPaymaster":[3885]},"id":2313,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2243,"literals":["solidity",">=","0.6",".11"],"nodeType":"PragmaDirective","src":"46:25:8"},{"absolutePath":"contracts/precompiles/InterchainAccountRouter.sol","file":"./precompiles/InterchainAccountRouter.sol","id":2244,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2313,"sourceUnit":3872,"src":"72:51:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/precompiles/InterchainGasPaymaster.sol","file":"./precompiles/InterchainGasPaymaster.sol","id":2245,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2313,"sourceUnit":3886,"src":"124:50:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/precompiles/libs/Call.sol","file":"./precompiles/libs/Call.sol","id":2247,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2313,"sourceUnit":4262,"src":"175:52:8","symbolAliases":[{"foreign":{"id":2246,"name":"CallLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"183:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"HyperContract","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2312,"linearizedBaseContracts":[2312],"name":"HyperContract","nameLocation":"238:13:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"621fbd59","id":2249,"mutability":"mutable","name":"lastMessageID","nameLocation":"273:13:8","nodeType":"VariableDeclaration","scope":2312,"src":"258:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"258:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":2280,"nodeType":"Block","src":"470:255:8","statements":[{"assignments":[2264],"declarations":[{"constant":false,"id":2264,"mutability":"mutable","name":"router","nameLocation":"505:6:8","nodeType":"VariableDeclaration","scope":2280,"src":"480:31:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IInterchainAccountRouter_$3871","typeString":"contract IInterchainAccountRouter"},"typeName":{"id":2263,"nodeType":"UserDefinedTypeName","pathNode":{"id":2262,"name":"IInterchainAccountRouter","nameLocations":["480:24:8"],"nodeType":"IdentifierPath","referencedDeclaration":3871,"src":"480:24:8"},"referencedDeclaration":3871,"src":"480:24:8","typeDescriptions":{"typeIdentifier":"t_contract$_IInterchainAccountRouter_$3871","typeString":"contract IInterchainAccountRouter"}},"visibility":"internal"}],"id":2268,"initialValue":{"arguments":[{"id":2266,"name":"routerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"552:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2265,"name":"IInterchainAccountRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"514:24:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IInterchainAccountRouter_$3871_$","typeString":"type(contract IInterchainAccountRouter)"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"514:61:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IInterchainAccountRouter_$3871","typeString":"contract IInterchainAccountRouter"}},"nodeType":"VariableDeclarationStatement","src":"480:95:8"},{"expression":{"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2269,"name":"lastMessageID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"585:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2272,"name":"ethereumDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"632:14:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"components":[{"id":2273,"name":"toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"661:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2274,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"685:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2276,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"704:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2270,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"601:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IInterchainAccountRouter_$3871","typeString":"contract IInterchainAccountRouter"}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"608:10:8","memberName":"callRemote","nodeType":"MemberAccess","referencedDeclaration":3861,"src":"601:17:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint32_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (uint32,address,uint256,bytes memory) external returns (bytes32)"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"601:117:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"585:133:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2279,"nodeType":"ExpressionStatement","src":"585:133:8"}]},"functionSelector":"cef5ddf0","id":2281,"implemented":true,"kind":"function","modifiers":[],"name":"sendTransaction","nameLocation":"302:15:8","nodeType":"FunctionDefinition","parameters":{"id":2260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2251,"mutability":"mutable","name":"ethereumDomain","nameLocation":"334:14:8","nodeType":"VariableDeclaration","scope":2281,"src":"327:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2250,"name":"uint32","nodeType":"ElementaryTypeName","src":"327:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2253,"mutability":"mutable","name":"routerAddress","nameLocation":"366:13:8","nodeType":"VariableDeclaration","scope":2281,"src":"358:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2252,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2255,"mutability":"mutable","name":"toAddress","nameLocation":"397:9:8","nodeType":"VariableDeclaration","scope":2281,"src":"389:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2254,"name":"address","nodeType":"ElementaryTypeName","src":"389:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2257,"mutability":"mutable","name":"value","nameLocation":"424:5:8","nodeType":"VariableDeclaration","scope":2281,"src":"416:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2256,"name":"uint256","nodeType":"ElementaryTypeName","src":"416:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2259,"mutability":"mutable","name":"data","nameLocation":"452:4:8","nodeType":"VariableDeclaration","scope":2281,"src":"439:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2258,"name":"bytes","nodeType":"ElementaryTypeName","src":"439:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"317:145:8"},"returnParameters":{"id":2261,"nodeType":"ParameterList","parameters":[],"src":"470:0:8"},"scope":2312,"src":"293:432:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2310,"nodeType":"Block","src":"859:531:8","statements":[{"assignments":[2292],"declarations":[{"constant":false,"id":2292,"mutability":"mutable","name":"igp","nameLocation":"956:3:8","nodeType":"VariableDeclaration","scope":2310,"src":"932:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IInterchainGasPaymaster_$3885","typeString":"contract IInterchainGasPaymaster"},"typeName":{"id":2291,"nodeType":"UserDefinedTypeName","pathNode":{"id":2290,"name":"IInterchainGasPaymaster","nameLocations":["932:23:8"],"nodeType":"IdentifierPath","referencedDeclaration":3885,"src":"932:23:8"},"referencedDeclaration":3885,"src":"932:23:8","typeDescriptions":{"typeIdentifier":"t_contract$_IInterchainGasPaymaster_$3885","typeString":"contract IInterchainGasPaymaster"}},"visibility":"internal"}],"id":2296,"initialValue":{"arguments":[{"id":2294,"name":"igpAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"986:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2293,"name":"IInterchainGasPaymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"962:23:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IInterchainGasPaymaster_$3885_$","typeString":"type(contract IInterchainGasPaymaster)"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"962:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IInterchainGasPaymaster_$3885","typeString":"contract IInterchainGasPaymaster"}},"nodeType":"VariableDeclarationStatement","src":"932:65:8"},{"expression":{"arguments":[{"id":2303,"name":"lastMessageID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"1089:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2304,"name":"ethereumDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"1150:14:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2305,"name":"gasAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"1303:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2306,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1363:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1367:6:8","memberName":"sender","nodeType":"MemberAccess","src":"1363:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2297,"name":"igp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"1007:3:8","typeDescriptions":{"typeIdentifier":"t_contract$_IInterchainGasPaymaster_$3885","typeString":"contract IInterchainGasPaymaster"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1011:9:8","memberName":"payForGas","nodeType":"MemberAccess","referencedDeclaration":3884,"src":"1007:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes32_$_t_uint32_$_t_uint256_$_t_address_$returns$__$","typeString":"function (bytes32,uint32,uint256,address) payable external"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2300,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1028:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1032:5:8","memberName":"value","nodeType":"MemberAccess","src":"1028:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1007:31:8","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes32_$_t_uint32_$_t_uint256_$_t_address_$returns$__$value","typeString":"function (bytes32,uint32,uint256,address) payable external"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1007:376:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2309,"nodeType":"ExpressionStatement","src":"1007:376:8"}]},"functionSelector":"3dd37287","id":2311,"implemented":true,"kind":"function","modifiers":[],"name":"processMessage","nameLocation":"737:14:8","nodeType":"FunctionDefinition","parameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"ethereumDomain","nameLocation":"768:14:8","nodeType":"VariableDeclaration","scope":2311,"src":"761:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2282,"name":"uint32","nodeType":"ElementaryTypeName","src":"761:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2285,"mutability":"mutable","name":"igpAddress","nameLocation":"800:10:8","nodeType":"VariableDeclaration","scope":2311,"src":"792:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2284,"name":"address","nodeType":"ElementaryTypeName","src":"792:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2287,"mutability":"mutable","name":"gasAmount","nameLocation":"828:9:8","nodeType":"VariableDeclaration","scope":2311,"src":"820:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"751:92:8"},"returnParameters":{"id":2289,"nodeType":"ParameterList","parameters":[],"src":"859:0:8"},"scope":2312,"src":"728:662:8","stateMutability":"payable","virtual":false,"visibility":"public"}],"scope":2313,"src":"229:1169:8","usedErrors":[]}],"src":"46:1353:8"},"id":8},"contracts/MoonDAO.sol":{"ast":{"absolutePath":"contracts/MoonDAO.sol","exportedSymbols":{"Context":[1041],"ERC20":[586],"IERC20":[664],"IERC20Metadata":[689],"Math":[2136],"MoonDAO":[3771],"SignedMath":[2241],"Strings":[1270]},"id":3772,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2314,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:9"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":2315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3772,"sourceUnit":1271,"src":"58:51:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":2316,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3772,"sourceUnit":587,"src":"111:55:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MoonDAO","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3771,"linearizedBaseContracts":[3771],"name":"MoonDAO","nameLocation":"179:7:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MoonDAO.dao_uri_struct","id":2323,"members":[{"constant":false,"id":2318,"mutability":"mutable","name":"dao_wallet","nameLocation":"234:10:9","nodeType":"VariableDeclaration","scope":2323,"src":"227:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2317,"name":"string","nodeType":"ElementaryTypeName","src":"227:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2320,"mutability":"mutable","name":"dao_uri","nameLocation":"262:7:9","nodeType":"VariableDeclaration","scope":2323,"src":"255:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2319,"name":"string","nodeType":"ElementaryTypeName","src":"255:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2322,"mutability":"mutable","name":"finished","nameLocation":"287:8:9","nodeType":"VariableDeclaration","scope":2323,"src":"280:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2321,"name":"string","nodeType":"ElementaryTypeName","src":"280:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"dao_uri_struct","nameLocation":"201:14:9","nodeType":"StructDefinition","scope":3771,"src":"194:109:9","visibility":"public"},{"canonicalName":"MoonDAO.goal_uri_struct","id":2328,"members":[{"constant":false,"id":2325,"mutability":"mutable","name":"dao_id","nameLocation":"351:6:9","nodeType":"VariableDeclaration","scope":2328,"src":"343:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2324,"name":"uint256","nodeType":"ElementaryTypeName","src":"343:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2327,"mutability":"mutable","name":"goal_uri","nameLocation":"375:8:9","nodeType":"VariableDeclaration","scope":2328,"src":"368:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2326,"name":"string","nodeType":"ElementaryTypeName","src":"368:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"goal_uri_struct","nameLocation":"316:15:9","nodeType":"StructDefinition","scope":3771,"src":"309:82:9","visibility":"public"},{"canonicalName":"MoonDAO.ideas_uri_struct","id":2335,"members":[{"constant":false,"id":2330,"mutability":"mutable","name":"goal_id","nameLocation":"442:7:9","nodeType":"VariableDeclaration","scope":2335,"src":"434:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2329,"name":"uint256","nodeType":"ElementaryTypeName","src":"434:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2332,"mutability":"mutable","name":"ideas_uri","nameLocation":"467:9:9","nodeType":"VariableDeclaration","scope":2335,"src":"460:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2331,"name":"string","nodeType":"ElementaryTypeName","src":"460:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2334,"mutability":"mutable","name":"donation","nameLocation":"495:8:9","nodeType":"VariableDeclaration","scope":2335,"src":"487:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2333,"name":"uint256","nodeType":"ElementaryTypeName","src":"487:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ideas_uri_struct","nameLocation":"406:16:9","nodeType":"StructDefinition","scope":3771,"src":"399:112:9","visibility":"public"},{"canonicalName":"MoonDAO.donation_struct","id":2342,"members":[{"constant":false,"id":2337,"mutability":"mutable","name":"ideas_id","nameLocation":"561:8:9","nodeType":"VariableDeclaration","scope":2342,"src":"553:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"553:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2339,"mutability":"mutable","name":"wallet","nameLocation":"587:6:9","nodeType":"VariableDeclaration","scope":2342,"src":"580:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2338,"name":"string","nodeType":"ElementaryTypeName","src":"580:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2341,"mutability":"mutable","name":"donation","nameLocation":"612:8:9","nodeType":"VariableDeclaration","scope":2342,"src":"604:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"donation_struct","nameLocation":"526:15:9","nodeType":"StructDefinition","scope":3771,"src":"519:109:9","visibility":"public"},{"canonicalName":"MoonDAO.smart_contract_uri_struct","id":2349,"members":[{"constant":false,"id":2344,"mutability":"mutable","name":"smart_contract_id","nameLocation":"688:17:9","nodeType":"VariableDeclaration","scope":2349,"src":"680:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2343,"name":"uint256","nodeType":"ElementaryTypeName","src":"680:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2346,"mutability":"mutable","name":"ideas_id","nameLocation":"724:8:9","nodeType":"VariableDeclaration","scope":2349,"src":"716:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"716:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2348,"mutability":"mutable","name":"smart_contract_uri","nameLocation":"750:18:9","nodeType":"VariableDeclaration","scope":2349,"src":"743:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2347,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"smart_contract_uri_struct","nameLocation":"643:25:9","nodeType":"StructDefinition","scope":3771,"src":"636:140:9","visibility":"public"},{"canonicalName":"MoonDAO.goal_ideas_votes_struct","id":2356,"members":[{"constant":false,"id":2351,"mutability":"mutable","name":"goal_id","nameLocation":"832:7:9","nodeType":"VariableDeclaration","scope":2356,"src":"824:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"824:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2353,"mutability":"mutable","name":"ideas_id","nameLocation":"858:8:9","nodeType":"VariableDeclaration","scope":2356,"src":"850:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"850:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2355,"mutability":"mutable","name":"wallet","nameLocation":"884:6:9","nodeType":"VariableDeclaration","scope":2356,"src":"877:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2354,"name":"string","nodeType":"ElementaryTypeName","src":"877:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"goal_ideas_votes_struct","nameLocation":"789:23:9","nodeType":"StructDefinition","scope":3771,"src":"782:116:9","visibility":"public"},{"canonicalName":"MoonDAO.message_struct","id":2365,"members":[{"constant":false,"id":2358,"mutability":"mutable","name":"message_id","nameLocation":"945:10:9","nodeType":"VariableDeclaration","scope":2365,"src":"937:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2357,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2360,"mutability":"mutable","name":"ideas_id","nameLocation":"974:8:9","nodeType":"VariableDeclaration","scope":2365,"src":"966:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2359,"name":"uint256","nodeType":"ElementaryTypeName","src":"966:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2362,"mutability":"mutable","name":"message","nameLocation":"1000:7:9","nodeType":"VariableDeclaration","scope":2365,"src":"993:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2361,"name":"string","nodeType":"ElementaryTypeName","src":"993:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2364,"mutability":"mutable","name":"sender","nameLocation":"1025:6:9","nodeType":"VariableDeclaration","scope":2365,"src":"1018:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2363,"name":"string","nodeType":"ElementaryTypeName","src":"1018:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"message_struct","nameLocation":"911:14:9","nodeType":"StructDefinition","scope":3771,"src":"904:135:9","visibility":"public"},{"canonicalName":"MoonDAO.message_read_struct","id":2374,"members":[{"constant":false,"id":2367,"mutability":"mutable","name":"message_id","nameLocation":"1091:10:9","nodeType":"VariableDeclaration","scope":2374,"src":"1083:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2366,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2369,"mutability":"mutable","name":"ideas_id","nameLocation":"1120:8:9","nodeType":"VariableDeclaration","scope":2374,"src":"1112:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2368,"name":"uint256","nodeType":"ElementaryTypeName","src":"1112:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2371,"mutability":"mutable","name":"wallet","nameLocation":"1146:6:9","nodeType":"VariableDeclaration","scope":2374,"src":"1139:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2370,"name":"string","nodeType":"ElementaryTypeName","src":"1139:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2373,"mutability":"mutable","name":"msg_type","nameLocation":"1170:8:9","nodeType":"VariableDeclaration","scope":2374,"src":"1163:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2372,"name":"string","nodeType":"ElementaryTypeName","src":"1163:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"message_read_struct","nameLocation":"1052:19:9","nodeType":"StructDefinition","scope":3771,"src":"1045:141:9","visibility":"public"},{"canonicalName":"MoonDAO.reply_struct","id":2383,"members":[{"constant":false,"id":2376,"mutability":"mutable","name":"reply_id","nameLocation":"1231:8:9","nodeType":"VariableDeclaration","scope":2383,"src":"1223:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2375,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2378,"mutability":"mutable","name":"message_id","nameLocation":"1258:10:9","nodeType":"VariableDeclaration","scope":2383,"src":"1250:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2377,"name":"uint256","nodeType":"ElementaryTypeName","src":"1250:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2380,"mutability":"mutable","name":"ideas_id","nameLocation":"1287:8:9","nodeType":"VariableDeclaration","scope":2383,"src":"1279:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2379,"name":"uint256","nodeType":"ElementaryTypeName","src":"1279:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2382,"mutability":"mutable","name":"message","nameLocation":"1313:7:9","nodeType":"VariableDeclaration","scope":2383,"src":"1306:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2381,"name":"string","nodeType":"ElementaryTypeName","src":"1306:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"reply_struct","nameLocation":"1199:12:9","nodeType":"StructDefinition","scope":3771,"src":"1192:136:9","visibility":"public"},{"canonicalName":"MoonDAO.UnbondingRequest","id":2388,"members":[{"constant":false,"id":2385,"mutability":"mutable","name":"completionTime","nameLocation":"1377:14:9","nodeType":"VariableDeclaration","scope":2388,"src":"1371:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":2384,"name":"int64","nodeType":"ElementaryTypeName","src":"1371:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":2387,"mutability":"mutable","name":"amount","nameLocation":"1410:6:9","nodeType":"VariableDeclaration","scope":2388,"src":"1402:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2386,"name":"uint256","nodeType":"ElementaryTypeName","src":"1402:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UnbondingRequest","nameLocation":"1343:16:9","nodeType":"StructDefinition","scope":3771,"src":"1336:88:9","visibility":"public"},{"canonicalName":"MoonDAO.join_struct","id":2393,"members":[{"constant":false,"id":2390,"mutability":"mutable","name":"daoid","nameLocation":"1470:5:9","nodeType":"VariableDeclaration","scope":2393,"src":"1462:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2389,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2392,"mutability":"mutable","name":"wallet","nameLocation":"1493:6:9","nodeType":"VariableDeclaration","scope":2393,"src":"1486:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2391,"name":"string","nodeType":"ElementaryTypeName","src":"1486:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"join_struct","nameLocation":"1439:11:9","nodeType":"StructDefinition","scope":3771,"src":"1432:75:9","visibility":"public"},{"canonicalName":"MoonDAO.user_badge_struct","id":2412,"members":[{"constant":false,"id":2395,"mutability":"mutable","name":"wallet","nameLocation":"1558:6:9","nodeType":"VariableDeclaration","scope":2412,"src":"1551:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2394,"name":"string","nodeType":"ElementaryTypeName","src":"1551:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2397,"mutability":"mutable","name":"dao","nameLocation":"1580:3:9","nodeType":"VariableDeclaration","scope":2412,"src":"1575:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2396,"name":"bool","nodeType":"ElementaryTypeName","src":"1575:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2399,"mutability":"mutable","name":"joined","nameLocation":"1599:6:9","nodeType":"VariableDeclaration","scope":2412,"src":"1594:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2398,"name":"bool","nodeType":"ElementaryTypeName","src":"1594:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2401,"mutability":"mutable","name":"goal","nameLocation":"1621:4:9","nodeType":"VariableDeclaration","scope":2412,"src":"1616:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2400,"name":"bool","nodeType":"ElementaryTypeName","src":"1616:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2403,"mutability":"mutable","name":"ideas","nameLocation":"1641:5:9","nodeType":"VariableDeclaration","scope":2412,"src":"1636:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2402,"name":"bool","nodeType":"ElementaryTypeName","src":"1636:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2405,"mutability":"mutable","name":"vote","nameLocation":"1662:4:9","nodeType":"VariableDeclaration","scope":2412,"src":"1657:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2404,"name":"bool","nodeType":"ElementaryTypeName","src":"1657:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2407,"mutability":"mutable","name":"donation","nameLocation":"1682:8:9","nodeType":"VariableDeclaration","scope":2412,"src":"1677:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2406,"name":"bool","nodeType":"ElementaryTypeName","src":"1677:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2409,"mutability":"mutable","name":"comment","nameLocation":"1706:7:9","nodeType":"VariableDeclaration","scope":2412,"src":"1701:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2408,"name":"bool","nodeType":"ElementaryTypeName","src":"1701:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2411,"mutability":"mutable","name":"reply","nameLocation":"1729:5:9","nodeType":"VariableDeclaration","scope":2412,"src":"1724:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2410,"name":"bool","nodeType":"ElementaryTypeName","src":"1724:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"user_badge_struct","nameLocation":"1522:17:9","nodeType":"StructDefinition","scope":3771,"src":"1515:227:9","visibility":"public"},{"constant":false,"functionSelector":"7bbd582d","id":2414,"mutability":"mutable","name":"_dao_ids","nameLocation":"1763:8:9","nodeType":"VariableDeclaration","scope":3771,"src":"1748:23:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2413,"name":"uint256","nodeType":"ElementaryTypeName","src":"1748:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ec245802","id":2416,"mutability":"mutable","name":"_donations_ids","nameLocation":"1793:14:9","nodeType":"VariableDeclaration","scope":3771,"src":"1778:29:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2415,"name":"uint256","nodeType":"ElementaryTypeName","src":"1778:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"13bf4cea","id":2418,"mutability":"mutable","name":"_goal_ids","nameLocation":"1829:9:9","nodeType":"VariableDeclaration","scope":3771,"src":"1814:24:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2417,"name":"uint256","nodeType":"ElementaryTypeName","src":"1814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d3791b20","id":2420,"mutability":"mutable","name":"_ideas_ids","nameLocation":"1860:10:9","nodeType":"VariableDeclaration","scope":3771,"src":"1845:25:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2419,"name":"uint256","nodeType":"ElementaryTypeName","src":"1845:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1171b621","id":2422,"mutability":"mutable","name":"_join_ids","nameLocation":"1892:9:9","nodeType":"VariableDeclaration","scope":3771,"src":"1877:24:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2421,"name":"uint256","nodeType":"ElementaryTypeName","src":"1877:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1b592aeb","id":2424,"mutability":"mutable","name":"_smart_contract_ids","nameLocation":"1923:19:9","nodeType":"VariableDeclaration","scope":3771,"src":"1908:34:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2423,"name":"uint256","nodeType":"ElementaryTypeName","src":"1908:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"4a797bd7","id":2426,"mutability":"mutable","name":"_ideas_vote_ids","nameLocation":"1964:15:9","nodeType":"VariableDeclaration","scope":3771,"src":"1949:30:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2425,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"9077007d","id":2428,"mutability":"mutable","name":"_message_ids","nameLocation":"2001:12:9","nodeType":"VariableDeclaration","scope":3771,"src":"1986:27:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"1986:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ca013f17","id":2430,"mutability":"mutable","name":"_message_read_ids","nameLocation":"2035:17:9","nodeType":"VariableDeclaration","scope":3771,"src":"2020:32:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2429,"name":"uint256","nodeType":"ElementaryTypeName","src":"2020:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"aa2bf5d3","id":2432,"mutability":"mutable","name":"_reply_ids","nameLocation":"2074:10:9","nodeType":"VariableDeclaration","scope":3771,"src":"2059:25:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"2059:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"27a568b9","id":2437,"mutability":"mutable","name":"_dao_uris","nameLocation":"2133:9:9","nodeType":"VariableDeclaration","scope":3771,"src":"2091:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$2323_storage_$","typeString":"mapping(uint256 => struct MoonDAO.dao_uri_struct)"},"typeName":{"id":2436,"keyType":{"id":2433,"name":"uint256","nodeType":"ElementaryTypeName","src":"2099:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2091:34:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$2323_storage_$","typeString":"mapping(uint256 => struct MoonDAO.dao_uri_struct)"},"valueType":{"id":2435,"nodeType":"UserDefinedTypeName","pathNode":{"id":2434,"name":"dao_uri_struct","nameLocations":["2110:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":2323,"src":"2110:14:9"},"referencedDeclaration":2323,"src":"2110:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$2323_storage_ptr","typeString":"struct MoonDAO.dao_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"6ecda4ee","id":2441,"mutability":"mutable","name":"_template_uris","nameLocation":"2269:14:9","nodeType":"VariableDeclaration","scope":3771,"src":"2235:48:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":2440,"keyType":{"id":2438,"name":"uint256","nodeType":"ElementaryTypeName","src":"2243:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2235:26:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":2439,"name":"string","nodeType":"ElementaryTypeName","src":"2254:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":false,"functionSelector":"330b8f26","id":2446,"mutability":"mutable","name":"_joined_person","nameLocation":"2399:14:9","nodeType":"VariableDeclaration","scope":3771,"src":"2360:53:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2393_storage_$","typeString":"mapping(uint256 => struct MoonDAO.join_struct)"},"typeName":{"id":2445,"keyType":{"id":2442,"name":"uint256","nodeType":"ElementaryTypeName","src":"2368:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2360:31:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2393_storage_$","typeString":"mapping(uint256 => struct MoonDAO.join_struct)"},"valueType":{"id":2444,"nodeType":"UserDefinedTypeName","pathNode":{"id":2443,"name":"join_struct","nameLocations":["2379:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":2393,"src":"2379:11:9"},"referencedDeclaration":2393,"src":"2379:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2393_storage_ptr","typeString":"struct MoonDAO.join_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"7f2035d4","id":2451,"mutability":"mutable","name":"_goal_uris","nameLocation":"2527:10:9","nodeType":"VariableDeclaration","scope":3771,"src":"2484:53:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$2328_storage_$","typeString":"mapping(uint256 => struct MoonDAO.goal_uri_struct)"},"typeName":{"id":2450,"keyType":{"id":2447,"name":"uint256","nodeType":"ElementaryTypeName","src":"2492:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2484:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$2328_storage_$","typeString":"mapping(uint256 => struct MoonDAO.goal_uri_struct)"},"valueType":{"id":2449,"nodeType":"UserDefinedTypeName","pathNode":{"id":2448,"name":"goal_uri_struct","nameLocations":["2503:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":2328,"src":"2503:15:9"},"referencedDeclaration":2328,"src":"2503:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2328_storage_ptr","typeString":"struct MoonDAO.goal_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"468d0c80","id":2456,"mutability":"mutable","name":"_ideas_uris","nameLocation":"2658:11:9","nodeType":"VariableDeclaration","scope":3771,"src":"2614:55:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2335_storage_$","typeString":"mapping(uint256 => struct MoonDAO.ideas_uri_struct)"},"typeName":{"id":2455,"keyType":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"2622:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2614:36:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2335_storage_$","typeString":"mapping(uint256 => struct MoonDAO.ideas_uri_struct)"},"valueType":{"id":2454,"nodeType":"UserDefinedTypeName","pathNode":{"id":2453,"name":"ideas_uri_struct","nameLocations":["2633:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":2335,"src":"2633:16:9"},"referencedDeclaration":2335,"src":"2633:16:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2335_storage_ptr","typeString":"struct MoonDAO.ideas_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"77935be7","id":2460,"mutability":"mutable","name":"_donated","nameLocation":"2782:8:9","nodeType":"VariableDeclaration","scope":3771,"src":"2748:42:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"typeName":{"id":2459,"keyType":{"id":2457,"name":"string","nodeType":"ElementaryTypeName","src":"2756:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"2748:26:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"valueType":{"id":2458,"name":"uint256","nodeType":"ElementaryTypeName","src":"2766:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"7fc543ec","id":2465,"mutability":"mutable","name":"_donations","nameLocation":"2904:10:9","nodeType":"VariableDeclaration","scope":3771,"src":"2861:53:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_donation_struct_$2342_storage_$","typeString":"mapping(uint256 => struct MoonDAO.donation_struct)"},"typeName":{"id":2464,"keyType":{"id":2461,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2861:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_donation_struct_$2342_storage_$","typeString":"mapping(uint256 => struct MoonDAO.donation_struct)"},"valueType":{"id":2463,"nodeType":"UserDefinedTypeName","pathNode":{"id":2462,"name":"donation_struct","nameLocations":["2880:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":2342,"src":"2880:15:9"},"referencedDeclaration":2342,"src":"2880:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$2342_storage_ptr","typeString":"struct MoonDAO.donation_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"ff4a37ef","id":2470,"mutability":"mutable","name":"_smart_contracts_uris","nameLocation":"3014:21:9","nodeType":"VariableDeclaration","scope":3771,"src":"2961:74:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$2349_storage_$","typeString":"mapping(uint256 => struct MoonDAO.smart_contract_uri_struct)"},"typeName":{"id":2469,"keyType":{"id":2466,"name":"uint256","nodeType":"ElementaryTypeName","src":"2969:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2961:45:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$2349_storage_$","typeString":"mapping(uint256 => struct MoonDAO.smart_contract_uri_struct)"},"valueType":{"id":2468,"nodeType":"UserDefinedTypeName","pathNode":{"id":2467,"name":"smart_contract_uri_struct","nameLocations":["2980:25:9"],"nodeType":"IdentifierPath","referencedDeclaration":2349,"src":"2980:25:9"},"referencedDeclaration":2349,"src":"2980:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$2349_storage_ptr","typeString":"struct MoonDAO.smart_contract_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"1ba44c4c","id":2475,"mutability":"mutable","name":"all_goal_ideas_votes","nameLocation":"3165:20:9","nodeType":"VariableDeclaration","scope":3771,"src":"3114:71:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$2356_storage_$","typeString":"mapping(uint256 => struct MoonDAO.goal_ideas_votes_struct)"},"typeName":{"id":2474,"keyType":{"id":2471,"name":"uint256","nodeType":"ElementaryTypeName","src":"3122:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3114:43:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$2356_storage_$","typeString":"mapping(uint256 => struct MoonDAO.goal_ideas_votes_struct)"},"valueType":{"id":2473,"nodeType":"UserDefinedTypeName","pathNode":{"id":2472,"name":"goal_ideas_votes_struct","nameLocations":["3133:23:9"],"nodeType":"IdentifierPath","referencedDeclaration":2356,"src":"3133:23:9"},"referencedDeclaration":2356,"src":"3133:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$2356_storage_ptr","typeString":"struct MoonDAO.goal_ideas_votes_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"b527d45e","id":2480,"mutability":"mutable","name":"all_messages","nameLocation":"3316:12:9","nodeType":"VariableDeclaration","scope":3771,"src":"3274:54:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$2365_storage_$","typeString":"mapping(uint256 => struct MoonDAO.message_struct)"},"typeName":{"id":2479,"keyType":{"id":2476,"name":"uint256","nodeType":"ElementaryTypeName","src":"3282:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3274:34:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$2365_storage_$","typeString":"mapping(uint256 => struct MoonDAO.message_struct)"},"valueType":{"id":2478,"nodeType":"UserDefinedTypeName","pathNode":{"id":2477,"name":"message_struct","nameLocations":["3293:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":2365,"src":"3293:14:9"},"referencedDeclaration":2365,"src":"3293:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$2365_storage_ptr","typeString":"struct MoonDAO.message_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"cace8d46","id":2485,"mutability":"mutable","name":"all_read_messages","nameLocation":"3440:17:9","nodeType":"VariableDeclaration","scope":3771,"src":"3393:64:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$2374_storage_$","typeString":"mapping(uint256 => struct MoonDAO.message_read_struct)"},"typeName":{"id":2484,"keyType":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"3401:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3393:39:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$2374_storage_$","typeString":"mapping(uint256 => struct MoonDAO.message_read_struct)"},"valueType":{"id":2483,"nodeType":"UserDefinedTypeName","pathNode":{"id":2482,"name":"message_read_struct","nameLocations":["3412:19:9"],"nodeType":"IdentifierPath","referencedDeclaration":2374,"src":"3412:19:9"},"referencedDeclaration":2374,"src":"3412:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$2374_storage_ptr","typeString":"struct MoonDAO.message_read_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"3f87a2f4","id":2490,"mutability":"mutable","name":"all_replies","nameLocation":"3577:11:9","nodeType":"VariableDeclaration","scope":3771,"src":"3537:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$2383_storage_$","typeString":"mapping(uint256 => struct MoonDAO.reply_struct)"},"typeName":{"id":2489,"keyType":{"id":2486,"name":"uint256","nodeType":"ElementaryTypeName","src":"3545:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3537:32:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$2383_storage_$","typeString":"mapping(uint256 => struct MoonDAO.reply_struct)"},"valueType":{"id":2488,"nodeType":"UserDefinedTypeName","pathNode":{"id":2487,"name":"reply_struct","nameLocations":["3556:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":2383,"src":"3556:12:9"},"referencedDeclaration":2383,"src":"3556:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$2383_storage_ptr","typeString":"struct MoonDAO.reply_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"9f9ff54b","id":2495,"mutability":"mutable","name":"_user_badges","nameLocation":"3691:12:9","nodeType":"VariableDeclaration","scope":3771,"src":"3647:56:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_user_badge_struct_$2412_storage_$","typeString":"mapping(string => struct MoonDAO.user_badge_struct)"},"typeName":{"id":2494,"keyType":{"id":2491,"name":"string","nodeType":"ElementaryTypeName","src":"3655:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"3647:36:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_user_badge_struct_$2412_storage_$","typeString":"mapping(string => struct MoonDAO.user_badge_struct)"},"valueType":{"id":2493,"nodeType":"UserDefinedTypeName","pathNode":{"id":2492,"name":"user_badge_struct","nameLocations":["3665:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":2412,"src":"3665:17:9"},"referencedDeclaration":2412,"src":"3665:17:9","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2412_storage_ptr","typeString":"struct MoonDAO.user_badge_struct"}}},"visibility":"public"},{"body":{"id":2534,"nodeType":"Block","src":"3886:267:9","statements":[{"expression":{"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2506,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"3934:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$2323_storage_$","typeString":"mapping(uint256 => struct MoonDAO.dao_uri_struct storage ref)"}},"id":2508,"indexExpression":{"id":2507,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"3944:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3934:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$2323_storage","typeString":"struct MoonDAO.dao_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2510,"name":"_dao_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"3971:11:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2511,"name":"_dao_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"3984:8:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"46616c7365","id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3994:7:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b","typeString":"literal_string \"False\""},"value":"False"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_a2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b","typeString":"literal_string \"False\""}],"id":2509,"name":"dao_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"3956:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_dao_uri_struct_$2323_storage_ptr_$","typeString":"type(struct MoonDAO.dao_uri_struct storage pointer)"}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3956:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$2323_memory_ptr","typeString":"struct MoonDAO.dao_uri_struct memory"}},"src":"3934:68:9","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$2323_storage","typeString":"struct MoonDAO.dao_uri_struct storage ref"}},"id":2515,"nodeType":"ExpressionStatement","src":"3934:68:9"},{"expression":{"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2516,"name":"_template_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"4013:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2518,"indexExpression":{"id":2517,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"4028:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4013:24:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2519,"name":"_template","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"4040:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4013:36:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2521,"nodeType":"ExpressionStatement","src":"4013:36:9"},{"expression":{"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2522,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"4060:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_user_badge_struct_$2412_storage_$","typeString":"mapping(string memory => struct MoonDAO.user_badge_struct storage ref)"}},"id":2524,"indexExpression":{"id":2523,"name":"_dao_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"4073:11:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4060:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2412_storage","typeString":"struct MoonDAO.user_badge_struct storage ref"}},"id":2525,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4086:3:9","memberName":"dao","nodeType":"MemberAccess","referencedDeclaration":2397,"src":"4060:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4092:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4060:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2528,"nodeType":"ExpressionStatement","src":"4060:36:9"},{"expression":{"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4107:10:9","subExpression":{"id":2529,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"4107:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2531,"nodeType":"ExpressionStatement","src":"4107:10:9"},{"expression":{"id":2532,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"4137:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2505,"id":2533,"nodeType":"Return","src":"4130:15:9"}]},"functionSelector":"ec399255","id":2535,"implemented":true,"kind":"function","modifiers":[],"name":"create_dao","nameLocation":"3774:10:9","nodeType":"FunctionDefinition","parameters":{"id":2502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"_dao_wallet","nameLocation":"3799:11:9","nodeType":"VariableDeclaration","scope":2535,"src":"3785:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2496,"name":"string","nodeType":"ElementaryTypeName","src":"3785:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2499,"mutability":"mutable","name":"_dao_uri","nameLocation":"3826:8:9","nodeType":"VariableDeclaration","scope":2535,"src":"3812:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2498,"name":"string","nodeType":"ElementaryTypeName","src":"3812:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2501,"mutability":"mutable","name":"_template","nameLocation":"3850:9:9","nodeType":"VariableDeclaration","scope":2535,"src":"3836:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2500,"name":"string","nodeType":"ElementaryTypeName","src":"3836:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3784:76:9"},"returnParameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2535,"src":"3877:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2503,"name":"uint256","nodeType":"ElementaryTypeName","src":"3877:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3876:9:9"},"scope":3771,"src":"3765:388:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2548,"nodeType":"Block","src":"4235:54:9","statements":[{"expression":{"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2542,"name":"_template_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"4246:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2544,"indexExpression":{"id":2543,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"4261:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4246:23:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2545,"name":"_template","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"4272:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4246:35:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2547,"nodeType":"ExpressionStatement","src":"4246:35:9"}]},"functionSelector":"87633eb2","id":2549,"implemented":true,"kind":"function","modifiers":[],"name":"update_template","nameLocation":"4170:15:9","nodeType":"FunctionDefinition","parameters":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2537,"mutability":"mutable","name":"_dao_id","nameLocation":"4194:7:9","nodeType":"VariableDeclaration","scope":2549,"src":"4186:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2536,"name":"uint256","nodeType":"ElementaryTypeName","src":"4186:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2539,"mutability":"mutable","name":"_template","nameLocation":"4217:9:9","nodeType":"VariableDeclaration","scope":2549,"src":"4203:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2538,"name":"string","nodeType":"ElementaryTypeName","src":"4203:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4185:42:9"},"returnParameters":{"id":2541,"nodeType":"ParameterList","parameters":[],"src":"4235:0:9"},"scope":3771,"src":"4161:128:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2572,"nodeType":"Block","src":"4389:147:9","statements":[{"expression":{"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2558,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"4437:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$2323_storage_$","typeString":"mapping(uint256 => struct MoonDAO.dao_uri_struct storage ref)"}},"id":2560,"indexExpression":{"id":2559,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"4447:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4437:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$2323_storage","typeString":"struct MoonDAO.dao_uri_struct storage ref"}},"id":2561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4456:10:9","memberName":"dao_wallet","nodeType":"MemberAccess","referencedDeclaration":2318,"src":"4437:29:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2562,"name":"_dao_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"4469:11:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4437:43:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2564,"nodeType":"ExpressionStatement","src":"4437:43:9"},{"expression":{"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2565,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"4491:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$2323_storage_$","typeString":"mapping(uint256 => struct MoonDAO.dao_uri_struct storage ref)"}},"id":2567,"indexExpression":{"id":2566,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"4501:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4491:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$2323_storage","typeString":"struct MoonDAO.dao_uri_struct storage ref"}},"id":2568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4510:7:9","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"4491:26:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2569,"name":"_dao_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"4520:8:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4491:37:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2571,"nodeType":"ExpressionStatement","src":"4491:37:9"}]},"functionSelector":"881de858","id":2573,"implemented":true,"kind":"function","modifiers":[],"name":"set_dao","nameLocation":"4306:7:9","nodeType":"FunctionDefinition","parameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"mutability":"mutable","name":"_dao_id","nameLocation":"4322:7:9","nodeType":"VariableDeclaration","scope":2573,"src":"4314:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2550,"name":"uint256","nodeType":"ElementaryTypeName","src":"4314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2553,"mutability":"mutable","name":"_dao_wallet","nameLocation":"4345:11:9","nodeType":"VariableDeclaration","scope":2573,"src":"4331:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2552,"name":"string","nodeType":"ElementaryTypeName","src":"4331:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2555,"mutability":"mutable","name":"_dao_uri","nameLocation":"4372:8:9","nodeType":"VariableDeclaration","scope":2573,"src":"4358:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2554,"name":"string","nodeType":"ElementaryTypeName","src":"4358:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4313:68:9"},"returnParameters":{"id":2557,"nodeType":"ParameterList","parameters":[],"src":"4389:0:9"},"scope":3771,"src":"4297:239:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2613,"nodeType":"Block","src":"4606:240:9","statements":[{"assignments":[2583],"declarations":[{"constant":false,"id":2583,"mutability":"mutable","name":"_StoreInfo","nameLocation":"4661:10:9","nodeType":"VariableDeclaration","scope":2613,"src":"4645:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2581,"name":"string","nodeType":"ElementaryTypeName","src":"4645:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2582,"nodeType":"ArrayTypeName","src":"4645:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2589,"initialValue":{"arguments":[{"id":2587,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"4687:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4674:12:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2584,"name":"string","nodeType":"ElementaryTypeName","src":"4678:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2585,"nodeType":"ArrayTypeName","src":"4678:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4674:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4645:51:9"},{"body":{"id":2609,"nodeType":"Block","src":"4746:63:9","statements":[{"expression":{"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2600,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"4761:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2602,"indexExpression":{"id":2601,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"4772:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4761:13:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2603,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"4777:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$2323_storage_$","typeString":"mapping(uint256 => struct MoonDAO.dao_uri_struct storage ref)"}},"id":2605,"indexExpression":{"id":2604,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"4787:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4777:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$2323_storage","typeString":"struct MoonDAO.dao_uri_struct storage ref"}},"id":2606,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4790:7:9","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"4777:20:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"4761:36:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2608,"nodeType":"ExpressionStatement","src":"4761:36:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2594,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"4727:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2595,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"4731:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4727:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2610,"initializationExpression":{"assignments":[2591],"declarations":[{"constant":false,"id":2591,"mutability":"mutable","name":"i","nameLocation":"4720:1:9","nodeType":"VariableDeclaration","scope":2610,"src":"4712:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2590,"name":"uint256","nodeType":"ElementaryTypeName","src":"4712:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2593,"initialValue":{"hexValue":"30","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4724:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4712:13:9"},"loopExpression":{"expression":{"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4741:3:9","subExpression":{"id":2597,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"4741:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2599,"nodeType":"ExpressionStatement","src":"4741:3:9"},"nodeType":"ForStatement","src":"4707:102:9"},{"expression":{"id":2611,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"4828:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2578,"id":2612,"nodeType":"Return","src":"4821:17:9"}]},"functionSelector":"c04fe978","id":2614,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_daos","nameLocation":"4553:12:9","nodeType":"FunctionDefinition","parameters":{"id":2574,"nodeType":"ParameterList","parameters":[],"src":"4565:2:9"},"returnParameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2614,"src":"4589:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2575,"name":"string","nodeType":"ElementaryTypeName","src":"4589:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2576,"nodeType":"ArrayTypeName","src":"4589:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"4588:17:9"},"scope":3771,"src":"4544:302:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2626,"nodeType":"Block","src":"4924:83:9","statements":[{"expression":{"expression":{"baseExpression":{"id":2621,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"4973:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$2323_storage_$","typeString":"mapping(uint256 => struct MoonDAO.dao_uri_struct storage ref)"}},"id":2623,"indexExpression":{"id":2622,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"4983:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4973:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$2323_storage","typeString":"struct MoonDAO.dao_uri_struct storage ref"}},"id":2624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4992:7:9","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"4973:26:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2620,"id":2625,"nodeType":"Return","src":"4966:33:9"}]},"functionSelector":"5d907da1","id":2627,"implemented":true,"kind":"function","modifiers":[],"name":"dao_uri","nameLocation":"4863:7:9","nodeType":"FunctionDefinition","parameters":{"id":2617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"_dao_id","nameLocation":"4879:7:9","nodeType":"VariableDeclaration","scope":2627,"src":"4871:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2615,"name":"uint256","nodeType":"ElementaryTypeName","src":"4871:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4870:17:9"},"returnParameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2627,"src":"4909:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2618,"name":"string","nodeType":"ElementaryTypeName","src":"4909:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4908:15:9"},"scope":3771,"src":"4854:153:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2659,"nodeType":"Block","src":"5138:212:9","statements":[{"expression":{"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2638,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"5188:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$2328_storage_$","typeString":"mapping(uint256 => struct MoonDAO.goal_uri_struct storage ref)"}},"id":2640,"indexExpression":{"id":2639,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"5199:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5188:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2328_storage","typeString":"struct MoonDAO.goal_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2642,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"5228:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2643,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"5237:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2641,"name":"goal_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"5212:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_goal_uri_struct_$2328_storage_ptr_$","typeString":"type(struct MoonDAO.goal_uri_struct storage pointer)"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5212:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2328_memory_ptr","typeString":"struct MoonDAO.goal_uri_struct memory"}},"src":"5188:59:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2328_storage","typeString":"struct MoonDAO.goal_uri_struct storage ref"}},"id":2646,"nodeType":"ExpressionStatement","src":"5188:59:9"},{"expression":{"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2647,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"5258:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_user_badge_struct_$2412_storage_$","typeString":"mapping(string memory => struct MoonDAO.user_badge_struct storage ref)"}},"id":2649,"indexExpression":{"id":2648,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"5271:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5258:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2412_storage","typeString":"struct MoonDAO.user_badge_struct storage ref"}},"id":2650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5280:4:9","memberName":"goal","nodeType":"MemberAccess","referencedDeclaration":2401,"src":"5258:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5287:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5258:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2653,"nodeType":"ExpressionStatement","src":"5258:33:9"},{"expression":{"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5302:11:9","subExpression":{"id":2654,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"5302:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2656,"nodeType":"ExpressionStatement","src":"5302:11:9"},{"expression":{"id":2657,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"5333:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2637,"id":2658,"nodeType":"Return","src":"5326:16:9"}]},"functionSelector":"77b2ec23","id":2660,"implemented":true,"kind":"function","modifiers":[],"name":"create_goal","nameLocation":"5037:11:9","nodeType":"FunctionDefinition","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"_goal_uri","nameLocation":"5063:9:9","nodeType":"VariableDeclaration","scope":2660,"src":"5049:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2628,"name":"string","nodeType":"ElementaryTypeName","src":"5049:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2631,"mutability":"mutable","name":"_dao_id","nameLocation":"5082:7:9","nodeType":"VariableDeclaration","scope":2660,"src":"5074:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2630,"name":"uint256","nodeType":"ElementaryTypeName","src":"5074:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2633,"mutability":"mutable","name":"_wallet","nameLocation":"5104:7:9","nodeType":"VariableDeclaration","scope":2660,"src":"5090:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2632,"name":"string","nodeType":"ElementaryTypeName","src":"5090:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5048:64:9"},"returnParameters":{"id":2637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2660,"src":"5129:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2635,"name":"uint256","nodeType":"ElementaryTypeName","src":"5129:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5128:9:9"},"scope":3771,"src":"5028:322:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2674,"nodeType":"Block","src":"5426:84:9","statements":[{"expression":{"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2667,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"5461:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$2328_storage_$","typeString":"mapping(uint256 => struct MoonDAO.goal_uri_struct storage ref)"}},"id":2669,"indexExpression":{"id":2668,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"5472:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5461:20:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2328_storage","typeString":"struct MoonDAO.goal_uri_struct storage ref"}},"id":2670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5482:8:9","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"5461:29:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2671,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"5493:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5461:41:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2673,"nodeType":"ExpressionStatement","src":"5461:41:9"}]},"functionSelector":"c29595c5","id":2675,"implemented":true,"kind":"function","modifiers":[],"name":"set_goal","nameLocation":"5367:8:9","nodeType":"FunctionDefinition","parameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2662,"mutability":"mutable","name":"_goal_id","nameLocation":"5384:8:9","nodeType":"VariableDeclaration","scope":2675,"src":"5376:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2661,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2664,"mutability":"mutable","name":"_goal_uri","nameLocation":"5408:9:9","nodeType":"VariableDeclaration","scope":2675,"src":"5394:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2663,"name":"string","nodeType":"ElementaryTypeName","src":"5394:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5375:43:9"},"returnParameters":{"id":2666,"nodeType":"ParameterList","parameters":[],"src":"5426:0:9"},"scope":3771,"src":"5358:152:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2715,"nodeType":"Block","src":"5581:245:9","statements":[{"assignments":[2685],"declarations":[{"constant":false,"id":2685,"mutability":"mutable","name":"_StoreInfo","nameLocation":"5637:10:9","nodeType":"VariableDeclaration","scope":2715,"src":"5621:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2683,"name":"string","nodeType":"ElementaryTypeName","src":"5621:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2684,"nodeType":"ArrayTypeName","src":"5621:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2691,"initialValue":{"arguments":[{"id":2689,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"5663:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5650:12:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2686,"name":"string","nodeType":"ElementaryTypeName","src":"5654:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2687,"nodeType":"ArrayTypeName","src":"5654:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5650:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5621:52:9"},{"body":{"id":2711,"nodeType":"Block","src":"5724:65:9","statements":[{"expression":{"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2702,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"5739:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2704,"indexExpression":{"id":2703,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"5750:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5739:13:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2705,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"5755:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$2328_storage_$","typeString":"mapping(uint256 => struct MoonDAO.goal_uri_struct storage ref)"}},"id":2707,"indexExpression":{"id":2706,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"5766:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5755:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2328_storage","typeString":"struct MoonDAO.goal_uri_struct storage ref"}},"id":2708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5769:8:9","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"5755:22:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"5739:38:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2710,"nodeType":"ExpressionStatement","src":"5739:38:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2696,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"5704:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2697,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"5708:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5704:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2712,"initializationExpression":{"assignments":[2693],"declarations":[{"constant":false,"id":2693,"mutability":"mutable","name":"i","nameLocation":"5697:1:9","nodeType":"VariableDeclaration","scope":2712,"src":"5689:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2692,"name":"uint256","nodeType":"ElementaryTypeName","src":"5689:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2695,"initialValue":{"hexValue":"30","id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5701:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5689:13:9"},"loopExpression":{"expression":{"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5719:3:9","subExpression":{"id":2699,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"5719:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2701,"nodeType":"ExpressionStatement","src":"5719:3:9"},"nodeType":"ForStatement","src":"5684:105:9"},{"expression":{"id":2713,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"5808:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2680,"id":2714,"nodeType":"Return","src":"5801:17:9"}]},"functionSelector":"29b56f60","id":2716,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_goals","nameLocation":"5527:13:9","nodeType":"FunctionDefinition","parameters":{"id":2676,"nodeType":"ParameterList","parameters":[],"src":"5540:2:9"},"returnParameters":{"id":2680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2716,"src":"5564:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2677,"name":"string","nodeType":"ElementaryTypeName","src":"5564:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2678,"nodeType":"ArrayTypeName","src":"5564:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"5563:17:9"},"scope":3771,"src":"5518:308:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2772,"nodeType":"Block","src":"5922:392:9","statements":[{"assignments":[2728],"declarations":[{"constant":false,"id":2728,"mutability":"mutable","name":"_StoreInfo","nameLocation":"5988:10:9","nodeType":"VariableDeclaration","scope":2772,"src":"5972:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2726,"name":"string","nodeType":"ElementaryTypeName","src":"5972:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2727,"nodeType":"ArrayTypeName","src":"5972:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2734,"initialValue":{"arguments":[{"id":2732,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"6014:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6001:12:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2729,"name":"string","nodeType":"ElementaryTypeName","src":"6005:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2730,"nodeType":"ArrayTypeName","src":"6005:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6001:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5972:52:9"},{"assignments":[2736],"declarations":[{"constant":false,"id":2736,"mutability":"mutable","name":"_store_id","nameLocation":"6043:9:9","nodeType":"VariableDeclaration","scope":2772,"src":"6035:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"6035:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2737,"nodeType":"VariableDeclarationStatement","src":"6035:17:9"},{"body":{"id":2768,"nodeType":"Block","src":"6103:174:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2748,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"6122:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$2328_storage_$","typeString":"mapping(uint256 => struct MoonDAO.goal_uri_struct storage ref)"}},"id":2750,"indexExpression":{"id":2749,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"6133:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6122:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2328_storage","typeString":"struct MoonDAO.goal_uri_struct storage ref"}},"id":2751,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6136:6:9","memberName":"dao_id","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"6122:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2752,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"6146:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6122:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2767,"nodeType":"IfStatement","src":"6118:148:9","trueBody":{"id":2766,"nodeType":"Block","src":"6155:111:9","statements":[{"expression":{"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2754,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"6174:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2756,"indexExpression":{"id":2755,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"6185:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6174:21:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2757,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"6198:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$2328_storage_$","typeString":"mapping(uint256 => struct MoonDAO.goal_uri_struct storage ref)"}},"id":2759,"indexExpression":{"id":2758,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"6209:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6198:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2328_storage","typeString":"struct MoonDAO.goal_uri_struct storage ref"}},"id":2760,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6212:8:9","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"6198:22:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"6174:46:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2762,"nodeType":"ExpressionStatement","src":"6174:46:9"},{"expression":{"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6239:11:9","subExpression":{"id":2763,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"6239:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2765,"nodeType":"ExpressionStatement","src":"6239:11:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2742,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"6083:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2743,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"6087:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6083:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2769,"initializationExpression":{"assignments":[2739],"declarations":[{"constant":false,"id":2739,"mutability":"mutable","name":"i","nameLocation":"6076:1:9","nodeType":"VariableDeclaration","scope":2769,"src":"6068:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"6068:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2741,"initialValue":{"hexValue":"30","id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6080:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6068:13:9"},"loopExpression":{"expression":{"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6098:3:9","subExpression":{"id":2745,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"6098:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2747,"nodeType":"ExpressionStatement","src":"6098:3:9"},"nodeType":"ForStatement","src":"6063:214:9"},{"expression":{"id":2770,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"6296:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2723,"id":2771,"nodeType":"Return","src":"6289:17:9"}]},"functionSelector":"109ac970","id":2773,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_goals_by_dao_id","nameLocation":"5843:23:9","nodeType":"FunctionDefinition","parameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"_dao_id","nameLocation":"5875:7:9","nodeType":"VariableDeclaration","scope":2773,"src":"5867:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2717,"name":"uint256","nodeType":"ElementaryTypeName","src":"5867:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5866:17:9"},"returnParameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2773,"src":"5905:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2720,"name":"string","nodeType":"ElementaryTypeName","src":"5905:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2721,"nodeType":"ArrayTypeName","src":"5905:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"5904:17:9"},"scope":3771,"src":"5834:480:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2813,"nodeType":"Block","src":"6410:225:9","statements":[{"body":{"id":2809,"nodeType":"Block","src":"6495:112:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2793,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"6530:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$2328_storage_$","typeString":"mapping(uint256 => struct MoonDAO.goal_uri_struct storage ref)"}},"id":2795,"indexExpression":{"id":2794,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"6541:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6530:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2328_storage","typeString":"struct MoonDAO.goal_uri_struct storage ref"}},"id":2796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6544:8:9","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"6530:22:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6524:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2791,"name":"bytes","nodeType":"ElementaryTypeName","src":"6524:5:9","typeDescriptions":{}}},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6524:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2790,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6514:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6514:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2802,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"6574:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6568:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2800,"name":"bytes","nodeType":"ElementaryTypeName","src":"6568:5:9","typeDescriptions":{}}},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6568:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2799,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6558:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6558:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6514:71:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2808,"nodeType":"IfStatement","src":"6510:85:9","trueBody":{"expression":{"id":2806,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"6594:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2779,"id":2807,"nodeType":"Return","src":"6587:8:9"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2784,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"6475:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2785,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"6479:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2810,"initializationExpression":{"assignments":[2781],"declarations":[{"constant":false,"id":2781,"mutability":"mutable","name":"i","nameLocation":"6468:1:9","nodeType":"VariableDeclaration","scope":2810,"src":"6460:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2780,"name":"uint256","nodeType":"ElementaryTypeName","src":"6460:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2783,"initialValue":{"hexValue":"30","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6472:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6460:13:9"},"loopExpression":{"expression":{"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6490:3:9","subExpression":{"id":2787,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"6490:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2789,"nodeType":"ExpressionStatement","src":"6490:3:9"},"nodeType":"ForStatement","src":"6455:152:9"},{"expression":{"hexValue":"30","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6626:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2779,"id":2812,"nodeType":"Return","src":"6619:8:9"}]},"functionSelector":"1e9ac9f5","id":2814,"implemented":true,"kind":"function","modifiers":[],"name":"get_goal_id_by_goal_uri","nameLocation":"6331:23:9","nodeType":"FunctionDefinition","parameters":{"id":2776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2775,"mutability":"mutable","name":"_goal_uri","nameLocation":"6369:9:9","nodeType":"VariableDeclaration","scope":2814,"src":"6355:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2774,"name":"string","nodeType":"ElementaryTypeName","src":"6355:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6354:25:9"},"returnParameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2814,"src":"6401:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2777,"name":"uint256","nodeType":"ElementaryTypeName","src":"6401:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6400:9:9"},"scope":3771,"src":"6322:313:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2826,"nodeType":"Block","src":"6715:87:9","statements":[{"expression":{"expression":{"baseExpression":{"id":2821,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"6765:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$2328_storage_$","typeString":"mapping(uint256 => struct MoonDAO.goal_uri_struct storage ref)"}},"id":2823,"indexExpression":{"id":2822,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"6776:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6765:20:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2328_storage","typeString":"struct MoonDAO.goal_uri_struct storage ref"}},"id":2824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6786:8:9","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"6765:29:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2820,"id":2825,"nodeType":"Return","src":"6758:36:9"}]},"functionSelector":"e32acc1a","id":2827,"implemented":true,"kind":"function","modifiers":[],"name":"goal_uri","nameLocation":"6652:8:9","nodeType":"FunctionDefinition","parameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"mutability":"mutable","name":"_goal_id","nameLocation":"6669:8:9","nodeType":"VariableDeclaration","scope":2827,"src":"6661:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"6661:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6660:18:9"},"returnParameters":{"id":2820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2827,"src":"6700:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2818,"name":"string","nodeType":"ElementaryTypeName","src":"6700:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6699:15:9"},"scope":3771,"src":"6643:159:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2887,"nodeType":"Block","src":"6970:435:9","statements":[{"expression":{"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2841,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"7022:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2335_storage_$","typeString":"mapping(uint256 => struct MoonDAO.ideas_uri_struct storage ref)"}},"id":2843,"indexExpression":{"id":2842,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"7034:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7022:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2335_storage","typeString":"struct MoonDAO.ideas_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2845,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"7065:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2846,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"7075:10:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7087:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2844,"name":"ideas_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"7048:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ideas_uri_struct_$2335_storage_ptr_$","typeString":"type(struct MoonDAO.ideas_uri_struct storage pointer)"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7048:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2335_memory_ptr","typeString":"struct MoonDAO.ideas_uri_struct memory"}},"src":"7022:67:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2335_storage","typeString":"struct MoonDAO.ideas_uri_struct storage ref"}},"id":2850,"nodeType":"ExpressionStatement","src":"7022:67:9"},{"expression":{"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2851,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"7100:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_user_badge_struct_$2412_storage_$","typeString":"mapping(string memory => struct MoonDAO.user_badge_struct storage ref)"}},"id":2853,"indexExpression":{"id":2852,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"7113:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7100:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2412_storage","typeString":"struct MoonDAO.user_badge_struct storage ref"}},"id":2854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7122:5:9","memberName":"ideas","nodeType":"MemberAccess","referencedDeclaration":2403,"src":"7100:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7130:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7100:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2857,"nodeType":"ExpressionStatement","src":"7100:34:9"},{"expression":{"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7145:12:9","subExpression":{"id":2858,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"7145:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2860,"nodeType":"ExpressionStatement","src":"7145:12:9"},{"body":{"id":2883,"nodeType":"Block","src":"7224:144:9","statements":[{"expression":{"arguments":[{"id":2873,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"7267:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2874,"name":"_smart_contract_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"7279:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2875,"name":"_smart_contracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"7300:16:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2877,"indexExpression":{"id":2876,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"7317:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7300:19:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2872,"name":"create_ideas_smart_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"7239:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7239:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2879,"nodeType":"ExpressionStatement","src":"7239:81:9"},{"expression":{"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7335:21:9","subExpression":{"id":2880,"name":"_smart_contract_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"7335:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2882,"nodeType":"ExpressionStatement","src":"7335:21:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2865,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"7190:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2866,"name":"_smart_contracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"7194:16:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7211:6:9","memberName":"length","nodeType":"MemberAccess","src":"7194:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7190:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2884,"initializationExpression":{"assignments":[2862],"declarations":[{"constant":false,"id":2862,"mutability":"mutable","name":"i","nameLocation":"7183:1:9","nodeType":"VariableDeclaration","scope":2884,"src":"7175:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2861,"name":"uint256","nodeType":"ElementaryTypeName","src":"7175:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2864,"initialValue":{"hexValue":"30","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7187:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7175:13:9"},"loopExpression":{"expression":{"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7219:3:9","subExpression":{"id":2869,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"7219:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2871,"nodeType":"ExpressionStatement","src":"7219:3:9"},"nodeType":"ForStatement","src":"7170:198:9"},{"expression":{"id":2885,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"7387:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2840,"id":2886,"nodeType":"Return","src":"7380:17:9"}]},"functionSelector":"18426b46","id":2888,"implemented":true,"kind":"function","modifiers":[],"name":"create_ideas","nameLocation":"6832:12:9","nodeType":"FunctionDefinition","parameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2829,"mutability":"mutable","name":"_ideas_uri","nameLocation":"6859:10:9","nodeType":"VariableDeclaration","scope":2888,"src":"6845:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2828,"name":"string","nodeType":"ElementaryTypeName","src":"6845:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2831,"mutability":"mutable","name":"_goal_id","nameLocation":"6879:8:9","nodeType":"VariableDeclaration","scope":2888,"src":"6871:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2830,"name":"uint256","nodeType":"ElementaryTypeName","src":"6871:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2834,"mutability":"mutable","name":"_smart_contracts","nameLocation":"6905:16:9","nodeType":"VariableDeclaration","scope":2888,"src":"6889:32:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2832,"name":"string","nodeType":"ElementaryTypeName","src":"6889:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2833,"nodeType":"ArrayTypeName","src":"6889:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2836,"mutability":"mutable","name":"_wallet","nameLocation":"6936:7:9","nodeType":"VariableDeclaration","scope":2888,"src":"6922:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2835,"name":"string","nodeType":"ElementaryTypeName","src":"6922:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6844:100:9"},"returnParameters":{"id":2840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2888,"src":"6961:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2838,"name":"uint256","nodeType":"ElementaryTypeName","src":"6961:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6960:9:9"},"scope":3771,"src":"6823:582:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2907,"nodeType":"Block","src":"7536:136:9","statements":[{"expression":{"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2897,"name":"_smart_contracts_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"7547:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$2349_storage_$","typeString":"mapping(uint256 => struct MoonDAO.smart_contract_uri_struct storage ref)"}},"id":2899,"indexExpression":{"id":2898,"name":"_smart_contract_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"7569:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7547:41:9","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$2349_storage","typeString":"struct MoonDAO.smart_contract_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2901,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"7617:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2902,"name":"_smart_contract_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"7628:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2903,"name":"_smart_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"7648:15:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2900,"name":"smart_contract_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"7591:25:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_smart_contract_uri_struct_$2349_storage_ptr_$","typeString":"type(struct MoonDAO.smart_contract_uri_struct storage pointer)"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7591:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$2349_memory_ptr","typeString":"struct MoonDAO.smart_contract_uri_struct memory"}},"src":"7547:117:9","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$2349_storage","typeString":"struct MoonDAO.smart_contract_uri_struct storage ref"}},"id":2906,"nodeType":"ExpressionStatement","src":"7547:117:9"}]},"id":2908,"implemented":true,"kind":"function","modifiers":[],"name":"create_ideas_smart_contract","nameLocation":"7422:27:9","nodeType":"FunctionDefinition","parameters":{"id":2895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2890,"mutability":"mutable","name":"_ideas_id","nameLocation":"7458:9:9","nodeType":"VariableDeclaration","scope":2908,"src":"7450:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2889,"name":"uint256","nodeType":"ElementaryTypeName","src":"7450:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2892,"mutability":"mutable","name":"_smart_contract_id","nameLocation":"7477:18:9","nodeType":"VariableDeclaration","scope":2908,"src":"7469:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2891,"name":"uint256","nodeType":"ElementaryTypeName","src":"7469:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2894,"mutability":"mutable","name":"_smart_contract","nameLocation":"7511:15:9","nodeType":"VariableDeclaration","scope":2908,"src":"7497:29:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2893,"name":"string","nodeType":"ElementaryTypeName","src":"7497:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7449:78:9"},"returnParameters":{"id":2896,"nodeType":"ParameterList","parameters":[],"src":"7536:0:9"},"scope":3771,"src":"7413:259:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2922,"nodeType":"Block","src":"7751:64:9","statements":[{"expression":{"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2915,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"7762:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2335_storage_$","typeString":"mapping(uint256 => struct MoonDAO.ideas_uri_struct storage ref)"}},"id":2917,"indexExpression":{"id":2916,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"7774:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7762:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2335_storage","typeString":"struct MoonDAO.ideas_uri_struct storage ref"}},"id":2918,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7785:9:9","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":2332,"src":"7762:32:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2919,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"7797:10:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7762:45:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2921,"nodeType":"ExpressionStatement","src":"7762:45:9"}]},"functionSelector":"c04e7430","id":2923,"implemented":true,"kind":"function","modifiers":[],"name":"set_ideas","nameLocation":"7689:9:9","nodeType":"FunctionDefinition","parameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2910,"mutability":"mutable","name":"_ideas_id","nameLocation":"7707:9:9","nodeType":"VariableDeclaration","scope":2923,"src":"7699:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2909,"name":"uint256","nodeType":"ElementaryTypeName","src":"7699:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2912,"mutability":"mutable","name":"_ideas_uri","nameLocation":"7732:10:9","nodeType":"VariableDeclaration","scope":2923,"src":"7718:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2911,"name":"string","nodeType":"ElementaryTypeName","src":"7718:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7698:45:9"},"returnParameters":{"id":2914,"nodeType":"ParameterList","parameters":[],"src":"7751:0:9"},"scope":3771,"src":"7680:135:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2965,"nodeType":"Block","src":"7914:268:9","statements":[{"expression":{"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2932,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"7925:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_user_badge_struct_$2412_storage_$","typeString":"mapping(string memory => struct MoonDAO.user_badge_struct storage ref)"}},"id":2934,"indexExpression":{"id":2933,"name":"_donator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"7938:8:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7925:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2412_storage","typeString":"struct MoonDAO.user_badge_struct storage ref"}},"id":2935,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7948:8:9","memberName":"donation","nodeType":"MemberAccess","referencedDeclaration":2407,"src":"7925:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7959:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7925:38:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2938,"nodeType":"ExpressionStatement","src":"7925:38:9"},{"expression":{"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2939,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"7974:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2335_storage_$","typeString":"mapping(uint256 => struct MoonDAO.ideas_uri_struct storage ref)"}},"id":2941,"indexExpression":{"id":2940,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"7986:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7974:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2335_storage","typeString":"struct MoonDAO.ideas_uri_struct storage ref"}},"id":2942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7997:8:9","memberName":"donation","nodeType":"MemberAccess","referencedDeclaration":2334,"src":"7974:31:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2943,"name":"_doantion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"8009:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7974:44:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2945,"nodeType":"ExpressionStatement","src":"7974:44:9"},{"expression":{"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2946,"name":"_donated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"8029:8:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":2948,"indexExpression":{"id":2947,"name":"_donator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"8038:8:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8029:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2949,"name":"_doantion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"8051:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8029:31:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2951,"nodeType":"ExpressionStatement","src":"8029:31:9"},{"expression":{"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2952,"name":"_donations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"8071:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_donation_struct_$2342_storage_$","typeString":"mapping(uint256 => struct MoonDAO.donation_struct storage ref)"}},"id":2954,"indexExpression":{"id":2953,"name":"_donations_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"8082:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8071:26:9","typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$2342_storage","typeString":"struct MoonDAO.donation_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2956,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"8116:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2957,"name":"_donator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"8127:8:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2958,"name":"_doantion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"8137:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2955,"name":"donation_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"8100:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_donation_struct_$2342_storage_ptr_$","typeString":"type(struct MoonDAO.donation_struct storage pointer)"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8100:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$2342_memory_ptr","typeString":"struct MoonDAO.donation_struct memory"}},"src":"8071:76:9","typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$2342_storage","typeString":"struct MoonDAO.donation_struct storage ref"}},"id":2961,"nodeType":"ExpressionStatement","src":"8071:76:9"},{"expression":{"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8158:16:9","subExpression":{"id":2962,"name":"_donations_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"8158:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2964,"nodeType":"ExpressionStatement","src":"8158:16:9"}]},"functionSelector":"e3863cef","id":2966,"implemented":true,"kind":"function","modifiers":[],"name":"add_donation","nameLocation":"7832:12:9","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2925,"mutability":"mutable","name":"_ideas_id","nameLocation":"7853:9:9","nodeType":"VariableDeclaration","scope":2966,"src":"7845:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2924,"name":"uint256","nodeType":"ElementaryTypeName","src":"7845:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2927,"mutability":"mutable","name":"_doantion","nameLocation":"7872:9:9","nodeType":"VariableDeclaration","scope":2966,"src":"7864:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2926,"name":"uint256","nodeType":"ElementaryTypeName","src":"7864:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2929,"mutability":"mutable","name":"_donator","nameLocation":"7897:8:9","nodeType":"VariableDeclaration","scope":2966,"src":"7883:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2928,"name":"string","nodeType":"ElementaryTypeName","src":"7883:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7844:62:9"},"returnParameters":{"id":2931,"nodeType":"ParameterList","parameters":[],"src":"7914:0:9"},"scope":3771,"src":"7823:359:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2992,"nodeType":"Block","src":"8259:158:9","statements":[{"expression":{"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2973,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"8270:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_user_badge_struct_$2412_storage_$","typeString":"mapping(string memory => struct MoonDAO.user_badge_struct storage ref)"}},"id":2975,"indexExpression":{"id":2974,"name":"person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"8283:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8270:20:9","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2412_storage","typeString":"struct MoonDAO.user_badge_struct storage ref"}},"id":2976,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8291:6:9","memberName":"joined","nodeType":"MemberAccess","referencedDeclaration":2399,"src":"8270:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8300:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8270:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2979,"nodeType":"ExpressionStatement","src":"8270:34:9"},{"expression":{"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2980,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"8315:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2393_storage_$","typeString":"mapping(uint256 => struct MoonDAO.join_struct storage ref)"}},"id":2982,"indexExpression":{"id":2981,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"8330:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8315:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2393_storage","typeString":"struct MoonDAO.join_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2984,"name":"dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"8363:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2985,"name":"person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"8379:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2983,"name":"join_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"8343:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_join_struct_$2393_storage_ptr_$","typeString":"type(struct MoonDAO.join_struct storage pointer)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8356:5:9","8371:6:9"],"names":["daoid","wallet"],"nodeType":"FunctionCall","src":"8343:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2393_memory_ptr","typeString":"struct MoonDAO.join_struct memory"}},"src":"8315:72:9","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2393_storage","typeString":"struct MoonDAO.join_struct storage ref"}},"id":2988,"nodeType":"ExpressionStatement","src":"8315:72:9"},{"expression":{"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8398:11:9","subExpression":{"id":2989,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"8398:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2991,"nodeType":"ExpressionStatement","src":"8398:11:9"}]},"functionSelector":"5132f0c7","id":2993,"implemented":true,"kind":"function","modifiers":[],"name":"join_community","nameLocation":"8199:14:9","nodeType":"FunctionDefinition","parameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2968,"mutability":"mutable","name":"dao_id","nameLocation":"8222:6:9","nodeType":"VariableDeclaration","scope":2993,"src":"8214:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"8214:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2970,"mutability":"mutable","name":"person","nameLocation":"8244:6:9","nodeType":"VariableDeclaration","scope":2993,"src":"8230:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2969,"name":"string","nodeType":"ElementaryTypeName","src":"8230:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8213:38:9"},"returnParameters":{"id":2972,"nodeType":"ParameterList","parameters":[],"src":"8259:0:9"},"scope":3771,"src":"8190:227:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3033,"nodeType":"Block","src":"8500:231:9","statements":[{"body":{"id":3029,"nodeType":"Block","src":"8585:114:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":3013,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"8620:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2393_storage_$","typeString":"mapping(uint256 => struct MoonDAO.join_struct storage ref)"}},"id":3015,"indexExpression":{"id":3014,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"8635:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8620:17:9","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2393_storage","typeString":"struct MoonDAO.join_struct storage ref"}},"id":3016,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8638:6:9","memberName":"wallet","nodeType":"MemberAccess","referencedDeclaration":2392,"src":"8620:24:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3011,"name":"bytes","nodeType":"ElementaryTypeName","src":"8614:5:9","typeDescriptions":{}}},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":3010,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8604:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8604:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3022,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"8666:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8660:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3020,"name":"bytes","nodeType":"ElementaryTypeName","src":"8660:5:9","typeDescriptions":{}}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8660:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3019,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8650:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8650:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8604:70:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3028,"nodeType":"IfStatement","src":"8600:87:9","trueBody":{"expression":{"hexValue":"74727565","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8683:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2999,"id":3027,"nodeType":"Return","src":"8676:11:9"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3004,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"8565:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3005,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"8569:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8565:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3030,"initializationExpression":{"assignments":[3001],"declarations":[{"constant":false,"id":3001,"mutability":"mutable","name":"i","nameLocation":"8558:1:9","nodeType":"VariableDeclaration","scope":3030,"src":"8550:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"8550:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3003,"initialValue":{"hexValue":"30","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8562:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8550:13:9"},"loopExpression":{"expression":{"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8580:3:9","subExpression":{"id":3007,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"8580:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3009,"nodeType":"ExpressionStatement","src":"8580:3:9"},"nodeType":"ForStatement","src":"8545:154:9"},{"expression":{"hexValue":"66616c7365","id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8718:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2999,"id":3032,"nodeType":"Return","src":"8711:12:9"}]},"functionSelector":"eca7f5fe","id":3034,"implemented":true,"kind":"function","modifiers":[],"name":"is_person_joined","nameLocation":"8434:16:9","nodeType":"FunctionDefinition","parameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2995,"mutability":"mutable","name":"wallet","nameLocation":"8465:6:9","nodeType":"VariableDeclaration","scope":3034,"src":"8451:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2994,"name":"string","nodeType":"ElementaryTypeName","src":"8451:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8450:22:9"},"returnParameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3034,"src":"8494:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2997,"name":"bool","nodeType":"ElementaryTypeName","src":"8494:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8493:6:9"},"scope":3771,"src":"8425:306:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3074,"nodeType":"Block","src":"8802:249:9","statements":[{"assignments":[3044],"declarations":[{"constant":false,"id":3044,"mutability":"mutable","name":"_StoreInfo","nameLocation":"8858:10:9","nodeType":"VariableDeclaration","scope":3074,"src":"8842:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3042,"name":"string","nodeType":"ElementaryTypeName","src":"8842:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3043,"nodeType":"ArrayTypeName","src":"8842:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":3050,"initialValue":{"arguments":[{"id":3048,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"8884:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8871:12:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":3045,"name":"string","nodeType":"ElementaryTypeName","src":"8875:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3046,"nodeType":"ArrayTypeName","src":"8875:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8871:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8842:53:9"},{"body":{"id":3070,"nodeType":"Block","src":"8947:67:9","statements":[{"expression":{"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3061,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"8962:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":3063,"indexExpression":{"id":3062,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"8973:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8962:13:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3064,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"8978:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2335_storage_$","typeString":"mapping(uint256 => struct MoonDAO.ideas_uri_struct storage ref)"}},"id":3066,"indexExpression":{"id":3065,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"8990:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8978:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2335_storage","typeString":"struct MoonDAO.ideas_uri_struct storage ref"}},"id":3067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8993:9:9","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":2332,"src":"8978:24:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"8962:40:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3069,"nodeType":"ExpressionStatement","src":"8962:40:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3055,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"8926:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3056,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"8930:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8926:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3071,"initializationExpression":{"assignments":[3052],"declarations":[{"constant":false,"id":3052,"mutability":"mutable","name":"i","nameLocation":"8919:1:9","nodeType":"VariableDeclaration","scope":3071,"src":"8911:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3051,"name":"uint256","nodeType":"ElementaryTypeName","src":"8911:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3054,"initialValue":{"hexValue":"30","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8923:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8911:13:9"},"loopExpression":{"expression":{"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8942:3:9","subExpression":{"id":3058,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"8942:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3060,"nodeType":"ExpressionStatement","src":"8942:3:9"},"nodeType":"ForStatement","src":"8906:108:9"},{"expression":{"id":3072,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"9033:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":3039,"id":3073,"nodeType":"Return","src":"9026:17:9"}]},"functionSelector":"97ee7606","id":3075,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_ideas","nameLocation":"8748:13:9","nodeType":"FunctionDefinition","parameters":{"id":3035,"nodeType":"ParameterList","parameters":[],"src":"8761:2:9"},"returnParameters":{"id":3039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3075,"src":"8785:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3036,"name":"string","nodeType":"ElementaryTypeName","src":"8785:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3037,"nodeType":"ArrayTypeName","src":"8785:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"8784:17:9"},"scope":3771,"src":"8739:312:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3130,"nodeType":"Block","src":"9149:362:9","statements":[{"assignments":[3087],"declarations":[{"constant":false,"id":3087,"mutability":"mutable","name":"_StoreInfo","nameLocation":"9216:10:9","nodeType":"VariableDeclaration","scope":3130,"src":"9200:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3085,"name":"string","nodeType":"ElementaryTypeName","src":"9200:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3086,"nodeType":"ArrayTypeName","src":"9200:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":3093,"initialValue":{"arguments":[{"id":3091,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"9242:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9229:12:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":3088,"name":"string","nodeType":"ElementaryTypeName","src":"9233:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3089,"nodeType":"ArrayTypeName","src":"9233:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9229:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9200:53:9"},{"assignments":[3095],"declarations":[{"constant":false,"id":3095,"mutability":"mutable","name":"_store_id","nameLocation":"9272:9:9","nodeType":"VariableDeclaration","scope":3130,"src":"9264:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3094,"name":"uint256","nodeType":"ElementaryTypeName","src":"9264:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3096,"nodeType":"VariableDeclarationStatement","src":"9264:17:9"},{"body":{"id":3126,"nodeType":"Block","src":"9333:141:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3107,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"9352:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2335_storage_$","typeString":"mapping(uint256 => struct MoonDAO.ideas_uri_struct storage ref)"}},"id":3109,"indexExpression":{"id":3108,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"9364:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9352:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2335_storage","typeString":"struct MoonDAO.ideas_uri_struct storage ref"}},"id":3110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9367:7:9","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":2330,"src":"9352:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3111,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"9378:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9352:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3122,"nodeType":"IfStatement","src":"9348:88:9","trueBody":{"expression":{"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3113,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"9388:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":3115,"indexExpression":{"id":3114,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"9399:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9388:21:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3116,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"9412:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2335_storage_$","typeString":"mapping(uint256 => struct MoonDAO.ideas_uri_struct storage ref)"}},"id":3118,"indexExpression":{"id":3117,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"9424:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9412:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2335_storage","typeString":"struct MoonDAO.ideas_uri_struct storage ref"}},"id":3119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9427:9:9","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":2332,"src":"9412:24:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"9388:48:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3121,"nodeType":"ExpressionStatement","src":"9388:48:9"}},{"expression":{"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9451:11:9","subExpression":{"id":3123,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"9451:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3125,"nodeType":"ExpressionStatement","src":"9451:11:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3101,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"9312:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3102,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"9316:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9312:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3127,"initializationExpression":{"assignments":[3098],"declarations":[{"constant":false,"id":3098,"mutability":"mutable","name":"i","nameLocation":"9305:1:9","nodeType":"VariableDeclaration","scope":3127,"src":"9297:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3097,"name":"uint256","nodeType":"ElementaryTypeName","src":"9297:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3100,"initialValue":{"hexValue":"30","id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9309:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9297:13:9"},"loopExpression":{"expression":{"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9328:3:9","subExpression":{"id":3104,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"9328:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3106,"nodeType":"ExpressionStatement","src":"9328:3:9"},"nodeType":"ForStatement","src":"9292:182:9"},{"expression":{"id":3128,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"9493:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":3082,"id":3129,"nodeType":"Return","src":"9486:17:9"}]},"functionSelector":"131d44f2","id":3131,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_ideas_by_goal_id","nameLocation":"9068:24:9","nodeType":"FunctionDefinition","parameters":{"id":3078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3077,"mutability":"mutable","name":"_goal_id","nameLocation":"9101:8:9","nodeType":"VariableDeclaration","scope":3131,"src":"9093:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3076,"name":"uint256","nodeType":"ElementaryTypeName","src":"9093:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9092:18:9"},"returnParameters":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3131,"src":"9132:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3079,"name":"string","nodeType":"ElementaryTypeName","src":"9132:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3080,"nodeType":"ArrayTypeName","src":"9132:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"9131:17:9"},"scope":3771,"src":"9059:452:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3171,"nodeType":"Block","src":"9610:230:9","statements":[{"body":{"id":3167,"nodeType":"Block","src":"9697:115:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":3151,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"9732:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2335_storage_$","typeString":"mapping(uint256 => struct MoonDAO.ideas_uri_struct storage ref)"}},"id":3153,"indexExpression":{"id":3152,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"9744:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9732:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2335_storage","typeString":"struct MoonDAO.ideas_uri_struct storage ref"}},"id":3154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9747:9:9","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":2332,"src":"9732:24:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9726:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3149,"name":"bytes","nodeType":"ElementaryTypeName","src":"9726:5:9","typeDescriptions":{}}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9726:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":3148,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9716:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9716:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3160,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"9778:10:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9772:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3158,"name":"bytes","nodeType":"ElementaryTypeName","src":"9772:5:9","typeDescriptions":{}}},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9772:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3157,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9762:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9762:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9716:74:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3166,"nodeType":"IfStatement","src":"9712:88:9","trueBody":{"expression":{"id":3164,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"9799:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3137,"id":3165,"nodeType":"Return","src":"9792:8:9"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3142,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"9676:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3143,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"9680:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9676:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3168,"initializationExpression":{"assignments":[3139],"declarations":[{"constant":false,"id":3139,"mutability":"mutable","name":"i","nameLocation":"9669:1:9","nodeType":"VariableDeclaration","scope":3168,"src":"9661:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"9661:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3141,"initialValue":{"hexValue":"30","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9673:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9661:13:9"},"loopExpression":{"expression":{"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9692:3:9","subExpression":{"id":3145,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"9692:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3147,"nodeType":"ExpressionStatement","src":"9692:3:9"},"nodeType":"ForStatement","src":"9656:156:9"},{"expression":{"hexValue":"30","id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9831:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3137,"id":3170,"nodeType":"Return","src":"9824:8:9"}]},"functionSelector":"a1ca9178","id":3172,"implemented":true,"kind":"function","modifiers":[],"name":"get_ideas_id_by_ideas_uri","nameLocation":"9528:25:9","nodeType":"FunctionDefinition","parameters":{"id":3134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3133,"mutability":"mutable","name":"_ideas_uri","nameLocation":"9568:10:9","nodeType":"VariableDeclaration","scope":3172,"src":"9554:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3132,"name":"string","nodeType":"ElementaryTypeName","src":"9554:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9553:26:9"},"returnParameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3172,"src":"9601:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"9601:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9600:9:9"},"scope":3771,"src":"9519:321:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3215,"nodeType":"Block","src":"9940:251:9","statements":[{"body":{"id":3211,"nodeType":"Block","src":"10027:136:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":3192,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"10062:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2335_storage_$","typeString":"mapping(uint256 => struct MoonDAO.ideas_uri_struct storage ref)"}},"id":3194,"indexExpression":{"id":3193,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"10074:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10062:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2335_storage","typeString":"struct MoonDAO.ideas_uri_struct storage ref"}},"id":3195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10077:9:9","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":2332,"src":"10062:24:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10056:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3190,"name":"bytes","nodeType":"ElementaryTypeName","src":"10056:5:9","typeDescriptions":{}}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":3189,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10046:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10046:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3201,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"10108:10:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10102:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3199,"name":"bytes","nodeType":"ElementaryTypeName","src":"10102:5:9","typeDescriptions":{}}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10102:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3198,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10092:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10092:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10046:74:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3210,"nodeType":"IfStatement","src":"10042:109:9","trueBody":{"expression":{"expression":{"baseExpression":{"id":3205,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"10129:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2335_storage_$","typeString":"mapping(uint256 => struct MoonDAO.ideas_uri_struct storage ref)"}},"id":3207,"indexExpression":{"id":3206,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"10141:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10129:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2335_storage","typeString":"struct MoonDAO.ideas_uri_struct storage ref"}},"id":3208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10144:7:9","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":2330,"src":"10129:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3178,"id":3209,"nodeType":"Return","src":"10122:29:9"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3183,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"10006:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3184,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"10010:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3212,"initializationExpression":{"assignments":[3180],"declarations":[{"constant":false,"id":3180,"mutability":"mutable","name":"i","nameLocation":"9999:1:9","nodeType":"VariableDeclaration","scope":3212,"src":"9991:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"9991:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3182,"initialValue":{"hexValue":"30","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10003:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9991:13:9"},"loopExpression":{"expression":{"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10022:3:9","subExpression":{"id":3186,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"10022:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3188,"nodeType":"ExpressionStatement","src":"10022:3:9"},"nodeType":"ForStatement","src":"9986:177:9"},{"expression":{"hexValue":"30","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10182:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3178,"id":3214,"nodeType":"Return","src":"10175:8:9"}]},"functionSelector":"aa4cdf2a","id":3216,"implemented":true,"kind":"function","modifiers":[],"name":"get_goal_id_from_ideas_uri","nameLocation":"9857:26:9","nodeType":"FunctionDefinition","parameters":{"id":3175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3174,"mutability":"mutable","name":"_ideas_uri","nameLocation":"9898:10:9","nodeType":"VariableDeclaration","scope":3216,"src":"9884:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3173,"name":"string","nodeType":"ElementaryTypeName","src":"9884:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9883:26:9"},"returnParameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3216,"src":"9931:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3176,"name":"uint256","nodeType":"ElementaryTypeName","src":"9931:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9930:9:9"},"scope":3771,"src":"9848:343:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3228,"nodeType":"Block","src":"10273:91:9","statements":[{"expression":{"expression":{"baseExpression":{"id":3223,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"10324:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2335_storage_$","typeString":"mapping(uint256 => struct MoonDAO.ideas_uri_struct storage ref)"}},"id":3225,"indexExpression":{"id":3224,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"10336:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10324:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2335_storage","typeString":"struct MoonDAO.ideas_uri_struct storage ref"}},"id":3226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10347:9:9","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":2332,"src":"10324:32:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":3222,"id":3227,"nodeType":"Return","src":"10317:39:9"}]},"functionSelector":"8d3d2595","id":3229,"implemented":true,"kind":"function","modifiers":[],"name":"ideas_uri","nameLocation":"10208:9:9","nodeType":"FunctionDefinition","parameters":{"id":3219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3218,"mutability":"mutable","name":"_ideas_id","nameLocation":"10226:9:9","nodeType":"VariableDeclaration","scope":3229,"src":"10218:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3217,"name":"uint256","nodeType":"ElementaryTypeName","src":"10218:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10217:19:9"},"returnParameters":{"id":3222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3229,"src":"10258:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3220,"name":"string","nodeType":"ElementaryTypeName","src":"10258:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10257:15:9"},"scope":3771,"src":"10199:165:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3262,"nodeType":"Block","src":"10502:270:9","statements":[{"expression":{"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3240,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"10514:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_user_badge_struct_$2412_storage_$","typeString":"mapping(string memory => struct MoonDAO.user_badge_struct storage ref)"}},"id":3242,"indexExpression":{"id":3241,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"10527:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10514:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2412_storage","typeString":"struct MoonDAO.user_badge_struct storage ref"}},"id":3243,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10536:4:9","memberName":"vote","nodeType":"MemberAccess","referencedDeclaration":2405,"src":"10514:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10543:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10514:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3246,"nodeType":"ExpressionStatement","src":"10514:33:9"},{"expression":{"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3247,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"10608:20:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$2356_storage_$","typeString":"mapping(uint256 => struct MoonDAO.goal_ideas_votes_struct storage ref)"}},"id":3249,"indexExpression":{"id":3248,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"10629:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10608:37:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$2356_storage","typeString":"struct MoonDAO.goal_ideas_votes_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3251,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"10672:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3252,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"10682:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3253,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"10693:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3250,"name":"goal_ideas_votes_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"10648:23:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_goal_ideas_votes_struct_$2356_storage_ptr_$","typeString":"type(struct MoonDAO.goal_ideas_votes_struct storage pointer)"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10648:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$2356_memory_ptr","typeString":"struct MoonDAO.goal_ideas_votes_struct memory"}},"src":"10608:93:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$2356_storage","typeString":"struct MoonDAO.goal_ideas_votes_struct storage ref"}},"id":3256,"nodeType":"ExpressionStatement","src":"10608:93:9"},{"expression":{"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10712:17:9","subExpression":{"id":3257,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"10712:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3259,"nodeType":"ExpressionStatement","src":"10712:17:9"},{"expression":{"id":3260,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"10749:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3239,"id":3261,"nodeType":"Return","src":"10742:22:9"}]},"functionSelector":"82fcc732","id":3263,"implemented":true,"kind":"function","modifiers":[],"name":"create_goal_ideas_vote","nameLocation":"10394:22:9","nodeType":"FunctionDefinition","parameters":{"id":3236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"_goal_id","nameLocation":"10425:8:9","nodeType":"VariableDeclaration","scope":3263,"src":"10417:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"10417:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3233,"mutability":"mutable","name":"_ideas_id","nameLocation":"10443:9:9","nodeType":"VariableDeclaration","scope":3263,"src":"10435:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3232,"name":"uint256","nodeType":"ElementaryTypeName","src":"10435:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3235,"mutability":"mutable","name":"_wallet","nameLocation":"10468:7:9","nodeType":"VariableDeclaration","scope":3263,"src":"10454:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3234,"name":"string","nodeType":"ElementaryTypeName","src":"10454:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10416:60:9"},"returnParameters":{"id":3239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3263,"src":"10493:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3237,"name":"uint256","nodeType":"ElementaryTypeName","src":"10493:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10492:9:9"},"scope":3771,"src":"10385:387:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3327,"nodeType":"Block","src":"10890:436:9","statements":[{"assignments":[3277],"declarations":[{"constant":false,"id":3277,"mutability":"mutable","name":"_StoreInfo","nameLocation":"10959:10:9","nodeType":"VariableDeclaration","scope":3327,"src":"10943:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3275,"name":"string","nodeType":"ElementaryTypeName","src":"10943:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3276,"nodeType":"ArrayTypeName","src":"10943:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":3283,"initialValue":{"arguments":[{"id":3281,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"10985:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10972:12:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":3278,"name":"string","nodeType":"ElementaryTypeName","src":"10976:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3279,"nodeType":"ArrayTypeName","src":"10976:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10972:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10943:58:9"},{"assignments":[3285],"declarations":[{"constant":false,"id":3285,"mutability":"mutable","name":"_store_id","nameLocation":"11020:9:9","nodeType":"VariableDeclaration","scope":3327,"src":"11012:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3284,"name":"uint256","nodeType":"ElementaryTypeName","src":"11012:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3286,"nodeType":"VariableDeclarationStatement","src":"11012:17:9"},{"body":{"id":3323,"nodeType":"Block","src":"11086:205:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3297,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"11105:20:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$2356_storage_$","typeString":"mapping(uint256 => struct MoonDAO.goal_ideas_votes_struct storage ref)"}},"id":3299,"indexExpression":{"id":3298,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"11126:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11105:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$2356_storage","typeString":"struct MoonDAO.goal_ideas_votes_struct storage ref"}},"id":3300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11129:7:9","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":2351,"src":"11105:31:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3301,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"11140:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11105:43:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3303,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"11152:20:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$2356_storage_$","typeString":"mapping(uint256 => struct MoonDAO.goal_ideas_votes_struct storage ref)"}},"id":3305,"indexExpression":{"id":3304,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"11173:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11152:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$2356_storage","typeString":"struct MoonDAO.goal_ideas_votes_struct storage ref"}},"id":3306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11176:8:9","memberName":"ideas_id","nodeType":"MemberAccess","referencedDeclaration":2353,"src":"11152:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3307,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"11188:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11152:45:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11105:92:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3319,"nodeType":"IfStatement","src":"11101:152:9","trueBody":{"expression":{"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3310,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"11199:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":3312,"indexExpression":{"id":3311,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"11210:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11199:21:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3313,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"11223:20:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$2356_storage_$","typeString":"mapping(uint256 => struct MoonDAO.goal_ideas_votes_struct storage ref)"}},"id":3315,"indexExpression":{"id":3314,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"11244:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11223:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$2356_storage","typeString":"struct MoonDAO.goal_ideas_votes_struct storage ref"}},"id":3316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11247:6:9","memberName":"wallet","nodeType":"MemberAccess","referencedDeclaration":2355,"src":"11223:30:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"11199:54:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3318,"nodeType":"ExpressionStatement","src":"11199:54:9"}},{"expression":{"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11268:11:9","subExpression":{"id":3320,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"11268:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3322,"nodeType":"ExpressionStatement","src":"11268:11:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3291,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"11060:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3292,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"11064:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11060:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3324,"initializationExpression":{"assignments":[3288],"declarations":[{"constant":false,"id":3288,"mutability":"mutable","name":"i","nameLocation":"11053:1:9","nodeType":"VariableDeclaration","scope":3324,"src":"11045:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3287,"name":"uint256","nodeType":"ElementaryTypeName","src":"11045:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3290,"initialValue":{"hexValue":"30","id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11057:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11045:13:9"},"loopExpression":{"expression":{"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11081:3:9","subExpression":{"id":3294,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"11081:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3296,"nodeType":"ExpressionStatement","src":"11081:3:9"},"nodeType":"ForStatement","src":"11040:251:9"},{"expression":{"id":3325,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"11308:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":3272,"id":3326,"nodeType":"Return","src":"11301:17:9"}]},"functionSelector":"4be7adb5","id":3328,"implemented":true,"kind":"function","modifiers":[],"name":"get_ideas_votes_from_goal","nameLocation":"10789:25:9","nodeType":"FunctionDefinition","parameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"_goal_id","nameLocation":"10823:8:9","nodeType":"VariableDeclaration","scope":3328,"src":"10815:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"10815:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3267,"mutability":"mutable","name":"_ideas_id","nameLocation":"10841:9:9","nodeType":"VariableDeclaration","scope":3328,"src":"10833:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3266,"name":"uint256","nodeType":"ElementaryTypeName","src":"10833:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10814:37:9"},"returnParameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3328,"src":"10873:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3269,"name":"string","nodeType":"ElementaryTypeName","src":"10873:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3270,"nodeType":"ArrayTypeName","src":"10873:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"10872:17:9"},"scope":3771,"src":"10780:546:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3362,"nodeType":"Block","src":"11458:259:9","statements":[{"expression":{"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3339,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"11473:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_user_badge_struct_$2412_storage_$","typeString":"mapping(string memory => struct MoonDAO.user_badge_struct storage ref)"}},"id":3341,"indexExpression":{"id":3340,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"11486:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11473:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2412_storage","typeString":"struct MoonDAO.user_badge_struct storage ref"}},"id":3342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11495:7:9","memberName":"comment","nodeType":"MemberAccess","referencedDeclaration":2409,"src":"11473:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11505:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11473:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3345,"nodeType":"ExpressionStatement","src":"11473:36:9"},{"expression":{"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3346,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"11565:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$2365_storage_$","typeString":"mapping(uint256 => struct MoonDAO.message_struct storage ref)"}},"id":3348,"indexExpression":{"id":3347,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"11578:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11565:26:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$2365_storage","typeString":"struct MoonDAO.message_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3350,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"11609:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3351,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"11623:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3352,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"11634:8:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3353,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"11644:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3349,"name":"message_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"11594:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_message_struct_$2365_storage_ptr_$","typeString":"type(struct MoonDAO.message_struct storage pointer)"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11594:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$2365_memory_ptr","typeString":"struct MoonDAO.message_struct memory"}},"src":"11565:87:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$2365_storage","typeString":"struct MoonDAO.message_struct storage ref"}},"id":3356,"nodeType":"ExpressionStatement","src":"11565:87:9"},{"expression":{"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11663:14:9","subExpression":{"id":3357,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"11663:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3359,"nodeType":"ExpressionStatement","src":"11663:14:9"},{"expression":{"id":3360,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"11697:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3338,"id":3361,"nodeType":"Return","src":"11690:19:9"}]},"functionSelector":"3f50602f","id":3363,"implemented":true,"kind":"function","modifiers":[],"name":"sendMsg","nameLocation":"11359:7:9","nodeType":"FunctionDefinition","parameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"mutability":"mutable","name":"_ideas_id","nameLocation":"11375:9:9","nodeType":"VariableDeclaration","scope":3363,"src":"11367:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3329,"name":"uint256","nodeType":"ElementaryTypeName","src":"11367:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3332,"mutability":"mutable","name":"_message","nameLocation":"11400:8:9","nodeType":"VariableDeclaration","scope":3363,"src":"11386:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3331,"name":"string","nodeType":"ElementaryTypeName","src":"11386:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3334,"mutability":"mutable","name":"_sender","nameLocation":"11424:7:9","nodeType":"VariableDeclaration","scope":3363,"src":"11410:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3333,"name":"string","nodeType":"ElementaryTypeName","src":"11410:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11366:66:9"},"returnParameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3363,"src":"11449:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3336,"name":"uint256","nodeType":"ElementaryTypeName","src":"11449:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11448:9:9"},"scope":3771,"src":"11350:367:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3419,"nodeType":"Block","src":"11801:438:9","statements":[{"assignments":[3375],"declarations":[{"constant":false,"id":3375,"mutability":"mutable","name":"_All_Ideas_Messages","nameLocation":"11876:19:9","nodeType":"VariableDeclaration","scope":3419,"src":"11859:36:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3373,"name":"uint256","nodeType":"ElementaryTypeName","src":"11859:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3374,"nodeType":"ArrayTypeName","src":"11859:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3381,"initialValue":{"arguments":[{"id":3379,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"11912:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11898:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"11902:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3377,"nodeType":"ArrayTypeName","src":"11902:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11898:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11859:66:9"},{"assignments":[3383],"declarations":[{"constant":false,"id":3383,"mutability":"mutable","name":"_msg_id","nameLocation":"11944:7:9","nodeType":"VariableDeclaration","scope":3419,"src":"11936:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3382,"name":"uint256","nodeType":"ElementaryTypeName","src":"11936:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3384,"nodeType":"VariableDeclarationStatement","src":"11936:15:9"},{"body":{"id":3415,"nodeType":"Block","src":"12005:188:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3395,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"12024:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$2365_storage_$","typeString":"mapping(uint256 => struct MoonDAO.message_struct storage ref)"}},"id":3397,"indexExpression":{"id":3396,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"12037:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12024:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$2365_storage","typeString":"struct MoonDAO.message_struct storage ref"}},"id":3398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12040:8:9","memberName":"ideas_id","nodeType":"MemberAccess","referencedDeclaration":2360,"src":"12024:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3399,"name":"ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"12052:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12024:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3414,"nodeType":"IfStatement","src":"12020:162:9","trueBody":{"id":3413,"nodeType":"Block","src":"12062:120:9","statements":[{"expression":{"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3401,"name":"_All_Ideas_Messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"12081:19:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3403,"indexExpression":{"id":3402,"name":"_msg_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"12101:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12081:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3404,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"12112:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$2365_storage_$","typeString":"mapping(uint256 => struct MoonDAO.message_struct storage ref)"}},"id":3406,"indexExpression":{"id":3405,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"12125:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12112:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$2365_storage","typeString":"struct MoonDAO.message_struct storage ref"}},"id":3407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12128:10:9","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":2358,"src":"12112:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12081:57:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3409,"nodeType":"ExpressionStatement","src":"12081:57:9"},{"expression":{"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12157:9:9","subExpression":{"id":3410,"name":"_msg_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"12157:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3412,"nodeType":"ExpressionStatement","src":"12157:9:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3389,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"11982:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3390,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"11986:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11982:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3416,"initializationExpression":{"assignments":[3386],"declarations":[{"constant":false,"id":3386,"mutability":"mutable","name":"i","nameLocation":"11975:1:9","nodeType":"VariableDeclaration","scope":3416,"src":"11967:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3385,"name":"uint256","nodeType":"ElementaryTypeName","src":"11967:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3388,"initialValue":{"hexValue":"30","id":3387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11979:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11967:13:9"},"loopExpression":{"expression":{"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12000:3:9","subExpression":{"id":3392,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"12000:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3394,"nodeType":"ExpressionStatement","src":"12000:3:9"},"nodeType":"ForStatement","src":"11962:231:9"},{"expression":{"id":3417,"name":"_All_Ideas_Messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"12212:19:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3370,"id":3418,"nodeType":"Return","src":"12205:26:9"}]},"functionSelector":"803f5b9f","id":3420,"implemented":true,"kind":"function","modifiers":[],"name":"getMsgIDs","nameLocation":"11734:9:9","nodeType":"FunctionDefinition","parameters":{"id":3366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3365,"mutability":"mutable","name":"ideas_id","nameLocation":"11752:8:9","nodeType":"VariableDeclaration","scope":3420,"src":"11744:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3364,"name":"uint256","nodeType":"ElementaryTypeName","src":"11744:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11743:18:9"},"returnParameters":{"id":3370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3420,"src":"11783:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3367,"name":"uint256","nodeType":"ElementaryTypeName","src":"11783:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3368,"nodeType":"ArrayTypeName","src":"11783:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11782:18:9"},"scope":3771,"src":"11725:514:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3456,"nodeType":"Block","src":"12373:240:9","statements":[{"expression":{"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3433,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"12386:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_user_badge_struct_$2412_storage_$","typeString":"mapping(string memory => struct MoonDAO.user_badge_struct storage ref)"}},"id":3435,"indexExpression":{"id":3434,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"12399:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12386:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2412_storage","typeString":"struct MoonDAO.user_badge_struct storage ref"}},"id":3436,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12408:5:9","memberName":"reply","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"12386:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12416:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12386:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3439,"nodeType":"ExpressionStatement","src":"12386:34:9"},{"expression":{"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3440,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"12472:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$2383_storage_$","typeString":"mapping(uint256 => struct MoonDAO.reply_struct storage ref)"}},"id":3442,"indexExpression":{"id":3441,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"12484:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12472:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$2383_storage","typeString":"struct MoonDAO.reply_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3444,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"12511:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3445,"name":"_message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"12523:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3446,"name":"ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"12535:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3447,"name":"_reply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"12545:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3443,"name":"reply_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"12498:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_reply_struct_$2383_storage_ptr_$","typeString":"type(struct MoonDAO.reply_struct storage pointer)"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12498:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$2383_memory_ptr","typeString":"struct MoonDAO.reply_struct memory"}},"src":"12472:80:9","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$2383_storage","typeString":"struct MoonDAO.reply_struct storage ref"}},"id":3450,"nodeType":"ExpressionStatement","src":"12472:80:9"},{"expression":{"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12563:12:9","subExpression":{"id":3451,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"12563:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3453,"nodeType":"ExpressionStatement","src":"12563:12:9"},{"expression":{"id":3454,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"12595:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3432,"id":3455,"nodeType":"Return","src":"12588:17:9"}]},"functionSelector":"494ce295","id":3457,"implemented":true,"kind":"function","modifiers":[],"name":"sendReply","nameLocation":"12256:9:9","nodeType":"FunctionDefinition","parameters":{"id":3429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3422,"mutability":"mutable","name":"_message_id","nameLocation":"12274:11:9","nodeType":"VariableDeclaration","scope":3457,"src":"12266:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3421,"name":"uint256","nodeType":"ElementaryTypeName","src":"12266:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3424,"mutability":"mutable","name":"_reply","nameLocation":"12301:6:9","nodeType":"VariableDeclaration","scope":3457,"src":"12287:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3423,"name":"string","nodeType":"ElementaryTypeName","src":"12287:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3426,"mutability":"mutable","name":"ideas_id","nameLocation":"12316:8:9","nodeType":"VariableDeclaration","scope":3457,"src":"12308:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3425,"name":"uint256","nodeType":"ElementaryTypeName","src":"12308:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3428,"mutability":"mutable","name":"_wallet","nameLocation":"12339:7:9","nodeType":"VariableDeclaration","scope":3457,"src":"12325:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3427,"name":"string","nodeType":"ElementaryTypeName","src":"12325:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12265:82:9"},"returnParameters":{"id":3432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3457,"src":"12364:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3430,"name":"uint256","nodeType":"ElementaryTypeName","src":"12364:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12363:9:9"},"scope":3771,"src":"12247:366:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3513,"nodeType":"Block","src":"12701:443:9","statements":[{"assignments":[3469],"declarations":[{"constant":false,"id":3469,"mutability":"mutable","name":"_All_Messages_Replys","nameLocation":"12776:20:9","nodeType":"VariableDeclaration","scope":3513,"src":"12759:37:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3468,"nodeType":"ArrayTypeName","src":"12759:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3475,"initialValue":{"arguments":[{"id":3473,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"12813:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12799:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3470,"name":"uint256","nodeType":"ElementaryTypeName","src":"12803:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3471,"nodeType":"ArrayTypeName","src":"12803:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12799:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12759:65:9"},{"assignments":[3477],"declarations":[{"constant":false,"id":3477,"mutability":"mutable","name":"_reply_id","nameLocation":"12843:9:9","nodeType":"VariableDeclaration","scope":3513,"src":"12835:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3476,"name":"uint256","nodeType":"ElementaryTypeName","src":"12835:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3478,"nodeType":"VariableDeclarationStatement","src":"12835:17:9"},{"body":{"id":3509,"nodeType":"Block","src":"12904:193:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3489,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"12923:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$2383_storage_$","typeString":"mapping(uint256 => struct MoonDAO.reply_struct storage ref)"}},"id":3491,"indexExpression":{"id":3490,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"12935:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12923:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$2383_storage","typeString":"struct MoonDAO.reply_struct storage ref"}},"id":3492,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12938:10:9","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":2378,"src":"12923:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3493,"name":"message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"12952:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12923:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3508,"nodeType":"IfStatement","src":"12919:167:9","trueBody":{"id":3507,"nodeType":"Block","src":"12964:122:9","statements":[{"expression":{"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3495,"name":"_All_Messages_Replys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"12983:20:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3497,"indexExpression":{"id":3496,"name":"_reply_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"13004:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12983:31:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3498,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"13017:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$2383_storage_$","typeString":"mapping(uint256 => struct MoonDAO.reply_struct storage ref)"}},"id":3500,"indexExpression":{"id":3499,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"13029:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13017:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$2383_storage","typeString":"struct MoonDAO.reply_struct storage ref"}},"id":3501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13032:8:9","memberName":"reply_id","nodeType":"MemberAccess","referencedDeclaration":2376,"src":"13017:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12983:57:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3503,"nodeType":"ExpressionStatement","src":"12983:57:9"},{"expression":{"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13059:11:9","subExpression":{"id":3504,"name":"_reply_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"13059:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3506,"nodeType":"ExpressionStatement","src":"13059:11:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3483,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"12883:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3484,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"12887:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12883:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3510,"initializationExpression":{"assignments":[3480],"declarations":[{"constant":false,"id":3480,"mutability":"mutable","name":"i","nameLocation":"12876:1:9","nodeType":"VariableDeclaration","scope":3510,"src":"12868:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3479,"name":"uint256","nodeType":"ElementaryTypeName","src":"12868:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3482,"initialValue":{"hexValue":"30","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12880:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12868:13:9"},"loopExpression":{"expression":{"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12899:3:9","subExpression":{"id":3486,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"12899:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3488,"nodeType":"ExpressionStatement","src":"12899:3:9"},"nodeType":"ForStatement","src":"12863:234:9"},{"expression":{"id":3511,"name":"_All_Messages_Replys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"13116:20:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3464,"id":3512,"nodeType":"Return","src":"13109:27:9"}]},"functionSelector":"812fae1f","id":3514,"implemented":true,"kind":"function","modifiers":[],"name":"getReplyIDs","nameLocation":"12630:11:9","nodeType":"FunctionDefinition","parameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3459,"mutability":"mutable","name":"message_id","nameLocation":"12650:10:9","nodeType":"VariableDeclaration","scope":3514,"src":"12642:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3458,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12641:20:9"},"returnParameters":{"id":3464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3514,"src":"12683:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3461,"name":"uint256","nodeType":"ElementaryTypeName","src":"12683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3462,"nodeType":"ArrayTypeName","src":"12683:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12682:18:9"},"scope":3771,"src":"12621:523:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3543,"nodeType":"Block","src":"13284:231:9","statements":[{"expression":{"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3527,"name":"all_read_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"13340:17:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$2374_storage_$","typeString":"mapping(uint256 => struct MoonDAO.message_read_struct storage ref)"}},"id":3529,"indexExpression":{"id":3528,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"13358:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13340:36:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$2374_storage","typeString":"struct MoonDAO.message_read_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3531,"name":"_message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"13399:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3532,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"13412:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3533,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"13423:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3534,"name":"msg_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"13431:8:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3530,"name":"message_read_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"13379:19:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_message_read_struct_$2374_storage_ptr_$","typeString":"type(struct MoonDAO.message_read_struct storage pointer)"}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13379:61:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$2374_memory_ptr","typeString":"struct MoonDAO.message_read_struct memory"}},"src":"13340:100:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$2374_storage","typeString":"struct MoonDAO.message_read_struct storage ref"}},"id":3537,"nodeType":"ExpressionStatement","src":"13340:100:9"},{"expression":{"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13451:19:9","subExpression":{"id":3538,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"13451:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3540,"nodeType":"ExpressionStatement","src":"13451:19:9"},{"expression":{"id":3541,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"13490:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3526,"id":3542,"nodeType":"Return","src":"13483:24:9"}]},"functionSelector":"8c59143d","id":3544,"implemented":true,"kind":"function","modifiers":[],"name":"sendReadMsg","nameLocation":"13161:11:9","nodeType":"FunctionDefinition","parameters":{"id":3523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3516,"mutability":"mutable","name":"_message_id","nameLocation":"13181:11:9","nodeType":"VariableDeclaration","scope":3544,"src":"13173:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3515,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3518,"mutability":"mutable","name":"_ideas_id","nameLocation":"13202:9:9","nodeType":"VariableDeclaration","scope":3544,"src":"13194:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3517,"name":"uint256","nodeType":"ElementaryTypeName","src":"13194:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3520,"mutability":"mutable","name":"_wallet","nameLocation":"13226:7:9","nodeType":"VariableDeclaration","scope":3544,"src":"13212:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3519,"name":"string","nodeType":"ElementaryTypeName","src":"13212:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3522,"mutability":"mutable","name":"msg_type","nameLocation":"13249:8:9","nodeType":"VariableDeclaration","scope":3544,"src":"13235:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3521,"name":"string","nodeType":"ElementaryTypeName","src":"13235:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13172:86:9"},"returnParameters":{"id":3526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3544,"src":"13275:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3524,"name":"uint256","nodeType":"ElementaryTypeName","src":"13275:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13274:9:9"},"scope":3771,"src":"13152:363:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3600,"nodeType":"Block","src":"13618:331:9","statements":[{"assignments":[3554],"declarations":[{"constant":false,"id":3554,"mutability":"mutable","name":"read","nameLocation":"13642:4:9","nodeType":"VariableDeclaration","scope":3600,"src":"13637:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3553,"name":"bool","nodeType":"ElementaryTypeName","src":"13637:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3556,"initialValue":{"hexValue":"66616c7365","id":3555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13649:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"13637:17:9"},{"body":{"id":3596,"nodeType":"Block","src":"13713:205:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3567,"name":"all_read_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"13732:17:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$2374_storage_$","typeString":"mapping(uint256 => struct MoonDAO.message_read_struct storage ref)"}},"id":3569,"indexExpression":{"id":3568,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"13750:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13732:20:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$2374_storage","typeString":"struct MoonDAO.message_read_struct storage ref"}},"id":3570,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13753:10:9","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":2367,"src":"13732:31:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3571,"name":"_message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"13767:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13732:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3576,"name":"msg_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"13798:8:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13792:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3574,"name":"bytes","nodeType":"ElementaryTypeName","src":"13792:5:9","typeDescriptions":{}}},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13792:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3573,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"13782:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13782:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":3582,"name":"all_read_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"13828:17:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$2374_storage_$","typeString":"mapping(uint256 => struct MoonDAO.message_read_struct storage ref)"}},"id":3584,"indexExpression":{"id":3583,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"13846:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13828:20:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$2374_storage","typeString":"struct MoonDAO.message_read_struct storage ref"}},"id":3585,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13849:8:9","memberName":"msg_type","nodeType":"MemberAccess","referencedDeclaration":2373,"src":"13828:29:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13822:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3580,"name":"bytes","nodeType":"ElementaryTypeName","src":"13822:5:9","typeDescriptions":{}}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13822:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":3579,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"13812:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13812:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13782:77:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13732:127:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3595,"nodeType":"IfStatement","src":"13728:179:9","trueBody":{"id":3594,"nodeType":"Block","src":"13861:46:9","statements":[{"expression":{"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3590,"name":"read","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"13879:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13886:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13879:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3593,"nodeType":"ExpressionStatement","src":"13879:11:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3561,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"13685:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3562,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"13689:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13685:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3597,"initializationExpression":{"assignments":[3558],"declarations":[{"constant":false,"id":3558,"mutability":"mutable","name":"i","nameLocation":"13678:1:9","nodeType":"VariableDeclaration","scope":3597,"src":"13670:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3557,"name":"uint256","nodeType":"ElementaryTypeName","src":"13670:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3560,"initialValue":{"hexValue":"30","id":3559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13682:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13670:13:9"},"loopExpression":{"expression":{"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13708:3:9","subExpression":{"id":3564,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"13708:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3566,"nodeType":"ExpressionStatement","src":"13708:3:9"},"nodeType":"ForStatement","src":"13665:253:9"},{"expression":{"id":3598,"name":"read","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"13937:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3552,"id":3599,"nodeType":"Return","src":"13930:11:9"}]},"functionSelector":"cd230809","id":3601,"implemented":true,"kind":"function","modifiers":[],"name":"getReadMsg","nameLocation":"13534:10:9","nodeType":"FunctionDefinition","parameters":{"id":3549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3546,"mutability":"mutable","name":"_message_id","nameLocation":"13553:11:9","nodeType":"VariableDeclaration","scope":3601,"src":"13545:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3545,"name":"uint256","nodeType":"ElementaryTypeName","src":"13545:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3548,"mutability":"mutable","name":"msg_type","nameLocation":"13580:8:9","nodeType":"VariableDeclaration","scope":3601,"src":"13566:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3547,"name":"string","nodeType":"ElementaryTypeName","src":"13566:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13544:45:9"},"returnParameters":{"id":3552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3601,"src":"13612:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3550,"name":"bool","nodeType":"ElementaryTypeName","src":"13612:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13611:6:9"},"scope":3771,"src":"13525:424:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3740,"nodeType":"Block","src":"13989:693:9","statements":[{"body":{"expression":{"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14039:19:9","subExpression":{"baseExpression":{"id":3614,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"14046:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$2323_storage_$","typeString":"mapping(uint256 => struct MoonDAO.dao_uri_struct storage ref)"}},"id":3616,"indexExpression":{"id":3615,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"14056:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14046:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$2323_storage","typeString":"struct MoonDAO.dao_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3618,"nodeType":"ExpressionStatement","src":"14039:19:9"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3608,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"14020:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3609,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"14024:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14020:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3619,"initializationExpression":{"assignments":[3605],"declarations":[{"constant":false,"id":3605,"mutability":"mutable","name":"i","nameLocation":"14013:1:9","nodeType":"VariableDeclaration","scope":3619,"src":"14005:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3604,"name":"uint256","nodeType":"ElementaryTypeName","src":"14005:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3607,"initialValue":{"hexValue":"30","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14017:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14005:13:9"},"loopExpression":{"expression":{"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14034:3:9","subExpression":{"id":3611,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"14034:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3613,"nodeType":"ExpressionStatement","src":"14034:3:9"},"nodeType":"ForStatement","src":"14000:58:9"},{"body":{"expression":{"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14109:20:9","subExpression":{"baseExpression":{"id":3630,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"14116:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$2328_storage_$","typeString":"mapping(uint256 => struct MoonDAO.goal_uri_struct storage ref)"}},"id":3632,"indexExpression":{"id":3631,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"14127:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14116:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2328_storage","typeString":"struct MoonDAO.goal_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3634,"nodeType":"ExpressionStatement","src":"14109:20:9"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3624,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"14089:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3625,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"14093:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14089:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3635,"initializationExpression":{"assignments":[3621],"declarations":[{"constant":false,"id":3621,"mutability":"mutable","name":"i","nameLocation":"14082:1:9","nodeType":"VariableDeclaration","scope":3635,"src":"14074:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3620,"name":"uint256","nodeType":"ElementaryTypeName","src":"14074:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3623,"initialValue":{"hexValue":"30","id":3622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14086:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14074:13:9"},"loopExpression":{"expression":{"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14104:3:9","subExpression":{"id":3627,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"14104:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3629,"nodeType":"ExpressionStatement","src":"14104:3:9"},"nodeType":"ForStatement","src":"14069:60:9"},{"body":{"expression":{"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14181:21:9","subExpression":{"baseExpression":{"id":3646,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"14188:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2335_storage_$","typeString":"mapping(uint256 => struct MoonDAO.ideas_uri_struct storage ref)"}},"id":3648,"indexExpression":{"id":3647,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"14200:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14188:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2335_storage","typeString":"struct MoonDAO.ideas_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3650,"nodeType":"ExpressionStatement","src":"14181:21:9"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3640,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"14160:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3641,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"14164:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14160:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3651,"initializationExpression":{"assignments":[3637],"declarations":[{"constant":false,"id":3637,"mutability":"mutable","name":"i","nameLocation":"14153:1:9","nodeType":"VariableDeclaration","scope":3651,"src":"14145:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"14145:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3639,"initialValue":{"hexValue":"30","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14157:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14145:13:9"},"loopExpression":{"expression":{"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14176:3:9","subExpression":{"id":3643,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"14176:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3645,"nodeType":"ExpressionStatement","src":"14176:3:9"},"nodeType":"ForStatement","src":"14140:62:9"},{"body":{"expression":{"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14253:31:9","subExpression":{"baseExpression":{"id":3662,"name":"_smart_contracts_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"14260:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$2349_storage_$","typeString":"mapping(uint256 => struct MoonDAO.smart_contract_uri_struct storage ref)"}},"id":3664,"indexExpression":{"id":3663,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"14282:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14260:24:9","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$2349_storage","typeString":"struct MoonDAO.smart_contract_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3666,"nodeType":"ExpressionStatement","src":"14253:31:9"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3656,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"14233:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3657,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"14237:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14233:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3667,"initializationExpression":{"assignments":[3653],"declarations":[{"constant":false,"id":3653,"mutability":"mutable","name":"i","nameLocation":"14226:1:9","nodeType":"VariableDeclaration","scope":3667,"src":"14218:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3652,"name":"uint256","nodeType":"ElementaryTypeName","src":"14218:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3655,"initialValue":{"hexValue":"30","id":3654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14230:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14218:13:9"},"loopExpression":{"expression":{"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14248:3:9","subExpression":{"id":3659,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"14248:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3661,"nodeType":"ExpressionStatement","src":"14248:3:9"},"nodeType":"ForStatement","src":"14213:71:9"},{"body":{"expression":{"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14338:22:9","subExpression":{"baseExpression":{"id":3678,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"14345:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$2365_storage_$","typeString":"mapping(uint256 => struct MoonDAO.message_struct storage ref)"}},"id":3680,"indexExpression":{"id":3679,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"14358:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14345:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$2365_storage","typeString":"struct MoonDAO.message_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3682,"nodeType":"ExpressionStatement","src":"14338:22:9"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3672,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"14315:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3673,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"14319:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14315:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3683,"initializationExpression":{"assignments":[3669],"declarations":[{"constant":false,"id":3669,"mutability":"mutable","name":"i","nameLocation":"14308:1:9","nodeType":"VariableDeclaration","scope":3683,"src":"14300:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"14300:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3671,"initialValue":{"hexValue":"30","id":3670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14312:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14300:13:9"},"loopExpression":{"expression":{"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14333:3:9","subExpression":{"id":3675,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"14333:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3677,"nodeType":"ExpressionStatement","src":"14333:3:9"},"nodeType":"ForStatement","src":"14295:65:9"},{"body":{"expression":{"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14412:21:9","subExpression":{"baseExpression":{"id":3694,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"14419:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$2383_storage_$","typeString":"mapping(uint256 => struct MoonDAO.reply_struct storage ref)"}},"id":3696,"indexExpression":{"id":3695,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"14431:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14419:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$2383_storage","typeString":"struct MoonDAO.reply_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3698,"nodeType":"ExpressionStatement","src":"14412:21:9"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3688,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"14391:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3689,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"14395:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14391:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3699,"initializationExpression":{"assignments":[3685],"declarations":[{"constant":false,"id":3685,"mutability":"mutable","name":"i","nameLocation":"14384:1:9","nodeType":"VariableDeclaration","scope":3699,"src":"14376:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"14376:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3687,"initialValue":{"hexValue":"30","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14388:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14376:13:9"},"loopExpression":{"expression":{"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14407:3:9","subExpression":{"id":3691,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"14407:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3693,"nodeType":"ExpressionStatement","src":"14407:3:9"},"nodeType":"ForStatement","src":"14371:62:9"},{"body":{"expression":{"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14490:30:9","subExpression":{"baseExpression":{"id":3710,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"14497:20:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$2356_storage_$","typeString":"mapping(uint256 => struct MoonDAO.goal_ideas_votes_struct storage ref)"}},"id":3712,"indexExpression":{"id":3711,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"14518:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14497:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$2356_storage","typeString":"struct MoonDAO.goal_ideas_votes_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3714,"nodeType":"ExpressionStatement","src":"14490:30:9"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3704,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"14464:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3705,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"14468:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14464:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3715,"initializationExpression":{"assignments":[3701],"declarations":[{"constant":false,"id":3701,"mutability":"mutable","name":"i","nameLocation":"14457:1:9","nodeType":"VariableDeclaration","scope":3715,"src":"14449:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3700,"name":"uint256","nodeType":"ElementaryTypeName","src":"14449:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3703,"initialValue":{"hexValue":"30","id":3702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14461:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14449:13:9"},"loopExpression":{"expression":{"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14485:3:9","subExpression":{"id":3707,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"14485:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3709,"nodeType":"ExpressionStatement","src":"14485:3:9"},"nodeType":"ForStatement","src":"14444:76:9"},{"expression":{"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3716,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"14531:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14542:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14531:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3719,"nodeType":"ExpressionStatement","src":"14531:12:9"},{"expression":{"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3720,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"14554:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14566:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14554:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3723,"nodeType":"ExpressionStatement","src":"14554:13:9"},{"expression":{"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3724,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"14578:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14591:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14578:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3727,"nodeType":"ExpressionStatement","src":"14578:14:9"},{"expression":{"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3728,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"14603:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14618:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14603:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3731,"nodeType":"ExpressionStatement","src":"14603:16:9"},{"expression":{"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3732,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"14630:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14643:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14630:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3735,"nodeType":"ExpressionStatement","src":"14630:14:9"},{"expression":{"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3736,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"14655:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14673:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14655:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3739,"nodeType":"ExpressionStatement","src":"14655:19:9"}]},"functionSelector":"b16060a6","id":3741,"implemented":true,"kind":"function","modifiers":[],"name":"reset_all","nameLocation":"13970:9:9","nodeType":"FunctionDefinition","parameters":{"id":3602,"nodeType":"ParameterList","parameters":[],"src":"13979:2:9"},"returnParameters":{"id":3603,"nodeType":"ParameterList","parameters":[],"src":"13989:0:9"},"scope":3771,"src":"13961:721:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3769,"nodeType":"Block","src":"14720:4564:9","statements":[{"expression":{"arguments":[{"hexValue":"307838366262366436653138633565656163613165383363316536313632636334333364636337306134","id":3745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14756:44:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_325915512476b79c1f27260e69a73f28fca5ab7820fb633073044dd29ce05cca","typeString":"literal_string \"0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4\""},"value":"0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4"},{"hexValue":"7b227469746c65223a224173736574204d65746164617461222c2274797065223a226f626a656374222c2270726f70657274696573223a7b225469746c65223a7b2274797065223a22737472696e67222c226465736372697074696f6e223a224c616b65204e6f6e612c204f726c616e646f205553227d2c224465736372697074696f6e223a7b2274797065223a22737472696e67222c226465736372697074696f6e223a22227d2c2253746172745f44617465223a7b2274797065223a22737472696e67222c226465736372697074696f6e223a22323032332d30382d31365431313a3134227d2c226c6f676f223a7b2274797065223a22737472696e67222c226465736372697074696f6e223a7b2275726c223a2268747470733a2f2f62616679626569636235797933366f63733479756c7068367a707837676773796567696e736a776e6674376d6c3763786f6a79777062736a7571342e697066732e6e667473746f726167652e6c696e6b222c2274797065223a22696d6167652f706e67227d7d2c2277616c6c6574223a7b2274797065223a22737472696e67222c226465736372697074696f6e223a22307838366262366436653138633565656163613165383363316536313632636334333364636337306134227d2c22537562735072696365223a7b2274797065223a226e756d626572222c226465736372697074696f6e223a22302e3035227d2c2274797065696d67223a7b2274797065223a22737472696e67222c226465736372697074696f6e223a2244616f227d2c22616c6c46696c6573223a5b7b2275726c223a2268747470733a2f2f62616679626569636235797933366f63733479756c7068367a707837676773796567696e736a776e6674376d6c3763786f6a79777062736a7571342e697066732e6e667473746f726167652e6c696e6b222c2274797065223a22696d6167652f706e67227d5d7d7d","id":3746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14815:709:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_574bfe9ea3e8bad3592af9915ce2e60d9e56a2d94a4cdd42c6c0e3c9e31f0e7e","typeString":"literal_string \"{\"title\":\"Asset Metadata\",\"type\":\"object\",\"properties\":{\"Title\":{\"type\":\"string\",\"description\":\"Lake Nona, Orlando US\"},\"Description\":{\"type\":\"string\",\"description\":\"\"},\"Start_Date\":{\"type\":\"string\",\"description\":\"2023-08-16T11:14\"},\"logo\":{\"type\":\"string\",\"description\":{\"url\":\"https://bafybeicb5yy36ocs4yulph6zpx7ggsyeginsjwnft7ml7cxojywpbsjuq4.ipfs.nftstorage.link\",\"type\":\"image/png\"}},\"wallet\":{\"type\":\"string\",\"description\":\"0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4\"},\"SubsPrice\":{\"type\":\"number\",\"description\":\"0.05\"},\"typeimg\":{\"type\":\"string\",\"description\":\"Dao\"},\"allFiles\":[{\"url\":\"https://bafybeicb5yy36ocs4yulph6zpx7ggsyeginsjwnft7ml7cxojywpbsjuq4.ipfs.nftstorage.link\",\"type\":\"image/png\"}]}}\""},"value":"{\"title\":\"Asset Metadata\",\"type\":\"object\",\"properties\":{\"Title\":{\"type\":\"string\",\"description\":\"Lake Nona, Orlando US\"},\"Description\":{\"type\":\"string\",\"description\":\"\"},\"Start_Date\":{\"type\":\"string\",\"description\":\"2023-08-16T11:14\"},\"logo\":{\"type\":\"string\",\"description\":{\"url\":\"https://bafybeicb5yy36ocs4yulph6zpx7ggsyeginsjwnft7ml7cxojywpbsjuq4.ipfs.nftstorage.link\",\"type\":\"image/png\"}},\"wallet\":{\"type\":\"string\",\"description\":\"0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4\"},\"SubsPrice\":{\"type\":\"number\",\"description\":\"0.05\"},\"typeimg\":{\"type\":\"string\",\"description\":\"Dao\"},\"allFiles\":[{\"url\":\"https://bafybeicb5yy36ocs4yulph6zpx7ggsyeginsjwnft7ml7cxojywpbsjuq4.ipfs.nftstorage.link\",\"type\":\"image/png\"}]}}"},{"hexValue":"3c626f64793e3c6469762069643d2264616f2d636f6e7461696e6572223e3c64697620636c6173733d2264616f2d636f6e7461696e657220666c6578206974656d732d63656e74657220666c65782d636f6c206761702d382072656c6174697665223e3c64697620636c6173733d2264616f2d7469746c65206761702d3820666c657820666c65782d636f6c2072656c6174697665223e3c6469763e3c68312069643d2264616f2d7469746c652220636c6173733d22746578742d6d6f6f6e2d333220666f6e742d626f6c64223e4c616b65204e6f6e612c204f726c616e646f2055533c2f68313e3c2f6469763e3c64697620636c6173733d22666c6578206761702d34206a7573746966792d6265747765656e2074616273223e3c64697620636c6173733d22666c6578223e3c6120687265663d222f3f713d416c6c2220636c6173733d22446f6e6174696f6e4261724c696e6b2074616220626c6f636b2070782d332070792d3220616374697665223e416c6c3c2f613e3c6120687265663d222f3f713d546f6461792220636c6173733d22446f6e6174696f6e4261724c696e6b2074616220626c6f636b2070782d332070792d32223e546f6461793c2f613e3c6120687265663d222f3f713d546869732532304d6f6e74682220636c6173733d22446f6e6174696f6e4261724c696e6b2074616220626c6f636b2070782d332070792d32223e54686973204d6f6e74683c2f613e3c2f6469763e3c627574746f6e20747970653d22627574746f6e222076616c75653d2243726561746520476f616c2220636c6173733d2270792d322070782d34206761702d3220746578742d6d6f6f6e2d313420726f756e6465642d6d6f6f6e2d692d736d207a2d3020666c6578206a7573746966792d63656e746572206974656d732d63656e74657220666f6e742d6d656469756d206e6f2d756e6465726c696e65206f766572666c6f772d68696464656e2073656c6563742d6e6f6e65206f75746c696e652d6e6f6e65207472616e736974696f6e206475726174696f6e2d323030206163746976653a7363616c652d393020666f6375732d76697369626c653a736861646f772d666f6375732062746e2d7072696d617279206372656174652d676f616c2d626c6f636b223e3c64697620636c6173733d226761702d32222069643d2269716f6b6a223e0a202020202020200a2020202020203c2f6469763e3c2f627574746f6e3e3c2f6469763e3c2f6469763e3c64697620636c6173733d2264616f2d64697669646572223e0a20203c2f6469763e3c64697620636c6173733d22666c657820666c65782d636f6c206761702d38223e3c696d672069643d2264616f2d696d61676522207372633d2268747470733a2f2f62616679626569636235797933366f63733479756c7068367a707837676773796567696e736a776e6674376d6c3763786f6a79777062736a7571342e697066732e6e667473746f726167652e6c696e6b222f3e3c2f6469763e3c6469762069643d22676f616c2d636f6e7461696e65722220636c6173733d22666c657820666c65782d636f6c206761702d38223e0a0a20203c2f6469763e3c2f6469763e3c2f6469763e3c2f626f64793e3c7374796c653e2a207b20626f782d73697a696e673a20626f726465722d626f783b207d20626f6479207b6d617267696e3a20303b7d2364616f2d7469746c657b77696474683a3738253b7d2369716f6b6a7b666c65782d646972656374696f6e3a726f772d726576657273653b646973706c61793a666c65783b7d2e70792d322e70782d342e6761702d322e746578742d6d6f6f6e2d31342e726f756e6465642d6d6f6f6e2d692d736d2e72656c61746976652e7a2d302e666c65782e6a7573746966792d63656e7465722e6974656d732d63656e7465722e666f6e742d6d656469756d2e6e6f2d756e6465726c696e652e6f766572666c6f772d68696464656e2e73656c6563742d6e6f6e652e6f75746c696e652d6e6f6e652e7472616e736974696f6e2e6475726174696f6e2d3230302e6163746976655c3a7363616c652d39302e666f6375732d76697369626c655c3a736861646f772d666f6375732e62746e2d7072696d6172792e6372656174652d676f616c2d626c6f636b2e7b706f736974696f6e3a72656c61746976653b72696768743a3070783b7d2e70792d322e70782d342e6761702d322e746578742d6d6f6f6e2d31342e726f756e6465642d6d6f6f6e2d692d736d2e7a2d302e666c65782e6a7573746966792d63656e7465722e6974656d732d63656e7465722e666f6e742d6d656469756d2e6e6f2d756e6465726c696e652e6f766572666c6f772d68696464656e2e73656c6563742d6e6f6e652e6f75746c696e652d6e6f6e652e7472616e736974696f6e2e6475726174696f6e2d3230302e6163746976655c3a7363616c652d39302e666f6375732d76697369626c655c3a736861646f772d666f6375732e62746e2d7072696d6172792e6372656174652d676f616c2d626c6f636b2e7b72696768743a313070783b706f736974696f6e3a6162736f6c7574653b7d3c2f7374796c653e","id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15539:1894:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cf4ebd489a2e5d32ba15ad5e68649828365653c81fd480ccbf94392b94ddb0a7","typeString":"literal_string hex\"3c626f64793e3c6469762069643d2264616f2d636f6e7461696e6572223e3c64697620636c6173733d2264616f2d636f6e7461696e657220666c6578206974656d732d63656e74657220666c65782d636f6c206761702d382072656c6174697665223e3c64697620636c6173733d2264616f2d7469746c65206761702d3820666c657820666c65782d636f6c2072656c6174697665223e3c6469763e3c68312069643d2264616f2d7469746c652220636c6173733d22746578742d6d6f6f6e2d333220666f6e742d626f6c64223e4c616b65204e6f6e612c204f726c616e646f2055533c2f68313e3c2f6469763e3c64697620636c6173733d22666c6578206761702d34206a7573746966792d6265747765656e2074616273223e3c64697620636c6173733d22666c6578223e3c6120687265663d222f3f713d416c6c2220636c6173733d22446f6e6174696f6e4261724c696e6b2074616220626c6f636b2070782d332070792d3220616374697665223e416c6c3c2f613e3c6120687265663d222f3f713d546f6461792220636c6173733d22446f6e6174696f6e4261724c696e6b2074616220626c6f636b2070782d332070792d32223e546f6461793c2f613e3c6120687265663d222f3f713d546869732532304d6f6e74682220636c6173733d22446f6e6174696f6e4261724c696e6b2074616220626c6f636b2070782d332070792d32223e54686973204d6f6e74683c2f613e3c2f6469763e3c627574746f6e20747970653d22627574746f6e222076616c75653d2243726561746520476f616c2220636c6173733d2270792d322070782d34206761702d3220746578742d6d6f6f6e2d313420726f756e6465642d6d6f6f6e2d692d736d207a2d3020666c6578206a7573746966792d63656e746572206974656d732d63656e74657220666f6e742d6d656469756d206e6f2d756e6465726c696e65206f766572666c6f772d68696464656e2073656c6563742d6e6f6e65206f75746c696e652d6e6f6e65207472616e736974696f6e206475726174696f6e2d323030206163746976653a7363616c652d393020666f6375732d76697369626c653a736861646f772d666f6375732062746e2d7072696d617279206372656174652d676f616c2d626c6f636b223e3c64697620636c6173733d226761702d32222069643d2269716f6b6a223e0a202020202020200a2020202020203c2f6469763e3c2f627574746f6e3e3c2f6469763e3c2f6469763e3c64697620636c6173733d2264616f2d64697669646572223e0a20203c2f6469763e3c64697620636c6173733d22666c657820666c65782d636f6c206761702d38223e3c696d672069643d2264616f2d696d61676522207372633d2268747470733a2f2f62616679626569636235797933366f63733479756c7068367a707837676773796567696e736a776e6674376d6c3763786f6a79777062736a7571342e697066732e6e667473746f726167652e6c696e6b222f3e3c2f6469763e3c6469762069643d22676f616c2d636f6e7461696e65722220636c6173733d22666c657820666c65782d636f6c206761702d38223e0a0a20203c2f6469763e3c2f6469763e3c2f6469763e3c2f626f64793e3c7374796c653e2a207b20626f782d73697a696e673a20626f726465722d626f783b207d20626f6479207b6d617267696e3a20303b7d2364616f2d7469746c657b77696474683a3738253b7d2369716f6b6a7b666c65782d646972656374696f6e3a726f772d726576657273653b646973706c61793a666c65783b7d2e70792d322e70782d342e6761702d322e746578742d6d6f6f6e2d31342e726f756e6465642d6d6f6f6e2d692d736d2e72656c61746976652e7a2d302e666c65782e6a7573746966792d63656e7465722e6974656d732d63656e7465722e666f6e742d6d656469756d2e6e6f2d756e6465726c696e652e6f766572666c6f772d68696464656e2e73656c6563742d6e6f6e652e6f75746c696e652d6e6f6e652e7472616e736974696f6e2e6475726174696f6e2d3230302e6163746976655c3a7363616c652d39302e666f6375732d76697369626c655c3a736861646f772d666f6375732e62746e2d7072696d6172792e6372656174652d676f616c2d626c6f636b2e7b706f736974696f6e3a72656c61746976653b72696768743a3070783b7d2e70792d322e70782d342e6761702d322e746578742d6d6f6f6e2d31342e726f756e6465642d6d6f6f6e2d692d736d2e7a2d302e666c65782e6a7573746966792d63656e7465722e6974656d732d63656e7465722e666f6e742d6d656469756d2e6e6f2d756e6465726c696e652e6f766572666c6f772d68696464656e2e73656c6563742d6e6f6e652e6f75746c696e652d6e6f6e652e7472616e736974696f6e2e6475726174696f6e2d3230302e6163746976655c3a7363616c652d39302e666f6375732d76697369626c655c3a736861646f772d666f6375732e62746e2d7072696d6172792e6372656174652d676f616c2d626c6f636b2e7b72696768743a313070783b706f736974696f6e3a6162736f6c7574653b7d3c2f7374796c653e\""},"value":"<body><div id=\"dao-container\"><div class=\"dao-container flex items-center flex-col gap-8 relative\"><div class=\"dao-title gap-8 flex flex-col relative\"><div><h1 id=\"dao-title\" class=\"text-moon-32 font-bold\">Lake Nona, Orlando US</h1></div><div class=\"flex gap-4 justify-between tabs\"><div class=\"flex\"><a href=\"/?q=All\" class=\"DonationBarLink tab block px-3 py-2 active\">All</a><a href=\"/?q=Today\" class=\"DonationBarLink tab block px-3 py-2\">Today</a><a href=\"/?q=This%20Month\" class=\"DonationBarLink tab block px-3 py-2\">This Month</a></div><button type=\"button\" value=\"Create Goal\" class=\"py-2 px-4 gap-2 text-moon-14 rounded-moon-i-sm z-0 flex justify-center items-center font-medium no-underline overflow-hidden select-none outline-none transition duration-200 active:scale-90 focus-visible:shadow-focus btn-primary create-goal-block\"><div class=\"gap-2\" id=\"iqokj\">\n       \n      </div></button></div></div><div class=\"dao-divider\">\n  </div><div class=\"flex flex-col gap-8\"><img id=\"dao-image\" src=\"https://bafybeicb5yy36ocs4yulph6zpx7ggsyeginsjwnft7ml7cxojywpbsjuq4.ipfs.nftstorage.link\"/></div><div id=\"goal-container\" class=\"flex flex-col gap-8\">\n\n  </div></div></div></body><style>* { box-sizing: border-box; } body {margin: 0;}#dao-title{width:78%;}#iqokj{flex-direction:row-reverse;display:flex;}.py-2.px-4.gap-2.text-moon-14.rounded-moon-i-sm.relative.z-0.flex.justify-center.items-center.font-medium.no-underline.overflow-hidden.select-none.outline-none.transition.duration-200.active\\:scale-90.focus-visible\\:shadow-focus.btn-primary.create-goal-block.{position:relative;right:0px;}.py-2.px-4.gap-2.text-moon-14.rounded-moon-i-sm.z-0.flex.justify-center.items-center.font-medium.no-underline.overflow-hidden.select-none.outline-none.transition.duration-200.active\\:scale-90.focus-visible\\:shadow-focus.btn-primary.create-goal-block.{right:10px;position:absolute;}</style>"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_325915512476b79c1f27260e69a73f28fca5ab7820fb633073044dd29ce05cca","typeString":"literal_string \"0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4\""},{"typeIdentifier":"t_stringliteral_574bfe9ea3e8bad3592af9915ce2e60d9e56a2d94a4cdd42c6c0e3c9e31f0e7e","typeString":"literal_string \"{\"title\":\"Asset Metadata\",\"type\":\"object\",\"properties\":{\"Title\":{\"type\":\"string\",\"description\":\"Lake Nona, Orlando US\"},\"Description\":{\"type\":\"string\",\"description\":\"\"},\"Start_Date\":{\"type\":\"string\",\"description\":\"2023-08-16T11:14\"},\"logo\":{\"type\":\"string\",\"description\":{\"url\":\"https://bafybeicb5yy36ocs4yulph6zpx7ggsyeginsjwnft7ml7cxojywpbsjuq4.ipfs.nftstorage.link\",\"type\":\"image/png\"}},\"wallet\":{\"type\":\"string\",\"description\":\"0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4\"},\"SubsPrice\":{\"type\":\"number\",\"description\":\"0.05\"},\"typeimg\":{\"type\":\"string\",\"description\":\"Dao\"},\"allFiles\":[{\"url\":\"https://bafybeicb5yy36ocs4yulph6zpx7ggsyeginsjwnft7ml7cxojywpbsjuq4.ipfs.nftstorage.link\",\"type\":\"image/png\"}]}}\""},{"typeIdentifier":"t_stringliteral_cf4ebd489a2e5d32ba15ad5e68649828365653c81fd480ccbf94392b94ddb0a7","typeString":"literal_string hex\"3c626f64793e3c6469762069643d2264616f2d636f6e7461696e6572223e3c64697620636c6173733d2264616f2d636f6e7461696e657220666c6578206974656d732d63656e74657220666c65782d636f6c206761702d382072656c6174697665223e3c64697620636c6173733d2264616f2d7469746c65206761702d3820666c657820666c65782d636f6c2072656c6174697665223e3c6469763e3c68312069643d2264616f2d7469746c652220636c6173733d22746578742d6d6f6f6e2d333220666f6e742d626f6c64223e4c616b65204e6f6e612c204f726c616e646f2055533c2f68313e3c2f6469763e3c64697620636c6173733d22666c6578206761702d34206a7573746966792d6265747765656e2074616273223e3c64697620636c6173733d22666c6578223e3c6120687265663d222f3f713d416c6c2220636c6173733d22446f6e6174696f6e4261724c696e6b2074616220626c6f636b2070782d332070792d3220616374697665223e416c6c3c2f613e3c6120687265663d222f3f713d546f6461792220636c6173733d22446f6e6174696f6e4261724c696e6b2074616220626c6f636b2070782d332070792d32223e546f6461793c2f613e3c6120687265663d222f3f713d546869732532304d6f6e74682220636c6173733d22446f6e6174696f6e4261724c696e6b2074616220626c6f636b2070782d332070792d32223e54686973204d6f6e74683c2f613e3c2f6469763e3c627574746f6e20747970653d22627574746f6e222076616c75653d2243726561746520476f616c2220636c6173733d2270792d322070782d34206761702d3220746578742d6d6f6f6e2d313420726f756e6465642d6d6f6f6e2d692d736d207a2d3020666c6578206a7573746966792d63656e746572206974656d732d63656e74657220666f6e742d6d656469756d206e6f2d756e6465726c696e65206f766572666c6f772d68696464656e2073656c6563742d6e6f6e65206f75746c696e652d6e6f6e65207472616e736974696f6e206475726174696f6e2d323030206163746976653a7363616c652d393020666f6375732d76697369626c653a736861646f772d666f6375732062746e2d7072696d617279206372656174652d676f616c2d626c6f636b223e3c64697620636c6173733d226761702d32222069643d2269716f6b6a223e0a202020202020200a2020202020203c2f6469763e3c2f627574746f6e3e3c2f6469763e3c2f6469763e3c64697620636c6173733d2264616f2d64697669646572223e0a20203c2f6469763e3c64697620636c6173733d22666c657820666c65782d636f6c206761702d38223e3c696d672069643d2264616f2d696d61676522207372633d2268747470733a2f2f62616679626569636235797933366f63733479756c7068367a707837676773796567696e736a776e6674376d6c3763786f6a79777062736a7571342e697066732e6e667473746f726167652e6c696e6b222f3e3c2f6469763e3c6469762069643d22676f616c2d636f6e7461696e65722220636c6173733d22666c657820666c65782d636f6c206761702d38223e0a0a20203c2f6469763e3c2f6469763e3c2f6469763e3c2f626f64793e3c7374796c653e2a207b20626f782d73697a696e673a20626f726465722d626f783b207d20626f6479207b6d617267696e3a20303b7d2364616f2d7469746c657b77696474683a3738253b7d2369716f6b6a7b666c65782d646972656374696f6e3a726f772d726576657273653b646973706c61793a666c65783b7d2e70792d322e70782d342e6761702d322e746578742d6d6f6f6e2d31342e726f756e6465642d6d6f6f6e2d692d736d2e72656c61746976652e7a2d302e666c65782e6a7573746966792d63656e7465722e6974656d732d63656e7465722e666f6e742d6d656469756d2e6e6f2d756e6465726c696e652e6f766572666c6f772d68696464656e2e73656c6563742d6e6f6e652e6f75746c696e652d6e6f6e652e7472616e736974696f6e2e6475726174696f6e2d3230302e6163746976655c3a7363616c652d39302e666f6375732d76697369626c655c3a736861646f772d666f6375732e62746e2d7072696d6172792e6372656174652d676f616c2d626c6f636b2e7b706f736974696f6e3a72656c61746976653b72696768743a3070783b7d2e70792d322e70782d342e6761702d322e746578742d6d6f6f6e2d31342e726f756e6465642d6d6f6f6e2d692d736d2e7a2d302e666c65782e6a7573746966792d63656e7465722e6974656d732d63656e7465722e666f6e742d6d656469756d2e6e6f2d756e6465726c696e652e6f766572666c6f772d68696464656e2e73656c6563742d6e6f6e652e6f75746c696e652d6e6f6e652e7472616e736974696f6e2e6475726174696f6e2d3230302e6163746976655c3a7363616c652d39302e666f6375732d76697369626c655c3a736861646f772d666f6375732e62746e2d7072696d6172792e6372656174652d676f616c2d626c6f636b2e7b72696768743a313070783b706f736974696f6e3a6162736f6c7574653b7d3c2f7374796c653e\""}],"id":3744,"name":"create_dao","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"14731:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (string memory,string memory,string memory) returns (uint256)"}},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14731:2713:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3749,"nodeType":"ExpressionStatement","src":"14731:2713:9"},{"expression":{"arguments":[{"hexValue":"7b227469746c65223a224173736574204d65746164617461222c2274797065223a226f626a656374222c2270726f70657274696573223a7b225469746c65223a7b2274797065223a22737472696e67222c226465736372697074696f6e223a2252656e657761626c6520656e65726779227d2c224465736372697074696f6e223a7b2274797065223a22737472696e67222c226465736372697074696f6e223a224f75722044414f206973207374617274696e672069742773206f776e2072656e657761626c6520656e6572677920636f6d70616e7920746861742064656c697665727320656e6572677920666f72207468652077686f6c6520636f6d6d756e697479227d2c22427564676574223a7b2274797065223a22737472696e67222c226465736372697074696f6e223a2224312c3030302c303030227d2c22456e645f44617465223a7b2274797065223a22737472696e67222c226465736372697074696f6e223a22323032332d30382d33315432323a3430227d2c2277616c6c6574223a7b2274797065223a22737472696e67222c226465736372697074696f6e223a22307838366262366436653138633565656163613165383363316536313632636334333364636337306134227d2c226c6f676f223a7b2274797065223a22737472696e67222c226465736372697074696f6e223a7b2275726c223a2268747470733a2f2f626166796265696335673478766a376d7972676b6236326c656e6c64376f72706c32687273706d7a6c7a6364627a70796f746333337471796770652e697066732e6e667473746f726167652e6c696e6b222c2274797065223a22696d6167652f6a706567227d7d2c22616c6c46696c6573223a5b7b2275726c223a2268747470733a2f2f626166796265696335673478766a376d7972676b6236326c656e6c64376f72706c32687273706d7a6c7a6364627a70796f746333337471796770652e697066732e6e667473746f726167652e6c696e6b222c2274797065223a22696d6167652f6a706567227d5d7d7d","id":3751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17467:758:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_fd0fd63fc5c81755f060cbbf3048bfd318232ba8b514614502bbe4a4ba10d9c8","typeString":"literal_string \"{\"title\":\"Asset Metadata\",\"type\":\"object\",\"properties\":{\"Title\":{\"type\":\"string\",\"description\":\"Renewable energy\"},\"Description\":{\"type\":\"string\",\"description\":\"Our DAO is starting it's own renewable energy company that delivers energy for the whole community\"},\"Budget\":{\"type\":\"string\",\"description\":\"$1,000,000\"},\"End_Date\":{\"type\":\"string\",\"description\":\"2023-08-31T22:40\"},\"wallet\":{\"type\":\"string\",\"description\":\"0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4\"},\"logo\":{\"type\":\"string\",\"description\":{\"url\":\"https://bafybeic5g4xvj7myrgkb62lenld7orpl2hrspmzlzcdbzpyotc33tqygpe.ipfs.nftstorage.link\",\"type\":\"image/jpeg\"}},\"allFiles\":[{\"url\":\"https://bafybeic5g4xvj7myrgkb62lenld7orpl2hrspmzlzcdbzpyotc33tqygpe.ipfs.nftstorage.link\",\"type\":\"image/jpeg\"}]}}\""},"value":"{\"title\":\"Asset Metadata\",\"type\":\"object\",\"properties\":{\"Title\":{\"type\":\"string\",\"description\":\"Renewable energy\"},\"Description\":{\"type\":\"string\",\"description\":\"Our DAO is starting it's own renewable energy company that delivers energy for the whole community\"},\"Budget\":{\"type\":\"string\",\"description\":\"$1,000,000\"},\"End_Date\":{\"type\":\"string\",\"description\":\"2023-08-31T22:40\"},\"wallet\":{\"type\":\"string\",\"description\":\"0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4\"},\"logo\":{\"type\":\"string\",\"description\":{\"url\":\"https://bafybeic5g4xvj7myrgkb62lenld7orpl2hrspmzlzcdbzpyotc33tqygpe.ipfs.nftstorage.link\",\"type\":\"image/jpeg\"}},\"allFiles\":[{\"url\":\"https://bafybeic5g4xvj7myrgkb62lenld7orpl2hrspmzlzcdbzpyotc33tqygpe.ipfs.nftstorage.link\",\"type\":\"image/jpeg\"}]}}"},{"hexValue":"30","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18227:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"307838366262366436653138633565656163613165383363316536313632636334333364636337306134","id":3753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18230:44:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_325915512476b79c1f27260e69a73f28fca5ab7820fb633073044dd29ce05cca","typeString":"literal_string \"0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4\""},"value":"0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fd0fd63fc5c81755f060cbbf3048bfd318232ba8b514614502bbe4a4ba10d9c8","typeString":"literal_string \"{\"title\":\"Asset Metadata\",\"type\":\"object\",\"properties\":{\"Title\":{\"type\":\"string\",\"description\":\"Renewable energy\"},\"Description\":{\"type\":\"string\",\"description\":\"Our DAO is starting it's own renewable energy company that delivers energy for the whole community\"},\"Budget\":{\"type\":\"string\",\"description\":\"$1,000,000\"},\"End_Date\":{\"type\":\"string\",\"description\":\"2023-08-31T22:40\"},\"wallet\":{\"type\":\"string\",\"description\":\"0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4\"},\"logo\":{\"type\":\"string\",\"description\":{\"url\":\"https://bafybeic5g4xvj7myrgkb62lenld7orpl2hrspmzlzcdbzpyotc33tqygpe.ipfs.nftstorage.link\",\"type\":\"image/jpeg\"}},\"allFiles\":[{\"url\":\"https://bafybeic5g4xvj7myrgkb62lenld7orpl2hrspmzlzcdbzpyotc33tqygpe.ipfs.nftstorage.link\",\"type\":\"image/jpeg\"}]}}\""},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_325915512476b79c1f27260e69a73f28fca5ab7820fb633073044dd29ce05cca","typeString":"literal_string \"0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4\""}],"id":3750,"name":"create_goal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"17455:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (string memory,uint256,string memory) returns (uint256)"}},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17455:820:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3755,"nodeType":"ExpressionStatement","src":"17455:820:9"},{"assignments":[3760],"declarations":[{"constant":false,"id":3760,"mutability":"mutable","name":"row","nameLocation":"18302:3:9","nodeType":"VariableDeclaration","scope":3769,"src":"18286:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3758,"name":"string","nodeType":"ElementaryTypeName","src":"18286:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3759,"nodeType":"ArrayTypeName","src":"18286:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":3761,"nodeType":"VariableDeclarationStatement","src":"18286:19:9"},{"expression":{"arguments":[{"hexValue":"7b227469746c65223a224173736574204d65746164617461222c2274797065223a226f626a656374222c2270726f70657274696573223a7b225469746c65223a7b2274797065223a22737472696e67222c226465736372697074696f6e223a22536f6c61722070616e656c73206f6e2074686520436f6e73657175656e636573204e6f6e6120636f6d6d756e6974792063656e74657220227d2c224465736372697074696f6e223a7b2274797065223a22737472696e67222c226465736372697074696f6e223a2257652063616e20696e735c6e227d2c225374727563747572654c656674223a7b2274797065223a22737472696e67222c226465736372697074696f6e223a5b22526570726573656e74617469766573204265726c696e222c22436f6d6d756e697479222c224368696c6472656e225d7d2c225374727563747572655269676874223a7b2274797065223a22737472696e67222c226465736372697074696f6e223a5b22323025222c22373025222c22313025225d7d2c22516f75746174696f6e223a7b226c696e6b223a2268747470733a2f2f75706c6f61646966792e6e65742f353237336433353064666430303164312f71756f746174696f6e5f436f6e73657175656e6365735f4e6f6e615f636f6d6d756e6974795f63656e7465722e706466222c227072697a65223a222434382c3037312e3535227d2c2277616c6c6574223a7b2274797065223a22737472696e67222c226465736372697074696f6e223a22307844363062433062303063314438613731384642366644654463343436366337413131383038363863227d2c226c6f676f223a7b2274797065223a22737472696e67222c226465736372697074696f6e223a7b2275726c223a2268747470733a2f2f626166796265696634666b367477696b6b63796f70676c687070646f376464336c3334626d367165646a65336d78667465633565376234686535342e697066732e6e667473746f726167652e6c696e6b222c2274797065223a22696d6167652f706e67227d7d2c22616c6c46696c6573223a5b7b2275726c223a2268747470733a2f2f626166796265696634666b367477696b6b63796f70676c687070646f376464336c3334626d367165646a65336d78667465633565376234686535342e697066732e6e667473746f726167652e6c696e6b222c2274797065223a22696d6167652f706e67227d5d7d7d","id":3763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18329:892:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_385ff1ca81892feda19465cc26412c55ba1f5f68770c7c680c232c5287e54ce7","typeString":"literal_string \"{\"title\":\"Asset Metadata\",\"type\":\"object\",\"properties\":{\"Title\":{\"type\":\"string\",\"description\":\"Solar panels on the Consequences Nona community center \"},\"Description\":{\"type\":\"string\",\"description\":\"We can ins\\n\"},\"StructureLeft\":{\"type\":\"string\",\"description\":[\"Representatives Berlin\",\"Community\",\"Children\"]},\"StructureRight\":{\"type\":\"string\",\"description\":[\"20%\",\"70%\",\"10%\"]},\"Qoutation\":{\"link\":\"https://uploadify.net/5273d350dfd001d1/quotation_Consequences_Nona_community_center.pdf\",\"prize\":\"$48,071.55\"},\"wallet\":{\"type\":\"string\",\"description\":\"0xD60bC0b00c1D8a718FB6fDeDc4466c7A1180868c\"},\"logo\":{\"type\":\"string\",\"description\":{\"url\":\"https://bafybeif4fk6twikkcyopglhppdo7dd3l34bm6qedje3mxftec5e7b4he54.ipfs.nftstorage.link\",\"type\":\"image/png\"}},\"allFiles\":[{\"url\":\"https://bafybeif4fk6twikkcyopglhppdo7dd3l34bm6qedje3mxftec5e7b4he54.ipfs.nftstorage.link\",\"type\":\"image/png\"}]}}\""},"value":"{\"title\":\"Asset Metadata\",\"type\":\"object\",\"properties\":{\"Title\":{\"type\":\"string\",\"description\":\"Solar panels on the Consequences Nona community center \"},\"Description\":{\"type\":\"string\",\"description\":\"We can ins\\n\"},\"StructureLeft\":{\"type\":\"string\",\"description\":[\"Representatives Berlin\",\"Community\",\"Children\"]},\"StructureRight\":{\"type\":\"string\",\"description\":[\"20%\",\"70%\",\"10%\"]},\"Qoutation\":{\"link\":\"https://uploadify.net/5273d350dfd001d1/quotation_Consequences_Nona_community_center.pdf\",\"prize\":\"$48,071.55\"},\"wallet\":{\"type\":\"string\",\"description\":\"0xD60bC0b00c1D8a718FB6fDeDc4466c7A1180868c\"},\"logo\":{\"type\":\"string\",\"description\":{\"url\":\"https://bafybeif4fk6twikkcyopglhppdo7dd3l34bm6qedje3mxftec5e7b4he54.ipfs.nftstorage.link\",\"type\":\"image/png\"}},\"allFiles\":[{\"url\":\"https://bafybeif4fk6twikkcyopglhppdo7dd3l34bm6qedje3mxftec5e7b4he54.ipfs.nftstorage.link\",\"type\":\"image/png\"}]}}"},{"hexValue":"30","id":3764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19223:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3765,"name":"row","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"19226:3:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},{"hexValue":"307838366262366436653138633565656163613165383363316536313632636334333364636337306134","id":3766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19231:44:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_325915512476b79c1f27260e69a73f28fca5ab7820fb633073044dd29ce05cca","typeString":"literal_string \"0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4\""},"value":"0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_385ff1ca81892feda19465cc26412c55ba1f5f68770c7c680c232c5287e54ce7","typeString":"literal_string \"{\"title\":\"Asset Metadata\",\"type\":\"object\",\"properties\":{\"Title\":{\"type\":\"string\",\"description\":\"Solar panels on the Consequences Nona community center \"},\"Description\":{\"type\":\"string\",\"description\":\"We can ins\\n\"},\"StructureLeft\":{\"type\":\"string\",\"description\":[\"Representatives Berlin\",\"Community\",\"Children\"]},\"StructureRight\":{\"type\":\"string\",\"description\":[\"20%\",\"70%\",\"10%\"]},\"Qoutation\":{\"link\":\"https://uploadify.net/5273d350dfd001d1/quotation_Consequences_Nona_community_center.pdf\",\"prize\":\"$48,071.55\"},\"wallet\":{\"type\":\"string\",\"description\":\"0xD60bC0b00c1D8a718FB6fDeDc4466c7A1180868c\"},\"logo\":{\"type\":\"string\",\"description\":{\"url\":\"https://bafybeif4fk6twikkcyopglhppdo7dd3l34bm6qedje3mxftec5e7b4he54.ipfs.nftstorage.link\",\"type\":\"image/png\"}},\"allFiles\":[{\"url\":\"https://bafybeif4fk6twikkcyopglhppdo7dd3l34bm6qedje3mxftec5e7b4he54.ipfs.nftstorage.link\",\"type\":\"image/png\"}]}}\""},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"},{"typeIdentifier":"t_stringliteral_325915512476b79c1f27260e69a73f28fca5ab7820fb633073044dd29ce05cca","typeString":"literal_string \"0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4\""}],"id":3762,"name":"create_ideas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"18316:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (string memory,uint256,string memory[] memory,string memory) returns (uint256)"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18316:960:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3768,"nodeType":"ExpressionStatement","src":"18316:960:9"}]},"functionSelector":"0c90f09d","id":3770,"implemented":true,"kind":"function","modifiers":[],"name":"addTempData","nameLocation":"14699:11:9","nodeType":"FunctionDefinition","parameters":{"id":3742,"nodeType":"ParameterList","parameters":[],"src":"14710:2:9"},"returnParameters":{"id":3743,"nodeType":"ParameterList","parameters":[],"src":"14720:0:9"},"scope":3771,"src":"14690:4594:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3772,"src":"170:19117:9","usedErrors":[]}],"src":"33:19256:9"},"id":9},"contracts/precompiles/Batch.sol":{"ast":{"absolutePath":"contracts/precompiles/Batch.sol","exportedSymbols":{"BATCH_ADDRESS":[3777],"BATCH_CONTRACT":[3784],"Batch":[3844]},"id":3845,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3773,"literals":["solidity",">=","0.8",".3"],"nodeType":"PragmaDirective","src":"41:24:10"},{"constant":true,"id":3777,"mutability":"constant","name":"BATCH_ADDRESS","nameLocation":"123:13:10","nodeType":"VariableDeclaration","scope":3845,"src":"106:75:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3775,"name":"address","nodeType":"ElementaryTypeName","src":"106:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030383038","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"139:42:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0000000000000000000000000000000000000808"},"visibility":"internal"},{"constant":true,"id":3784,"mutability":"constant","name":"BATCH_CONTRACT","nameLocation":"239:14:10","nodeType":"VariableDeclaration","scope":3845,"src":"224:52:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Batch_$3844","typeString":"contract Batch"},"typeName":{"id":3780,"nodeType":"UserDefinedTypeName","pathNode":{"id":3779,"name":"Batch","nameLocations":["224:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":3844,"src":"224:5:10"},"referencedDeclaration":3844,"src":"224:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_Batch_$3844","typeString":"contract Batch"}},"value":{"arguments":[{"id":3782,"name":"BATCH_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"262:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3781,"name":"Batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"256:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Batch_$3844_$","typeString":"type(contract Batch)"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"256:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Batch_$3844","typeString":"contract Batch"}},"visibility":"internal"},{"abstract":false,"baseContracts":[],"canonicalName":"Batch","contractDependencies":[],"contractKind":"interface","documentation":{"id":3785,"nodeType":"StructuredDocumentation","src":"279:269:10","text":"@author The Moonbeam Team\n @title Batch precompile\n @dev Allows to perform multiple calls throught one call to the precompile.\n Can be used by EOA to do multiple calls in a single transaction.\n @custom:address 0x0000000000000000000000000000000000000808"},"fullyImplemented":false,"id":3844,"linearizedBaseContracts":[3844],"name":"Batch","nameLocation":"558:5:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3786,"nodeType":"StructuredDocumentation","src":"570:803:10","text":"@dev Batch multiple calls into a single transaction.\n All calls are performed from the address calling this precompile.\n In case of one subcall reverting following subcalls will still be attempted.\n @param to List of addresses to call.\n @param value List of values for each subcall. If array is shorter than \"to\" then additional\n calls will be performed with a value of 0.\n @param callData Call data for each `to` address. If array is shorter than \"to\" then\n additional calls will be performed with an empty call data.\n @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\n If array is shorter than \"to\" then the remaining gas available will be used.\n @custom:selector 79df4b9c"},"functionSelector":"79df4b9c","id":3801,"implemented":false,"kind":"function","modifiers":[],"name":"batchSome","nameLocation":"1387:9:10","nodeType":"FunctionDefinition","parameters":{"id":3799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3789,"mutability":"mutable","name":"to","nameLocation":"1423:2:10","nodeType":"VariableDeclaration","scope":3801,"src":"1406:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3787,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3788,"nodeType":"ArrayTypeName","src":"1406:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3792,"mutability":"mutable","name":"value","nameLocation":"1452:5:10","nodeType":"VariableDeclaration","scope":3801,"src":"1435:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"1435:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3791,"nodeType":"ArrayTypeName","src":"1435:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3795,"mutability":"mutable","name":"callData","nameLocation":"1482:8:10","nodeType":"VariableDeclaration","scope":3801,"src":"1467:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3793,"name":"bytes","nodeType":"ElementaryTypeName","src":"1467:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3794,"nodeType":"ArrayTypeName","src":"1467:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":3798,"mutability":"mutable","name":"gasLimit","nameLocation":"1516:8:10","nodeType":"VariableDeclaration","scope":3801,"src":"1500:24:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":3796,"name":"uint64","nodeType":"ElementaryTypeName","src":"1500:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3797,"nodeType":"ArrayTypeName","src":"1500:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"1396:134:10"},"returnParameters":{"id":3800,"nodeType":"ParameterList","parameters":[],"src":"1539:0:10"},"scope":3844,"src":"1378:162:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3802,"nodeType":"StructuredDocumentation","src":"1546:888:10","text":"@dev Batch multiple calls into a single transaction.\n All calls are performed from the address calling this precompile.\n In case of one subcall reverting, no more subcalls will be executed but\n the batch transaction will succeed. Use batchAll to revert on any subcall revert.\n @param to List of addresses to call.\n @param value List of values for each subcall. If array is shorter than \"to\" then additional\n calls will be performed with a value of 0.\n @param callData Call data for each `to` address. If array is shorter than \"to\" then\n additional calls will be performed with an empty call data.\n @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\n If array is shorter than \"to\" then the remaining gas available will be used.\n @custom:selector cf0491c7"},"functionSelector":"cf0491c7","id":3817,"implemented":false,"kind":"function","modifiers":[],"name":"batchSomeUntilFailure","nameLocation":"2448:21:10","nodeType":"FunctionDefinition","parameters":{"id":3815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"to","nameLocation":"2496:2:10","nodeType":"VariableDeclaration","scope":3817,"src":"2479:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3803,"name":"address","nodeType":"ElementaryTypeName","src":"2479:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3804,"nodeType":"ArrayTypeName","src":"2479:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3808,"mutability":"mutable","name":"value","nameLocation":"2525:5:10","nodeType":"VariableDeclaration","scope":3817,"src":"2508:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3806,"name":"uint256","nodeType":"ElementaryTypeName","src":"2508:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3807,"nodeType":"ArrayTypeName","src":"2508:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3811,"mutability":"mutable","name":"callData","nameLocation":"2555:8:10","nodeType":"VariableDeclaration","scope":3817,"src":"2540:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3809,"name":"bytes","nodeType":"ElementaryTypeName","src":"2540:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3810,"nodeType":"ArrayTypeName","src":"2540:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":3814,"mutability":"mutable","name":"gasLimit","nameLocation":"2589:8:10","nodeType":"VariableDeclaration","scope":3817,"src":"2573:24:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":3812,"name":"uint64","nodeType":"ElementaryTypeName","src":"2573:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3813,"nodeType":"ArrayTypeName","src":"2573:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"2469:134:10"},"returnParameters":{"id":3816,"nodeType":"ParameterList","parameters":[],"src":"2612:0:10"},"scope":3844,"src":"2439:174:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3818,"nodeType":"StructuredDocumentation","src":"2619:790:10","text":"@dev Batch multiple calls into a single transaction.\n All calls are performed from the address calling this precompile.\n In case of one subcall reverting, the entire batch will revert.\n @param to List of addresses to call.\n @param value List of values for each subcall. If array is shorter than \"to\" then additional\n calls will be performed with a value of 0.\n @param callData Call data for each `to` address. If array is shorter than \"to\" then\n additional calls will be performed with an empty call data.\n @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\n If array is shorter than \"to\" then the remaining gas available will be used.\n @custom:selector 96e292b8"},"functionSelector":"96e292b8","id":3833,"implemented":false,"kind":"function","modifiers":[],"name":"batchAll","nameLocation":"3423:8:10","nodeType":"FunctionDefinition","parameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"to","nameLocation":"3458:2:10","nodeType":"VariableDeclaration","scope":3833,"src":"3441:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3819,"name":"address","nodeType":"ElementaryTypeName","src":"3441:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3820,"nodeType":"ArrayTypeName","src":"3441:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3824,"mutability":"mutable","name":"value","nameLocation":"3487:5:10","nodeType":"VariableDeclaration","scope":3833,"src":"3470:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3822,"name":"uint256","nodeType":"ElementaryTypeName","src":"3470:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3823,"nodeType":"ArrayTypeName","src":"3470:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3827,"mutability":"mutable","name":"callData","nameLocation":"3517:8:10","nodeType":"VariableDeclaration","scope":3833,"src":"3502:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3825,"name":"bytes","nodeType":"ElementaryTypeName","src":"3502:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3826,"nodeType":"ArrayTypeName","src":"3502:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":3830,"mutability":"mutable","name":"gasLimit","nameLocation":"3551:8:10","nodeType":"VariableDeclaration","scope":3833,"src":"3535:24:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":3828,"name":"uint64","nodeType":"ElementaryTypeName","src":"3535:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3829,"nodeType":"ArrayTypeName","src":"3535:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"3431:134:10"},"returnParameters":{"id":3832,"nodeType":"ParameterList","parameters":[],"src":"3574:0:10"},"scope":3844,"src":"3414:161:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":3834,"nodeType":"StructuredDocumentation","src":"3581:36:10","text":"Emitted when a subcall succeeds."},"eventSelector":"bf855484633929c3d6688eb3caf8eff910fb4bef030a8d7dbc9390d26759714d","id":3838,"name":"SubcallSucceeded","nameLocation":"3628:16:10","nodeType":"EventDefinition","parameters":{"id":3837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3836,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"3653:5:10","nodeType":"VariableDeclaration","scope":3838,"src":"3645:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3835,"name":"uint256","nodeType":"ElementaryTypeName","src":"3645:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3644:15:10"},"src":"3622:38:10"},{"anonymous":false,"documentation":{"id":3839,"nodeType":"StructuredDocumentation","src":"3666:33:10","text":"Emitted when a subcall fails."},"eventSelector":"dbc5d06f4f877f959b1ff12d2161cdd693fa8e442ee53f1790b2804b24881f05","id":3843,"name":"SubcallFailed","nameLocation":"3710:13:10","nodeType":"EventDefinition","parameters":{"id":3842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3841,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"3732:5:10","nodeType":"VariableDeclaration","scope":3843,"src":"3724:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3840,"name":"uint256","nodeType":"ElementaryTypeName","src":"3724:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3723:15:10"},"src":"3704:35:10"}],"scope":3845,"src":"548:3193:10","usedErrors":[]}],"src":"41:3700:10"},"id":10},"contracts/precompiles/InterchainAccountRouter.sol":{"ast":{"absolutePath":"contracts/precompiles/InterchainAccountRouter.sol","exportedSymbols":{"CallLib":[4261],"IInterchainAccountRouter":[3871]},"id":3872,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3846,"literals":["solidity",">=","0.6",".11"],"nodeType":"PragmaDirective","src":"46:25:11"},{"absolutePath":"contracts/precompiles/libs/Call.sol","file":"./libs/Call.sol","id":3848,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3872,"sourceUnit":4262,"src":"73:40:11","symbolAliases":[{"foreign":{"id":3847,"name":"CallLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"81:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IInterchainAccountRouter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3871,"linearizedBaseContracts":[3871],"name":"IInterchainAccountRouter","nameLocation":"125:24:11","nodeType":"ContractDefinition","nodes":[{"functionSelector":"1ddce514","id":3861,"implemented":false,"kind":"function","modifiers":[],"name":"callRemote","nameLocation":"165:10:11","nodeType":"FunctionDefinition","parameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"mutability":"mutable","name":"_destinationDomain","nameLocation":"192:18:11","nodeType":"VariableDeclaration","scope":3861,"src":"185:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3849,"name":"uint32","nodeType":"ElementaryTypeName","src":"185:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3852,"mutability":"mutable","name":"to","nameLocation":"229:2:11","nodeType":"VariableDeclaration","scope":3861,"src":"221:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3851,"name":"address","nodeType":"ElementaryTypeName","src":"221:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3854,"mutability":"mutable","name":"value","nameLocation":"249:5:11","nodeType":"VariableDeclaration","scope":3861,"src":"241:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3853,"name":"uint256","nodeType":"ElementaryTypeName","src":"241:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3856,"mutability":"mutable","name":"data","nameLocation":"277:4:11","nodeType":"VariableDeclaration","scope":3861,"src":"264:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3855,"name":"bytes","nodeType":"ElementaryTypeName","src":"264:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"175:112:11"},"returnParameters":{"id":3860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3861,"src":"306:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"306:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"305:9:11"},"scope":3871,"src":"156:159:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0e258285","id":3870,"implemented":false,"kind":"function","modifiers":[],"name":"getRemoteInterchainAccount","nameLocation":"330:26:11","nodeType":"FunctionDefinition","parameters":{"id":3866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3863,"mutability":"mutable","name":"_destination","nameLocation":"364:12:11","nodeType":"VariableDeclaration","scope":3870,"src":"357:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3862,"name":"uint32","nodeType":"ElementaryTypeName","src":"357:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3865,"mutability":"mutable","name":"_owner","nameLocation":"386:6:11","nodeType":"VariableDeclaration","scope":3870,"src":"378:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3864,"name":"address","nodeType":"ElementaryTypeName","src":"378:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"356:37:11"},"returnParameters":{"id":3869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3870,"src":"441:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3867,"name":"address","nodeType":"ElementaryTypeName","src":"441:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"440:9:11"},"scope":3871,"src":"321:129:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3872,"src":"115:337:11","usedErrors":[]}],"src":"46:407:11"},"id":11},"contracts/precompiles/InterchainGasPaymaster.sol":{"ast":{"absolutePath":"contracts/precompiles/InterchainGasPaymaster.sol","exportedSymbols":{"IInterchainGasPaymaster":[3885]},"id":3886,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3873,"literals":["solidity",">=","0.6",".11"],"nodeType":"PragmaDirective","src":"46:25:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IInterchainGasPaymaster","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3885,"linearizedBaseContracts":[3885],"name":"IInterchainGasPaymaster","nameLocation":"83:23:12","nodeType":"ContractDefinition","nodes":[{"functionSelector":"11bf2c18","id":3884,"implemented":false,"kind":"function","modifiers":[],"name":"payForGas","nameLocation":"122:9:12","nodeType":"FunctionDefinition","parameters":{"id":3882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3875,"mutability":"mutable","name":"_messageId","nameLocation":"149:10:12","nodeType":"VariableDeclaration","scope":3884,"src":"141:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"141:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3877,"mutability":"mutable","name":"_destinationDomain","nameLocation":"177:18:12","nodeType":"VariableDeclaration","scope":3884,"src":"170:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3876,"name":"uint32","nodeType":"ElementaryTypeName","src":"170:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3879,"mutability":"mutable","name":"_gasAmount","nameLocation":"213:10:12","nodeType":"VariableDeclaration","scope":3884,"src":"205:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"205:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3881,"mutability":"mutable","name":"_refundAddress","nameLocation":"241:14:12","nodeType":"VariableDeclaration","scope":3884,"src":"233:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3880,"name":"address","nodeType":"ElementaryTypeName","src":"233:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"131:130:12"},"returnParameters":{"id":3883,"nodeType":"ParameterList","parameters":[],"src":"278:0:12"},"scope":3885,"src":"113:166:12","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":3886,"src":"73:208:12","usedErrors":[]}],"src":"46:236:12"},"id":12},"contracts/precompiles/PriceFeed.sol":{"ast":{"absolutePath":"contracts/precompiles/PriceFeed.sol","exportedSymbols":{"AggregatorV3Interface":[3936]},"id":3937,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3887,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"41:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"AggregatorV3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3936,"linearizedBaseContracts":[3936],"name":"AggregatorV3Interface","nameLocation":"76:21:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3888,"nodeType":"StructuredDocumentation","src":"104:76:13","text":" Returns the decimals to offset on the getLatestPrice call"},"functionSelector":"313ce567","id":3893,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"194:8:13","nodeType":"FunctionDefinition","parameters":{"id":3889,"nodeType":"ParameterList","parameters":[],"src":"202:2:13"},"returnParameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3893,"src":"228:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3890,"name":"uint8","nodeType":"ElementaryTypeName","src":"228:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"227:7:13"},"scope":3936,"src":"185:50:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3894,"nodeType":"StructuredDocumentation","src":"241:82:13","text":" Returns the description of the underlying price feed aggregator"},"functionSelector":"7284e416","id":3899,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"337:11:13","nodeType":"FunctionDefinition","parameters":{"id":3895,"nodeType":"ParameterList","parameters":[],"src":"348:2:13"},"returnParameters":{"id":3898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3899,"src":"374:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3896,"name":"string","nodeType":"ElementaryTypeName","src":"374:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"373:15:13"},"scope":3936,"src":"328:61:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3900,"nodeType":"StructuredDocumentation","src":"395:101:13","text":" Returns the version number representing the type of aggregator the proxy points to"},"functionSelector":"54fd4d50","id":3905,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"510:7:13","nodeType":"FunctionDefinition","parameters":{"id":3901,"nodeType":"ParameterList","parameters":[],"src":"517:2:13"},"returnParameters":{"id":3904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3905,"src":"543:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3902,"name":"uint256","nodeType":"ElementaryTypeName","src":"543:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"542:9:13"},"scope":3936,"src":"501:51:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3906,"nodeType":"StructuredDocumentation","src":"558:60:13","text":" Returns price data about a specific round"},"functionSelector":"9a6fc8f5","id":3921,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"632:12:13","nodeType":"FunctionDefinition","parameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"_roundId","nameLocation":"652:8:13","nodeType":"VariableDeclaration","scope":3921,"src":"645:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3907,"name":"uint80","nodeType":"ElementaryTypeName","src":"645:6:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"644:17:13"},"returnParameters":{"id":3920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3911,"mutability":"mutable","name":"roundId","nameLocation":"692:7:13","nodeType":"VariableDeclaration","scope":3921,"src":"685:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3910,"name":"uint80","nodeType":"ElementaryTypeName","src":"685:6:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":3913,"mutability":"mutable","name":"answer","nameLocation":"708:6:13","nodeType":"VariableDeclaration","scope":3921,"src":"701:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3912,"name":"int256","nodeType":"ElementaryTypeName","src":"701:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3915,"mutability":"mutable","name":"startedAt","nameLocation":"724:9:13","nodeType":"VariableDeclaration","scope":3921,"src":"716:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3914,"name":"uint256","nodeType":"ElementaryTypeName","src":"716:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3917,"mutability":"mutable","name":"updatedAt","nameLocation":"743:9:13","nodeType":"VariableDeclaration","scope":3921,"src":"735:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3916,"name":"uint256","nodeType":"ElementaryTypeName","src":"735:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3919,"mutability":"mutable","name":"answeredInRound","nameLocation":"761:15:13","nodeType":"VariableDeclaration","scope":3921,"src":"754:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3918,"name":"uint80","nodeType":"ElementaryTypeName","src":"754:6:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"684:93:13"},"scope":3936,"src":"623:155:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3922,"nodeType":"StructuredDocumentation","src":"784:59:13","text":" Returns price data from the latest round"},"functionSelector":"feaf968c","id":3935,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"857:15:13","nodeType":"FunctionDefinition","parameters":{"id":3923,"nodeType":"ParameterList","parameters":[],"src":"872:2:13"},"returnParameters":{"id":3934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3925,"mutability":"mutable","name":"roundId","nameLocation":"905:7:13","nodeType":"VariableDeclaration","scope":3935,"src":"898:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3924,"name":"uint80","nodeType":"ElementaryTypeName","src":"898:6:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":3927,"mutability":"mutable","name":"answer","nameLocation":"921:6:13","nodeType":"VariableDeclaration","scope":3935,"src":"914:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3926,"name":"int256","nodeType":"ElementaryTypeName","src":"914:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3929,"mutability":"mutable","name":"startedAt","nameLocation":"937:9:13","nodeType":"VariableDeclaration","scope":3935,"src":"929:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3928,"name":"uint256","nodeType":"ElementaryTypeName","src":"929:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3931,"mutability":"mutable","name":"updatedAt","nameLocation":"956:9:13","nodeType":"VariableDeclaration","scope":3935,"src":"948:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3930,"name":"uint256","nodeType":"ElementaryTypeName","src":"948:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3933,"mutability":"mutable","name":"answeredInRound","nameLocation":"974:15:13","nodeType":"VariableDeclaration","scope":3935,"src":"967:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3932,"name":"uint80","nodeType":"ElementaryTypeName","src":"967:6:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"897:93:13"},"scope":3936,"src":"848:143:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3937,"src":"66:927:13","usedErrors":[]}],"src":"41:953:13"},"id":13},"contracts/precompiles/libs/Call.sol":{"ast":{"absolutePath":"contracts/precompiles/libs/Call.sol","exportedSymbols":{"Address":[1019],"CallLib":[4261],"TypeCasts":[4302]},"id":4262,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3938,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"39:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":3940,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4262,"sourceUnit":1020,"src":"65:66:14","symbolAliases":[{"foreign":{"id":3939,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"73:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/precompiles/libs/TypeCasts.sol","file":"./TypeCasts.sol","id":3942,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4262,"sourceUnit":4303,"src":"133:42:14","symbolAliases":[{"foreign":{"id":3941,"name":"TypeCasts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"141:9:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"CallLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":4261,"linearizedBaseContracts":[4261],"name":"CallLib","nameLocation":"185:7:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CallLib.StaticCall","id":3947,"members":[{"constant":false,"id":3944,"mutability":"mutable","name":"to","nameLocation":"273:2:14","nodeType":"VariableDeclaration","scope":3947,"src":"265:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3943,"name":"bytes32","nodeType":"ElementaryTypeName","src":"265:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3946,"mutability":"mutable","name":"data","nameLocation":"291:4:14","nodeType":"VariableDeclaration","scope":3947,"src":"285:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3945,"name":"bytes","nodeType":"ElementaryTypeName","src":"285:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"StaticCall","nameLocation":"206:10:14","nodeType":"StructDefinition","scope":4261,"src":"199:103:14","visibility":"public"},{"canonicalName":"CallLib.Call","id":3954,"members":[{"constant":false,"id":3949,"mutability":"mutable","name":"to","nameLocation":"376:2:14","nodeType":"VariableDeclaration","scope":3954,"src":"368:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3951,"mutability":"mutable","name":"value","nameLocation":"396:5:14","nodeType":"VariableDeclaration","scope":3954,"src":"388:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3950,"name":"uint256","nodeType":"ElementaryTypeName","src":"388:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3953,"mutability":"mutable","name":"data","nameLocation":"417:4:14","nodeType":"VariableDeclaration","scope":3954,"src":"411:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3952,"name":"bytes","nodeType":"ElementaryTypeName","src":"411:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Call","nameLocation":"315:4:14","nodeType":"StructDefinition","scope":4261,"src":"308:120:14","visibility":"public"},{"canonicalName":"CallLib.StaticCallWithCallback","id":3960,"members":[{"constant":false,"id":3957,"mutability":"mutable","name":"_call","nameLocation":"485:5:14","nodeType":"VariableDeclaration","scope":3960,"src":"474:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$3947_storage_ptr","typeString":"struct CallLib.StaticCall"},"typeName":{"id":3956,"nodeType":"UserDefinedTypeName","pathNode":{"id":3955,"name":"StaticCall","nameLocations":["474:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3947,"src":"474:10:14"},"referencedDeclaration":3947,"src":"474:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$3947_storage_ptr","typeString":"struct CallLib.StaticCall"}},"visibility":"internal"},{"constant":false,"id":3959,"mutability":"mutable","name":"callback","nameLocation":"506:8:14","nodeType":"VariableDeclaration","scope":3960,"src":"500:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3958,"name":"bytes","nodeType":"ElementaryTypeName","src":"500:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"StaticCallWithCallback","nameLocation":"441:22:14","nodeType":"StructDefinition","scope":4261,"src":"434:87:14","visibility":"public"},{"body":{"id":3981,"nodeType":"Block","src":"623:190:14","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3972,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"726:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$3954_memory_ptr","typeString":"struct CallLib.Call memory"}},"id":3973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"732:2:14","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":3949,"src":"726:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3970,"name":"TypeCasts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"699:9:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TypeCasts_$4302_$","typeString":"type(library TypeCasts)"}},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"709:16:14","memberName":"bytes32ToAddress","nodeType":"MemberAccess","referencedDeclaration":4301,"src":"699:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) pure returns (address)"}},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"699:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3975,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"753:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$3954_memory_ptr","typeString":"struct CallLib.Call memory"}},"id":3976,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"759:4:14","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":3953,"src":"753:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":3977,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"781:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$3954_memory_ptr","typeString":"struct CallLib.Call memory"}},"id":3978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"787:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3951,"src":"781:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3968,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"652:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1019_$","typeString":"type(library Address)"}},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"660:21:14","memberName":"functionCallWithValue","nodeType":"MemberAccess","referencedDeclaration":799,"src":"652:29:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"652:154:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3967,"id":3980,"nodeType":"Return","src":"633:173:14"}]},"id":3982,"implemented":true,"kind":"function","modifiers":[],"name":"call","nameLocation":"536:4:14","nodeType":"FunctionDefinition","parameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"_call","nameLocation":"553:5:14","nodeType":"VariableDeclaration","scope":3982,"src":"541:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$3954_memory_ptr","typeString":"struct CallLib.Call"},"typeName":{"id":3962,"nodeType":"UserDefinedTypeName","pathNode":{"id":3961,"name":"Call","nameLocations":["541:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":3954,"src":"541:4:14"},"referencedDeclaration":3954,"src":"541:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$3954_storage_ptr","typeString":"struct CallLib.Call"}},"visibility":"internal"}],"src":"540:19:14"},"returnParameters":{"id":3967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3966,"mutability":"mutable","name":"returnData","nameLocation":"607:10:14","nodeType":"VariableDeclaration","scope":3982,"src":"594:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3965,"name":"bytes","nodeType":"ElementaryTypeName","src":"594:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"593:25:14"},"scope":4261,"src":"527:286:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4001,"nodeType":"Block","src":"928:158:14","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3994,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"1028:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$3947_memory_ptr","typeString":"struct CallLib.StaticCall memory"}},"id":3995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1034:2:14","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":3944,"src":"1028:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3992,"name":"TypeCasts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"1001:9:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TypeCasts_$4302_$","typeString":"type(library TypeCasts)"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1011:16:14","memberName":"bytes32ToAddress","nodeType":"MemberAccess","referencedDeclaration":4301,"src":"1001:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) pure returns (address)"}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1001:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3997,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"1055:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$3947_memory_ptr","typeString":"struct CallLib.StaticCall memory"}},"id":3998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1061:4:14","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":3946,"src":"1055:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3990,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"957:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1019_$","typeString":"type(library Address)"}},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"965:18:14","memberName":"functionStaticCall","nodeType":"MemberAccess","referencedDeclaration":860,"src":"957:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) view returns (bytes memory)"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"957:122:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3989,"id":4000,"nodeType":"Return","src":"938:141:14"}]},"id":4002,"implemented":true,"kind":"function","modifiers":[],"name":"staticcall","nameLocation":"828:10:14","nodeType":"FunctionDefinition","parameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3985,"mutability":"mutable","name":"_call","nameLocation":"857:5:14","nodeType":"VariableDeclaration","scope":4002,"src":"839:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$3947_memory_ptr","typeString":"struct CallLib.StaticCall"},"typeName":{"id":3984,"nodeType":"UserDefinedTypeName","pathNode":{"id":3983,"name":"StaticCall","nameLocations":["839:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3947,"src":"839:10:14"},"referencedDeclaration":3947,"src":"839:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$3947_storage_ptr","typeString":"struct CallLib.StaticCall"}},"visibility":"internal"}],"src":"838:25:14"},"returnParameters":{"id":3989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4002,"src":"910:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3987,"name":"bytes","nodeType":"ElementaryTypeName","src":"910:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"909:14:14"},"scope":4261,"src":"819:267:14","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4021,"nodeType":"Block","src":"1223:77:14","statements":[{"expression":{"arguments":[{"expression":{"id":4013,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"1253:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$3960_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback memory"}},"id":4014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1259:8:14","memberName":"callback","nodeType":"MemberAccess","referencedDeclaration":3959,"src":"1253:14:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"expression":{"id":4016,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"1280:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$3960_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback memory"}},"id":4017,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1286:5:14","memberName":"_call","nodeType":"MemberAccess","referencedDeclaration":3957,"src":"1280:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$3947_memory_ptr","typeString":"struct CallLib.StaticCall memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_StaticCall_$3947_memory_ptr","typeString":"struct CallLib.StaticCall memory"}],"id":4015,"name":"staticcall","nodeType":"Identifier","overloadedDeclarations":[4002,4022],"referencedDeclaration":4002,"src":"1269:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_StaticCall_$3947_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct CallLib.StaticCall memory) view returns (bytes memory)"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1269:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1240:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4010,"name":"bytes","nodeType":"ElementaryTypeName","src":"1240:5:14","typeDescriptions":{}}},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1246:6:14","memberName":"concat","nodeType":"MemberAccess","src":"1240:12:14","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1240:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4009,"id":4020,"nodeType":"Return","src":"1233:60:14"}]},"id":4022,"implemented":true,"kind":"function","modifiers":[],"name":"staticcall","nameLocation":"1101:10:14","nodeType":"FunctionDefinition","parameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"_call","nameLocation":"1142:5:14","nodeType":"VariableDeclaration","scope":4022,"src":"1112:35:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$3960_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback"},"typeName":{"id":4004,"nodeType":"UserDefinedTypeName","pathNode":{"id":4003,"name":"StaticCallWithCallback","nameLocations":["1112:22:14"],"nodeType":"IdentifierPath","referencedDeclaration":3960,"src":"1112:22:14"},"referencedDeclaration":3960,"src":"1112:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$3960_storage_ptr","typeString":"struct CallLib.StaticCallWithCallback"}},"visibility":"internal"}],"src":"1111:37:14"},"returnParameters":{"id":4009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4008,"mutability":"mutable","name":"callback","nameLocation":"1209:8:14","nodeType":"VariableDeclaration","scope":4022,"src":"1196:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4007,"name":"bytes","nodeType":"ElementaryTypeName","src":"1196:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1195:23:14"},"scope":4261,"src":"1092:208:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4053,"nodeType":"Block","src":"1355:189:14","statements":[{"assignments":[4030],"declarations":[{"constant":false,"id":4030,"mutability":"mutable","name":"i","nameLocation":"1373:1:14","nodeType":"VariableDeclaration","scope":4053,"src":"1365:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4029,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4032,"initialValue":{"hexValue":"30","id":4031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1377:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1365:13:14"},{"assignments":[4034],"declarations":[{"constant":false,"id":4034,"mutability":"mutable","name":"len","nameLocation":"1396:3:14","nodeType":"VariableDeclaration","scope":4053,"src":"1388:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1388:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4037,"initialValue":{"expression":{"id":4035,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"1402:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$3954_memory_ptr_$dyn_memory_ptr","typeString":"struct CallLib.Call memory[] memory"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1408:6:14","memberName":"length","nodeType":"MemberAccess","src":"1402:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1388:26:14"},{"body":{"id":4051,"nodeType":"Block","src":"1440:98:14","statements":[{"expression":{"arguments":[{"baseExpression":{"id":4042,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"1459:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$3954_memory_ptr_$dyn_memory_ptr","typeString":"struct CallLib.Call memory[] memory"}},"id":4044,"indexExpression":{"id":4043,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"1465:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1459:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$3954_memory_ptr","typeString":"struct CallLib.Call memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Call_$3954_memory_ptr","typeString":"struct CallLib.Call memory"}],"id":4041,"name":"call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"1454:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Call_$3954_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct CallLib.Call memory) returns (bytes memory)"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1454:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4046,"nodeType":"ExpressionStatement","src":"1454:14:14"},{"id":4050,"nodeType":"UncheckedBlock","src":"1482:46:14","statements":[{"expression":{"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1510:3:14","subExpression":{"id":4047,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"1512:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4049,"nodeType":"ExpressionStatement","src":"1510:3:14"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4038,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"1431:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4039,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"1435:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1431:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4052,"nodeType":"WhileStatement","src":"1424:114:14"}]},"id":4054,"implemented":true,"kind":"function","modifiers":[],"name":"multicall","nameLocation":"1315:9:14","nodeType":"FunctionDefinition","parameters":{"id":4027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4026,"mutability":"mutable","name":"calls","nameLocation":"1339:5:14","nodeType":"VariableDeclaration","scope":4054,"src":"1325:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$3954_memory_ptr_$dyn_memory_ptr","typeString":"struct CallLib.Call[]"},"typeName":{"baseType":{"id":4024,"nodeType":"UserDefinedTypeName","pathNode":{"id":4023,"name":"Call","nameLocations":["1325:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":3954,"src":"1325:4:14"},"referencedDeclaration":3954,"src":"1325:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$3954_storage_ptr","typeString":"struct CallLib.Call"}},"id":4025,"nodeType":"ArrayTypeName","src":"1325:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$3954_storage_$dyn_storage_ptr","typeString":"struct CallLib.Call[]"}},"visibility":"internal"}],"src":"1324:21:14"},"returnParameters":{"id":4028,"nodeType":"ParameterList","parameters":[],"src":"1355:0:14"},"scope":4261,"src":"1306:238:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4105,"nodeType":"Block","src":"1682:291:14","statements":[{"assignments":[4065],"declarations":[{"constant":false,"id":4065,"mutability":"mutable","name":"i","nameLocation":"1700:1:14","nodeType":"VariableDeclaration","scope":4105,"src":"1692:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4064,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4067,"initialValue":{"hexValue":"30","id":4066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1704:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1692:13:14"},{"assignments":[4069],"declarations":[{"constant":false,"id":4069,"mutability":"mutable","name":"len","nameLocation":"1723:3:14","nodeType":"VariableDeclaration","scope":4105,"src":"1715:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4068,"name":"uint256","nodeType":"ElementaryTypeName","src":"1715:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4072,"initialValue":{"expression":{"id":4070,"name":"_calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"1729:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StaticCallWithCallback_$3960_memory_ptr_$dyn_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback memory[] memory"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1736:6:14","memberName":"length","nodeType":"MemberAccess","src":"1729:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1715:27:14"},{"assignments":[4077],"declarations":[{"constant":false,"id":4077,"mutability":"mutable","name":"callbacks","nameLocation":"1767:9:14","nodeType":"VariableDeclaration","scope":4105,"src":"1752:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4075,"name":"bytes","nodeType":"ElementaryTypeName","src":"1752:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4076,"nodeType":"ArrayTypeName","src":"1752:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"id":4083,"initialValue":{"arguments":[{"id":4081,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"1791:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1779:11:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":4078,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4079,"nodeType":"ArrayTypeName","src":"1783:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1779:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1752:43:14"},{"body":{"id":4101,"nodeType":"Block","src":"1821:120:14","statements":[{"expression":{"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4087,"name":"callbacks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"1835:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":4089,"indexExpression":{"id":4088,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"1845:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1835:12:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":4091,"name":"_calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"1861:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StaticCallWithCallback_$3960_memory_ptr_$dyn_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback memory[] memory"}},"id":4093,"indexExpression":{"id":4092,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"1868:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1861:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$3960_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_StaticCallWithCallback_$3960_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback memory"}],"id":4090,"name":"staticcall","nodeType":"Identifier","overloadedDeclarations":[4002,4022],"referencedDeclaration":4022,"src":"1850:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_StaticCallWithCallback_$3960_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct CallLib.StaticCallWithCallback memory) view returns (bytes memory)"}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1850:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1835:36:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4096,"nodeType":"ExpressionStatement","src":"1835:36:14"},{"id":4100,"nodeType":"UncheckedBlock","src":"1885:46:14","statements":[{"expression":{"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1913:3:14","subExpression":{"id":4097,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"1915:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4099,"nodeType":"ExpressionStatement","src":"1913:3:14"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4084,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"1812:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4085,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"1816:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1812:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4102,"nodeType":"WhileStatement","src":"1805:136:14"},{"expression":{"id":4103,"name":"callbacks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"1957:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":4063,"id":4104,"nodeType":"Return","src":"1950:16:14"}]},"id":4106,"implemented":true,"kind":"function","modifiers":[],"name":"multistaticcall","nameLocation":"1559:15:14","nodeType":"FunctionDefinition","parameters":{"id":4059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4058,"mutability":"mutable","name":"_calls","nameLocation":"1607:6:14","nodeType":"VariableDeclaration","scope":4106,"src":"1575:38:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StaticCallWithCallback_$3960_memory_ptr_$dyn_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback[]"},"typeName":{"baseType":{"id":4056,"nodeType":"UserDefinedTypeName","pathNode":{"id":4055,"name":"StaticCallWithCallback","nameLocations":["1575:22:14"],"nodeType":"IdentifierPath","referencedDeclaration":3960,"src":"1575:22:14"},"referencedDeclaration":3960,"src":"1575:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$3960_storage_ptr","typeString":"struct CallLib.StaticCallWithCallback"}},"id":4057,"nodeType":"ArrayTypeName","src":"1575:24:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StaticCallWithCallback_$3960_storage_$dyn_storage_ptr","typeString":"struct CallLib.StaticCallWithCallback[]"}},"visibility":"internal"}],"src":"1574:40:14"},"returnParameters":{"id":4063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4106,"src":"1662:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4060,"name":"bytes","nodeType":"ElementaryTypeName","src":"1662:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4061,"nodeType":"ArrayTypeName","src":"1662:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1661:16:14"},"scope":4261,"src":"1550:423:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4141,"nodeType":"Block","src":"2043:209:14","statements":[{"assignments":[4115],"declarations":[{"constant":false,"id":4115,"mutability":"mutable","name":"i","nameLocation":"2061:1:14","nodeType":"VariableDeclaration","scope":4141,"src":"2053:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4114,"name":"uint256","nodeType":"ElementaryTypeName","src":"2053:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4117,"initialValue":{"hexValue":"30","id":4116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2065:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2053:13:14"},{"assignments":[4119],"declarations":[{"constant":false,"id":4119,"mutability":"mutable","name":"len","nameLocation":"2084:3:14","nodeType":"VariableDeclaration","scope":4141,"src":"2076:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4118,"name":"uint256","nodeType":"ElementaryTypeName","src":"2076:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4122,"initialValue":{"expression":{"id":4120,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"2090:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2096:6:14","memberName":"length","nodeType":"MemberAccess","src":"2090:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2076:26:14"},{"body":{"id":4139,"nodeType":"Block","src":"2128:118:14","statements":[{"expression":{"arguments":[{"id":4129,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"2163:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":4130,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"2167:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":4132,"indexExpression":{"id":4131,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"2173:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2167:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4126,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"2142:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1019_$","typeString":"type(library Address)"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2150:12:14","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":759,"src":"2142:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2142:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4134,"nodeType":"ExpressionStatement","src":"2142:34:14"},{"id":4138,"nodeType":"UncheckedBlock","src":"2190:46:14","statements":[{"expression":{"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2218:3:14","subExpression":{"id":4135,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"2220:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4137,"nodeType":"ExpressionStatement","src":"2218:3:14"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4123,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"2119:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4124,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"2123:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2119:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4140,"nodeType":"WhileStatement","src":"2112:134:14"}]},"id":4142,"implemented":true,"kind":"function","modifiers":[],"name":"multicallto","nameLocation":"1988:11:14","nodeType":"FunctionDefinition","parameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4108,"mutability":"mutable","name":"to","nameLocation":"2008:2:14","nodeType":"VariableDeclaration","scope":4142,"src":"2000:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4107,"name":"address","nodeType":"ElementaryTypeName","src":"2000:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4111,"mutability":"mutable","name":"calls","nameLocation":"2027:5:14","nodeType":"VariableDeclaration","scope":4142,"src":"2012:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4109,"name":"bytes","nodeType":"ElementaryTypeName","src":"2012:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4110,"nodeType":"ArrayTypeName","src":"2012:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1999:34:14"},"returnParameters":{"id":4113,"nodeType":"ParameterList","parameters":[],"src":"2043:0:14"},"scope":4261,"src":"1979:273:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4157,"nodeType":"Block","src":"2374:44:14","statements":[{"expression":{"arguments":[{"id":4153,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"2402:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4154,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"2406:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4152,"name":"StaticCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"2391:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StaticCall_$3947_storage_ptr_$","typeString":"type(struct CallLib.StaticCall storage pointer)"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2391:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$3947_memory_ptr","typeString":"struct CallLib.StaticCall memory"}},"functionReturnParameters":4151,"id":4156,"nodeType":"Return","src":"2384:27:14"}]},"id":4158,"implemented":true,"kind":"function","modifiers":[],"name":"build","nameLocation":"2267:5:14","nodeType":"FunctionDefinition","parameters":{"id":4147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4144,"mutability":"mutable","name":"to","nameLocation":"2281:2:14","nodeType":"VariableDeclaration","scope":4158,"src":"2273:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2273:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4146,"mutability":"mutable","name":"data","nameLocation":"2298:4:14","nodeType":"VariableDeclaration","scope":4158,"src":"2285:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4145,"name":"bytes","nodeType":"ElementaryTypeName","src":"2285:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2272:31:14"},"returnParameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4158,"src":"2351:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$3947_memory_ptr","typeString":"struct CallLib.StaticCall"},"typeName":{"id":4149,"nodeType":"UserDefinedTypeName","pathNode":{"id":4148,"name":"StaticCall","nameLocations":["2351:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3947,"src":"2351:10:14"},"referencedDeclaration":3947,"src":"2351:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$3947_storage_ptr","typeString":"struct CallLib.StaticCall"}},"visibility":"internal"}],"src":"2350:19:14"},"scope":4261,"src":"2258:160:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4176,"nodeType":"Block","src":"2540:67:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":4171,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"2590:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4169,"name":"TypeCasts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"2563:9:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TypeCasts_$4302_$","typeString":"type(library TypeCasts)"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2573:16:14","memberName":"addressToBytes32","nodeType":"MemberAccess","referencedDeclaration":4282,"src":"2563:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes32_$","typeString":"function (address) pure returns (bytes32)"}},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4173,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"2595:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4168,"name":"build","nodeType":"Identifier","overloadedDeclarations":[4158,4177,4196,4218,4239,4260],"referencedDeclaration":4158,"src":"2557:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_struct$_StaticCall_$3947_memory_ptr_$","typeString":"function (bytes32,bytes memory) pure returns (struct CallLib.StaticCall memory)"}},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2557:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$3947_memory_ptr","typeString":"struct CallLib.StaticCall memory"}},"functionReturnParameters":4167,"id":4175,"nodeType":"Return","src":"2550:50:14"}]},"id":4177,"implemented":true,"kind":"function","modifiers":[],"name":"build","nameLocation":"2433:5:14","nodeType":"FunctionDefinition","parameters":{"id":4163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4160,"mutability":"mutable","name":"to","nameLocation":"2447:2:14","nodeType":"VariableDeclaration","scope":4177,"src":"2439:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4159,"name":"address","nodeType":"ElementaryTypeName","src":"2439:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4162,"mutability":"mutable","name":"data","nameLocation":"2464:4:14","nodeType":"VariableDeclaration","scope":4177,"src":"2451:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4161,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2438:31:14"},"returnParameters":{"id":4167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4177,"src":"2517:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$3947_memory_ptr","typeString":"struct CallLib.StaticCall"},"typeName":{"id":4165,"nodeType":"UserDefinedTypeName","pathNode":{"id":4164,"name":"StaticCall","nameLocations":["2517:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3947,"src":"2517:10:14"},"referencedDeclaration":3947,"src":"2517:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$3947_storage_ptr","typeString":"struct CallLib.StaticCall"}},"visibility":"internal"}],"src":"2516:19:14"},"scope":4261,"src":"2424:183:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4195,"nodeType":"Block","src":"2740:45:14","statements":[{"expression":{"arguments":[{"id":4190,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"2762:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"2766:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4192,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"2773:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4189,"name":"Call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"2757:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Call_$3954_storage_ptr_$","typeString":"type(struct CallLib.Call storage pointer)"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2757:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Call_$3954_memory_ptr","typeString":"struct CallLib.Call memory"}},"functionReturnParameters":4188,"id":4194,"nodeType":"Return","src":"2750:28:14"}]},"id":4196,"implemented":true,"kind":"function","modifiers":[],"name":"build","nameLocation":"2622:5:14","nodeType":"FunctionDefinition","parameters":{"id":4184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4179,"mutability":"mutable","name":"to","nameLocation":"2645:2:14","nodeType":"VariableDeclaration","scope":4196,"src":"2637:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2637:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4181,"mutability":"mutable","name":"value","nameLocation":"2665:5:14","nodeType":"VariableDeclaration","scope":4196,"src":"2657:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4180,"name":"uint256","nodeType":"ElementaryTypeName","src":"2657:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4183,"mutability":"mutable","name":"data","nameLocation":"2693:4:14","nodeType":"VariableDeclaration","scope":4196,"src":"2680:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4182,"name":"bytes","nodeType":"ElementaryTypeName","src":"2680:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2627:76:14"},"returnParameters":{"id":4188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4196,"src":"2727:11:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$3954_memory_ptr","typeString":"struct CallLib.Call"},"typeName":{"id":4186,"nodeType":"UserDefinedTypeName","pathNode":{"id":4185,"name":"Call","nameLocations":["2727:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":3954,"src":"2727:4:14"},"referencedDeclaration":3954,"src":"2727:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$3954_storage_ptr","typeString":"struct CallLib.Call"}},"visibility":"internal"}],"src":"2726:13:14"},"scope":4261,"src":"2613:172:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4217,"nodeType":"Block","src":"2918:73:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":4211,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"2967:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4209,"name":"TypeCasts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"2940:9:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TypeCasts_$4302_$","typeString":"type(library TypeCasts)"}},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2950:16:14","memberName":"addressToBytes32","nodeType":"MemberAccess","referencedDeclaration":4282,"src":"2940:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes32_$","typeString":"function (address) pure returns (bytes32)"}},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2940:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"2972:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4214,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"2979:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4208,"name":"Call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"2935:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Call_$3954_storage_ptr_$","typeString":"type(struct CallLib.Call storage pointer)"}},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2935:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Call_$3954_memory_ptr","typeString":"struct CallLib.Call memory"}},"functionReturnParameters":4207,"id":4216,"nodeType":"Return","src":"2928:56:14"}]},"id":4218,"implemented":true,"kind":"function","modifiers":[],"name":"build","nameLocation":"2800:5:14","nodeType":"FunctionDefinition","parameters":{"id":4203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4198,"mutability":"mutable","name":"to","nameLocation":"2823:2:14","nodeType":"VariableDeclaration","scope":4218,"src":"2815:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4197,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4200,"mutability":"mutable","name":"value","nameLocation":"2843:5:14","nodeType":"VariableDeclaration","scope":4218,"src":"2835:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4199,"name":"uint256","nodeType":"ElementaryTypeName","src":"2835:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4202,"mutability":"mutable","name":"data","nameLocation":"2871:4:14","nodeType":"VariableDeclaration","scope":4218,"src":"2858:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4201,"name":"bytes","nodeType":"ElementaryTypeName","src":"2858:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2805:76:14"},"returnParameters":{"id":4207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4218,"src":"2905:11:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$3954_memory_ptr","typeString":"struct CallLib.Call"},"typeName":{"id":4205,"nodeType":"UserDefinedTypeName","pathNode":{"id":4204,"name":"Call","nameLocations":["2905:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":3954,"src":"2905:4:14"},"referencedDeclaration":3954,"src":"2905:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$3954_storage_ptr","typeString":"struct CallLib.Call"}},"visibility":"internal"}],"src":"2904:13:14"},"scope":4261,"src":"2791:200:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4238,"nodeType":"Block","src":"3150:73:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":4232,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"3196:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4233,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"3200:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4231,"name":"build","nodeType":"Identifier","overloadedDeclarations":[4158,4177,4196,4218,4239,4260],"referencedDeclaration":4158,"src":"3190:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_struct$_StaticCall_$3947_memory_ptr_$","typeString":"function (bytes32,bytes memory) pure returns (struct CallLib.StaticCall memory)"}},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3190:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$3947_memory_ptr","typeString":"struct CallLib.StaticCall memory"}},{"id":4235,"name":"callback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"3207:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_StaticCall_$3947_memory_ptr","typeString":"struct CallLib.StaticCall memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4230,"name":"StaticCallWithCallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"3167:22:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StaticCallWithCallback_$3960_storage_ptr_$","typeString":"type(struct CallLib.StaticCallWithCallback storage pointer)"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3167:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$3960_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback memory"}},"functionReturnParameters":4229,"id":4237,"nodeType":"Return","src":"3160:56:14"}]},"id":4239,"implemented":true,"kind":"function","modifiers":[],"name":"build","nameLocation":"3006:5:14","nodeType":"FunctionDefinition","parameters":{"id":4225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"to","nameLocation":"3029:2:14","nodeType":"VariableDeclaration","scope":4239,"src":"3021:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3021:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4222,"mutability":"mutable","name":"data","nameLocation":"3054:4:14","nodeType":"VariableDeclaration","scope":4239,"src":"3041:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4221,"name":"bytes","nodeType":"ElementaryTypeName","src":"3041:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4224,"mutability":"mutable","name":"callback","nameLocation":"3081:8:14","nodeType":"VariableDeclaration","scope":4239,"src":"3068:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4223,"name":"bytes","nodeType":"ElementaryTypeName","src":"3068:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3011:84:14"},"returnParameters":{"id":4229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4239,"src":"3119:29:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$3960_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback"},"typeName":{"id":4227,"nodeType":"UserDefinedTypeName","pathNode":{"id":4226,"name":"StaticCallWithCallback","nameLocations":["3119:22:14"],"nodeType":"IdentifierPath","referencedDeclaration":3960,"src":"3119:22:14"},"referencedDeclaration":3960,"src":"3119:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$3960_storage_ptr","typeString":"struct CallLib.StaticCallWithCallback"}},"visibility":"internal"}],"src":"3118:31:14"},"scope":4261,"src":"2997:226:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4259,"nodeType":"Block","src":"3382:73:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":4253,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4241,"src":"3428:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4254,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"3432:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4252,"name":"build","nodeType":"Identifier","overloadedDeclarations":[4158,4177,4196,4218,4239,4260],"referencedDeclaration":4177,"src":"3422:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_struct$_StaticCall_$3947_memory_ptr_$","typeString":"function (address,bytes memory) pure returns (struct CallLib.StaticCall memory)"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3422:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$3947_memory_ptr","typeString":"struct CallLib.StaticCall memory"}},{"id":4256,"name":"callback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"3439:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_StaticCall_$3947_memory_ptr","typeString":"struct CallLib.StaticCall memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4251,"name":"StaticCallWithCallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"3399:22:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StaticCallWithCallback_$3960_storage_ptr_$","typeString":"type(struct CallLib.StaticCallWithCallback storage pointer)"}},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3399:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$3960_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback memory"}},"functionReturnParameters":4250,"id":4258,"nodeType":"Return","src":"3392:56:14"}]},"id":4260,"implemented":true,"kind":"function","modifiers":[],"name":"build","nameLocation":"3238:5:14","nodeType":"FunctionDefinition","parameters":{"id":4246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4241,"mutability":"mutable","name":"to","nameLocation":"3261:2:14","nodeType":"VariableDeclaration","scope":4260,"src":"3253:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4240,"name":"address","nodeType":"ElementaryTypeName","src":"3253:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4243,"mutability":"mutable","name":"data","nameLocation":"3286:4:14","nodeType":"VariableDeclaration","scope":4260,"src":"3273:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4242,"name":"bytes","nodeType":"ElementaryTypeName","src":"3273:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4245,"mutability":"mutable","name":"callback","nameLocation":"3313:8:14","nodeType":"VariableDeclaration","scope":4260,"src":"3300:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4244,"name":"bytes","nodeType":"ElementaryTypeName","src":"3300:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3243:84:14"},"returnParameters":{"id":4250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4260,"src":"3351:29:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$3960_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback"},"typeName":{"id":4248,"nodeType":"UserDefinedTypeName","pathNode":{"id":4247,"name":"StaticCallWithCallback","nameLocations":["3351:22:14"],"nodeType":"IdentifierPath","referencedDeclaration":3960,"src":"3351:22:14"},"referencedDeclaration":3960,"src":"3351:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$3960_storage_ptr","typeString":"struct CallLib.StaticCallWithCallback"}},"visibility":"internal"}],"src":"3350:31:14"},"scope":4261,"src":"3229:226:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4262,"src":"177:3280:14","usedErrors":[]}],"src":"39:3418:14"},"id":14},"contracts/precompiles/libs/TypeCasts.sol":{"ast":{"absolutePath":"contracts/precompiles/libs/TypeCasts.sol","exportedSymbols":{"TypeCasts":[4302]},"id":4303,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":4263,"literals":["solidity",">=","0.6",".11"],"nodeType":"PragmaDirective","src":"46:25:15"},{"abstract":false,"baseContracts":[],"canonicalName":"TypeCasts","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":4302,"linearizedBaseContracts":[4302],"name":"TypeCasts","nameLocation":"81:9:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":4281,"nodeType":"Block","src":"203:56:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4276,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"244:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"236:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4274,"name":"uint160","nodeType":"ElementaryTypeName","src":"236:7:15","typeDescriptions":{}}},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"236:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"228:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4272,"name":"uint256","nodeType":"ElementaryTypeName","src":"228:7:15","typeDescriptions":{}}},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"228:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"220:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"220:7:15","typeDescriptions":{}}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"220:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4269,"id":4280,"nodeType":"Return","src":"213:39:15"}]},"id":4282,"implemented":true,"kind":"function","modifiers":[],"name":"addressToBytes32","nameLocation":"139:16:15","nodeType":"FunctionDefinition","parameters":{"id":4266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4265,"mutability":"mutable","name":"_addr","nameLocation":"164:5:15","nodeType":"VariableDeclaration","scope":4282,"src":"156:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4264,"name":"address","nodeType":"ElementaryTypeName","src":"156:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"155:15:15"},"returnParameters":{"id":4269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4282,"src":"194:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"194:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"193:9:15"},"scope":4302,"src":"130:129:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4300,"nodeType":"Block","src":"370:55:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4295,"name":"_buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"411:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"403:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4293,"name":"uint256","nodeType":"ElementaryTypeName","src":"403:7:15","typeDescriptions":{}}},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"403:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"395:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4291,"name":"uint160","nodeType":"ElementaryTypeName","src":"395:7:15","typeDescriptions":{}}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"395:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"387:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4289,"name":"address","nodeType":"ElementaryTypeName","src":"387:7:15","typeDescriptions":{}}},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"387:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4288,"id":4299,"nodeType":"Return","src":"380:38:15"}]},"id":4301,"implemented":true,"kind":"function","modifiers":[],"name":"bytes32ToAddress","nameLocation":"307:16:15","nodeType":"FunctionDefinition","parameters":{"id":4285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4284,"mutability":"mutable","name":"_buf","nameLocation":"332:4:15","nodeType":"VariableDeclaration","scope":4301,"src":"324:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"324:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"323:14:15"},"returnParameters":{"id":4288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4301,"src":"361:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4286,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"360:9:15"},"scope":4302,"src":"298:127:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4303,"src":"73:354:15","usedErrors":[]}],"src":"46:381:15"},"id":15}},"contracts":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_44":{"entryPoint":null,"id":44,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":376,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":502,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":99,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1067,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":332,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":193,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1160,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":646,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":146,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":109,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":796,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":952,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":995,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"423:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:16"},"nodeType":"YulFunctionCall","src":"433:12:16"},"nodeType":"YulExpressionStatement","src":"433:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:16"},{"body":{"nodeType":"YulBlock","src":"546:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:16"},"nodeType":"YulFunctionCall","src":"556:12:16"},"nodeType":"YulExpressionStatement","src":"556:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:16"},{"body":{"nodeType":"YulBlock","src":"628:54:16","statements":[{"nodeType":"YulAssignment","src":"638:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:16"},"nodeType":"YulFunctionCall","src":"652:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:16"},"nodeType":"YulFunctionCall","src":"668:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:16"},"nodeType":"YulFunctionCall","src":"648:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:16","type":""}],"src":"580:102:16"},{"body":{"nodeType":"YulBlock","src":"716:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:16"},"nodeType":"YulFunctionCall","src":"726:88:16"},"nodeType":"YulExpressionStatement","src":"726:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:16"},"nodeType":"YulFunctionCall","src":"823:15:16"},"nodeType":"YulExpressionStatement","src":"823:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:16"},"nodeType":"YulFunctionCall","src":"847:15:16"},"nodeType":"YulExpressionStatement","src":"847:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:16"},{"body":{"nodeType":"YulBlock","src":"917:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:16"},"nodeType":"YulFunctionCall","src":"957:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:16"},"nodeType":"YulFunctionCall","src":"945:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:16"},"nodeType":"YulFunctionCall","src":"1098:18:16"},"nodeType":"YulExpressionStatement","src":"1098:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:16"},"nodeType":"YulFunctionCall","src":"1036:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:16"},"nodeType":"YulFunctionCall","src":"1072:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:16"},"nodeType":"YulFunctionCall","src":"1033:62:16"},"nodeType":"YulIf","src":"1030:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:16"},"nodeType":"YulFunctionCall","src":"1127:22:16"},"nodeType":"YulExpressionStatement","src":"1127:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:16","type":""}],"src":"874:281:16"},{"body":{"nodeType":"YulBlock","src":"1202:88:16","statements":[{"nodeType":"YulAssignment","src":"1212:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:16"},"nodeType":"YulFunctionCall","src":"1222:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:16"},"nodeType":"YulFunctionCall","src":"1251:33:16"},"nodeType":"YulExpressionStatement","src":"1251:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:16","type":""}],"src":"1161:129:16"},{"body":{"nodeType":"YulBlock","src":"1363:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:16"},"nodeType":"YulFunctionCall","src":"1470:18:16"},"nodeType":"YulExpressionStatement","src":"1470:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:16"},"nodeType":"YulFunctionCall","src":"1437:30:16"},"nodeType":"YulIf","src":"1434:56:16"},{"nodeType":"YulAssignment","src":"1500:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:16"},"nodeType":"YulFunctionCall","src":"1508:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:16"}]},{"nodeType":"YulAssignment","src":"1574:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:16"},"nodeType":"YulFunctionCall","src":"1582:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:16"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:16","type":""}],"src":"1296:308:16"},{"body":{"nodeType":"YulBlock","src":"1672:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:16"},"nodeType":"YulFunctionCall","src":"1772:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:16"},"nodeType":"YulFunctionCall","src":"1791:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:16"},"nodeType":"YulFunctionCall","src":"1785:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:16"},"nodeType":"YulFunctionCall","src":"1765:39:16"},"nodeType":"YulExpressionStatement","src":"1765:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:16"},"nodeType":"YulFunctionCall","src":"1709:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:16","statements":[{"nodeType":"YulAssignment","src":"1725:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:16"},"nodeType":"YulFunctionCall","src":"1730:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:16","statements":[]},"src":"1701:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:16"},"nodeType":"YulFunctionCall","src":"1830:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:16"},"nodeType":"YulFunctionCall","src":"1823:27:16"},"nodeType":"YulExpressionStatement","src":"1823:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:16","type":""}],"src":"1610:246:16"},{"body":{"nodeType":"YulBlock","src":"1957:339:16","statements":[{"nodeType":"YulAssignment","src":"1967:75:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:16"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:16"},"nodeType":"YulFunctionCall","src":"1992:49:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:16"},"nodeType":"YulFunctionCall","src":"1976:66:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:16"},"nodeType":"YulFunctionCall","src":"2051:21:16"},"nodeType":"YulExpressionStatement","src":"2051:21:16"},{"nodeType":"YulVariableDeclaration","src":"2081:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:16"},"nodeType":"YulFunctionCall","src":"2092:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:16"},"nodeType":"YulFunctionCall","src":"2148:79:16"},"nodeType":"YulExpressionStatement","src":"2148:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:16"},"nodeType":"YulFunctionCall","src":"2123:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:16"},"nodeType":"YulFunctionCall","src":"2120:25:16"},"nodeType":"YulIf","src":"2117:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:16"},"nodeType":"YulFunctionCall","src":"2238:52:16"},"nodeType":"YulExpressionStatement","src":"2238:52:16"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:16","type":""}],"src":"1862:434:16"},{"body":{"nodeType":"YulBlock","src":"2389:282:16","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:16"},"nodeType":"YulFunctionCall","src":"2440:79:16"},"nodeType":"YulExpressionStatement","src":"2440:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:16"},"nodeType":"YulFunctionCall","src":"2413:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:16"},"nodeType":"YulFunctionCall","src":"2409:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:16"},"nodeType":"YulFunctionCall","src":"2402:35:16"},"nodeType":"YulIf","src":"2399:122:16"},{"nodeType":"YulVariableDeclaration","src":"2530:27:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:16"},"nodeType":"YulFunctionCall","src":"2544:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:16"},"nodeType":"YulFunctionCall","src":"2634:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:16"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:16"},"nodeType":"YulFunctionCall","src":"2575:90:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:16"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:16","type":""}],"src":"2316:355:16"},{"body":{"nodeType":"YulBlock","src":"2791:739:16","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:16"},"nodeType":"YulFunctionCall","src":"2839:79:16"},"nodeType":"YulExpressionStatement","src":"2839:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:16"},"nodeType":"YulFunctionCall","src":"2808:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:16"},"nodeType":"YulFunctionCall","src":"2804:32:16"},"nodeType":"YulIf","src":"2801:119:16"},{"nodeType":"YulBlock","src":"2930:291:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:16"},"nodeType":"YulFunctionCall","src":"2965:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:16"},"nodeType":"YulFunctionCall","src":"2959:24:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:16"},"nodeType":"YulFunctionCall","src":"3032:79:16"},"nodeType":"YulExpressionStatement","src":"3032:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:16"},"nodeType":"YulFunctionCall","src":"2999:30:16"},"nodeType":"YulIf","src":"2996:117:16"},{"nodeType":"YulAssignment","src":"3127:84:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:16"},"nodeType":"YulFunctionCall","src":"3179:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:16"},"nodeType":"YulFunctionCall","src":"3137:74:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:16"}]}]},{"nodeType":"YulBlock","src":"3231:292:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:16"},"nodeType":"YulFunctionCall","src":"3266:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:16"},"nodeType":"YulFunctionCall","src":"3260:25:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:16"},"nodeType":"YulFunctionCall","src":"3334:79:16"},"nodeType":"YulExpressionStatement","src":"3334:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:16"},"nodeType":"YulFunctionCall","src":"3301:30:16"},"nodeType":"YulIf","src":"3298:117:16"},{"nodeType":"YulAssignment","src":"3429:84:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:16"},"nodeType":"YulFunctionCall","src":"3481:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:16"},"nodeType":"YulFunctionCall","src":"3439:74:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:16"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:16","type":""}],"src":"2677:853:16"},{"body":{"nodeType":"YulBlock","src":"3595:40:16","statements":[{"nodeType":"YulAssignment","src":"3606:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:16"},"nodeType":"YulFunctionCall","src":"3616:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:16","type":""}],"src":"3536:99:16"},{"body":{"nodeType":"YulBlock","src":"3669:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:16"},"nodeType":"YulFunctionCall","src":"3679:88:16"},"nodeType":"YulExpressionStatement","src":"3679:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:16"},"nodeType":"YulFunctionCall","src":"3776:15:16"},"nodeType":"YulExpressionStatement","src":"3776:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:16"},"nodeType":"YulFunctionCall","src":"3800:15:16"},"nodeType":"YulExpressionStatement","src":"3800:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:16"},{"body":{"nodeType":"YulBlock","src":"3878:269:16","statements":[{"nodeType":"YulAssignment","src":"3888:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:16"},"nodeType":"YulFunctionCall","src":"3898:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:16"},"nodeType":"YulFunctionCall","src":"3945:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:16","statements":[{"nodeType":"YulAssignment","src":"4010:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:16"},"nodeType":"YulFunctionCall","src":"4020:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:16"},"nodeType":"YulFunctionCall","src":"3969:26:16"},"nodeType":"YulIf","src":"3966:81:16"},{"body":{"nodeType":"YulBlock","src":"4099:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:16"},"nodeType":"YulFunctionCall","src":"4113:18:16"},"nodeType":"YulExpressionStatement","src":"4113:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:16"},"nodeType":"YulFunctionCall","src":"4083:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:16"},"nodeType":"YulFunctionCall","src":"4060:38:16"},"nodeType":"YulIf","src":"4057:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:16","type":""}],"src":"3827:320:16"},{"body":{"nodeType":"YulBlock","src":"4207:87:16","statements":[{"nodeType":"YulAssignment","src":"4217:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:16"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:16"},"nodeType":"YulFunctionCall","src":"4238:14:16"},"nodeType":"YulExpressionStatement","src":"4238:14:16"},{"nodeType":"YulAssignment","src":"4261:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:16"},"nodeType":"YulFunctionCall","src":"4269:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:16"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:16","type":""}],"src":"4153:141:16"},{"body":{"nodeType":"YulBlock","src":"4344:49:16","statements":[{"nodeType":"YulAssignment","src":"4354:33:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:16"},"nodeType":"YulFunctionCall","src":"4368:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:16","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:16"},"nodeType":"YulFunctionCall","src":"4364:23:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:16"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:16","type":""}],"src":"4300:93:16"},{"body":{"nodeType":"YulBlock","src":"4452:54:16","statements":[{"nodeType":"YulAssignment","src":"4462:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:16"},"nodeType":"YulFunctionCall","src":"4483:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:16"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:16","type":""}],"src":"4399:107:16"},{"body":{"nodeType":"YulBlock","src":"4588:317:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:16","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:16","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:16"},"nodeType":"YulFunctionCall","src":"4615:18:16"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:16"},"nodeType":"YulFunctionCall","src":"4654:97:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:16","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:16"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:16"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:16"},"nodeType":"YulFunctionCall","src":"4772:39:16"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:16"}]},{"nodeType":"YulAssignment","src":"4820:30:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:16"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:16"},"nodeType":"YulFunctionCall","src":"4840:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:16"},"nodeType":"YulFunctionCall","src":"4829:21:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:16"}]},{"nodeType":"YulAssignment","src":"4859:40:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:16"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:16"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:16"},"nodeType":"YulFunctionCall","src":"4879:19:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:16"},"nodeType":"YulFunctionCall","src":"4869:30:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:16"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:16","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:16","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:16","type":""}],"src":"4512:393:16"},{"body":{"nodeType":"YulBlock","src":"4956:32:16","statements":[{"nodeType":"YulAssignment","src":"4966:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:16","type":""}],"src":"4911:77:16"},{"body":{"nodeType":"YulBlock","src":"5026:28:16","statements":[{"nodeType":"YulAssignment","src":"5036:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:16"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:16","type":""}],"src":"4994:60:16"},{"body":{"nodeType":"YulBlock","src":"5120:82:16","statements":[{"nodeType":"YulAssignment","src":"5130:66:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:16"},"nodeType":"YulFunctionCall","src":"5170:24:16"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:16"},"nodeType":"YulFunctionCall","src":"5161:34:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:16"},"nodeType":"YulFunctionCall","src":"5143:53:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:16"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:16","type":""}],"src":"5060:142:16"},{"body":{"nodeType":"YulBlock","src":"5255:28:16","statements":[{"nodeType":"YulAssignment","src":"5265:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:16"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:16","type":""}],"src":"5208:75:16"},{"body":{"nodeType":"YulBlock","src":"5365:193:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:16","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:16"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:16"},"nodeType":"YulFunctionCall","src":"5399:39:16"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:16"},"nodeType":"YulFunctionCall","src":"5488:11:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:16"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:16"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:16"},"nodeType":"YulFunctionCall","src":"5509:41:16"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:16"},"nodeType":"YulFunctionCall","src":"5460:91:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:16"},"nodeType":"YulFunctionCall","src":"5447:105:16"},"nodeType":"YulExpressionStatement","src":"5447:105:16"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:16","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:16","type":""}],"src":"5289:269:16"},{"body":{"nodeType":"YulBlock","src":"5613:24:16","statements":[{"nodeType":"YulAssignment","src":"5623:8:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:16","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:16"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:16","type":""}],"src":"5564:73:16"},{"body":{"nodeType":"YulBlock","src":"5696:136:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:16","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:16"},"nodeType":"YulFunctionCall","src":"5720:32:16"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:16"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:16"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:16"},"nodeType":"YulFunctionCall","src":"5761:65:16"},"nodeType":"YulExpressionStatement","src":"5761:65:16"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:16","type":""}],"src":"5643:189:16"},{"body":{"nodeType":"YulBlock","src":"5888:136:16","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:16","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:16"},"nodeType":"YulFunctionCall","src":"5969:39:16"},"nodeType":"YulExpressionStatement","src":"5969:39:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:16"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:16"},"nodeType":"YulFunctionCall","src":"5905:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:16","statements":[{"nodeType":"YulAssignment","src":"5922:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:16"},"nodeType":"YulFunctionCall","src":"5931:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:16","statements":[]},"src":"5898:120:16"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:16","type":""}],"src":"5838:186:16"},{"body":{"nodeType":"YulBlock","src":"6109:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:16"},"nodeType":"YulFunctionCall","src":"6165:38:16"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:16","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:16"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:16"},"nodeType":"YulFunctionCall","src":"6249:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:16"},"nodeType":"YulFunctionCall","src":"6235:44:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:16","statements":[{"nodeType":"YulAssignment","src":"6438:23:16","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:16"},"nodeType":"YulFunctionCall","src":"6417:18:16"},"nodeType":"YulIf","src":"6414:49:16"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:16"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:16"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:16"},"nodeType":"YulFunctionCall","src":"6532:22:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:16"},"nodeType":"YulFunctionCall","src":"6518:37:16"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:16"},"nodeType":"YulFunctionCall","src":"6476:80:16"},"nodeType":"YulExpressionStatement","src":"6476:80:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:16"},"nodeType":"YulFunctionCall","src":"6123:11:16"},"nodeType":"YulIf","src":"6120:446:16"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:16","type":""}],"src":"6030:543:16"},{"body":{"nodeType":"YulBlock","src":"6642:54:16","statements":[{"nodeType":"YulAssignment","src":"6652:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:16"},"nodeType":"YulFunctionCall","src":"6673:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:16"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:16","type":""}],"src":"6579:117:16"},{"body":{"nodeType":"YulBlock","src":"6753:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:16","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:16"},"nodeType":"YulFunctionCall","src":"6808:13:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:16"},"nodeType":"YulFunctionCall","src":"6823:6:16"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:16"},"nodeType":"YulFunctionCall","src":"6779:51:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:16"},"nodeType":"YulFunctionCall","src":"6775:56:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:16","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:16"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:16"},"nodeType":"YulFunctionCall","src":"6850:15:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:16"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:16","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:16","type":""}],"src":"6702:169:16"},{"body":{"nodeType":"YulBlock","src":"6957:214:16","statements":[{"nodeType":"YulAssignment","src":"7090:37:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:16"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:16"},"nodeType":"YulFunctionCall","src":"7098:29:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:16"}]},{"nodeType":"YulAssignment","src":"7136:29:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:16","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:16"},"nodeType":"YulFunctionCall","src":"7153:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:16"},"nodeType":"YulFunctionCall","src":"7144:21:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:16","type":""}],"src":"6876:295:16"},{"body":{"nodeType":"YulBlock","src":"7268:1303:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:16"},"nodeType":"YulFunctionCall","src":"7293:37:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:16"},"nodeType":"YulFunctionCall","src":"7417:18:16"},"nodeType":"YulExpressionStatement","src":"7417:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:16"},"nodeType":"YulFunctionCall","src":"7384:30:16"},"nodeType":"YulIf","src":"7381:56:16"},{"nodeType":"YulVariableDeclaration","src":"7447:52:16","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:16"},"nodeType":"YulFunctionCall","src":"7487:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:16"},"nodeType":"YulFunctionCall","src":"7461:38:16"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:16"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:16"},"nodeType":"YulFunctionCall","src":"7546:67:16"},"nodeType":"YulExpressionStatement","src":"7546:67:16"},{"nodeType":"YulVariableDeclaration","src":"7623:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:16","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:16","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:16","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:16"},"nodeType":"YulFunctionCall","src":"7756:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:16"},"nodeType":"YulFunctionCall","src":"7744:22:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:16"},"nodeType":"YulFunctionCall","src":"7794:37:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:16"},"nodeType":"YulFunctionCall","src":"7951:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:16"},"nodeType":"YulFunctionCall","src":"7945:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:16"},"nodeType":"YulFunctionCall","src":"7930:42:16"},"nodeType":"YulExpressionStatement","src":"7930:42:16"},{"nodeType":"YulAssignment","src":"7989:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:16"},"nodeType":"YulFunctionCall","src":"7999:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:16"}]},{"nodeType":"YulAssignment","src":"8030:31:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:16"},"nodeType":"YulFunctionCall","src":"8043:18:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:16"},"nodeType":"YulFunctionCall","src":"7875:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:16","statements":[{"nodeType":"YulAssignment","src":"7892:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:16"},"nodeType":"YulFunctionCall","src":"7897:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:16","statements":[]},"src":"7867:208:16"},{"body":{"nodeType":"YulBlock","src":"8111:156:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:16"},"nodeType":"YulFunctionCall","src":"8152:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:16"},"nodeType":"YulFunctionCall","src":"8146:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:16"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:16","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:16"},"nodeType":"YulFunctionCall","src":"8234:17:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:16"},"nodeType":"YulFunctionCall","src":"8204:48:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:16"},"nodeType":"YulFunctionCall","src":"8189:64:16"},"nodeType":"YulExpressionStatement","src":"8189:64:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:16"},"nodeType":"YulFunctionCall","src":"8091:19:16"},"nodeType":"YulIf","src":"8088:179:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:16"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:16","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:16"},"nodeType":"YulFunctionCall","src":"8297:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:16"},"nodeType":"YulFunctionCall","src":"8293:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:16"},"nodeType":"YulFunctionCall","src":"8280:36:16"},"nodeType":"YulExpressionStatement","src":"8280:36:16"}]},"nodeType":"YulCase","src":"7708:618:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:16","statements":[{"nodeType":"YulAssignment","src":"8412:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:16"},"nodeType":"YulFunctionCall","src":"8427:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:16"},"nodeType":"YulFunctionCall","src":"8421:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:16"},"nodeType":"YulIf","src":"8384:77:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:16"},"nodeType":"YulFunctionCall","src":"8487:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:16"},"nodeType":"YulFunctionCall","src":"8474:81:16"},"nodeType":"YulExpressionStatement","src":"8474:81:16"}]},"nodeType":"YulCase","src":"8335:230:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:16"},"nodeType":"YulFunctionCall","src":"7685:14:16"},"nodeType":"YulSwitch","src":"7678:887:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:16","type":""}],"src":"7176:1395:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620017ec380380620017ec8339818101604052810190620000379190620001f6565b8160039081620000489190620004c6565b5080600490816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61122f80620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea264697066735822122086fdaea977c3764a4ee30a5ca19d233bd3d76ec8e6f2a08cf5232e70e2d9dad464736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17EC CODESIZE SUB DUP1 PUSH3 0x17EC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x122F DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 REVERT 0xAE 0xA9 PUSH24 0xC3764A4EE30A5CA19D233BD3D76EC8E6F2A08CF5232E70E2 0xD9 0xDA 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1532:11312:0:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2054:5;2046;:13;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;:::i;:::-;;1980:113;;1532:11312;;7:75:16;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1532:11312:0:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_585":{"entryPoint":2679,"id":585,"parameterSlots":3,"returnSlots":0},"@_approve_520":{"entryPoint":1447,"id":520,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_574":{"entryPoint":2674,"id":574,"parameterSlots":3,"returnSlots":0},"@_msgSender_1031":{"entryPoint":1439,"id":1031,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_563":{"entryPoint":1904,"id":563,"parameterSlots":3,"returnSlots":0},"@_transfer_346":{"entryPoint":2044,"id":346,"parameterSlots":3,"returnSlots":0},"@allowance_141":{"entryPoint":1304,"id":141,"parameterSlots":2,"returnSlots":1},"@approve_166":{"entryPoint":776,"id":166,"parameterSlots":2,"returnSlots":1},"@balanceOf_98":{"entryPoint":932,"id":98,"parameterSlots":1,"returnSlots":1},"@decimals_74":{"entryPoint":868,"id":74,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_269":{"entryPoint":1150,"id":269,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_228":{"entryPoint":877,"id":228,"parameterSlots":2,"returnSlots":1},"@name_54":{"entryPoint":630,"id":54,"parameterSlots":0,"returnSlots":1},"@symbol_64":{"entryPoint":1004,"id":64,"parameterSlots":0,"returnSlots":1},"@totalSupply_84":{"entryPoint":811,"id":84,"parameterSlots":0,"returnSlots":1},"@transferFrom_199":{"entryPoint":821,"id":199,"parameterSlots":3,"returnSlots":1},"@transfer_123":{"entryPoint":1269,"id":123,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3358,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3175,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3015,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3091,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4096,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4534,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3271,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2828,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4569,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4277,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3286,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2684,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2695,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3565,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2899,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3079,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2867,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2961,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3258,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2712,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3469,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3518,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3422,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2862,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2754,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4309,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3909,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4055,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4455,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4163,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3763,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3617,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2917,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2971,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13699:16","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:16","statements":[{"nodeType":"YulAssignment","src":"77:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:16"},"nodeType":"YulFunctionCall","src":"87:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:16","type":""}],"src":"7:99:16"},{"body":{"nodeType":"YulBlock","src":"208:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:16"},"nodeType":"YulFunctionCall","src":"218:19:16"},"nodeType":"YulExpressionStatement","src":"218:19:16"},{"nodeType":"YulAssignment","src":"246:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:16"},"nodeType":"YulFunctionCall","src":"261:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:16","type":""}],"src":"112:169:16"},{"body":{"nodeType":"YulBlock","src":"349:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:16"},"nodeType":"YulFunctionCall","src":"449:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:16"},"nodeType":"YulFunctionCall","src":"468:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:16"},"nodeType":"YulFunctionCall","src":"462:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:16"},"nodeType":"YulFunctionCall","src":"442:39:16"},"nodeType":"YulExpressionStatement","src":"442:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:16"},"nodeType":"YulFunctionCall","src":"386:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:16","statements":[{"nodeType":"YulAssignment","src":"402:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:16"},"nodeType":"YulFunctionCall","src":"407:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:16","statements":[]},"src":"378:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:16"},"nodeType":"YulFunctionCall","src":"507:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:16"},"nodeType":"YulFunctionCall","src":"500:27:16"},"nodeType":"YulExpressionStatement","src":"500:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:16","type":""}],"src":"287:246:16"},{"body":{"nodeType":"YulBlock","src":"587:54:16","statements":[{"nodeType":"YulAssignment","src":"597:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:16"},"nodeType":"YulFunctionCall","src":"611:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:16"},"nodeType":"YulFunctionCall","src":"627:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:16"},"nodeType":"YulFunctionCall","src":"607:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:16","type":""}],"src":"539:102:16"},{"body":{"nodeType":"YulBlock","src":"739:285:16","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:16"},"nodeType":"YulFunctionCall","src":"763:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:16","type":""}]},{"nodeType":"YulAssignment","src":"811:78:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:16"},"nodeType":"YulFunctionCall","src":"818:71:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:16"},"nodeType":"YulFunctionCall","src":"933:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:16"},"nodeType":"YulFunctionCall","src":"898:65:16"},"nodeType":"YulExpressionStatement","src":"898:65:16"},{"nodeType":"YulAssignment","src":"972:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:16"},"nodeType":"YulFunctionCall","src":"988:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:16"},"nodeType":"YulFunctionCall","src":"979:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:16","type":""}],"src":"647:377:16"},{"body":{"nodeType":"YulBlock","src":"1148:195:16","statements":[{"nodeType":"YulAssignment","src":"1158:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:16"},"nodeType":"YulFunctionCall","src":"1166:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:16"},"nodeType":"YulFunctionCall","src":"1201:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:16"},"nodeType":"YulFunctionCall","src":"1220:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:16"},"nodeType":"YulFunctionCall","src":"1194:47:16"},"nodeType":"YulExpressionStatement","src":"1194:47:16"},{"nodeType":"YulAssignment","src":"1250:86:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:16"},"nodeType":"YulFunctionCall","src":"1258:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:16","type":""}],"src":"1030:313:16"},{"body":{"nodeType":"YulBlock","src":"1389:35:16","statements":[{"nodeType":"YulAssignment","src":"1399:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:16"},"nodeType":"YulFunctionCall","src":"1409:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:16","type":""}],"src":"1349:75:16"},{"body":{"nodeType":"YulBlock","src":"1519:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:16"},"nodeType":"YulFunctionCall","src":"1529:12:16"},"nodeType":"YulExpressionStatement","src":"1529:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:16"},{"body":{"nodeType":"YulBlock","src":"1642:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:16"},"nodeType":"YulFunctionCall","src":"1652:12:16"},"nodeType":"YulExpressionStatement","src":"1652:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:16"},{"body":{"nodeType":"YulBlock","src":"1721:81:16","statements":[{"nodeType":"YulAssignment","src":"1731:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:16"},"nodeType":"YulFunctionCall","src":"1742:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:16","type":""}],"src":"1676:126:16"},{"body":{"nodeType":"YulBlock","src":"1853:51:16","statements":[{"nodeType":"YulAssignment","src":"1863:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:16"},"nodeType":"YulFunctionCall","src":"1874:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:16","type":""}],"src":"1808:96:16"},{"body":{"nodeType":"YulBlock","src":"1953:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:16"},"nodeType":"YulFunctionCall","src":"2012:12:16"},"nodeType":"YulExpressionStatement","src":"2012:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:16"},"nodeType":"YulFunctionCall","src":"1983:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:16"},"nodeType":"YulFunctionCall","src":"1973:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:16"},"nodeType":"YulFunctionCall","src":"1966:43:16"},"nodeType":"YulIf","src":"1963:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:16","type":""}],"src":"1910:122:16"},{"body":{"nodeType":"YulBlock","src":"2090:87:16","statements":[{"nodeType":"YulAssignment","src":"2100:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:16"},"nodeType":"YulFunctionCall","src":"2109:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:16"},"nodeType":"YulFunctionCall","src":"2138:33:16"},"nodeType":"YulExpressionStatement","src":"2138:33:16"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:16","type":""}],"src":"2038:139:16"},{"body":{"nodeType":"YulBlock","src":"2228:32:16","statements":[{"nodeType":"YulAssignment","src":"2238:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:16","type":""}],"src":"2183:77:16"},{"body":{"nodeType":"YulBlock","src":"2309:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:16"},"nodeType":"YulFunctionCall","src":"2368:12:16"},"nodeType":"YulExpressionStatement","src":"2368:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:16"},"nodeType":"YulFunctionCall","src":"2339:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:16"},"nodeType":"YulFunctionCall","src":"2329:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:16"},"nodeType":"YulFunctionCall","src":"2322:43:16"},"nodeType":"YulIf","src":"2319:63:16"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:16","type":""}],"src":"2266:122:16"},{"body":{"nodeType":"YulBlock","src":"2446:87:16","statements":[{"nodeType":"YulAssignment","src":"2456:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:16"},"nodeType":"YulFunctionCall","src":"2465:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:16"},"nodeType":"YulFunctionCall","src":"2494:33:16"},"nodeType":"YulExpressionStatement","src":"2494:33:16"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:16","type":""}],"src":"2394:139:16"},{"body":{"nodeType":"YulBlock","src":"2622:391:16","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:16"},"nodeType":"YulFunctionCall","src":"2670:79:16"},"nodeType":"YulExpressionStatement","src":"2670:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:16"},"nodeType":"YulFunctionCall","src":"2639:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:16"},"nodeType":"YulFunctionCall","src":"2635:32:16"},"nodeType":"YulIf","src":"2632:119:16"},{"nodeType":"YulBlock","src":"2761:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:16"},"nodeType":"YulFunctionCall","src":"2836:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:16"},"nodeType":"YulFunctionCall","src":"2815:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:16"}]}]},{"nodeType":"YulBlock","src":"2888:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:16"},"nodeType":"YulFunctionCall","src":"2964:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:16"},"nodeType":"YulFunctionCall","src":"2943:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:16","type":""}],"src":"2539:474:16"},{"body":{"nodeType":"YulBlock","src":"3061:48:16","statements":[{"nodeType":"YulAssignment","src":"3071:32:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:16"},"nodeType":"YulFunctionCall","src":"3089:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:16"},"nodeType":"YulFunctionCall","src":"3082:21:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:16"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:16","type":""}],"src":"3019:90:16"},{"body":{"nodeType":"YulBlock","src":"3174:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:16"},"nodeType":"YulFunctionCall","src":"3196:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:16"},"nodeType":"YulFunctionCall","src":"3184:34:16"},"nodeType":"YulExpressionStatement","src":"3184:34:16"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:16","type":""}],"src":"3115:109:16"},{"body":{"nodeType":"YulBlock","src":"3322:118:16","statements":[{"nodeType":"YulAssignment","src":"3332:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:16"},"nodeType":"YulFunctionCall","src":"3340:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:16"},"nodeType":"YulFunctionCall","src":"3415:17:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:16"},"nodeType":"YulFunctionCall","src":"3368:65:16"},"nodeType":"YulExpressionStatement","src":"3368:65:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:16","type":""}],"src":"3230:210:16"},{"body":{"nodeType":"YulBlock","src":"3511:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:16"},"nodeType":"YulFunctionCall","src":"3533:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:16"},"nodeType":"YulFunctionCall","src":"3521:37:16"},"nodeType":"YulExpressionStatement","src":"3521:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:16","type":""}],"src":"3446:118:16"},{"body":{"nodeType":"YulBlock","src":"3668:124:16","statements":[{"nodeType":"YulAssignment","src":"3678:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:16"},"nodeType":"YulFunctionCall","src":"3686:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:16"},"nodeType":"YulFunctionCall","src":"3767:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:16"},"nodeType":"YulFunctionCall","src":"3714:71:16"},"nodeType":"YulExpressionStatement","src":"3714:71:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:16","type":""}],"src":"3570:222:16"},{"body":{"nodeType":"YulBlock","src":"3898:519:16","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:16"},"nodeType":"YulFunctionCall","src":"3946:79:16"},"nodeType":"YulExpressionStatement","src":"3946:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:16"},"nodeType":"YulFunctionCall","src":"3915:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:16"},"nodeType":"YulFunctionCall","src":"3911:32:16"},"nodeType":"YulIf","src":"3908:119:16"},{"nodeType":"YulBlock","src":"4037:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:16"},"nodeType":"YulFunctionCall","src":"4112:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:16"},"nodeType":"YulFunctionCall","src":"4091:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:16"}]}]},{"nodeType":"YulBlock","src":"4164:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:16"},"nodeType":"YulFunctionCall","src":"4240:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:16"},"nodeType":"YulFunctionCall","src":"4219:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:16"}]}]},{"nodeType":"YulBlock","src":"4292:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:16"},"nodeType":"YulFunctionCall","src":"4368:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:16"},"nodeType":"YulFunctionCall","src":"4347:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:16","type":""}],"src":"3798:619:16"},{"body":{"nodeType":"YulBlock","src":"4466:43:16","statements":[{"nodeType":"YulAssignment","src":"4476:27:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:16"},"nodeType":"YulFunctionCall","src":"4487:16:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:16"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:16","type":""}],"src":"4423:86:16"},{"body":{"nodeType":"YulBlock","src":"4576:51:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:16"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:16"},"nodeType":"YulFunctionCall","src":"4598:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:16"},"nodeType":"YulFunctionCall","src":"4586:35:16"},"nodeType":"YulExpressionStatement","src":"4586:35:16"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:16","type":""}],"src":"4515:112:16"},{"body":{"nodeType":"YulBlock","src":"4727:120:16","statements":[{"nodeType":"YulAssignment","src":"4737:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:16"},"nodeType":"YulFunctionCall","src":"4745:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:16"},"nodeType":"YulFunctionCall","src":"4822:17:16"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:16"},"nodeType":"YulFunctionCall","src":"4773:67:16"},"nodeType":"YulExpressionStatement","src":"4773:67:16"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:16","type":""}],"src":"4633:214:16"},{"body":{"nodeType":"YulBlock","src":"4919:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:16"},"nodeType":"YulFunctionCall","src":"4967:79:16"},"nodeType":"YulExpressionStatement","src":"4967:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:16"},"nodeType":"YulFunctionCall","src":"4936:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:16"},"nodeType":"YulFunctionCall","src":"4932:32:16"},"nodeType":"YulIf","src":"4929:119:16"},{"nodeType":"YulBlock","src":"5058:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:16"},"nodeType":"YulFunctionCall","src":"5133:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:16"},"nodeType":"YulFunctionCall","src":"5112:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:16"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:16","type":""}],"src":"4853:329:16"},{"body":{"nodeType":"YulBlock","src":"5271:391:16","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:16"},"nodeType":"YulFunctionCall","src":"5319:79:16"},"nodeType":"YulExpressionStatement","src":"5319:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:16"},"nodeType":"YulFunctionCall","src":"5288:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:16"},"nodeType":"YulFunctionCall","src":"5284:32:16"},"nodeType":"YulIf","src":"5281:119:16"},{"nodeType":"YulBlock","src":"5410:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:16"},"nodeType":"YulFunctionCall","src":"5485:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:16"},"nodeType":"YulFunctionCall","src":"5464:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:16"}]}]},{"nodeType":"YulBlock","src":"5537:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:16"},"nodeType":"YulFunctionCall","src":"5613:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:16"},"nodeType":"YulFunctionCall","src":"5592:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:16","type":""}],"src":"5188:474:16"},{"body":{"nodeType":"YulBlock","src":"5696:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:16"},"nodeType":"YulFunctionCall","src":"5706:88:16"},"nodeType":"YulExpressionStatement","src":"5706:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:16"},"nodeType":"YulFunctionCall","src":"5803:15:16"},"nodeType":"YulExpressionStatement","src":"5803:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:16"},"nodeType":"YulFunctionCall","src":"5827:15:16"},"nodeType":"YulExpressionStatement","src":"5827:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:16"},{"body":{"nodeType":"YulBlock","src":"5905:269:16","statements":[{"nodeType":"YulAssignment","src":"5915:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:16"},"nodeType":"YulFunctionCall","src":"5925:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:16"},"nodeType":"YulFunctionCall","src":"5972:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:16","statements":[{"nodeType":"YulAssignment","src":"6037:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:16"},"nodeType":"YulFunctionCall","src":"6047:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:16"},"nodeType":"YulFunctionCall","src":"5996:26:16"},"nodeType":"YulIf","src":"5993:81:16"},{"body":{"nodeType":"YulBlock","src":"6126:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:16"},"nodeType":"YulFunctionCall","src":"6140:18:16"},"nodeType":"YulExpressionStatement","src":"6140:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:16"},"nodeType":"YulFunctionCall","src":"6110:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:16"},"nodeType":"YulFunctionCall","src":"6087:38:16"},"nodeType":"YulIf","src":"6084:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:16","type":""}],"src":"5854:320:16"},{"body":{"nodeType":"YulBlock","src":"6208:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:16"},"nodeType":"YulFunctionCall","src":"6218:88:16"},"nodeType":"YulExpressionStatement","src":"6218:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:16"},"nodeType":"YulFunctionCall","src":"6315:15:16"},"nodeType":"YulExpressionStatement","src":"6315:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:16"},"nodeType":"YulFunctionCall","src":"6339:15:16"},"nodeType":"YulExpressionStatement","src":"6339:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:16"},{"body":{"nodeType":"YulBlock","src":"6410:147:16","statements":[{"nodeType":"YulAssignment","src":"6420:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:16"},"nodeType":"YulFunctionCall","src":"6425:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:16"}]},{"nodeType":"YulAssignment","src":"6454:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:16"},"nodeType":"YulFunctionCall","src":"6459:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:16"}]},{"nodeType":"YulAssignment","src":"6488:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:16"},"nodeType":"YulFunctionCall","src":"6495:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:16"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:16"},"nodeType":"YulFunctionCall","src":"6530:18:16"},"nodeType":"YulExpressionStatement","src":"6530:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:16"},"nodeType":"YulFunctionCall","src":"6517:10:16"},"nodeType":"YulIf","src":"6514:36:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:16","type":""}],"src":"6366:191:16"},{"body":{"nodeType":"YulBlock","src":"6669:118:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:16"},"nodeType":"YulFunctionCall","src":"6687:14:16"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:16","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:16"},"nodeType":"YulFunctionCall","src":"6680:58:16"},"nodeType":"YulExpressionStatement","src":"6680:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:16"},"nodeType":"YulFunctionCall","src":"6755:15:16"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:16","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:16"},"nodeType":"YulFunctionCall","src":"6748:32:16"},"nodeType":"YulExpressionStatement","src":"6748:32:16"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:16","type":""}],"src":"6563:224:16"},{"body":{"nodeType":"YulBlock","src":"6939:220:16","statements":[{"nodeType":"YulAssignment","src":"6949:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:16","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:16"},"nodeType":"YulFunctionCall","src":"6956:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:16"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:16"},"nodeType":"YulFunctionCall","src":"7032:93:16"},"nodeType":"YulExpressionStatement","src":"7032:93:16"},{"nodeType":"YulAssignment","src":"7134:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:16"},"nodeType":"YulFunctionCall","src":"7141:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:16"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:16","type":""}],"src":"6793:366:16"},{"body":{"nodeType":"YulBlock","src":"7336:248:16","statements":[{"nodeType":"YulAssignment","src":"7346:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:16"},"nodeType":"YulFunctionCall","src":"7354:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:16"},"nodeType":"YulFunctionCall","src":"7389:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:16"},"nodeType":"YulFunctionCall","src":"7408:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:16"},"nodeType":"YulFunctionCall","src":"7382:47:16"},"nodeType":"YulExpressionStatement","src":"7382:47:16"},{"nodeType":"YulAssignment","src":"7438:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:16"},"nodeType":"YulFunctionCall","src":"7446:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:16","type":""}],"src":"7165:419:16"},{"body":{"nodeType":"YulBlock","src":"7696:117:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:16"},"nodeType":"YulFunctionCall","src":"7714:14:16"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:16","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:16"},"nodeType":"YulFunctionCall","src":"7707:58:16"},"nodeType":"YulExpressionStatement","src":"7707:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:16"},"nodeType":"YulFunctionCall","src":"7782:15:16"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:16","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:16"},"nodeType":"YulFunctionCall","src":"7775:31:16"},"nodeType":"YulExpressionStatement","src":"7775:31:16"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:16","type":""}],"src":"7590:223:16"},{"body":{"nodeType":"YulBlock","src":"7965:220:16","statements":[{"nodeType":"YulAssignment","src":"7975:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:16","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:16"},"nodeType":"YulFunctionCall","src":"7982:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:16"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:16"},"nodeType":"YulFunctionCall","src":"8058:93:16"},"nodeType":"YulExpressionStatement","src":"8058:93:16"},{"nodeType":"YulAssignment","src":"8160:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:16"},"nodeType":"YulFunctionCall","src":"8167:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:16"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:16","type":""}],"src":"7819:366:16"},{"body":{"nodeType":"YulBlock","src":"8362:248:16","statements":[{"nodeType":"YulAssignment","src":"8372:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:16"},"nodeType":"YulFunctionCall","src":"8380:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:16"},"nodeType":"YulFunctionCall","src":"8415:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:16"},"nodeType":"YulFunctionCall","src":"8434:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:16"},"nodeType":"YulFunctionCall","src":"8408:47:16"},"nodeType":"YulExpressionStatement","src":"8408:47:16"},{"nodeType":"YulAssignment","src":"8464:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:16"},"nodeType":"YulFunctionCall","src":"8472:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:16","type":""}],"src":"8191:419:16"},{"body":{"nodeType":"YulBlock","src":"8722:115:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:16"},"nodeType":"YulFunctionCall","src":"8740:14:16"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:16","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:16"},"nodeType":"YulFunctionCall","src":"8733:58:16"},"nodeType":"YulExpressionStatement","src":"8733:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:16"},"nodeType":"YulFunctionCall","src":"8808:15:16"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:16","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:16"},"nodeType":"YulFunctionCall","src":"8801:29:16"},"nodeType":"YulExpressionStatement","src":"8801:29:16"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:16","type":""}],"src":"8616:221:16"},{"body":{"nodeType":"YulBlock","src":"8989:220:16","statements":[{"nodeType":"YulAssignment","src":"8999:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:16","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:16"},"nodeType":"YulFunctionCall","src":"9006:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:16"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:16"},"nodeType":"YulFunctionCall","src":"9082:93:16"},"nodeType":"YulExpressionStatement","src":"9082:93:16"},{"nodeType":"YulAssignment","src":"9184:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:16"},"nodeType":"YulFunctionCall","src":"9191:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:16"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:16","type":""}],"src":"8843:366:16"},{"body":{"nodeType":"YulBlock","src":"9386:248:16","statements":[{"nodeType":"YulAssignment","src":"9396:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:16"},"nodeType":"YulFunctionCall","src":"9404:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:16"},"nodeType":"YulFunctionCall","src":"9439:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:16"},"nodeType":"YulFunctionCall","src":"9458:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:16"},"nodeType":"YulFunctionCall","src":"9432:47:16"},"nodeType":"YulExpressionStatement","src":"9432:47:16"},{"nodeType":"YulAssignment","src":"9488:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:16"},"nodeType":"YulFunctionCall","src":"9496:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:16","type":""}],"src":"9215:419:16"},{"body":{"nodeType":"YulBlock","src":"9746:73:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:16"},"nodeType":"YulFunctionCall","src":"9764:14:16"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:16","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:16"},"nodeType":"YulFunctionCall","src":"9757:55:16"},"nodeType":"YulExpressionStatement","src":"9757:55:16"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:16","type":""}],"src":"9640:179:16"},{"body":{"nodeType":"YulBlock","src":"9971:220:16","statements":[{"nodeType":"YulAssignment","src":"9981:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:16","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:16"},"nodeType":"YulFunctionCall","src":"9988:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:16"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:16"},"nodeType":"YulFunctionCall","src":"10064:93:16"},"nodeType":"YulExpressionStatement","src":"10064:93:16"},{"nodeType":"YulAssignment","src":"10166:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:16"},"nodeType":"YulFunctionCall","src":"10173:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:16"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:16","type":""}],"src":"9825:366:16"},{"body":{"nodeType":"YulBlock","src":"10368:248:16","statements":[{"nodeType":"YulAssignment","src":"10378:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:16"},"nodeType":"YulFunctionCall","src":"10386:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:16"},"nodeType":"YulFunctionCall","src":"10421:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:16"},"nodeType":"YulFunctionCall","src":"10440:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:16"},"nodeType":"YulFunctionCall","src":"10414:47:16"},"nodeType":"YulExpressionStatement","src":"10414:47:16"},{"nodeType":"YulAssignment","src":"10470:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:16"},"nodeType":"YulFunctionCall","src":"10478:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:16","type":""}],"src":"10197:419:16"},{"body":{"nodeType":"YulBlock","src":"10728:118:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:16"},"nodeType":"YulFunctionCall","src":"10746:14:16"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:16","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:16"},"nodeType":"YulFunctionCall","src":"10739:58:16"},"nodeType":"YulExpressionStatement","src":"10739:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:16"},"nodeType":"YulFunctionCall","src":"10814:15:16"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:16","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:16"},"nodeType":"YulFunctionCall","src":"10807:32:16"},"nodeType":"YulExpressionStatement","src":"10807:32:16"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:16","type":""}],"src":"10622:224:16"},{"body":{"nodeType":"YulBlock","src":"10998:220:16","statements":[{"nodeType":"YulAssignment","src":"11008:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:16","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:16"},"nodeType":"YulFunctionCall","src":"11015:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:16"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:16"},"nodeType":"YulFunctionCall","src":"11091:93:16"},"nodeType":"YulExpressionStatement","src":"11091:93:16"},{"nodeType":"YulAssignment","src":"11193:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:16"},"nodeType":"YulFunctionCall","src":"11200:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:16"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:16","type":""}],"src":"10852:366:16"},{"body":{"nodeType":"YulBlock","src":"11395:248:16","statements":[{"nodeType":"YulAssignment","src":"11405:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:16"},"nodeType":"YulFunctionCall","src":"11413:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:16"},"nodeType":"YulFunctionCall","src":"11448:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:16"},"nodeType":"YulFunctionCall","src":"11467:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:16"},"nodeType":"YulFunctionCall","src":"11441:47:16"},"nodeType":"YulExpressionStatement","src":"11441:47:16"},{"nodeType":"YulAssignment","src":"11497:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:16"},"nodeType":"YulFunctionCall","src":"11505:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:16","type":""}],"src":"11224:419:16"},{"body":{"nodeType":"YulBlock","src":"11755:116:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:16"},"nodeType":"YulFunctionCall","src":"11773:14:16"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:16","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:16"},"nodeType":"YulFunctionCall","src":"11766:58:16"},"nodeType":"YulExpressionStatement","src":"11766:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:16"},"nodeType":"YulFunctionCall","src":"11841:15:16"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:16","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:16"},"nodeType":"YulFunctionCall","src":"11834:30:16"},"nodeType":"YulExpressionStatement","src":"11834:30:16"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:16","type":""}],"src":"11649:222:16"},{"body":{"nodeType":"YulBlock","src":"12023:220:16","statements":[{"nodeType":"YulAssignment","src":"12033:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:16","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:16"},"nodeType":"YulFunctionCall","src":"12040:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:16"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:16"},"nodeType":"YulFunctionCall","src":"12116:93:16"},"nodeType":"YulExpressionStatement","src":"12116:93:16"},{"nodeType":"YulAssignment","src":"12218:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:16"},"nodeType":"YulFunctionCall","src":"12225:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:16"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:16","type":""}],"src":"11877:366:16"},{"body":{"nodeType":"YulBlock","src":"12420:248:16","statements":[{"nodeType":"YulAssignment","src":"12430:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:16"},"nodeType":"YulFunctionCall","src":"12438:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:16"},"nodeType":"YulFunctionCall","src":"12473:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:16"},"nodeType":"YulFunctionCall","src":"12492:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:16"},"nodeType":"YulFunctionCall","src":"12466:47:16"},"nodeType":"YulExpressionStatement","src":"12466:47:16"},{"nodeType":"YulAssignment","src":"12522:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:16"},"nodeType":"YulFunctionCall","src":"12530:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:16","type":""}],"src":"12249:419:16"},{"body":{"nodeType":"YulBlock","src":"12780:119:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:16"},"nodeType":"YulFunctionCall","src":"12798:14:16"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:16","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:16"},"nodeType":"YulFunctionCall","src":"12791:58:16"},"nodeType":"YulExpressionStatement","src":"12791:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:16"},"nodeType":"YulFunctionCall","src":"12866:15:16"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:16","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:16"},"nodeType":"YulFunctionCall","src":"12859:33:16"},"nodeType":"YulExpressionStatement","src":"12859:33:16"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:16","type":""}],"src":"12674:225:16"},{"body":{"nodeType":"YulBlock","src":"13051:220:16","statements":[{"nodeType":"YulAssignment","src":"13061:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:16","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:16"},"nodeType":"YulFunctionCall","src":"13068:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:16"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:16"},"nodeType":"YulFunctionCall","src":"13144:93:16"},"nodeType":"YulExpressionStatement","src":"13144:93:16"},{"nodeType":"YulAssignment","src":"13246:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:16"},"nodeType":"YulFunctionCall","src":"13253:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:16"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:16","type":""}],"src":"12905:366:16"},{"body":{"nodeType":"YulBlock","src":"13448:248:16","statements":[{"nodeType":"YulAssignment","src":"13458:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:16"},"nodeType":"YulFunctionCall","src":"13466:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:16"},"nodeType":"YulFunctionCall","src":"13501:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:16"},"nodeType":"YulFunctionCall","src":"13520:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:16"},"nodeType":"YulFunctionCall","src":"13494:47:16"},"nodeType":"YulExpressionStatement","src":"13494:47:16"},{"nodeType":"YulAssignment","src":"13550:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:16"},"nodeType":"YulFunctionCall","src":"13558:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:16","type":""}],"src":"13277:419:16"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea264697066735822122086fdaea977c3764a4ee30a5ca19d233bd3d76ec8e6f2a08cf5232e70e2d9dad464736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 REVERT 0xAE 0xA9 PUSH24 0xC3764A4EE30A5CA19D233BD3D76EC8E6F2A08CF5232E70E2 0xD9 0xDA 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1532:11312:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3419:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3987:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;3104:91::-;3162:5;3186:2;3179:9;;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;3419:125::-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;3987:149::-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;10457:340:0:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;12073:91::-;;;;:::o;12752:90::-;;;;:::o;7:99:16:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"931000","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"432","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":15,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":21,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":23,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":25,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":27,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a371a0024febf5a667fed16c680abfdcdc3342faad0550392932423ce1a4ceba64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH18 0xA0024FEBF5A667FED16C680ABFDCDC3342FA 0xAD SDIV POP CODECOPY 0x29 ORIGIN TIMESTAMP EXTCODECOPY 0xE1 LOG4 0xCE 0xBA PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"194:9169:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a371a0024febf5a667fed16c680abfdcdc3342faad0550392932423ce1a4ceba64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH18 0xA0024FEBF5A667FED16C680ABFDCDC3342FA 0xAD SDIV POP CODECOPY 0x29 ORIGIN TIMESTAMP EXTCODECOPY 0xE1 LOG4 0xCE 0xBA PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"194:9169:3:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c29294e9a7945ee1c17aea97a4c738ac270bec445d37cd6cae443fc0caddb41264736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP3 SWAP5 0xE9 0xA7 SWAP5 0x5E 0xE1 0xC1 PUSH27 0xEA97A4C738AC270BEC445D37CD6CAE443FC0CADDB41264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"220:2559:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c29294e9a7945ee1c17aea97a4c738ac270bec445d37cd6cae443fc0caddb41264736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP3 SWAP5 0xE9 0xA7 SWAP5 0x5E 0xE1 0xC1 PUSH27 0xEA97A4C738AC270BEC445D37CD6CAE443FC0CADDB41264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"220:2559:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(int256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d49866380d66d8d35d4a9114da523643ad70362ac2115bf943870317c5f76df964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SWAP9 PUSH7 0x380D66D8D35D4A SWAP2 EQ 0xDA MSTORE CALLDATASIZE NUMBER 0xAD PUSH17 0x362AC2115BF943870317C5F76DF964736F PUSH13 0x63430008110033000000000000 ","sourceMap":"202:12582:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d49866380d66d8d35d4a9114da523643ad70362ac2115bf943870317c5f76df964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SWAP9 PUSH7 0x380D66D8D35D4A SWAP2 EQ 0xDA MSTORE CALLDATASIZE NUMBER 0xAD PUSH17 0x362AC2115BF943870317C5F76DF964736F PUSH13 0x63430008110033000000000000 ","sourceMap":"202:12582:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f629ff033a0960039f8fa55117e2507e2e6b7ce094b0faef9e4566377b8c5c964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x629FF033A0960039F8FA55117E2507E2 0xE6 0xB7 0xCE MULMOD 0x4B 0xF 0xAE 0xF9 0xE4 JUMP PUSH4 0x77B8C5C9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1047:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f629ff033a0960039f8fa55117e2507e2e6b7ce094b0faef9e4566377b8c5c964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x629FF033A0960039F8FA55117E2507E2 0xE6 0xB7 0xCE MULMOD 0x4B 0xF 0xAE 0xF9 0xE4 JUMP PUSH4 0x77B8C5C9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1047:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/HyperContract.sol":{"HyperContract":{"abi":[{"inputs":[],"name":"lastMessageID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"ethereumDomain","type":"uint32"},{"internalType":"address","name":"igpAddress","type":"address"},{"internalType":"uint256","name":"gasAmount","type":"uint256"}],"name":"processMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint32","name":"ethereumDomain","type":"uint32"},{"internalType":"address","name":"routerAddress","type":"address"},{"internalType":"address","name":"toAddress","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"sendTransaction","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506106d7806100206000396000f3fe6080604052600436106100345760003560e01c80633dd3728714610039578063621fbd5914610055578063cef5ddf014610080575b600080fd5b610053600480360381019061004e91906102a7565b6100a9565b005b34801561006157600080fd5b5061006a610128565b6040516100779190610313565b60405180910390f35b34801561008c57600080fd5b506100a760048036038101906100a29190610474565b61012e565b005b60008290508073ffffffffffffffffffffffffffffffffffffffff166311bf2c18346000548786336040518663ffffffff1660e01b81526004016100f09493929190610538565b6000604051808303818588803b15801561010957600080fd5b505af115801561011d573d6000803e3d6000fd5b505050505050505050565b60005481565b60008490508073ffffffffffffffffffffffffffffffffffffffff16631ddce514878686866040518563ffffffff1660e01b815260040161017294939291906105fc565b6020604051808303816000875af1158015610191573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b59190610674565b600081905550505050505050565b6000604051905090565b600080fd5b600080fd5b600063ffffffff82169050919050565b6101f0816101d7565b81146101fb57600080fd5b50565b60008135905061020d816101e7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061023e82610213565b9050919050565b61024e81610233565b811461025957600080fd5b50565b60008135905061026b81610245565b92915050565b6000819050919050565b61028481610271565b811461028f57600080fd5b50565b6000813590506102a18161027b565b92915050565b6000806000606084860312156102c0576102bf6101cd565b5b60006102ce868287016101fe565b93505060206102df8682870161025c565b92505060406102f086828701610292565b9150509250925092565b6000819050919050565b61030d816102fa565b82525050565b60006020820190506103286000830184610304565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61038182610338565b810181811067ffffffffffffffff821117156103a05761039f610349565b5b80604052505050565b60006103b36101c3565b90506103bf8282610378565b919050565b600067ffffffffffffffff8211156103df576103de610349565b5b6103e882610338565b9050602081019050919050565b82818337600083830152505050565b6000610417610412846103c4565b6103a9565b90508281526020810184848401111561043357610432610333565b5b61043e8482856103f5565b509392505050565b600082601f83011261045b5761045a61032e565b5b813561046b848260208601610404565b91505092915050565b600080600080600060a086880312156104905761048f6101cd565b5b600061049e888289016101fe565b95505060206104af8882890161025c565b94505060406104c08882890161025c565b93505060606104d188828901610292565b925050608086013567ffffffffffffffff8111156104f2576104f16101d2565b5b6104fe88828901610446565b9150509295509295909350565b610514816101d7565b82525050565b61052381610271565b82525050565b61053281610233565b82525050565b600060808201905061054d6000830187610304565b61055a602083018661050b565b610567604083018561051a565b6105746060830184610529565b95945050505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105b757808201518184015260208101905061059c565b60008484015250505050565b60006105ce8261057d565b6105d88185610588565b93506105e8818560208601610599565b6105f181610338565b840191505092915050565b6000608082019050610611600083018761050b565b61061e6020830186610529565b61062b604083018561051a565b818103606083015261063d81846105c3565b905095945050505050565b610651816102fa565b811461065c57600080fd5b50565b60008151905061066e81610648565b92915050565b60006020828403121561068a576106896101cd565b5b60006106988482850161065f565b9150509291505056fea264697066735822122064d3340b4836bf02d22bdb9b6da172e403fdb38e727092d8fd180502974fd9a864736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D7 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3DD37287 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x621FBD59 EQ PUSH2 0x55 JUMPI DUP1 PUSH4 0xCEF5DDF0 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x53 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E SWAP2 SWAP1 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0xA9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A PUSH2 0x128 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x474 JUMP JUMPDEST PUSH2 0x12E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x11BF2C18 CALLVALUE PUSH1 0x0 SLOAD DUP8 DUP7 CALLER PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x538 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP5 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1DDCE514 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x191 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x674 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0 DUP2 PUSH2 0x1D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20D DUP2 PUSH2 0x1E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E DUP3 PUSH2 0x213 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH2 0x233 JUMP JUMPDEST DUP2 EQ PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26B DUP2 PUSH2 0x245 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x284 DUP2 PUSH2 0x271 JUMP JUMPDEST DUP2 EQ PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A1 DUP2 PUSH2 0x27B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C0 JUMPI PUSH2 0x2BF PUSH2 0x1CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CE DUP7 DUP3 DUP8 ADD PUSH2 0x1FE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2DF DUP7 DUP3 DUP8 ADD PUSH2 0x25C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2F0 DUP7 DUP3 DUP8 ADD PUSH2 0x292 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30D DUP2 PUSH2 0x2FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x328 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x304 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x381 DUP3 PUSH2 0x338 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3A0 JUMPI PUSH2 0x39F PUSH2 0x349 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3 PUSH2 0x1C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x3BF DUP3 DUP3 PUSH2 0x378 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3DF JUMPI PUSH2 0x3DE PUSH2 0x349 JUMP JUMPDEST JUMPDEST PUSH2 0x3E8 DUP3 PUSH2 0x338 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x417 PUSH2 0x412 DUP5 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x433 JUMPI PUSH2 0x432 PUSH2 0x333 JUMP JUMPDEST JUMPDEST PUSH2 0x43E DUP5 DUP3 DUP6 PUSH2 0x3F5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x45B JUMPI PUSH2 0x45A PUSH2 0x32E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x46B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x404 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x490 JUMPI PUSH2 0x48F PUSH2 0x1CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x49E DUP9 DUP3 DUP10 ADD PUSH2 0x1FE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4AF DUP9 DUP3 DUP10 ADD PUSH2 0x25C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4C0 DUP9 DUP3 DUP10 ADD PUSH2 0x25C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4D1 DUP9 DUP3 DUP10 ADD PUSH2 0x292 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4F2 JUMPI PUSH2 0x4F1 PUSH2 0x1D2 JUMP JUMPDEST JUMPDEST PUSH2 0x4FE DUP9 DUP3 DUP10 ADD PUSH2 0x446 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x514 DUP2 PUSH2 0x1D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x523 DUP2 PUSH2 0x271 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x532 DUP2 PUSH2 0x233 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x54D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x304 JUMP JUMPDEST PUSH2 0x55A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x50B JUMP JUMPDEST PUSH2 0x567 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x51A JUMP JUMPDEST PUSH2 0x574 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x529 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5B7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x59C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CE DUP3 PUSH2 0x57D JUMP JUMPDEST PUSH2 0x5D8 DUP2 DUP6 PUSH2 0x588 JUMP JUMPDEST SWAP4 POP PUSH2 0x5E8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x599 JUMP JUMPDEST PUSH2 0x5F1 DUP2 PUSH2 0x338 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x611 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x50B JUMP JUMPDEST PUSH2 0x61E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x529 JUMP JUMPDEST PUSH2 0x62B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x51A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x63D DUP2 DUP5 PUSH2 0x5C3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x651 DUP2 PUSH2 0x2FA JUMP JUMPDEST DUP2 EQ PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x66E DUP2 PUSH2 0x648 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x68A JUMPI PUSH2 0x689 PUSH2 0x1CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x698 DUP5 DUP3 DUP6 ADD PUSH2 0x65F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xD3340B4836 0xBF MUL 0xD2 0x2B 0xDB SWAP12 PUSH14 0xA172E403FDB38E727092D8FD1805 MUL SWAP8 0x4F 0xD9 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"229:1169:8:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@lastMessageID_2249":{"entryPoint":296,"id":2249,"parameterSlots":0,"returnSlots":0},"@processMessage_2311":{"entryPoint":169,"id":2311,"parameterSlots":3,"returnSlots":0},"@sendTransaction_2281":{"entryPoint":302,"id":2281,"parameterSlots":5,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":1028,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":604,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":1631,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":1094,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":658,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":510,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":1652,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":1140,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint32t_addresst_uint256":{"entryPoint":679,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1321,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":772,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":1475,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1306,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":1291,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":787,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint32_t_uint256_t_address__to_t_bytes32_t_uint32_t_uint256_t_address__fromStack_reversed":{"entryPoint":1336,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint32_t_address_t_uint256_t_bytes_memory_ptr__to_t_uint32_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":1532,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_memory":{"entryPoint":937,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":451,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":964,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":1405,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":1416,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":563,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":762,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":531,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":625,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":471,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":1013,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1433,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":888,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":841,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":814,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":819,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":466,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":461,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":824,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":581,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":1608,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":487,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9035:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"378:49:16","statements":[{"nodeType":"YulAssignment","src":"388:33:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"410:10:16","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:16"},"nodeType":"YulFunctionCall","src":"399:22:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:16"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:16","type":""}],"src":"334:93:16"},{"body":{"nodeType":"YulBlock","src":"475:78:16","statements":[{"body":{"nodeType":"YulBlock","src":"531:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"540:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"543:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"533:6:16"},"nodeType":"YulFunctionCall","src":"533:12:16"},"nodeType":"YulExpressionStatement","src":"533:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"498:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"522:5:16"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"505:16:16"},"nodeType":"YulFunctionCall","src":"505:23:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"495:2:16"},"nodeType":"YulFunctionCall","src":"495:34:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"488:6:16"},"nodeType":"YulFunctionCall","src":"488:42:16"},"nodeType":"YulIf","src":"485:62:16"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"468:5:16","type":""}],"src":"433:120:16"},{"body":{"nodeType":"YulBlock","src":"610:86:16","statements":[{"nodeType":"YulAssignment","src":"620:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"642:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"629:12:16"},"nodeType":"YulFunctionCall","src":"629:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"620:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"684:5:16"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"658:25:16"},"nodeType":"YulFunctionCall","src":"658:32:16"},"nodeType":"YulExpressionStatement","src":"658:32:16"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"588:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"596:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"604:5:16","type":""}],"src":"559:137:16"},{"body":{"nodeType":"YulBlock","src":"747:81:16","statements":[{"nodeType":"YulAssignment","src":"757:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"772:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"779:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"768:3:16"},"nodeType":"YulFunctionCall","src":"768:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"757:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"729:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"739:7:16","type":""}],"src":"702:126:16"},{"body":{"nodeType":"YulBlock","src":"879:51:16","statements":[{"nodeType":"YulAssignment","src":"889:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"918:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"900:17:16"},"nodeType":"YulFunctionCall","src":"900:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"889:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"861:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"871:7:16","type":""}],"src":"834:96:16"},{"body":{"nodeType":"YulBlock","src":"979:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"1036:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1045:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1048:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1038:6:16"},"nodeType":"YulFunctionCall","src":"1038:12:16"},"nodeType":"YulExpressionStatement","src":"1038:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1002:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1027:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1009:17:16"},"nodeType":"YulFunctionCall","src":"1009:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"999:2:16"},"nodeType":"YulFunctionCall","src":"999:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"992:6:16"},"nodeType":"YulFunctionCall","src":"992:43:16"},"nodeType":"YulIf","src":"989:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"972:5:16","type":""}],"src":"936:122:16"},{"body":{"nodeType":"YulBlock","src":"1116:87:16","statements":[{"nodeType":"YulAssignment","src":"1126:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1148:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1135:12:16"},"nodeType":"YulFunctionCall","src":"1135:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1126:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1191:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1164:26:16"},"nodeType":"YulFunctionCall","src":"1164:33:16"},"nodeType":"YulExpressionStatement","src":"1164:33:16"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1094:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1102:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1110:5:16","type":""}],"src":"1064:139:16"},{"body":{"nodeType":"YulBlock","src":"1254:32:16","statements":[{"nodeType":"YulAssignment","src":"1264:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"1275:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1264:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1236:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1246:7:16","type":""}],"src":"1209:77:16"},{"body":{"nodeType":"YulBlock","src":"1335:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"1392:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1401:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1404:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1394:6:16"},"nodeType":"YulFunctionCall","src":"1394:12:16"},"nodeType":"YulExpressionStatement","src":"1394:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1358:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1383:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1365:17:16"},"nodeType":"YulFunctionCall","src":"1365:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1355:2:16"},"nodeType":"YulFunctionCall","src":"1355:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1348:6:16"},"nodeType":"YulFunctionCall","src":"1348:43:16"},"nodeType":"YulIf","src":"1345:63:16"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1328:5:16","type":""}],"src":"1292:122:16"},{"body":{"nodeType":"YulBlock","src":"1472:87:16","statements":[{"nodeType":"YulAssignment","src":"1482:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1504:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1491:12:16"},"nodeType":"YulFunctionCall","src":"1491:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1482:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1547:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1520:26:16"},"nodeType":"YulFunctionCall","src":"1520:33:16"},"nodeType":"YulExpressionStatement","src":"1520:33:16"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1450:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1458:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1466:5:16","type":""}],"src":"1420:139:16"},{"body":{"nodeType":"YulBlock","src":"1664:518:16","statements":[{"body":{"nodeType":"YulBlock","src":"1710:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1712:77:16"},"nodeType":"YulFunctionCall","src":"1712:79:16"},"nodeType":"YulExpressionStatement","src":"1712:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1685:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1694:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1681:3:16"},"nodeType":"YulFunctionCall","src":"1681:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1706:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1677:3:16"},"nodeType":"YulFunctionCall","src":"1677:32:16"},"nodeType":"YulIf","src":"1674:119:16"},{"nodeType":"YulBlock","src":"1803:116:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1818:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1832:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1822:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1847:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1881:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1892:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1877:3:16"},"nodeType":"YulFunctionCall","src":"1877:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1901:7:16"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"1857:19:16"},"nodeType":"YulFunctionCall","src":"1857:52:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1847:6:16"}]}]},{"nodeType":"YulBlock","src":"1929:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1944:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1958:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1948:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1974:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2009:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"2020:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2005:3:16"},"nodeType":"YulFunctionCall","src":"2005:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2029:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1984:20:16"},"nodeType":"YulFunctionCall","src":"1984:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1974:6:16"}]}]},{"nodeType":"YulBlock","src":"2057:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2072:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2086:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2076:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2102:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2137:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"2148:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2133:3:16"},"nodeType":"YulFunctionCall","src":"2133:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2157:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2112:20:16"},"nodeType":"YulFunctionCall","src":"2112:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2102:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint32t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1618:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1629:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1641:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1649:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1657:6:16","type":""}],"src":"1565:617:16"},{"body":{"nodeType":"YulBlock","src":"2233:32:16","statements":[{"nodeType":"YulAssignment","src":"2243:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2254:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2243:7:16"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2215:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2225:7:16","type":""}],"src":"2188:77:16"},{"body":{"nodeType":"YulBlock","src":"2336:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2353:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2376:5:16"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2358:17:16"},"nodeType":"YulFunctionCall","src":"2358:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2346:6:16"},"nodeType":"YulFunctionCall","src":"2346:37:16"},"nodeType":"YulExpressionStatement","src":"2346:37:16"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2324:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2331:3:16","type":""}],"src":"2271:118:16"},{"body":{"nodeType":"YulBlock","src":"2493:124:16","statements":[{"nodeType":"YulAssignment","src":"2503:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2515:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2526:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2511:3:16"},"nodeType":"YulFunctionCall","src":"2511:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2503:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2583:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2596:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2607:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2592:3:16"},"nodeType":"YulFunctionCall","src":"2592:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"2539:43:16"},"nodeType":"YulFunctionCall","src":"2539:71:16"},"nodeType":"YulExpressionStatement","src":"2539:71:16"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2465:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2477:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2488:4:16","type":""}],"src":"2395:222:16"},{"body":{"nodeType":"YulBlock","src":"2712:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2729:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2732:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2722:6:16"},"nodeType":"YulFunctionCall","src":"2722:12:16"},"nodeType":"YulExpressionStatement","src":"2722:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2623:117:16"},{"body":{"nodeType":"YulBlock","src":"2835:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2852:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2855:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2845:6:16"},"nodeType":"YulFunctionCall","src":"2845:12:16"},"nodeType":"YulExpressionStatement","src":"2845:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"2746:117:16"},{"body":{"nodeType":"YulBlock","src":"2917:54:16","statements":[{"nodeType":"YulAssignment","src":"2927:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2945:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2952:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2941:3:16"},"nodeType":"YulFunctionCall","src":"2941:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2961:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2957:3:16"},"nodeType":"YulFunctionCall","src":"2957:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2937:3:16"},"nodeType":"YulFunctionCall","src":"2937:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2927:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2900:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2910:6:16","type":""}],"src":"2869:102:16"},{"body":{"nodeType":"YulBlock","src":"3005:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3022:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3025:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3015:6:16"},"nodeType":"YulFunctionCall","src":"3015:88:16"},"nodeType":"YulExpressionStatement","src":"3015:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3119:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3122:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3112:6:16"},"nodeType":"YulFunctionCall","src":"3112:15:16"},"nodeType":"YulExpressionStatement","src":"3112:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3143:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3146:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3136:6:16"},"nodeType":"YulFunctionCall","src":"3136:15:16"},"nodeType":"YulExpressionStatement","src":"3136:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2977:180:16"},{"body":{"nodeType":"YulBlock","src":"3206:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3216:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3238:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3268:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3246:21:16"},"nodeType":"YulFunctionCall","src":"3246:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3234:3:16"},"nodeType":"YulFunctionCall","src":"3234:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3220:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3385:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3387:16:16"},"nodeType":"YulFunctionCall","src":"3387:18:16"},"nodeType":"YulExpressionStatement","src":"3387:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3328:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"3340:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3325:2:16"},"nodeType":"YulFunctionCall","src":"3325:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3364:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3376:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3361:2:16"},"nodeType":"YulFunctionCall","src":"3361:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3322:2:16"},"nodeType":"YulFunctionCall","src":"3322:62:16"},"nodeType":"YulIf","src":"3319:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3423:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3427:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3416:6:16"},"nodeType":"YulFunctionCall","src":"3416:22:16"},"nodeType":"YulExpressionStatement","src":"3416:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3192:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"3200:4:16","type":""}],"src":"3163:281:16"},{"body":{"nodeType":"YulBlock","src":"3491:88:16","statements":[{"nodeType":"YulAssignment","src":"3501:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3511:18:16"},"nodeType":"YulFunctionCall","src":"3511:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3501:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3560:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"3568:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3540:19:16"},"nodeType":"YulFunctionCall","src":"3540:33:16"},"nodeType":"YulExpressionStatement","src":"3540:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3475:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3484:6:16","type":""}],"src":"3450:129:16"},{"body":{"nodeType":"YulBlock","src":"3651:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"3756:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3758:16:16"},"nodeType":"YulFunctionCall","src":"3758:18:16"},"nodeType":"YulExpressionStatement","src":"3758:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3728:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3736:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3725:2:16"},"nodeType":"YulFunctionCall","src":"3725:30:16"},"nodeType":"YulIf","src":"3722:56:16"},{"nodeType":"YulAssignment","src":"3788:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3818:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3796:21:16"},"nodeType":"YulFunctionCall","src":"3796:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3788:4:16"}]},{"nodeType":"YulAssignment","src":"3862:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3874:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"3880:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3870:3:16"},"nodeType":"YulFunctionCall","src":"3870:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3862:4:16"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3635:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3646:4:16","type":""}],"src":"3585:307:16"},{"body":{"nodeType":"YulBlock","src":"3962:82:16","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3985:3:16"},{"name":"src","nodeType":"YulIdentifier","src":"3990:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"3995:6:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3972:12:16"},"nodeType":"YulFunctionCall","src":"3972:30:16"},"nodeType":"YulExpressionStatement","src":"3972:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4022:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4027:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4018:3:16"},"nodeType":"YulFunctionCall","src":"4018:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"4036:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4011:6:16"},"nodeType":"YulFunctionCall","src":"4011:27:16"},"nodeType":"YulExpressionStatement","src":"4011:27:16"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3944:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3949:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"3954:6:16","type":""}],"src":"3898:146:16"},{"body":{"nodeType":"YulBlock","src":"4133:340:16","statements":[{"nodeType":"YulAssignment","src":"4143:74:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4209:6:16"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4168:40:16"},"nodeType":"YulFunctionCall","src":"4168:48:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4152:15:16"},"nodeType":"YulFunctionCall","src":"4152:65:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4143:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4233:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"4240:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4226:6:16"},"nodeType":"YulFunctionCall","src":"4226:21:16"},"nodeType":"YulExpressionStatement","src":"4226:21:16"},{"nodeType":"YulVariableDeclaration","src":"4256:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4271:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4278:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4267:3:16"},"nodeType":"YulFunctionCall","src":"4267:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4260:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4321:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4323:77:16"},"nodeType":"YulFunctionCall","src":"4323:79:16"},"nodeType":"YulExpressionStatement","src":"4323:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4302:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4307:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4298:3:16"},"nodeType":"YulFunctionCall","src":"4298:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"4316:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4295:2:16"},"nodeType":"YulFunctionCall","src":"4295:25:16"},"nodeType":"YulIf","src":"4292:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4450:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"4455:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4460:6:16"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4413:36:16"},"nodeType":"YulFunctionCall","src":"4413:54:16"},"nodeType":"YulExpressionStatement","src":"4413:54:16"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4106:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"4111:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"4119:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4127:5:16","type":""}],"src":"4050:423:16"},{"body":{"nodeType":"YulBlock","src":"4553:277:16","statements":[{"body":{"nodeType":"YulBlock","src":"4602:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4604:77:16"},"nodeType":"YulFunctionCall","src":"4604:79:16"},"nodeType":"YulExpressionStatement","src":"4604:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4581:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4589:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4577:3:16"},"nodeType":"YulFunctionCall","src":"4577:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"4596:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4573:3:16"},"nodeType":"YulFunctionCall","src":"4573:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4566:6:16"},"nodeType":"YulFunctionCall","src":"4566:35:16"},"nodeType":"YulIf","src":"4563:122:16"},{"nodeType":"YulVariableDeclaration","src":"4694:34:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4721:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4708:12:16"},"nodeType":"YulFunctionCall","src":"4708:20:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4698:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4737:87:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4797:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4805:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:16"},"nodeType":"YulFunctionCall","src":"4793:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"4812:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"4820:3:16"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4746:46:16"},"nodeType":"YulFunctionCall","src":"4746:78:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4737:5:16"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4531:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"4539:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4547:5:16","type":""}],"src":"4492:338:16"},{"body":{"nodeType":"YulBlock","src":"4978:945:16","statements":[{"body":{"nodeType":"YulBlock","src":"5025:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5027:77:16"},"nodeType":"YulFunctionCall","src":"5027:79:16"},"nodeType":"YulExpressionStatement","src":"5027:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4999:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"5008:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4995:3:16"},"nodeType":"YulFunctionCall","src":"4995:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"5020:3:16","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4991:3:16"},"nodeType":"YulFunctionCall","src":"4991:33:16"},"nodeType":"YulIf","src":"4988:120:16"},{"nodeType":"YulBlock","src":"5118:116:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5133:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5147:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5137:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5162:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5196:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5207:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5192:3:16"},"nodeType":"YulFunctionCall","src":"5192:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5216:7:16"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"5172:19:16"},"nodeType":"YulFunctionCall","src":"5172:52:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5162:6:16"}]}]},{"nodeType":"YulBlock","src":"5244:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5259:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5273:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5263:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5289:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5324:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5335:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5320:3:16"},"nodeType":"YulFunctionCall","src":"5320:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5344:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5299:20:16"},"nodeType":"YulFunctionCall","src":"5299:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5289:6:16"}]}]},{"nodeType":"YulBlock","src":"5372:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5387:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5401:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5391:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5417:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5452:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5463:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5448:3:16"},"nodeType":"YulFunctionCall","src":"5448:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5472:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5427:20:16"},"nodeType":"YulFunctionCall","src":"5427:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5417:6:16"}]}]},{"nodeType":"YulBlock","src":"5500:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5515:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5529:2:16","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5519:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5545:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5580:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5591:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5576:3:16"},"nodeType":"YulFunctionCall","src":"5576:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5600:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5555:20:16"},"nodeType":"YulFunctionCall","src":"5555:53:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5545:6:16"}]}]},{"nodeType":"YulBlock","src":"5628:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5643:47:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5674:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5685:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5670:3:16"},"nodeType":"YulFunctionCall","src":"5670:19:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5657:12:16"},"nodeType":"YulFunctionCall","src":"5657:33:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5647:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5737:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5739:77:16"},"nodeType":"YulFunctionCall","src":"5739:79:16"},"nodeType":"YulExpressionStatement","src":"5739:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5709:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"5717:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5706:2:16"},"nodeType":"YulFunctionCall","src":"5706:30:16"},"nodeType":"YulIf","src":"5703:117:16"},{"nodeType":"YulAssignment","src":"5834:72:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5878:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5889:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5874:3:16"},"nodeType":"YulFunctionCall","src":"5874:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5898:7:16"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5844:29:16"},"nodeType":"YulFunctionCall","src":"5844:62:16"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5834:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint32t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4916:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4927:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4939:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4947:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4955:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4963:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4971:6:16","type":""}],"src":"4836:1087:16"},{"body":{"nodeType":"YulBlock","src":"5992:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6009:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6031:5:16"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"6014:16:16"},"nodeType":"YulFunctionCall","src":"6014:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6002:6:16"},"nodeType":"YulFunctionCall","src":"6002:36:16"},"nodeType":"YulExpressionStatement","src":"6002:36:16"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5980:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5987:3:16","type":""}],"src":"5929:115:16"},{"body":{"nodeType":"YulBlock","src":"6115:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6132:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6155:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6137:17:16"},"nodeType":"YulFunctionCall","src":"6137:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6125:6:16"},"nodeType":"YulFunctionCall","src":"6125:37:16"},"nodeType":"YulExpressionStatement","src":"6125:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6103:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6110:3:16","type":""}],"src":"6050:118:16"},{"body":{"nodeType":"YulBlock","src":"6239:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6256:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6279:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6261:17:16"},"nodeType":"YulFunctionCall","src":"6261:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6249:6:16"},"nodeType":"YulFunctionCall","src":"6249:37:16"},"nodeType":"YulExpressionStatement","src":"6249:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6227:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6234:3:16","type":""}],"src":"6174:118:16"},{"body":{"nodeType":"YulBlock","src":"6478:369:16","statements":[{"nodeType":"YulAssignment","src":"6488:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6500:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6511:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6496:3:16"},"nodeType":"YulFunctionCall","src":"6496:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6488:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6569:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6582:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6593:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6578:3:16"},"nodeType":"YulFunctionCall","src":"6578:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6525:43:16"},"nodeType":"YulFunctionCall","src":"6525:71:16"},"nodeType":"YulExpressionStatement","src":"6525:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6648:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6661:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6672:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6657:3:16"},"nodeType":"YulFunctionCall","src":"6657:18:16"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"6606:41:16"},"nodeType":"YulFunctionCall","src":"6606:70:16"},"nodeType":"YulExpressionStatement","src":"6606:70:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6730:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6743:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6754:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6739:3:16"},"nodeType":"YulFunctionCall","src":"6739:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6686:43:16"},"nodeType":"YulFunctionCall","src":"6686:72:16"},"nodeType":"YulExpressionStatement","src":"6686:72:16"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"6812:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6825:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6836:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6821:3:16"},"nodeType":"YulFunctionCall","src":"6821:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6768:43:16"},"nodeType":"YulFunctionCall","src":"6768:72:16"},"nodeType":"YulExpressionStatement","src":"6768:72:16"}]},"name":"abi_encode_tuple_t_bytes32_t_uint32_t_uint256_t_address__to_t_bytes32_t_uint32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6426:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6438:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6446:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6454:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6462:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6473:4:16","type":""}],"src":"6298:549:16"},{"body":{"nodeType":"YulBlock","src":"6911:40:16","statements":[{"nodeType":"YulAssignment","src":"6922:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6938:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6932:5:16"},"nodeType":"YulFunctionCall","src":"6932:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6922:6:16"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6894:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6904:6:16","type":""}],"src":"6853:98:16"},{"body":{"nodeType":"YulBlock","src":"7052:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7069:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"7074:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7062:6:16"},"nodeType":"YulFunctionCall","src":"7062:19:16"},"nodeType":"YulExpressionStatement","src":"7062:19:16"},{"nodeType":"YulAssignment","src":"7090:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7109:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"7114:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7105:3:16"},"nodeType":"YulFunctionCall","src":"7105:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7090:11:16"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7024:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"7029:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7040:11:16","type":""}],"src":"6957:168:16"},{"body":{"nodeType":"YulBlock","src":"7193:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7203:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7212:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7207:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7272:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7297:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"7302:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7293:3:16"},"nodeType":"YulFunctionCall","src":"7293:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7316:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"7321:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7312:3:16"},"nodeType":"YulFunctionCall","src":"7312:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7306:5:16"},"nodeType":"YulFunctionCall","src":"7306:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7286:6:16"},"nodeType":"YulFunctionCall","src":"7286:39:16"},"nodeType":"YulExpressionStatement","src":"7286:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7233:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"7236:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7230:2:16"},"nodeType":"YulFunctionCall","src":"7230:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7244:19:16","statements":[{"nodeType":"YulAssignment","src":"7246:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7255:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"7258:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7251:3:16"},"nodeType":"YulFunctionCall","src":"7251:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7246:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"7226:3:16","statements":[]},"src":"7222:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7355:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"7360:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7351:3:16"},"nodeType":"YulFunctionCall","src":"7351:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"7369:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7344:6:16"},"nodeType":"YulFunctionCall","src":"7344:27:16"},"nodeType":"YulExpressionStatement","src":"7344:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7175:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7180:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"7185:6:16","type":""}],"src":"7131:246:16"},{"body":{"nodeType":"YulBlock","src":"7473:283:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7483:52:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7529:5:16"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7497:31:16"},"nodeType":"YulFunctionCall","src":"7497:38:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7487:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7544:77:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7609:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"7614:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7551:57:16"},"nodeType":"YulFunctionCall","src":"7551:70:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7544:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7669:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"7676:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7665:3:16"},"nodeType":"YulFunctionCall","src":"7665:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"7683:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"7688:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7630:34:16"},"nodeType":"YulFunctionCall","src":"7630:65:16"},"nodeType":"YulExpressionStatement","src":"7630:65:16"},{"nodeType":"YulAssignment","src":"7704:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7715:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7742:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7720:21:16"},"nodeType":"YulFunctionCall","src":"7720:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7711:3:16"},"nodeType":"YulFunctionCall","src":"7711:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7704:3:16"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7454:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7461:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7469:3:16","type":""}],"src":"7383:373:16"},{"body":{"nodeType":"YulBlock","src":"7960:438:16","statements":[{"nodeType":"YulAssignment","src":"7970:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7982:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7993:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7978:3:16"},"nodeType":"YulFunctionCall","src":"7978:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7970:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8049:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8062:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8073:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8058:3:16"},"nodeType":"YulFunctionCall","src":"8058:17:16"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"8007:41:16"},"nodeType":"YulFunctionCall","src":"8007:69:16"},"nodeType":"YulExpressionStatement","src":"8007:69:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8130:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8143:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8154:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8139:3:16"},"nodeType":"YulFunctionCall","src":"8139:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8086:43:16"},"nodeType":"YulFunctionCall","src":"8086:72:16"},"nodeType":"YulExpressionStatement","src":"8086:72:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8212:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8225:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8236:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8221:3:16"},"nodeType":"YulFunctionCall","src":"8221:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8168:43:16"},"nodeType":"YulFunctionCall","src":"8168:72:16"},"nodeType":"YulExpressionStatement","src":"8168:72:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8261:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8272:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8257:3:16"},"nodeType":"YulFunctionCall","src":"8257:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8281:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"8287:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8277:3:16"},"nodeType":"YulFunctionCall","src":"8277:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8250:6:16"},"nodeType":"YulFunctionCall","src":"8250:48:16"},"nodeType":"YulExpressionStatement","src":"8250:48:16"},{"nodeType":"YulAssignment","src":"8307:84:16","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"8377:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"8386:4:16"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8315:61:16"},"nodeType":"YulFunctionCall","src":"8315:76:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8307:4:16"}]}]},"name":"abi_encode_tuple_t_uint32_t_address_t_uint256_t_bytes_memory_ptr__to_t_uint32_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7908:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7920:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7928:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7936:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7944:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7955:4:16","type":""}],"src":"7762:636:16"},{"body":{"nodeType":"YulBlock","src":"8447:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"8504:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8513:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8516:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8506:6:16"},"nodeType":"YulFunctionCall","src":"8506:12:16"},"nodeType":"YulExpressionStatement","src":"8506:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8470:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8495:5:16"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"8477:17:16"},"nodeType":"YulFunctionCall","src":"8477:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8467:2:16"},"nodeType":"YulFunctionCall","src":"8467:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8460:6:16"},"nodeType":"YulFunctionCall","src":"8460:43:16"},"nodeType":"YulIf","src":"8457:63:16"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8440:5:16","type":""}],"src":"8404:122:16"},{"body":{"nodeType":"YulBlock","src":"8595:80:16","statements":[{"nodeType":"YulAssignment","src":"8605:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8620:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8614:5:16"},"nodeType":"YulFunctionCall","src":"8614:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8605:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8663:5:16"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"8636:26:16"},"nodeType":"YulFunctionCall","src":"8636:33:16"},"nodeType":"YulExpressionStatement","src":"8636:33:16"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8573:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"8581:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8589:5:16","type":""}],"src":"8532:143:16"},{"body":{"nodeType":"YulBlock","src":"8758:274:16","statements":[{"body":{"nodeType":"YulBlock","src":"8804:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8806:77:16"},"nodeType":"YulFunctionCall","src":"8806:79:16"},"nodeType":"YulExpressionStatement","src":"8806:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8779:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"8788:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8775:3:16"},"nodeType":"YulFunctionCall","src":"8775:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"8800:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8771:3:16"},"nodeType":"YulFunctionCall","src":"8771:32:16"},"nodeType":"YulIf","src":"8768:119:16"},{"nodeType":"YulBlock","src":"8897:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8912:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8926:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8916:6:16","type":""}]},{"nodeType":"YulAssignment","src":"8941:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8987:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"8998:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8983:3:16"},"nodeType":"YulFunctionCall","src":"8983:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9007:7:16"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"8951:31:16"},"nodeType":"YulFunctionCall","src":"8951:64:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8941:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8728:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8739:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8751:6:16","type":""}],"src":"8681:351:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint32t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint32t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint32_t_uint256_t_address__to_t_bytes32_t_uint32_t_uint256_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint32_t_address_t_uint256_t_bytes_memory_ptr__to_t_uint32_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100345760003560e01c80633dd3728714610039578063621fbd5914610055578063cef5ddf014610080575b600080fd5b610053600480360381019061004e91906102a7565b6100a9565b005b34801561006157600080fd5b5061006a610128565b6040516100779190610313565b60405180910390f35b34801561008c57600080fd5b506100a760048036038101906100a29190610474565b61012e565b005b60008290508073ffffffffffffffffffffffffffffffffffffffff166311bf2c18346000548786336040518663ffffffff1660e01b81526004016100f09493929190610538565b6000604051808303818588803b15801561010957600080fd5b505af115801561011d573d6000803e3d6000fd5b505050505050505050565b60005481565b60008490508073ffffffffffffffffffffffffffffffffffffffff16631ddce514878686866040518563ffffffff1660e01b815260040161017294939291906105fc565b6020604051808303816000875af1158015610191573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b59190610674565b600081905550505050505050565b6000604051905090565b600080fd5b600080fd5b600063ffffffff82169050919050565b6101f0816101d7565b81146101fb57600080fd5b50565b60008135905061020d816101e7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061023e82610213565b9050919050565b61024e81610233565b811461025957600080fd5b50565b60008135905061026b81610245565b92915050565b6000819050919050565b61028481610271565b811461028f57600080fd5b50565b6000813590506102a18161027b565b92915050565b6000806000606084860312156102c0576102bf6101cd565b5b60006102ce868287016101fe565b93505060206102df8682870161025c565b92505060406102f086828701610292565b9150509250925092565b6000819050919050565b61030d816102fa565b82525050565b60006020820190506103286000830184610304565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61038182610338565b810181811067ffffffffffffffff821117156103a05761039f610349565b5b80604052505050565b60006103b36101c3565b90506103bf8282610378565b919050565b600067ffffffffffffffff8211156103df576103de610349565b5b6103e882610338565b9050602081019050919050565b82818337600083830152505050565b6000610417610412846103c4565b6103a9565b90508281526020810184848401111561043357610432610333565b5b61043e8482856103f5565b509392505050565b600082601f83011261045b5761045a61032e565b5b813561046b848260208601610404565b91505092915050565b600080600080600060a086880312156104905761048f6101cd565b5b600061049e888289016101fe565b95505060206104af8882890161025c565b94505060406104c08882890161025c565b93505060606104d188828901610292565b925050608086013567ffffffffffffffff8111156104f2576104f16101d2565b5b6104fe88828901610446565b9150509295509295909350565b610514816101d7565b82525050565b61052381610271565b82525050565b61053281610233565b82525050565b600060808201905061054d6000830187610304565b61055a602083018661050b565b610567604083018561051a565b6105746060830184610529565b95945050505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105b757808201518184015260208101905061059c565b60008484015250505050565b60006105ce8261057d565b6105d88185610588565b93506105e8818560208601610599565b6105f181610338565b840191505092915050565b6000608082019050610611600083018761050b565b61061e6020830186610529565b61062b604083018561051a565b818103606083015261063d81846105c3565b905095945050505050565b610651816102fa565b811461065c57600080fd5b50565b60008151905061066e81610648565b92915050565b60006020828403121561068a576106896101cd565b5b60006106988482850161065f565b9150509291505056fea264697066735822122064d3340b4836bf02d22bdb9b6da172e403fdb38e727092d8fd180502974fd9a864736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3DD37287 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x621FBD59 EQ PUSH2 0x55 JUMPI DUP1 PUSH4 0xCEF5DDF0 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x53 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E SWAP2 SWAP1 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0xA9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A PUSH2 0x128 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x474 JUMP JUMPDEST PUSH2 0x12E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x11BF2C18 CALLVALUE PUSH1 0x0 SLOAD DUP8 DUP7 CALLER PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x538 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP5 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1DDCE514 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x191 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x674 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0 DUP2 PUSH2 0x1D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20D DUP2 PUSH2 0x1E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E DUP3 PUSH2 0x213 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH2 0x233 JUMP JUMPDEST DUP2 EQ PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26B DUP2 PUSH2 0x245 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x284 DUP2 PUSH2 0x271 JUMP JUMPDEST DUP2 EQ PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A1 DUP2 PUSH2 0x27B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C0 JUMPI PUSH2 0x2BF PUSH2 0x1CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CE DUP7 DUP3 DUP8 ADD PUSH2 0x1FE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2DF DUP7 DUP3 DUP8 ADD PUSH2 0x25C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2F0 DUP7 DUP3 DUP8 ADD PUSH2 0x292 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30D DUP2 PUSH2 0x2FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x328 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x304 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x381 DUP3 PUSH2 0x338 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3A0 JUMPI PUSH2 0x39F PUSH2 0x349 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3 PUSH2 0x1C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x3BF DUP3 DUP3 PUSH2 0x378 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3DF JUMPI PUSH2 0x3DE PUSH2 0x349 JUMP JUMPDEST JUMPDEST PUSH2 0x3E8 DUP3 PUSH2 0x338 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x417 PUSH2 0x412 DUP5 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x433 JUMPI PUSH2 0x432 PUSH2 0x333 JUMP JUMPDEST JUMPDEST PUSH2 0x43E DUP5 DUP3 DUP6 PUSH2 0x3F5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x45B JUMPI PUSH2 0x45A PUSH2 0x32E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x46B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x404 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x490 JUMPI PUSH2 0x48F PUSH2 0x1CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x49E DUP9 DUP3 DUP10 ADD PUSH2 0x1FE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4AF DUP9 DUP3 DUP10 ADD PUSH2 0x25C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4C0 DUP9 DUP3 DUP10 ADD PUSH2 0x25C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4D1 DUP9 DUP3 DUP10 ADD PUSH2 0x292 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4F2 JUMPI PUSH2 0x4F1 PUSH2 0x1D2 JUMP JUMPDEST JUMPDEST PUSH2 0x4FE DUP9 DUP3 DUP10 ADD PUSH2 0x446 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x514 DUP2 PUSH2 0x1D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x523 DUP2 PUSH2 0x271 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x532 DUP2 PUSH2 0x233 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x54D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x304 JUMP JUMPDEST PUSH2 0x55A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x50B JUMP JUMPDEST PUSH2 0x567 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x51A JUMP JUMPDEST PUSH2 0x574 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x529 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5B7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x59C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CE DUP3 PUSH2 0x57D JUMP JUMPDEST PUSH2 0x5D8 DUP2 DUP6 PUSH2 0x588 JUMP JUMPDEST SWAP4 POP PUSH2 0x5E8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x599 JUMP JUMPDEST PUSH2 0x5F1 DUP2 PUSH2 0x338 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x611 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x50B JUMP JUMPDEST PUSH2 0x61E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x529 JUMP JUMPDEST PUSH2 0x62B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x51A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x63D DUP2 DUP5 PUSH2 0x5C3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x651 DUP2 PUSH2 0x2FA JUMP JUMPDEST DUP2 EQ PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x66E DUP2 PUSH2 0x648 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x68A JUMPI PUSH2 0x689 PUSH2 0x1CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x698 DUP5 DUP3 DUP6 ADD PUSH2 0x65F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xD3340B4836 0xBF MUL 0xD2 0x2B 0xDB SWAP12 PUSH14 0xA172E403FDB38E727092D8FD1805 MUL SWAP8 0x4F 0xD9 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"229:1169:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;728:662;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;258:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;293:432;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;728:662;932:27;986:10;932:65;;1007:3;:13;;;1028:9;1089:13;;1150:14;1303:9;1363:10;1007:376;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:531;728:662;;;:::o;258:28::-;;;;:::o;293:432::-;480:31;552:13;480:95;;601:6;:17;;;632:14;661:9;685:5;704:4;601:117;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;585:13;:133;;;;470:255;293:432;;;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:93;370:7;410:10;403:5;399:22;388:33;;334:93;;;:::o;433:120::-;505:23;522:5;505:23;:::i;:::-;498:5;495:34;485:62;;543:1;540;533:12;485:62;433:120;:::o;559:137::-;604:5;642:6;629:20;620:29;;658:32;684:5;658:32;:::i;:::-;559:137;;;;:::o;702:126::-;739:7;779:42;772:5;768:54;757:65;;702:126;;;:::o;834:96::-;871:7;900:24;918:5;900:24;:::i;:::-;889:35;;834:96;;;:::o;936:122::-;1009:24;1027:5;1009:24;:::i;:::-;1002:5;999:35;989:63;;1048:1;1045;1038:12;989:63;936:122;:::o;1064:139::-;1110:5;1148:6;1135:20;1126:29;;1164:33;1191:5;1164:33;:::i;:::-;1064:139;;;;:::o;1209:77::-;1246:7;1275:5;1264:16;;1209:77;;;:::o;1292:122::-;1365:24;1383:5;1365:24;:::i;:::-;1358:5;1355:35;1345:63;;1404:1;1401;1394:12;1345:63;1292:122;:::o;1420:139::-;1466:5;1504:6;1491:20;1482:29;;1520:33;1547:5;1520:33;:::i;:::-;1420:139;;;;:::o;1565:617::-;1641:6;1649;1657;1706:2;1694:9;1685:7;1681:23;1677:32;1674:119;;;1712:79;;:::i;:::-;1674:119;1832:1;1857:52;1901:7;1892:6;1881:9;1877:22;1857:52;:::i;:::-;1847:62;;1803:116;1958:2;1984:53;2029:7;2020:6;2009:9;2005:22;1984:53;:::i;:::-;1974:63;;1929:118;2086:2;2112:53;2157:7;2148:6;2137:9;2133:22;2112:53;:::i;:::-;2102:63;;2057:118;1565:617;;;;;:::o;2188:77::-;2225:7;2254:5;2243:16;;2188:77;;;:::o;2271:118::-;2358:24;2376:5;2358:24;:::i;:::-;2353:3;2346:37;2271:118;;:::o;2395:222::-;2488:4;2526:2;2515:9;2511:18;2503:26;;2539:71;2607:1;2596:9;2592:17;2583:6;2539:71;:::i;:::-;2395:222;;;;:::o;2623:117::-;2732:1;2729;2722:12;2746:117;2855:1;2852;2845:12;2869:102;2910:6;2961:2;2957:7;2952:2;2945:5;2941:14;2937:28;2927:38;;2869:102;;;:::o;2977:180::-;3025:77;3022:1;3015:88;3122:4;3119:1;3112:15;3146:4;3143:1;3136:15;3163:281;3246:27;3268:4;3246:27;:::i;:::-;3238:6;3234:40;3376:6;3364:10;3361:22;3340:18;3328:10;3325:34;3322:62;3319:88;;;3387:18;;:::i;:::-;3319:88;3427:10;3423:2;3416:22;3206:238;3163:281;;:::o;3450:129::-;3484:6;3511:20;;:::i;:::-;3501:30;;3540:33;3568:4;3560:6;3540:33;:::i;:::-;3450:129;;;:::o;3585:307::-;3646:4;3736:18;3728:6;3725:30;3722:56;;;3758:18;;:::i;:::-;3722:56;3796:29;3818:6;3796:29;:::i;:::-;3788:37;;3880:4;3874;3870:15;3862:23;;3585:307;;;:::o;3898:146::-;3995:6;3990:3;3985;3972:30;4036:1;4027:6;4022:3;4018:16;4011:27;3898:146;;;:::o;4050:423::-;4127:5;4152:65;4168:48;4209:6;4168:48;:::i;:::-;4152:65;:::i;:::-;4143:74;;4240:6;4233:5;4226:21;4278:4;4271:5;4267:16;4316:3;4307:6;4302:3;4298:16;4295:25;4292:112;;;4323:79;;:::i;:::-;4292:112;4413:54;4460:6;4455:3;4450;4413:54;:::i;:::-;4133:340;4050:423;;;;;:::o;4492:338::-;4547:5;4596:3;4589:4;4581:6;4577:17;4573:27;4563:122;;4604:79;;:::i;:::-;4563:122;4721:6;4708:20;4746:78;4820:3;4812:6;4805:4;4797:6;4793:17;4746:78;:::i;:::-;4737:87;;4553:277;4492:338;;;;:::o;4836:1087::-;4939:6;4947;4955;4963;4971;5020:3;5008:9;4999:7;4995:23;4991:33;4988:120;;;5027:79;;:::i;:::-;4988:120;5147:1;5172:52;5216:7;5207:6;5196:9;5192:22;5172:52;:::i;:::-;5162:62;;5118:116;5273:2;5299:53;5344:7;5335:6;5324:9;5320:22;5299:53;:::i;:::-;5289:63;;5244:118;5401:2;5427:53;5472:7;5463:6;5452:9;5448:22;5427:53;:::i;:::-;5417:63;;5372:118;5529:2;5555:53;5600:7;5591:6;5580:9;5576:22;5555:53;:::i;:::-;5545:63;;5500:118;5685:3;5674:9;5670:19;5657:33;5717:18;5709:6;5706:30;5703:117;;;5739:79;;:::i;:::-;5703:117;5844:62;5898:7;5889:6;5878:9;5874:22;5844:62;:::i;:::-;5834:72;;5628:288;4836:1087;;;;;;;;:::o;5929:115::-;6014:23;6031:5;6014:23;:::i;:::-;6009:3;6002:36;5929:115;;:::o;6050:118::-;6137:24;6155:5;6137:24;:::i;:::-;6132:3;6125:37;6050:118;;:::o;6174:::-;6261:24;6279:5;6261:24;:::i;:::-;6256:3;6249:37;6174:118;;:::o;6298:549::-;6473:4;6511:3;6500:9;6496:19;6488:27;;6525:71;6593:1;6582:9;6578:17;6569:6;6525:71;:::i;:::-;6606:70;6672:2;6661:9;6657:18;6648:6;6606:70;:::i;:::-;6686:72;6754:2;6743:9;6739:18;6730:6;6686:72;:::i;:::-;6768;6836:2;6825:9;6821:18;6812:6;6768:72;:::i;:::-;6298:549;;;;;;;:::o;6853:98::-;6904:6;6938:5;6932:12;6922:22;;6853:98;;;:::o;6957:168::-;7040:11;7074:6;7069:3;7062:19;7114:4;7109:3;7105:14;7090:29;;6957:168;;;;:::o;7131:246::-;7212:1;7222:113;7236:6;7233:1;7230:13;7222:113;;;7321:1;7316:3;7312:11;7306:18;7302:1;7297:3;7293:11;7286:39;7258:2;7255:1;7251:10;7246:15;;7222:113;;;7369:1;7360:6;7355:3;7351:16;7344:27;7193:184;7131:246;;;:::o;7383:373::-;7469:3;7497:38;7529:5;7497:38;:::i;:::-;7551:70;7614:6;7609:3;7551:70;:::i;:::-;7544:77;;7630:65;7688:6;7683:3;7676:4;7669:5;7665:16;7630:65;:::i;:::-;7720:29;7742:6;7720:29;:::i;:::-;7715:3;7711:39;7704:46;;7473:283;7383:373;;;;:::o;7762:636::-;7955:4;7993:3;7982:9;7978:19;7970:27;;8007:69;8073:1;8062:9;8058:17;8049:6;8007:69;:::i;:::-;8086:72;8154:2;8143:9;8139:18;8130:6;8086:72;:::i;:::-;8168;8236:2;8225:9;8221:18;8212:6;8168:72;:::i;:::-;8287:9;8281:4;8277:20;8272:2;8261:9;8257:18;8250:48;8315:76;8386:4;8377:6;8315:76;:::i;:::-;8307:84;;7762:636;;;;;;;:::o;8404:122::-;8477:24;8495:5;8477:24;:::i;:::-;8470:5;8467:35;8457:63;;8516:1;8513;8506:12;8457:63;8404:122;:::o;8532:143::-;8589:5;8620:6;8614:13;8605:22;;8636:33;8663:5;8636:33;:::i;:::-;8532:143;;;;:::o;8681:351::-;8751:6;8800:2;8788:9;8779:7;8775:23;8771:32;8768:119;;;8806:79;;:::i;:::-;8768:119;8926:1;8951:64;9007:7;8998:6;8987:9;8983:22;8951:64;:::i;:::-;8941:74;;8897:128;8681:351;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"350200","executionCost":"386","totalCost":"350586"},"external":{"lastMessageID()":"2429","processMessage(uint32,address,uint256)":"infinite","sendTransaction(uint32,address,address,uint256,bytes)":"infinite"}},"methodIdentifiers":{"lastMessageID()":"621fbd59","processMessage(uint32,address,uint256)":"3dd37287","sendTransaction(uint32,address,address,uint256,bytes)":"cef5ddf0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"lastMessageID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"ethereumDomain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"igpAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gasAmount\",\"type\":\"uint256\"}],\"name\":\"processMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"ethereumDomain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"sendTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HyperContract.sol\":\"HyperContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"contracts/HyperContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.6.11;\\nimport \\\"./precompiles/InterchainAccountRouter.sol\\\";\\nimport \\\"./precompiles/InterchainGasPaymaster.sol\\\";\\nimport {CallLib} from \\\"./precompiles/libs/Call.sol\\\";\\n\\ncontract HyperContract {\\n    bytes32 public lastMessageID ;\\n    function sendTransaction(\\n        uint32 ethereumDomain,\\n        address routerAddress,\\n        address toAddress,\\n        uint256 value,\\n        bytes memory data\\n    ) public {\\n        IInterchainAccountRouter router = IInterchainAccountRouter(\\n            routerAddress\\n        );\\n        lastMessageID = router.callRemote(\\n            ethereumDomain,\\n            (toAddress),\\n            value,\\n            data\\n        );\\n    }\\n\\n function processMessage(\\n        uint32 ethereumDomain,\\n        address igpAddress,\\n        uint256 gasAmount\\n    ) public payable {\\n      \\n        // The testnet DefaultIsmInterchainGasPaymaster\\n        IInterchainGasPaymaster igp = IInterchainGasPaymaster(igpAddress);\\n        igp.payForGas{value: msg.value}(\\n            // The ID of the message\\n            lastMessageID,\\n            // Destination domain\\n            ethereumDomain,\\n            // The total gas amount. This should be the\\n            // overhead gas amount + gas used by the call being made\\n            gasAmount,\\n            // Refund the msg.sender\\n            msg.sender\\n        );\\n    }\\n\\n    \\n}\\n\",\"keccak256\":\"0x82b4c917aab17e45c764a2e9ff6a94e438d7b7c3240df8bbf5fec91ceb18c9e0\",\"license\":\"MIT OR Apache-2.0\"},\"contracts/precompiles/InterchainAccountRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.6.11;\\n\\nimport {CallLib} from \\\"./libs/Call.sol\\\";\\n\\ninterface IInterchainAccountRouter {\\n    function callRemote(\\n        uint32 _destinationDomain,\\n         address to,\\n        uint256 value,\\n        bytes memory data\\n    ) external returns (bytes32);\\n\\n    function getRemoteInterchainAccount(uint32 _destination, address _owner)\\n        external\\n        view\\n        returns (address);\\n}\\n\",\"keccak256\":\"0xe7827c13219625fe05975850257d586d8855097486908cc05dee8c2dd0974c87\",\"license\":\"MIT OR Apache-2.0\"},\"contracts/precompiles/InterchainGasPaymaster.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.6.11;\\n\\ninterface IInterchainGasPaymaster {\\n    function payForGas(\\n        bytes32 _messageId,\\n         uint32 _destinationDomain,\\n        uint256 _gasAmount,\\n        address _refundAddress\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x4d5188f3ca02d35fc6da457ad3d195ba6299232e9976df1cc869bf9a627a9860\",\"license\":\"MIT OR Apache-2.0\"},\"contracts/precompiles/libs/Call.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.13;\\n\\nimport {Address} from \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\n\\nimport {TypeCasts} from \\\"./TypeCasts.sol\\\";\\n\\nlibrary CallLib {\\n    struct StaticCall {\\n        // supporting non EVM targets\\n        bytes32 to;\\n        bytes data;\\n    }\\n\\n    struct Call {\\n        // supporting non EVM targets\\n        bytes32 to;\\n        uint256 value;\\n        bytes data;\\n    }\\n\\n    struct StaticCallWithCallback {\\n        StaticCall _call;\\n        bytes callback;\\n    }\\n\\n    function call(Call memory _call)\\n        internal\\n        returns (bytes memory returnData)\\n    {\\n        return\\n            Address.functionCallWithValue(\\n                TypeCasts.bytes32ToAddress(_call.to),\\n                _call.data,\\n                _call.value\\n            );\\n    }\\n\\n    function staticcall(StaticCall memory _call)\\n        private\\n        view\\n        returns (bytes memory)\\n    {\\n        return\\n            Address.functionStaticCall(\\n                TypeCasts.bytes32ToAddress(_call.to),\\n                _call.data\\n            );\\n    }\\n\\n    function staticcall(StaticCallWithCallback memory _call)\\n        internal\\n        view\\n        returns (bytes memory callback)\\n    {\\n        return bytes.concat(_call.callback, staticcall(_call._call));\\n    }\\n\\n    function multicall(Call[] memory calls) internal {\\n        uint256 i = 0;\\n        uint256 len = calls.length;\\n        while (i < len) {\\n            call(calls[i]);\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function multistaticcall(StaticCallWithCallback[] memory _calls)\\n        internal\\n        view\\n        returns (bytes[] memory)\\n    {\\n        uint256 i = 0;\\n        uint256 len = _calls.length;\\n        bytes[] memory callbacks = new bytes[](len);\\n        while (i < len) {\\n            callbacks[i] = staticcall(_calls[i]);\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n        return callbacks;\\n    }\\n\\n    function multicallto(address to, bytes[] memory calls) internal {\\n        uint256 i = 0;\\n        uint256 len = calls.length;\\n        while (i < len) {\\n            Address.functionCall(to, calls[i]);\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function build(bytes32 to, bytes memory data)\\n        internal\\n        pure\\n        returns (StaticCall memory)\\n    {\\n        return StaticCall(to, data);\\n    }\\n\\n    function build(address to, bytes memory data)\\n        internal\\n        pure\\n        returns (StaticCall memory)\\n    {\\n        return build(TypeCasts.addressToBytes32(to), data);\\n    }\\n\\n    function build(\\n        bytes32 to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal pure returns (Call memory) {\\n        return Call(to, value, data);\\n    }\\n\\n    function build(\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal pure returns (Call memory) {\\n        return Call(TypeCasts.addressToBytes32(to), value, data);\\n    }\\n\\n    function build(\\n        bytes32 to,\\n        bytes memory data,\\n        bytes memory callback\\n    ) internal pure returns (StaticCallWithCallback memory) {\\n        return StaticCallWithCallback(build(to, data), callback);\\n    }\\n\\n    function build(\\n        address to,\\n        bytes memory data,\\n        bytes memory callback\\n    ) internal pure returns (StaticCallWithCallback memory) {\\n        return StaticCallWithCallback(build(to, data), callback);\\n    }\\n}\",\"keccak256\":\"0x2693fa7fcae2cd6bca27985dcc167bf31449f3214e9ded58b0dd1d7afa486f91\",\"license\":\"Apache-2.0\"},\"contracts/precompiles/libs/TypeCasts.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.6.11;\\n\\nlibrary TypeCasts {\\n    // alignment preserving cast\\n    function addressToBytes32(address _addr) internal pure returns (bytes32) {\\n        return bytes32(uint256(uint160(_addr)));\\n    }\\n\\n    // alignment preserving cast\\n    function bytes32ToAddress(bytes32 _buf) internal pure returns (address) {\\n        return address(uint160(uint256(_buf)));\\n    }\\n}\",\"keccak256\":\"0x80776a1b0d8a74abdca8f68ce6df4fec6bd0aabaf9eb0e07c2c5e5bb93cc0df9\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2249,"contract":"contracts/HyperContract.sol:HyperContract","label":"lastMessageID","offset":0,"slot":"0","type":"t_bytes32"}],"types":{"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MoonDAO.sol":{"MoonDAO":{"abi":[{"inputs":[],"name":"_dao_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_dao_uris","outputs":[{"internalType":"string","name":"dao_wallet","type":"string"},{"internalType":"string","name":"dao_uri","type":"string"},{"internalType":"string","name":"finished","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"_donated","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_donations","outputs":[{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"wallet","type":"string"},{"internalType":"uint256","name":"donation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_donations_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_goal_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_goal_uris","outputs":[{"internalType":"uint256","name":"dao_id","type":"uint256"},{"internalType":"string","name":"goal_uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_ideas_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_ideas_uris","outputs":[{"internalType":"uint256","name":"goal_id","type":"uint256"},{"internalType":"string","name":"ideas_uri","type":"string"},{"internalType":"uint256","name":"donation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_ideas_vote_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_join_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_joined_person","outputs":[{"internalType":"uint256","name":"daoid","type":"uint256"},{"internalType":"string","name":"wallet","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_message_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_message_read_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_reply_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_smart_contract_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_smart_contracts_uris","outputs":[{"internalType":"uint256","name":"smart_contract_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"smart_contract_uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_template_uris","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"_user_badges","outputs":[{"internalType":"string","name":"wallet","type":"string"},{"internalType":"bool","name":"dao","type":"bool"},{"internalType":"bool","name":"joined","type":"bool"},{"internalType":"bool","name":"goal","type":"bool"},{"internalType":"bool","name":"ideas","type":"bool"},{"internalType":"bool","name":"vote","type":"bool"},{"internalType":"bool","name":"donation","type":"bool"},{"internalType":"bool","name":"comment","type":"bool"},{"internalType":"bool","name":"reply","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"addTempData","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"uint256","name":"_doantion","type":"uint256"},{"internalType":"string","name":"_donator","type":"string"}],"name":"add_donation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_goal_ideas_votes","outputs":[{"internalType":"uint256","name":"goal_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"wallet","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_messages","outputs":[{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"message","type":"string"},{"internalType":"string","name":"sender","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_read_messages","outputs":[{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"wallet","type":"string"},{"internalType":"string","name":"msg_type","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_replies","outputs":[{"internalType":"uint256","name":"reply_id","type":"uint256"},{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_dao_wallet","type":"string"},{"internalType":"string","name":"_dao_uri","type":"string"},{"internalType":"string","name":"_template","type":"string"}],"name":"create_dao","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_uri","type":"string"},{"internalType":"uint256","name":"_dao_id","type":"uint256"},{"internalType":"string","name":"_wallet","type":"string"}],"name":"create_goal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_wallet","type":"string"}],"name":"create_goal_ideas_vote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"},{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"string[]","name":"_smart_contracts","type":"string[]"},{"internalType":"string","name":"_wallet","type":"string"}],"name":"create_ideas","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"}],"name":"dao_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"ideas_id","type":"uint256"}],"name":"getMsgIDs","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_message_id","type":"uint256"},{"internalType":"string","name":"msg_type","type":"string"}],"name":"getReadMsg","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"message_id","type":"uint256"}],"name":"getReplyIDs","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_daos","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_goals","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"}],"name":"get_all_goals_by_dao_id","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_ideas","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"}],"name":"get_all_ideas_by_goal_id","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_uri","type":"string"}],"name":"get_goal_id_by_goal_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"get_goal_id_from_ideas_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"get_ideas_id_by_ideas_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"}],"name":"get_ideas_votes_from_goal","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"}],"name":"goal_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"}],"name":"ideas_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"wallet","type":"string"}],"name":"is_person_joined","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"dao_id","type":"uint256"},{"internalType":"string","name":"person","type":"string"}],"name":"join_community","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reset_all","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_message","type":"string"},{"internalType":"string","name":"_sender","type":"string"}],"name":"sendMsg","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_message_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_wallet","type":"string"},{"internalType":"string","name":"msg_type","type":"string"}],"name":"sendReadMsg","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_message_id","type":"uint256"},{"internalType":"string","name":"_reply","type":"string"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"_wallet","type":"string"}],"name":"sendReply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"},{"internalType":"string","name":"_dao_wallet","type":"string"},{"internalType":"string","name":"_dao_uri","type":"string"}],"name":"set_dao","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"string","name":"_goal_uri","type":"string"}],"name":"set_goal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"set_ideas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"},{"internalType":"string","name":"_template","type":"string"}],"name":"update_template","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x54F7 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x342 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x812FAE1F GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xB527D45E GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xD3791B20 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xEC245802 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xEC245802 EQ PUSH2 0xB26 JUMPI DUP1 PUSH4 0xEC399255 EQ PUSH2 0xB44 JUMPI DUP1 PUSH4 0xECA7F5FE EQ PUSH2 0xB74 JUMPI DUP1 PUSH4 0xFF4A37EF EQ PUSH2 0xBA4 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0xD3791B20 EQ PUSH2 0xABC JUMPI DUP1 PUSH4 0xE32ACC1A EQ PUSH2 0xADA JUMPI DUP1 PUSH4 0xE3863CEF EQ PUSH2 0xB0A JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0xC29595C5 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xC29595C5 EQ PUSH2 0xA1F JUMPI DUP1 PUSH4 0xCA013F17 EQ PUSH2 0xA3B JUMPI DUP1 PUSH4 0xCACE8D46 EQ PUSH2 0xA59 JUMPI DUP1 PUSH4 0xCD230809 EQ PUSH2 0xA8C JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0xB527D45E EQ PUSH2 0x9B2 JUMPI DUP1 PUSH4 0xC04E7430 EQ PUSH2 0x9E5 JUMPI DUP1 PUSH4 0xC04FE978 EQ PUSH2 0xA01 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x9077007D GT PUSH2 0x171 JUMPI DUP1 PUSH4 0xA1CA9178 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0xA1CA9178 EQ PUSH2 0x92A JUMPI DUP1 PUSH4 0xAA2BF5D3 EQ PUSH2 0x95A JUMPI DUP1 PUSH4 0xAA4CDF2A EQ PUSH2 0x978 JUMPI DUP1 PUSH4 0xB16060A6 EQ PUSH2 0x9A8 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x9077007D EQ PUSH2 0x8B6 JUMPI DUP1 PUSH4 0x97EE7606 EQ PUSH2 0x8D4 JUMPI DUP1 PUSH4 0x9F9FF54B EQ PUSH2 0x8F2 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x812FAE1F EQ PUSH2 0x7BE JUMPI DUP1 PUSH4 0x82FCC732 EQ PUSH2 0x7EE JUMPI DUP1 PUSH4 0x87633EB2 EQ PUSH2 0x81E JUMPI DUP1 PUSH4 0x881DE858 EQ PUSH2 0x83A JUMPI DUP1 PUSH4 0x8C59143D EQ PUSH2 0x856 JUMPI DUP1 PUSH4 0x8D3D2595 EQ PUSH2 0x886 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x3F87A2F4 GT PUSH2 0x292 JUMPI DUP1 PUSH4 0x6ECDA4EE GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x7BBD582D GT PUSH2 0x20A JUMPI DUP1 PUSH4 0x7BBD582D EQ PUSH2 0x70D JUMPI DUP1 PUSH4 0x7F2035D4 EQ PUSH2 0x72B JUMPI DUP1 PUSH4 0x7FC543EC EQ PUSH2 0x75C JUMPI DUP1 PUSH4 0x803F5B9F EQ PUSH2 0x78E JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x6ECDA4EE EQ PUSH2 0x67D JUMPI DUP1 PUSH4 0x77935BE7 EQ PUSH2 0x6AD JUMPI DUP1 PUSH4 0x77B2EC23 EQ PUSH2 0x6DD JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x4A797BD7 GT PUSH2 0x26C JUMPI DUP1 PUSH4 0x4A797BD7 EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0x4BE7ADB5 EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0x5132F0C7 EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0x5D907DA1 EQ PUSH2 0x64D JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x3F87A2F4 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x468D0C80 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x494CE295 EQ PUSH2 0x5B3 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x1B592AEB GT PUSH2 0x2FF JUMPI DUP1 PUSH4 0x27A568B9 GT PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x27A568B9 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x29B56F60 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x330B8F26 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0x3F50602F EQ PUSH2 0x51E JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x1B592AEB EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0x1BA44C4C EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0x1E9AC9F5 EQ PUSH2 0x46D JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0xC90F09D EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x109AC970 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x1171B621 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x131D44F2 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0x13BF4CEA EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x18426B46 EQ PUSH2 0x3ED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x34F PUSH2 0xBD6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x342A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x342A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D7 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x3691 JUMP JUMPDEST PUSH2 0xFA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x425 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x464 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x487 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x37D4 JUMP JUMPDEST PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x381D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D7 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x342A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x507 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x515 SWAP3 SWAP2 SWAP1 PUSH2 0x3869 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x538 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x3899 JUMP JUMPDEST PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x568 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x166D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x578 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3924 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x1725 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0x39AE JUMP JUMPDEST PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DA SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EB PUSH2 0x18A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F8 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x616 SWAP2 SWAP1 PUSH2 0x3A4D JUMP JUMPDEST PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x628 SWAP2 SWAP1 PUSH2 0x342A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x3A8D JUMP JUMPDEST PUSH2 0x1A3F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x667 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x1AE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x697 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x692 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x1B8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x37D4 JUMP JUMPDEST PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D4 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F2 SWAP2 SWAP1 PUSH2 0x3B0B JUMP JUMPDEST PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x704 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x715 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x722 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x745 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x740 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x753 SWAP3 SWAP2 SWAP1 PUSH2 0x3869 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x776 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x771 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x1DB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x785 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B5 SWAP2 SWAP1 PUSH2 0x3C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D3 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x1F4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0x3C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x808 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x803 SWAP2 SWAP1 PUSH2 0x3C76 JUMP JUMPDEST PUSH2 0x202F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x815 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x838 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x833 SWAP2 SWAP1 PUSH2 0x3A8D JUMP JUMPDEST PUSH2 0x20EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x854 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x3899 JUMP JUMPDEST PUSH2 0x2111 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x870 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x3CE5 JUMP JUMPDEST PUSH2 0x215E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87D SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x89B SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8AD SWAP2 SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8BE PUSH2 0x22A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8CB SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8DC PUSH2 0x22AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E9 SWAP2 SWAP1 PUSH2 0x342A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x37D4 JUMP JUMPDEST PUSH2 0x23E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x921 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x944 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x93F SWAP2 SWAP1 PUSH2 0x37D4 JUMP JUMPDEST PUSH2 0x253B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x951 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x962 PUSH2 0x25AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96F SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x992 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x98D SWAP2 SWAP1 PUSH2 0x37D4 JUMP JUMPDEST PUSH2 0x25B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99F SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B0 PUSH2 0x2639 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9C7 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x28EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9DC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9FA SWAP2 SWAP1 PUSH2 0x3A8D JUMP JUMPDEST PUSH2 0x2A2B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA09 PUSH2 0x2A53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA16 SWAP2 SWAP1 PUSH2 0x342A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA39 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA34 SWAP2 SWAP1 PUSH2 0x3A8D JUMP JUMPDEST PUSH2 0x2B8D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA43 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA6E SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x2BBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA83 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA1 SWAP2 SWAP1 PUSH2 0x3A8D JUMP JUMPDEST PUSH2 0x2CFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB3 SWAP2 SWAP1 PUSH2 0x3E86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAC4 PUSH2 0x2D8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD1 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAEF SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x2D92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB01 SWAP2 SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB24 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB1F SWAP2 SWAP1 PUSH2 0x3C76 JUMP JUMPDEST PUSH2 0x2E3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB2E PUSH2 0x2F50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3B SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB59 SWAP2 SWAP1 PUSH2 0x3EA1 JUMP JUMPDEST PUSH2 0x2F56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6B SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB8E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB89 SWAP2 SWAP1 PUSH2 0x37D4 JUMP JUMPDEST PUSH2 0x3080 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9B SWAP2 SWAP1 PUSH2 0x3E86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBBE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB9 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x30F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBCD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2F PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x440E PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 MLOAD DUP1 PUSH2 0x300 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2C3 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x47B1 PUSH2 0x2C3 SWAP2 CODECOPY PUSH1 0x40 MLOAD DUP1 PUSH2 0x780 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x75B DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4A74 PUSH2 0x75B SWAP2 CODECOPY PUSH2 0x2F56 JUMP JUMPDEST POP PUSH2 0xC6F PUSH1 0x40 MLOAD DUP1 PUSH2 0x320 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2F3 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x51CF PUSH2 0x2F3 SWAP2 CODECOPY PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x440E PUSH1 0x2A SWAP2 CODECOPY PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x60 PUSH2 0xCB2 PUSH1 0x40 MLOAD DUP1 PUSH2 0x3A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x379 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4438 PUSH2 0x379 SWAP2 CODECOPY PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x440E PUSH1 0x2A SWAP2 CODECOPY PUSH2 0xFA0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD6 JUMPI PUSH2 0xCD5 PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD09 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xCF4 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xE1A JUMPI DUP5 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0xE07 JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xD5C SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD88 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDD5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDAA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDD5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDB8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xDED JUMPI PUSH2 0xDEC PUSH2 0x3FA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xE03 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xE12 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD14 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE4B JUMPI PUSH2 0xE4A PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE7E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE69 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xF8F JUMPI DUP5 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0xF6E JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xED1 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEFD SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF4A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF1F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF4A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF2D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF62 JUMPI PUSH2 0xF61 PUSH2 0x3FA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0xF79 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0xF87 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE89 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xFF2 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x16 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1012 SWAP2 SWAP1 PUSH2 0x4308 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x104D SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x10B2 JUMPI PUSH2 0x1087 PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x107A JUMPI PUSH2 0x1079 PUSH2 0x3FA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x31A4 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x109A SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0x10AA SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1055 JUMP JUMPDEST POP PUSH1 0x3 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x10F5 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1121 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x116E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1143 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x116E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1151 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x11DE JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x11B5 SWAP2 SWAP1 PUSH2 0x43C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x11CB JUMPI DUP1 SWAP2 POP POP PUSH2 0x11E4 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x11D6 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1180 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x120C SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1238 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1285 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x125A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1285 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1268 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x129A SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12C6 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1313 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1313 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1328 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1354 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13A1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1376 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13A1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1384 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13CB JUMPI PUSH2 0x13CA PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13FE JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x13E9 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x14DE JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x142F SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x145B SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14A8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x147D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14A8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x148B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x14C0 JUMPI PUSH2 0x14BF PUSH2 0x3FA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x14D6 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1404 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x150F SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x153B SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1588 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x155D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1588 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x156B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x16 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15A6 SWAP2 SWAP1 PUSH2 0x4308 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x13 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x162F SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1645 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x165C SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x7 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x16A2 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16CE SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x171B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16F0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x171B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16FE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x174E SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x177A SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x179C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x16 DUP4 PUSH1 0x40 MLOAD PUSH2 0x17EB SWAP2 SWAP1 PUSH2 0x4308 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x15 PUSH1 0x0 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x187E SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x9 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1895 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x9 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18CD JUMPI PUSH2 0x18CC PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1900 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x18EB JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1A33 JUMPI DUP6 PUSH1 0x12 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x194F JUMPI POP DUP5 PUSH1 0x12 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1A12 JUMPI PUSH1 0x12 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1975 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19A1 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A06 JUMPI PUSH2 0x1A05 PUSH2 0x3FA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0x1A1D SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x1A2B SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x190B JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x16 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1A51 SWAP2 SWAP1 PUSH2 0x4308 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1AC2 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD9 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1B05 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B31 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B7E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B53 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B7E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B61 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x1BA9 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BD5 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C22 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BF7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C22 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C05 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0xF DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1CA3 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x16 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1CB9 SWAP2 SWAP1 PUSH2 0x4308 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1CF4 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x2 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1D34 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D60 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DAD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D82 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DAD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D90 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1DE0 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E0C SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E59 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E2E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E59 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E3C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E89 JUMPI PUSH2 0x1E88 PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1EB7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1F41 JUMPI DUP5 PUSH1 0x13 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1F2E JUMPI PUSH1 0x13 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1F13 JUMPI PUSH2 0x1F12 PUSH2 0x3FA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1F2A SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1F39 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1EC2 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x9 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F6C JUMPI PUSH2 0x1F6B PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F9A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x2024 JUMPI DUP5 PUSH1 0x15 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x2011 JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FF6 JUMPI PUSH2 0x1FF5 PUSH2 0x3FA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x200D SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x201C SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FA5 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x16 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2043 SWAP2 SWAP1 PUSH2 0x4308 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x12 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x20C4 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x20DB SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x6 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x210C SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2134 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP DUP1 PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2158 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x14 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x21BF SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x21D5 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x21EC SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x8 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2221 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x224D SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x229A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x226F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x229A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x227D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22CC JUMPI PUSH2 0x22CB PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x22FF JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x22EA JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x23DF JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2330 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x235C SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x23A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x237E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x23A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x238C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x23C1 JUMPI PUSH2 0x23C0 PUSH2 0x3FA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x23D7 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2305 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x16 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x2420 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x244C SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2499 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x246E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2499 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x247C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x25A1 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x2578 SWAP2 SWAP1 PUSH2 0x43C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x258E JUMPI DUP1 SWAP2 POP POP PUSH2 0x25A7 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2599 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2543 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x262E JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x25EF SWAP2 SWAP1 PUSH2 0x43C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x261B JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP POP PUSH2 0x2634 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2626 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x25BA JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x269F JUMPI PUSH1 0xA PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x266A SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x267A SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x268A SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2697 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x263C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x26EE JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x26D9 SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x26E6 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26A3 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2745 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2728 SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x273D SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26F2 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x279C JUMPI PUSH1 0x11 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2787 SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2794 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2749 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2803 JUMPI PUSH1 0x13 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x27DE SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x27EE SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x27FB SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27A0 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x2862 JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x284D SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x285A SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2807 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x28B9 JUMPI PUSH1 0x12 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x28A4 SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x28B1 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2866 JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x291A SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2946 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2993 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2968 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2993 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2976 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x29A8 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29D4 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2A21 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2A21 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A04 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2A4E SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A72 JUMPI PUSH2 0x2A71 PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AA5 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2A90 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x2B85 JUMPI PUSH1 0xA PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2AD6 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B02 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B4F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B24 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B4F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B32 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2B67 JUMPI PUSH2 0x2B66 PUSH2 0x3FA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2B7D SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2AAB JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2BB0 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2BEA SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C16 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C63 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C38 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C63 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C46 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x2C78 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CA4 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2CF1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2CC6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2CF1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CD4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2D81 JUMPI DUP5 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x2D64 JUMPI POP PUSH1 0x14 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x40 MLOAD PUSH2 0x2D52 SWAP2 SWAP1 PUSH2 0x43C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST ISZERO PUSH2 0x2D6E JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x2D79 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2D05 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2DB5 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2DE1 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E2E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E03 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E2E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E11 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x16 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2E4C SWAP2 SWAP1 PUSH2 0x4308 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2E9A SWAP2 SWAP1 PUSH2 0x43D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xF DUP3 PUSH1 0x40 MLOAD PUSH2 0x2EB2 SWAP2 SWAP1 PUSH2 0x4308 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2ECF SWAP2 SWAP1 PUSH2 0x43D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x10 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2F25 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2F46 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46616C7365000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0xA PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2FD1 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2FE7 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2FFD SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP SWAP1 POP POP DUP2 PUSH1 0xB PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x3022 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x16 DUP6 PUSH1 0x40 MLOAD PUSH2 0x3035 SWAP2 SWAP1 PUSH2 0x4308 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x306F SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x30E7 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x30BD SWAP2 SWAP1 PUSH2 0x43C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x30D4 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x30ED JUMP JUMPDEST DUP1 DUP1 PUSH2 0x30DF SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3088 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x3121 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x314D SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x319A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x316F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x319A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x317D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x11 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x31FB SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x3210 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x3222 JUMPI POP PUSH2 0x3241 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3240 SWAP2 SWAP1 PUSH2 0x3244 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x325D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x3245 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3288 DUP2 PUSH2 0x3275 JUMP JUMPDEST DUP2 EQ PUSH2 0x3293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x32A5 DUP2 PUSH2 0x327F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32C1 JUMPI PUSH2 0x32C0 PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32CF DUP5 DUP3 DUP6 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x333E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3323 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3366 DUP3 PUSH2 0x3304 JUMP JUMPDEST PUSH2 0x3370 DUP2 DUP6 PUSH2 0x330F JUMP JUMPDEST SWAP4 POP PUSH2 0x3380 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3320 JUMP JUMPDEST PUSH2 0x3389 DUP2 PUSH2 0x334A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A0 DUP4 DUP4 PUSH2 0x335B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33C0 DUP3 PUSH2 0x32D8 JUMP JUMPDEST PUSH2 0x33CA DUP2 DUP6 PUSH2 0x32E3 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x33DC DUP6 PUSH2 0x32F4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3418 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x33F9 DUP6 DUP3 PUSH2 0x3394 JUMP JUMPDEST SWAP5 POP PUSH2 0x3404 DUP4 PUSH2 0x33A8 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x33E0 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3444 DUP2 DUP5 PUSH2 0x33B5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3455 DUP2 PUSH2 0x3275 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3470 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x344C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x34B8 DUP3 PUSH2 0x334A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x34D7 JUMPI PUSH2 0x34D6 PUSH2 0x3480 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34EA PUSH2 0x3261 JUMP JUMPDEST SWAP1 POP PUSH2 0x34F6 DUP3 DUP3 PUSH2 0x34AF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3516 JUMPI PUSH2 0x3515 PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH2 0x351F DUP3 PUSH2 0x334A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x354E PUSH2 0x3549 DUP5 PUSH2 0x34FB JUMP JUMPDEST PUSH2 0x34E0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x356A JUMPI PUSH2 0x3569 PUSH2 0x347B JUMP JUMPDEST JUMPDEST PUSH2 0x3575 DUP5 DUP3 DUP6 PUSH2 0x352C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3592 JUMPI PUSH2 0x3591 PUSH2 0x3476 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x35A2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x353B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x35C6 JUMPI PUSH2 0x35C5 PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x35EF PUSH2 0x35EA DUP5 PUSH2 0x35AB JUMP JUMPDEST PUSH2 0x34E0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3612 JUMPI PUSH2 0x3611 PUSH2 0x35D7 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3659 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3637 JUMPI PUSH2 0x3636 PUSH2 0x3476 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x3644 DUP10 DUP3 PUSH2 0x357D JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3614 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3678 JUMPI PUSH2 0x3677 PUSH2 0x3476 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3688 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x35DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x36AB JUMPI PUSH2 0x36AA PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36C9 JUMPI PUSH2 0x36C8 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x36D5 DUP8 DUP3 DUP9 ADD PUSH2 0x357D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x36E6 DUP8 DUP3 DUP9 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3707 JUMPI PUSH2 0x3706 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3713 DUP8 DUP3 DUP9 ADD PUSH2 0x3663 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3734 JUMPI PUSH2 0x3733 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3740 DUP8 DUP3 DUP9 ADD PUSH2 0x357D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3768 DUP3 PUSH2 0x3304 JUMP JUMPDEST PUSH2 0x3772 DUP2 DUP6 PUSH2 0x374C JUMP JUMPDEST SWAP4 POP PUSH2 0x3782 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3320 JUMP JUMPDEST PUSH2 0x378B DUP2 PUSH2 0x334A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x37AB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x344C JUMP JUMPDEST PUSH2 0x37B8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x344C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x37CA DUP2 DUP5 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37EA JUMPI PUSH2 0x37E9 PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3808 JUMPI PUSH2 0x3807 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3814 DUP5 DUP3 DUP6 ADD PUSH2 0x357D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3837 DUP2 DUP7 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x384B DUP2 DUP6 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x385F DUP2 DUP5 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x387E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x344C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3890 DUP2 DUP5 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x38B2 JUMPI PUSH2 0x38B1 PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38C0 DUP7 DUP3 DUP8 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38E1 JUMPI PUSH2 0x38E0 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x38ED DUP7 DUP3 DUP8 ADD PUSH2 0x357D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x390E JUMPI PUSH2 0x390D PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x391A DUP7 DUP3 DUP8 ADD PUSH2 0x357D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3939 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x344C JUMP JUMPDEST PUSH2 0x3946 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x344C JUMP JUMPDEST PUSH2 0x3953 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x344C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3965 DUP2 DUP5 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3985 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x344C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3997 DUP2 DUP6 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP PUSH2 0x39A6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x344C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x39C8 JUMPI PUSH2 0x39C7 PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39D6 DUP8 DUP3 DUP9 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39F7 JUMPI PUSH2 0x39F6 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3A03 DUP8 DUP3 DUP9 ADD PUSH2 0x357D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3A14 DUP8 DUP3 DUP9 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A35 JUMPI PUSH2 0x3A34 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3A41 DUP8 DUP3 DUP9 ADD PUSH2 0x357D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A64 JUMPI PUSH2 0x3A63 PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A72 DUP6 DUP3 DUP7 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3A83 DUP6 DUP3 DUP7 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3AA4 JUMPI PUSH2 0x3AA3 PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3AB2 DUP6 DUP3 DUP7 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AD3 JUMPI PUSH2 0x3AD2 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3ADF DUP6 DUP3 DUP7 ADD PUSH2 0x357D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B03 DUP2 DUP5 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3B24 JUMPI PUSH2 0x3B23 PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B42 JUMPI PUSH2 0x3B41 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3B4E DUP7 DUP3 DUP8 ADD PUSH2 0x357D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3B5F DUP7 DUP3 DUP8 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B80 JUMPI PUSH2 0x3B7F PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3B8C DUP7 DUP3 DUP8 ADD PUSH2 0x357D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BCB DUP2 PUSH2 0x3275 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BDD DUP4 DUP4 PUSH2 0x3BC2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C01 DUP3 PUSH2 0x3B96 JUMP JUMPDEST PUSH2 0x3C0B DUP2 DUP6 PUSH2 0x3BA1 JUMP JUMPDEST SWAP4 POP PUSH2 0x3C16 DUP4 PUSH2 0x3BB2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C47 JUMPI DUP2 MLOAD PUSH2 0x3C2E DUP9 DUP3 PUSH2 0x3BD1 JUMP JUMPDEST SWAP8 POP PUSH2 0x3C39 DUP4 PUSH2 0x3BE9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3C1A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C6E DUP2 DUP5 PUSH2 0x3BF6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3C8F JUMPI PUSH2 0x3C8E PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C9D DUP7 DUP3 DUP8 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3CAE DUP7 DUP3 DUP8 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CCF JUMPI PUSH2 0x3CCE PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3CDB DUP7 DUP3 DUP8 ADD PUSH2 0x357D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3CFF JUMPI PUSH2 0x3CFE PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D0D DUP8 DUP3 DUP9 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3D1E DUP8 DUP3 DUP9 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D3F JUMPI PUSH2 0x3D3E PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3D4B DUP8 DUP3 DUP9 ADD PUSH2 0x357D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D6C JUMPI PUSH2 0x3D6B PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3D78 DUP8 DUP3 DUP9 ADD PUSH2 0x357D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D99 DUP2 PUSH2 0x3D84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DBA DUP2 DUP13 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP PUSH2 0x3DC9 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x3D90 JUMP JUMPDEST PUSH2 0x3DD6 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x3D90 JUMP JUMPDEST PUSH2 0x3DE3 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x3D90 JUMP JUMPDEST PUSH2 0x3DF0 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x3D90 JUMP JUMPDEST PUSH2 0x3DFD PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x3D90 JUMP JUMPDEST PUSH2 0x3E0A PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x3D90 JUMP JUMPDEST PUSH2 0x3E17 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x3D90 JUMP JUMPDEST PUSH2 0x3E25 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x3D90 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3E48 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x344C JUMP JUMPDEST PUSH2 0x3E55 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x344C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3E67 DUP2 DUP6 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3E7B DUP2 DUP5 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E9B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3D90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3EBA JUMPI PUSH2 0x3EB9 PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3ED8 JUMPI PUSH2 0x3ED7 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3EE4 DUP7 DUP3 DUP8 ADD PUSH2 0x357D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F05 JUMPI PUSH2 0x3F04 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3F11 DUP7 DUP3 DUP8 ADD PUSH2 0x357D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F32 JUMPI PUSH2 0x3F31 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3F3E DUP7 DUP3 DUP8 ADD PUSH2 0x357D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3F8F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3FA2 JUMPI PUSH2 0x3FA1 PUSH2 0x3F48 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4011 DUP3 PUSH2 0x3275 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4043 JUMPI PUSH2 0x4042 PUSH2 0x3FD7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x40B0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4073 JUMP JUMPDEST PUSH2 0x40BA DUP7 DUP4 PUSH2 0x4073 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40F7 PUSH2 0x40F2 PUSH2 0x40ED DUP5 PUSH2 0x3275 JUMP JUMPDEST PUSH2 0x40D2 JUMP JUMPDEST PUSH2 0x3275 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4111 DUP4 PUSH2 0x40DC JUMP JUMPDEST PUSH2 0x4125 PUSH2 0x411D DUP3 PUSH2 0x40FE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4080 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x413A PUSH2 0x412D JUMP JUMPDEST PUSH2 0x4145 DUP2 DUP5 DUP5 PUSH2 0x4108 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4169 JUMPI PUSH2 0x415E PUSH1 0x0 DUP3 PUSH2 0x4132 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x414B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x41AE JUMPI PUSH2 0x417F DUP2 PUSH2 0x404E JUMP JUMPDEST PUSH2 0x4188 DUP5 PUSH2 0x4063 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4197 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x41AB PUSH2 0x41A3 DUP6 PUSH2 0x4063 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x414A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41D1 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x41B3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41EA DUP4 DUP4 PUSH2 0x41C0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4203 DUP3 PUSH2 0x3304 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421C JUMPI PUSH2 0x421B PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH2 0x4226 DUP3 SLOAD PUSH2 0x3F77 JUMP JUMPDEST PUSH2 0x4231 DUP3 DUP3 DUP6 PUSH2 0x416D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4264 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4252 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x425C DUP6 DUP3 PUSH2 0x41DE JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x42C4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4272 DUP7 PUSH2 0x404E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x429A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4275 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x42B7 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x42B3 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x41C0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42E2 DUP3 PUSH2 0x3304 JUMP JUMPDEST PUSH2 0x42EC DUP2 DUP6 PUSH2 0x42CC JUMP JUMPDEST SWAP4 POP PUSH2 0x42FC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3320 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4314 DUP3 DUP5 PUSH2 0x42D7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x434C DUP2 PUSH2 0x3F77 JUMP JUMPDEST PUSH2 0x4356 DUP2 DUP7 PUSH2 0x431F JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x4371 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x4386 JUMPI PUSH2 0x43B9 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x43B9 JUMP JUMPDEST PUSH2 0x438F DUP6 PUSH2 0x432A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x43B1 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4392 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43CE DUP3 DUP5 PUSH2 0x433F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43E4 DUP3 PUSH2 0x3275 JUMP JUMPDEST SWAP2 POP PUSH2 0x43EF DUP4 PUSH2 0x3275 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4407 JUMPI PUSH2 0x4406 PUSH2 0x3FD7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID ADDRESS PUSH25 0x38366262366436653138633565656163613165383363316536 BALANCE CALLDATASIZE ORIGIN PUSH4 0x63343333 PUSH5 0x6363373061 CALLVALUE PUSH28 0x227469746C65223A224173736574204D65746164617461222C227479 PUSH17 0x65223A226F626A656374222C2270726F70 PUSH6 0x727469657322 GASPRICE PUSH28 0x225469746C65223A7B2274797065223A22737472696E67222C226465 PUSH20 0x6372697074696F6E223A22536F6C61722070616E PUSH6 0x6C73206F6E20 PUSH21 0x686520436F6E73657175656E636573204E6F6E6120 PUSH4 0x6F6D6D75 PUSH15 0x6974792063656E74657220227D2C22 DIFFICULTY PUSH6 0x736372697074 PUSH10 0x6F6E223A7B2274797065 0x22 GASPRICE 0x22 PUSH20 0x7472696E67222C226465736372697074696F6E22 GASPRICE 0x22 JUMPI PUSH6 0x2063616E2069 PUSH15 0x735C6E227D2C225374727563747572 PUSH6 0x4C656674223A PUSH28 0x2274797065223A22737472696E67222C226465736372697074696F6E 0x22 GASPRICE JUMPDEST 0x22 MSTORE PUSH6 0x70726573656E PUSH21 0x617469766573204265726C696E222C22436F6D6D75 PUSH15 0x697479222C224368696C6472656E22 0x5D PUSH30 0x2C225374727563747572655269676874223A7B2274797065223A22737472 PUSH10 0x6E67222C226465736372 PUSH10 0x7074696F6E223A5B2232 ADDRESS 0x25 0x22 0x2C 0x22 CALLDATACOPY ADDRESS 0x25 0x22 0x2C 0x22 BALANCE ADDRESS 0x25 0x22 0x5D PUSH30 0x2C22516F75746174696F6E223A7B226C696E6B223A2268747470733A2F2F PUSH22 0x706C6F61646966792E6E65742F353237336433353064 PUSH7 0x6430303164312F PUSH18 0x756F746174696F6E5F436F6E73657175656E PUSH4 0x65735F4E PUSH16 0x6E615F636F6D6D756E6974795F63656E PUSH21 0x65722E706466222C227072697A65223A222434382C ADDRESS CALLDATACOPY BALANCE 0x2E CALLDATALOAD CALLDATALOAD 0x22 PUSH30 0x2C2277616C6C6574223A7B2274797065223A22737472696E67222C226465 PUSH20 0x6372697074696F6E223A22307844363062433062 ADDRESS ADDRESS PUSH4 0x31443861 CALLDATACOPY BALANCE CODESIZE CHAINID TIMESTAMP CALLDATASIZE PUSH7 0x44654463343436 CALLDATASIZE PUSH4 0x37413131 CODESIZE ADDRESS CODESIZE CALLDATASIZE CODESIZE PUSH4 0x227D2C22 PUSH13 0x6F676F223A7B2274797065223A 0x22 PUSH20 0x7472696E67222C226465736372697074696F6E22 GASPRICE PUSH28 0x2275726C223A2268747470733A2F2F626166796265696634666B3674 PUSH24 0x696B6B63796F70676C687070646F376464336C3334626D36 PUSH18 0x65646A65336D786674656335653762346865 CALLDATALOAD CALLVALUE 0x2E PUSH10 0x7066732E6E667473746F PUSH19 0x6167652E6C696E6B222C2274797065223A2269 PUSH14 0x6167652F706E67227D7D2C22616C PUSH13 0x46696C6573223A5B7B2275726C 0x22 GASPRICE 0x22 PUSH9 0x747470733A2F2F6261 PUSH7 0x79626569663466 PUSH12 0x367477696B6B63796F70676C PUSH9 0x7070646F376464336C CALLER CALLVALUE PUSH3 0x6D3671 PUSH6 0x646A65336D78 PUSH7 0x74656335653762 CALLVALUE PUSH9 0x6535342E697066732E PUSH15 0x667473746F726167652E6C696E6B22 0x2C 0x22 PUSH21 0x797065223A22696D6167652F706E67227D5D7D7D7B 0x22 PUSH21 0x69746C65223A224173736574204D65746164617461 0x22 0x2C 0x22 PUSH21 0x797065223A226F626A656374222C2270726F706572 PUSH21 0x696573223A7B225469746C65223A7B227479706522 GASPRICE 0x22 PUSH20 0x7472696E67222C226465736372697074696F6E22 GASPRICE 0x22 0x4C PUSH2 0x6B65 KECCAK256 0x4E PUSH16 0x6E612C204F726C616E646F205553227D 0x2C 0x22 DIFFICULTY PUSH6 0x736372697074 PUSH10 0x6F6E223A7B2274797065 0x22 GASPRICE 0x22 PUSH20 0x7472696E67222C226465736372697074696F6E22 GASPRICE 0x22 0x22 PUSH30 0x2C2253746172745F44617465223A7B2274797065223A22737472696E6722 0x2C 0x22 PUSH5 0x6573637269 PUSH17 0x74696F6E223A22323032332D30382D3136 SLOAD BALANCE BALANCE GASPRICE BALANCE CALLVALUE 0x22 PUSH30 0x2C226C6F676F223A7B2274797065223A22737472696E67222C2264657363 PUSH19 0x697074696F6E223A7B2275726C223A22687474 PUSH17 0x733A2F2F62616679626569636235797933 CALLDATASIZE PUSH16 0x63733479756C7068367A707837676773 PUSH26 0x6567696E736A776E6674376D6C3763786F6A79777062736A7571 CALLVALUE 0x2E PUSH10 0x7066732E6E667473746F PUSH19 0x6167652E6C696E6B222C2274797065223A2269 PUSH14 0x6167652F706E67227D7D2C227761 PUSH13 0x6C6574223A7B2274797065223A 0x22 PUSH20 0x7472696E67222C226465736372697074696F6E22 GASPRICE 0x22 ADDRESS PUSH25 0x38366262366436653138633565656163613165383363316536 BALANCE CALLDATASIZE ORIGIN PUSH4 0x63343333 PUSH5 0x6363373061 CALLVALUE 0x22 PUSH30 0x2C22537562735072696365223A7B2274797065223A226E756D626572222C 0x22 PUSH5 0x6573637269 PUSH17 0x74696F6E223A22302E3035227D2C227479 PUSH17 0x65696D67223A7B2274797065223A227374 PUSH19 0x696E67222C226465736372697074696F6E223A 0x22 DIFFICULTY PUSH2 0x6F22 PUSH30 0x2C22616C6C46696C6573223A5B7B2275726C223A2268747470733A2F2F62 PUSH2 0x6679 PUSH3 0x656963 PUSH3 0x357979 CALLER CALLDATASIZE PUSH16 0x63733479756C7068367A707837676773 PUSH26 0x6567696E736A776E6674376D6C3763786F6A79777062736A7571 CALLVALUE 0x2E PUSH10 0x7066732E6E667473746F PUSH19 0x6167652E6C696E6B222C2274797065223A2269 PUSH14 0x6167652F706E67227D5D7D7D3C62 PUSH16 0x64793E3C6469762069643D2264616F2D PUSH4 0x6F6E7461 PUSH10 0x6E6572223E3C64697620 PUSH4 0x6C617373 RETURNDATASIZE 0x22 PUSH5 0x616F2D636F PUSH15 0x7461696E657220666C657820697465 PUSH14 0x732D63656E74657220666C65782D PUSH4 0x6F6C2067 PUSH2 0x702D CODESIZE KECCAK256 PUSH19 0x656C6174697665223E3C64697620636C617373 RETURNDATASIZE 0x22 PUSH5 0x616F2D7469 PUSH21 0x6C65206761702D3820666C657820666C65782D636F PUSH13 0x2072656C6174697665223E3C64 PUSH10 0x763E3C68312069643D22 PUSH5 0x616F2D7469 PUSH21 0x6C652220636C6173733D22746578742D6D6F6F6E2D CALLER ORIGIN KECCAK256 PUSH7 0x6F6E742D626F6C PUSH5 0x223E4C616B PUSH6 0x204E6F6E612C KECCAK256 0x4F PUSH19 0x6C616E646F2055533C2F68313E3C2F6469763E EXTCODECOPY PUSH5 0x697620636C PUSH2 0x7373 RETURNDATASIZE 0x22 PUSH7 0x6C657820676170 0x2D CALLVALUE KECCAK256 PUSH11 0x7573746966792D62657477 PUSH6 0x656E20746162 PUSH20 0x223E3C64697620636C6173733D22666C6578223E EXTCODECOPY PUSH2 0x2068 PUSH19 0x65663D222F3F713D416C6C2220636C6173733D 0x22 DIFFICULTY PUSH16 0x6E6174696F6E4261724C696E6B207461 PUSH3 0x20626C PUSH16 0x636B2070782D332070792D3220616374 PUSH10 0x7665223E416C6C3C2F61 RETURNDATACOPY EXTCODECOPY PUSH2 0x2068 PUSH19 0x65663D222F3F713D546F6461792220636C6173 PUSH20 0x3D22446F6E6174696F6E4261724C696E6B207461 PUSH3 0x20626C PUSH16 0x636B2070782D332070792D32223E546F PUSH5 0x61793C2F61 RETURNDATACOPY EXTCODECOPY PUSH2 0x2068 PUSH19 0x65663D222F3F713D546869732532304D6F6E74 PUSH9 0x2220636C6173733D22 DIFFICULTY PUSH16 0x6E6174696F6E4261724C696E6B207461 PUSH3 0x20626C PUSH16 0x636B2070782D332070792D32223E5468 PUSH10 0x73204D6F6E74683C2F61 RETURNDATACOPY EXTCODECOPY 0x2F PUSH5 0x69763E3C62 PUSH22 0x74746F6E20747970653D22627574746F6E222076616C PUSH22 0x653D2243726561746520476F616C2220636C6173733D 0x22 PUSH17 0x792D322070782D34206761702D32207465 PUSH25 0x742D6D6F6F6E2D313420726F756E6465642D6D6F6F6E2D692D PUSH20 0x6D207A2D3020666C6578206A7573746966792D63 PUSH6 0x6E7465722069 PUSH21 0x656D732D63656E74657220666F6E742D6D65646975 PUSH14 0x206E6F2D756E6465726C696E6520 PUSH16 0x766572666C6F772D68696464656E2073 PUSH6 0x6C6563742D6E PUSH16 0x6E65206F75746C696E652D6E6F6E6520 PUSH21 0x72616E736974696F6E206475726174696F6E2D3230 ADDRESS KECCAK256 PUSH2 0x6374 PUSH10 0x76653A7363616C652D39 ADDRESS KECCAK256 PUSH7 0x6F6375732D7669 PUSH20 0x69626C653A736861646F772D666F637573206274 PUSH15 0x2D7072696D61727920637265617465 0x2D PUSH8 0x6F616C2D626C6F63 PUSH12 0x223E3C64697620636C617373 RETURNDATASIZE 0x22 PUSH8 0x61702D3222206964 RETURNDATASIZE 0x22 PUSH10 0x716F6B6A223E0A202020 KECCAK256 KECCAK256 KECCAK256 KECCAK256 EXP KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 EXTCODECOPY 0x2F PUSH5 0x69763E3C2F PUSH3 0x757474 PUSH16 0x6E3E3C2F6469763E3C2F6469763E3C64 PUSH10 0x7620636C6173733D2264 PUSH2 0x6F2D PUSH5 0x6976696465 PUSH19 0x223E0A20203C2F6469763E3C64697620636C61 PUSH20 0x733D22666C657820666C65782D636F6C20676170 0x2D CODESIZE 0x22 RETURNDATACOPY EXTCODECOPY PUSH10 0x6D672069643D2264616F 0x2D PUSH10 0x6D61676522207372633D 0x22 PUSH9 0x747470733A2F2F6261 PUSH7 0x79626569636235 PUSH26 0x7933366F63733479756C7068367A707837676773796567696E73 PUSH11 0x776E6674376D6C3763786F PUSH11 0x79777062736A7571342E69 PUSH17 0x66732E6E667473746F726167652E6C696E PUSH12 0x222F3E3C2F6469763E3C6469 PUSH23 0x2069643D22676F616C2D636F6E7461696E65722220636C PUSH2 0x7373 RETURNDATASIZE 0x22 PUSH7 0x6C657820666C65 PUSH25 0x2D636F6C206761702D38223E0A0A20203C2F6469763E3C2F64 PUSH10 0x763E3C2F6469763E3C2F PUSH3 0x6F6479 RETURNDATACOPY EXTCODECOPY PUSH20 0x74796C653E2A207B20626F782D73697A696E673A KECCAK256 PUSH3 0x6F7264 PUSH6 0x722D626F783B KECCAK256 PUSH30 0x20626F6479207B6D617267696E3A20303B7D2364616F2D7469746C657B77 PUSH10 0x6474683A3738253B7D23 PUSH10 0x716F6B6A7B666C65782D PUSH5 0x6972656374 PUSH10 0x6F6E3A726F772D726576 PUSH6 0x7273653B6469 PUSH20 0x706C61793A666C65783B7D2E70792D322E70782D CALLVALUE 0x2E PUSH8 0x61702D322E746578 PUSH21 0x2D6D6F6F6E2D31342E726F756E6465642D6D6F6F6E 0x2D PUSH10 0x2D736D2E72656C617469 PUSH23 0x652E7A2D302E666C65782E6A7573746966792D63656E74 PUSH6 0x722E6974656D PUSH20 0x2D63656E7465722E666F6E742D6D656469756D2E PUSH15 0x6F2D756E6465726C696E652E6F7665 PUSH19 0x666C6F772D68696464656E2E73656C6563742D PUSH15 0x6F6E652E6F75746C696E652D6E6F6E PUSH6 0x2E7472616E73 PUSH10 0x74696F6E2E6475726174 PUSH10 0x6F6E2D3230302E616374 PUSH10 0x76655C3A7363616C652D CODECOPY ADDRESS 0x2E PUSH7 0x6F6375732D7669 PUSH20 0x69626C655C3A736861646F772D666F6375732E62 PUSH21 0x6E2D7072696D6172792E6372656174652D676F616C 0x2D PUSH3 0x6C6F63 PUSH12 0x2E7B706F736974696F6E3A72 PUSH6 0x6C6174697665 EXTCODESIZE PUSH19 0x696768743A3070783B7D2E70792D322E70782D CALLVALUE 0x2E PUSH8 0x61702D322E746578 PUSH21 0x2D6D6F6F6E2D31342E726F756E6465642D6D6F6F6E 0x2D PUSH10 0x2D736D2E7A2D302E666C PUSH6 0x782E6A757374 PUSH10 0x66792D63656E7465722E PUSH10 0x74656D732D63656E7465 PUSH19 0x2E666F6E742D6D656469756D2E6E6F2D756E64 PUSH6 0x726C696E652E PUSH16 0x766572666C6F772D68696464656E2E73 PUSH6 0x6C6563742D6E PUSH16 0x6E652E6F75746C696E652D6E6F6E652E PUSH21 0x72616E736974696F6E2E6475726174696F6E2D3230 ADDRESS 0x2E PUSH2 0x6374 PUSH10 0x76655C3A7363616C652D CODECOPY ADDRESS 0x2E PUSH7 0x6F6375732D7669 PUSH20 0x69626C655C3A736861646F772D666F6375732E62 PUSH21 0x6E2D7072696D6172792E6372656174652D676F616C 0x2D PUSH3 0x6C6F63 PUSH12 0x2E7B72696768743A31307078 EXTCODESIZE PUSH17 0x6F736974696F6E3A6162736F6C7574653B PUSH30 0x3C2F7374796C653E7B227469746C65223A224173736574204D6574616461 PUSH21 0x61222C2274797065223A226F626A656374222C2270 PUSH19 0x6F70657274696573223A7B225469746C65223A PUSH28 0x2274797065223A22737472696E67222C226465736372697074696F6E 0x22 GASPRICE 0x22 MSTORE PUSH6 0x6E657761626C PUSH6 0x20656E657267 PUSH26 0x227D2C224465736372697074696F6E223A7B2274797065223A22 PUSH20 0x7472696E67222C226465736372697074696F6E22 GASPRICE 0x22 0x4F PUSH22 0x722044414F206973207374617274696E672069742773 KECCAK256 PUSH16 0x776E2072656E657761626C6520656E65 PUSH19 0x677920636F6D70616E7920746861742064656C PUSH10 0x7665727320656E657267 PUSH26 0x20666F72207468652077686F6C6520636F6D6D756E697479227D 0x2C 0x22 TIMESTAMP PUSH22 0x64676574223A7B2274797065223A22737472696E6722 0x2C 0x22 PUSH5 0x6573637269 PUSH17 0x74696F6E223A2224312C3030302C303030 0x22 PUSH30 0x2C22456E645F44617465223A7B2274797065223A22737472696E67222C22 PUSH5 0x6573637269 PUSH17 0x74696F6E223A22323032332D30382D3331 SLOAD ORIGIN ORIGIN GASPRICE CALLVALUE ADDRESS 0x22 PUSH30 0x2C2277616C6C6574223A7B2274797065223A22737472696E67222C226465 PUSH20 0x6372697074696F6E223A22307838366262366436 PUSH6 0x313863356565 PUSH2 0x6361 BALANCE PUSH6 0x383363316536 BALANCE CALLDATASIZE ORIGIN PUSH4 0x63343333 PUSH5 0x6363373061 CALLVALUE 0x22 PUSH30 0x2C226C6F676F223A7B2274797065223A22737472696E67222C2264657363 PUSH19 0x697074696F6E223A7B2275726C223A22687474 PUSH17 0x733A2F2F62616679626569633567347876 PUSH11 0x376D7972676B6236326C65 PUSH15 0x6C64376F72706C32687273706D7A6C PUSH27 0x6364627A70796F746333337471796770652E697066732E6E667473 PUSH21 0x6F726167652E6C696E6B222C2274797065223A2269 PUSH14 0x6167652F6A706567227D7D2C2261 PUSH13 0x6C46696C6573223A5B7B227572 PUSH13 0x223A2268747470733A2F2F6261 PUSH7 0x79626569633567 CALLVALUE PUSH25 0x766A376D7972676B6236326C656E6C64376F72706C32687273 PUSH17 0x6D7A6C7A6364627A70796F746333337471 PUSH26 0x6770652E697066732E6E667473746F726167652E6C696E6B222C 0x22 PUSH21 0x797065223A22696D6167652F6A706567227D5D7D7D LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x691F7A46C8CBCA96533D9DF9C519AE4288B0052D72E687889C24300BA8431C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"170:19117:9:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_dao_ids_2414":{"entryPoint":7429,"id":2414,"parameterSlots":0,"returnSlots":0},"@_dao_uris_2437":{"entryPoint":4585,"id":2437,"parameterSlots":0,"returnSlots":0},"@_donated_2460":{"entryPoint":7210,"id":2460,"parameterSlots":0,"returnSlots":0},"@_donations_2465":{"entryPoint":7607,"id":2465,"parameterSlots":0,"returnSlots":0},"@_donations_ids_2416":{"entryPoint":12112,"id":2416,"parameterSlots":0,"returnSlots":0},"@_goal_ids_2418":{"entryPoint":3994,"id":2418,"parameterSlots":0,"returnSlots":0},"@_goal_uris_2451":{"entryPoint":7435,"id":2451,"parameterSlots":0,"returnSlots":0},"@_ideas_ids_2420":{"entryPoint":11660,"id":2420,"parameterSlots":0,"returnSlots":0},"@_ideas_uris_2456":{"entryPoint":5925,"id":2456,"parameterSlots":0,"returnSlots":0},"@_ideas_vote_ids_2426":{"entryPoint":6311,"id":2426,"parameterSlots":0,"returnSlots":0},"@_join_ids_2422":{"entryPoint":3621,"id":2422,"parameterSlots":0,"returnSlots":0},"@_joined_person_2446":{"entryPoint":5350,"id":2446,"parameterSlots":0,"returnSlots":0},"@_message_ids_2428":{"entryPoint":8870,"id":2428,"parameterSlots":0,"returnSlots":0},"@_message_read_ids_2430":{"entryPoint":11189,"id":2430,"parameterSlots":0,"returnSlots":0},"@_reply_ids_2432":{"entryPoint":9644,"id":2432,"parameterSlots":0,"returnSlots":0},"@_smart_contract_ids_2424":{"entryPoint":4288,"id":2424,"parameterSlots":0,"returnSlots":0},"@_smart_contracts_uris_2470":{"entryPoint":12530,"id":2470,"parameterSlots":0,"returnSlots":0},"@_template_uris_2441":{"entryPoint":7050,"id":2441,"parameterSlots":0,"returnSlots":0},"@_user_badges_2495":{"entryPoint":9191,"id":2495,"parameterSlots":0,"returnSlots":0},"@addTempData_3770":{"entryPoint":3030,"id":3770,"parameterSlots":0,"returnSlots":0},"@add_donation_2966":{"entryPoint":11834,"id":2966,"parameterSlots":3,"returnSlots":0},"@all_goal_ideas_votes_2475":{"entryPoint":4294,"id":2475,"parameterSlots":0,"returnSlots":0},"@all_messages_2480":{"entryPoint":10475,"id":2480,"parameterSlots":0,"returnSlots":0},"@all_read_messages_2485":{"entryPoint":11195,"id":2485,"parameterSlots":0,"returnSlots":0},"@all_replies_2490":{"entryPoint":5741,"id":2490,"parameterSlots":0,"returnSlots":0},"@create_dao_2535":{"entryPoint":12118,"id":2535,"parameterSlots":3,"returnSlots":1},"@create_goal_2660":{"entryPoint":7256,"id":2660,"parameterSlots":3,"returnSlots":1},"@create_goal_ideas_vote_3263":{"entryPoint":8239,"id":3263,"parameterSlots":3,"returnSlots":1},"@create_ideas_2888":{"entryPoint":4000,"id":2888,"parameterSlots":4,"returnSlots":1},"@create_ideas_smart_contract_2908":{"entryPoint":12708,"id":2908,"parameterSlots":3,"returnSlots":0},"@dao_uri_2627":{"entryPoint":6882,"id":2627,"parameterSlots":1,"returnSlots":1},"@getMsgIDs_3420":{"entryPoint":7785,"id":3420,"parameterSlots":1,"returnSlots":1},"@getReadMsg_3601":{"entryPoint":11515,"id":3601,"parameterSlots":2,"returnSlots":1},"@getReplyIDs_3514":{"entryPoint":8012,"id":3514,"parameterSlots":1,"returnSlots":1},"@get_all_daos_2614":{"entryPoint":10835,"id":2614,"parameterSlots":0,"returnSlots":1},"@get_all_goals_2716":{"entryPoint":5035,"id":2716,"parameterSlots":0,"returnSlots":1},"@get_all_goals_by_dao_id_2773":{"entryPoint":3254,"id":2773,"parameterSlots":1,"returnSlots":1},"@get_all_ideas_3075":{"entryPoint":8876,"id":3075,"parameterSlots":0,"returnSlots":1},"@get_all_ideas_by_goal_id_3131":{"entryPoint":3627,"id":3131,"parameterSlots":1,"returnSlots":1},"@get_goal_id_by_goal_uri_2814":{"entryPoint":4472,"id":2814,"parameterSlots":1,"returnSlots":1},"@get_goal_id_from_ideas_uri_3216":{"entryPoint":9650,"id":3216,"parameterSlots":1,"returnSlots":1},"@get_ideas_id_by_ideas_uri_3172":{"entryPoint":9531,"id":3172,"parameterSlots":1,"returnSlots":1},"@get_ideas_votes_from_goal_3328":{"entryPoint":6317,"id":3328,"parameterSlots":2,"returnSlots":1},"@goal_uri_2827":{"entryPoint":11666,"id":2827,"parameterSlots":1,"returnSlots":1},"@ideas_uri_3229":{"entryPoint":8702,"id":3229,"parameterSlots":1,"returnSlots":1},"@is_person_joined_3034":{"entryPoint":12416,"id":3034,"parameterSlots":1,"returnSlots":1},"@join_community_2993":{"entryPoint":6719,"id":2993,"parameterSlots":2,"returnSlots":0},"@reset_all_3741":{"entryPoint":9785,"id":3741,"parameterSlots":0,"returnSlots":0},"@sendMsg_3363":{"entryPoint":5522,"id":3363,"parameterSlots":3,"returnSlots":1},"@sendReadMsg_3544":{"entryPoint":8542,"id":3544,"parameterSlots":4,"returnSlots":1},"@sendReply_3457":{"entryPoint":6103,"id":3457,"parameterSlots":4,"returnSlots":1},"@set_dao_2573":{"entryPoint":8465,"id":2573,"parameterSlots":3,"returnSlots":0},"@set_goal_2675":{"entryPoint":11149,"id":2675,"parameterSlots":2,"returnSlots":0},"@set_ideas_2923":{"entryPoint":10795,"id":2923,"parameterSlots":2,"returnSlots":0},"@update_template_2549":{"entryPoint":8428,"id":2549,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":13788,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":13627,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":13923,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":13693,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":12950,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":14292,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr":{"entryPoint":16033,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptrt_string_memory_ptr":{"entryPoint":13969,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_string_memory_ptrt_uint256t_string_memory_ptr":{"entryPoint":15115,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":12971,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":14989,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":14489,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_string_memory_ptr":{"entryPoint":14766,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":14925,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr":{"entryPoint":15478,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":15589,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":13204,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":15313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":13237,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":15350,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":15760,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":17215,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":13147,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":14173,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":17111,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":15298,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":13388,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":17346,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":17160,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13354,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":15444,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":16006,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15081,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__to_t_string_memory_ptr_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__fromStack_reversed":{"entryPoint":15775,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14365,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":13403,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14441,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":14704,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14230,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15923,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14628,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_memory":{"entryPoint":13536,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":12897,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":13739,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":13563,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":13044,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15282,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage_ptr":{"entryPoint":17194,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":16462,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":13016,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15254,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":13060,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":13224,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15337,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":13027,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":15265,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":17183,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":13071,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":14156,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":17100,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":17369,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":16749,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_bool":{"entryPoint":15748,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":12917,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":16714,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":16604,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":16890,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":13612,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":13088,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":16483,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":16247,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":16862,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":13487,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":16594,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":16390,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":16832,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":16343,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":16200,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":16296,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":13440,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":16638,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":13430,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":13783,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":13435,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":12912,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":12907,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":13130,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":16499,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":16819,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":16690,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":16512,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":16648,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":12927,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":16685,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:33803:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"379:32:16","statements":[{"nodeType":"YulAssignment","src":"389:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:16","type":""}],"src":"334:77:16"},{"body":{"nodeType":"YulBlock","src":"460:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:16"},"nodeType":"YulFunctionCall","src":"519:12:16"},"nodeType":"YulExpressionStatement","src":"519:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:16"},"nodeType":"YulFunctionCall","src":"490:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:16"},"nodeType":"YulFunctionCall","src":"480:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:16"},"nodeType":"YulFunctionCall","src":"473:43:16"},"nodeType":"YulIf","src":"470:63:16"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:16","type":""}],"src":"417:122:16"},{"body":{"nodeType":"YulBlock","src":"597:87:16","statements":[{"nodeType":"YulAssignment","src":"607:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:16"},"nodeType":"YulFunctionCall","src":"616:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"645:26:16"},"nodeType":"YulFunctionCall","src":"645:33:16"},"nodeType":"YulExpressionStatement","src":"645:33:16"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:16","type":""}],"src":"545:139:16"},{"body":{"nodeType":"YulBlock","src":"756:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"802:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"804:77:16"},"nodeType":"YulFunctionCall","src":"804:79:16"},"nodeType":"YulExpressionStatement","src":"804:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"777:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"786:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"773:3:16"},"nodeType":"YulFunctionCall","src":"773:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"798:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"769:3:16"},"nodeType":"YulFunctionCall","src":"769:32:16"},"nodeType":"YulIf","src":"766:119:16"},{"nodeType":"YulBlock","src":"895:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"910:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"924:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"914:6:16","type":""}]},{"nodeType":"YulAssignment","src":"939:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"974:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"985:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"970:3:16"},"nodeType":"YulFunctionCall","src":"970:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"994:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"949:20:16"},"nodeType":"YulFunctionCall","src":"949:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"939:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"726:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"737:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"749:6:16","type":""}],"src":"690:329:16"},{"body":{"nodeType":"YulBlock","src":"1109:40:16","statements":[{"nodeType":"YulAssignment","src":"1120:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1136:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1130:5:16"},"nodeType":"YulFunctionCall","src":"1130:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1120:6:16"}]}]},"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1092:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1102:6:16","type":""}],"src":"1025:124:16"},{"body":{"nodeType":"YulBlock","src":"1276:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1293:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1298:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1286:6:16"},"nodeType":"YulFunctionCall","src":"1286:19:16"},"nodeType":"YulExpressionStatement","src":"1286:19:16"},{"nodeType":"YulAssignment","src":"1314:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1333:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1338:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1329:3:16"},"nodeType":"YulFunctionCall","src":"1329:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1314:11:16"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1248:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1253:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1264:11:16","type":""}],"src":"1155:194:16"},{"body":{"nodeType":"YulBlock","src":"1437:60:16","statements":[{"nodeType":"YulAssignment","src":"1447:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"1455:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1447:4:16"}]},{"nodeType":"YulAssignment","src":"1468:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1480:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1485:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1476:3:16"},"nodeType":"YulFunctionCall","src":"1476:14:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1468:4:16"}]}]},"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1424:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1432:4:16","type":""}],"src":"1355:142:16"},{"body":{"nodeType":"YulBlock","src":"1562:40:16","statements":[{"nodeType":"YulAssignment","src":"1573:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1589:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1583:5:16"},"nodeType":"YulFunctionCall","src":"1583:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1573:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1555:6:16","type":""}],"src":"1503:99:16"},{"body":{"nodeType":"YulBlock","src":"1694:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1711:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1716:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1704:6:16"},"nodeType":"YulFunctionCall","src":"1704:19:16"},"nodeType":"YulExpressionStatement","src":"1704:19:16"},{"nodeType":"YulAssignment","src":"1732:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1751:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1756:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1747:3:16"},"nodeType":"YulFunctionCall","src":"1747:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1732:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1666:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1671:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1682:11:16","type":""}],"src":"1608:159:16"},{"body":{"nodeType":"YulBlock","src":"1835:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1845:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1854:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1849:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1914:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1939:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1944:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1935:3:16"},"nodeType":"YulFunctionCall","src":"1935:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1958:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1963:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1954:3:16"},"nodeType":"YulFunctionCall","src":"1954:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1948:5:16"},"nodeType":"YulFunctionCall","src":"1948:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1928:6:16"},"nodeType":"YulFunctionCall","src":"1928:39:16"},"nodeType":"YulExpressionStatement","src":"1928:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1875:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"1878:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1872:2:16"},"nodeType":"YulFunctionCall","src":"1872:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1886:19:16","statements":[{"nodeType":"YulAssignment","src":"1888:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1897:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"1900:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1893:3:16"},"nodeType":"YulFunctionCall","src":"1893:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1888:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1868:3:16","statements":[]},"src":"1864:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1997:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2002:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1993:3:16"},"nodeType":"YulFunctionCall","src":"1993:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"2011:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1986:6:16"},"nodeType":"YulFunctionCall","src":"1986:27:16"},"nodeType":"YulExpressionStatement","src":"1986:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1817:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1822:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1827:6:16","type":""}],"src":"1773:246:16"},{"body":{"nodeType":"YulBlock","src":"2073:54:16","statements":[{"nodeType":"YulAssignment","src":"2083:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2101:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2108:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2097:3:16"},"nodeType":"YulFunctionCall","src":"2097:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2117:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2113:3:16"},"nodeType":"YulFunctionCall","src":"2113:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2093:3:16"},"nodeType":"YulFunctionCall","src":"2093:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2083:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2056:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2066:6:16","type":""}],"src":"2025:102:16"},{"body":{"nodeType":"YulBlock","src":"2215:275:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2225:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2272:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2239:32:16"},"nodeType":"YulFunctionCall","src":"2239:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2229:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2287:68:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2343:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2348:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2294:48:16"},"nodeType":"YulFunctionCall","src":"2294:61:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2287:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2403:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2410:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2399:3:16"},"nodeType":"YulFunctionCall","src":"2399:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"2417:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2422:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2364:34:16"},"nodeType":"YulFunctionCall","src":"2364:65:16"},"nodeType":"YulExpressionStatement","src":"2364:65:16"},{"nodeType":"YulAssignment","src":"2438:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2476:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2454:21:16"},"nodeType":"YulFunctionCall","src":"2454:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2445:3:16"},"nodeType":"YulFunctionCall","src":"2445:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2438:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2196:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2203:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2211:3:16","type":""}],"src":"2133:357:16"},{"body":{"nodeType":"YulBlock","src":"2596:96:16","statements":[{"nodeType":"YulAssignment","src":"2606:80:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2674:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"2682:3:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2620:53:16"},"nodeType":"YulFunctionCall","src":"2620:66:16"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"2606:10:16"}]}]},"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"2569:6:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2577:3:16","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"2585:10:16","type":""}],"src":"2496:196:16"},{"body":{"nodeType":"YulBlock","src":"2783:38:16","statements":[{"nodeType":"YulAssignment","src":"2793:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2805:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2810:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2801:3:16"},"nodeType":"YulFunctionCall","src":"2801:14:16"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"2793:4:16"}]}]},"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2770:3:16","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"2778:4:16","type":""}],"src":"2698:123:16"},{"body":{"nodeType":"YulBlock","src":"2999:847:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3009:78:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3081:5:16"}],"functionName":{"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3023:57:16"},"nodeType":"YulFunctionCall","src":"3023:64:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3013:6:16","type":""}]},{"nodeType":"YulAssignment","src":"3096:103:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3187:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"3192:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3103:83:16"},"nodeType":"YulFunctionCall","src":"3103:96:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3096:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"3208:20:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"3225:3:16"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"3212:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3237:39:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3253:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3262:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3270:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3258:3:16"},"nodeType":"YulFunctionCall","src":"3258:17:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3249:3:16"},"nodeType":"YulFunctionCall","src":"3249:27:16"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"3241:4:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3285:81:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3360:5:16"}],"functionName":{"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3300:59:16"},"nodeType":"YulFunctionCall","src":"3300:66:16"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"3289:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3375:21:16","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"3389:7:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3379:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3465:336:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3486:3:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3495:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3501:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3491:3:16"},"nodeType":"YulFunctionCall","src":"3491:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3479:6:16"},"nodeType":"YulFunctionCall","src":"3479:33:16"},"nodeType":"YulExpressionStatement","src":"3479:33:16"},{"nodeType":"YulVariableDeclaration","src":"3525:34:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3552:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3546:5:16"},"nodeType":"YulFunctionCall","src":"3546:13:16"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"3529:13:16","type":""}]},{"nodeType":"YulAssignment","src":"3572:92:16","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"3644:13:16"},{"name":"tail","nodeType":"YulIdentifier","src":"3659:4:16"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3580:63:16"},"nodeType":"YulFunctionCall","src":"3580:84:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3572:4:16"}]},{"nodeType":"YulAssignment","src":"3677:80:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3750:6:16"}],"functionName":{"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3687:62:16"},"nodeType":"YulFunctionCall","src":"3687:70:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3677:6:16"}]},{"nodeType":"YulAssignment","src":"3770:21:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3781:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3777:3:16"},"nodeType":"YulFunctionCall","src":"3777:14:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3770:3:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3427:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"3430:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3424:2:16"},"nodeType":"YulFunctionCall","src":"3424:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3438:18:16","statements":[{"nodeType":"YulAssignment","src":"3440:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3449:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"3452:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3445:3:16"},"nodeType":"YulFunctionCall","src":"3445:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3440:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"3409:14:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3411:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3420:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3415:1:16","type":""}]}]},"src":"3405:396:16"},{"nodeType":"YulAssignment","src":"3810:11:16","value":{"name":"tail","nodeType":"YulIdentifier","src":"3817:4:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3810:3:16"}]},{"nodeType":"YulAssignment","src":"3830:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"3837:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3830:3:16"}]}]},"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2978:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2985:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2994:3:16","type":""}],"src":"2855:991:16"},{"body":{"nodeType":"YulBlock","src":"4020:245:16","statements":[{"nodeType":"YulAssignment","src":"4030:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4042:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4053:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4038:3:16"},"nodeType":"YulFunctionCall","src":"4038:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4030:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4088:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:16"},"nodeType":"YulFunctionCall","src":"4073:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4096:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"4102:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4092:3:16"},"nodeType":"YulFunctionCall","src":"4092:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4066:6:16"},"nodeType":"YulFunctionCall","src":"4066:47:16"},"nodeType":"YulExpressionStatement","src":"4066:47:16"},{"nodeType":"YulAssignment","src":"4122:136:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4244:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"4253:4:16"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4130:113:16"},"nodeType":"YulFunctionCall","src":"4130:128:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4122:4:16"}]}]},"name":"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3992:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4004:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4015:4:16","type":""}],"src":"3852:413:16"},{"body":{"nodeType":"YulBlock","src":"4336:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4353:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4376:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4358:17:16"},"nodeType":"YulFunctionCall","src":"4358:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4346:6:16"},"nodeType":"YulFunctionCall","src":"4346:37:16"},"nodeType":"YulExpressionStatement","src":"4346:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4324:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4331:3:16","type":""}],"src":"4271:118:16"},{"body":{"nodeType":"YulBlock","src":"4493:124:16","statements":[{"nodeType":"YulAssignment","src":"4503:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4515:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4526:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4511:3:16"},"nodeType":"YulFunctionCall","src":"4511:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4503:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4583:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4596:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4607:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4592:3:16"},"nodeType":"YulFunctionCall","src":"4592:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4539:43:16"},"nodeType":"YulFunctionCall","src":"4539:71:16"},"nodeType":"YulExpressionStatement","src":"4539:71:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4465:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4477:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4488:4:16","type":""}],"src":"4395:222:16"},{"body":{"nodeType":"YulBlock","src":"4712:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4729:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4732:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4722:6:16"},"nodeType":"YulFunctionCall","src":"4722:12:16"},"nodeType":"YulExpressionStatement","src":"4722:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"4623:117:16"},{"body":{"nodeType":"YulBlock","src":"4835:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4852:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4855:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4845:6:16"},"nodeType":"YulFunctionCall","src":"4845:12:16"},"nodeType":"YulExpressionStatement","src":"4845:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"4746:117:16"},{"body":{"nodeType":"YulBlock","src":"4897:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4914:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4917:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4907:6:16"},"nodeType":"YulFunctionCall","src":"4907:88:16"},"nodeType":"YulExpressionStatement","src":"4907:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5011:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5014:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5004:6:16"},"nodeType":"YulFunctionCall","src":"5004:15:16"},"nodeType":"YulExpressionStatement","src":"5004:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5035:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5038:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5028:6:16"},"nodeType":"YulFunctionCall","src":"5028:15:16"},"nodeType":"YulExpressionStatement","src":"5028:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"4869:180:16"},{"body":{"nodeType":"YulBlock","src":"5098:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5108:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5130:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5160:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5138:21:16"},"nodeType":"YulFunctionCall","src":"5138:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5126:3:16"},"nodeType":"YulFunctionCall","src":"5126:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5112:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5277:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5279:16:16"},"nodeType":"YulFunctionCall","src":"5279:18:16"},"nodeType":"YulExpressionStatement","src":"5279:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5220:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"5232:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5217:2:16"},"nodeType":"YulFunctionCall","src":"5217:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5256:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5268:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5253:2:16"},"nodeType":"YulFunctionCall","src":"5253:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5214:2:16"},"nodeType":"YulFunctionCall","src":"5214:62:16"},"nodeType":"YulIf","src":"5211:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5315:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5319:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5308:6:16"},"nodeType":"YulFunctionCall","src":"5308:22:16"},"nodeType":"YulExpressionStatement","src":"5308:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5084:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"5092:4:16","type":""}],"src":"5055:281:16"},{"body":{"nodeType":"YulBlock","src":"5383:88:16","statements":[{"nodeType":"YulAssignment","src":"5393:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5403:18:16"},"nodeType":"YulFunctionCall","src":"5403:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5393:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5452:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"5460:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5432:19:16"},"nodeType":"YulFunctionCall","src":"5432:33:16"},"nodeType":"YulExpressionStatement","src":"5432:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5367:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5376:6:16","type":""}],"src":"5342:129:16"},{"body":{"nodeType":"YulBlock","src":"5544:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"5649:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5651:16:16"},"nodeType":"YulFunctionCall","src":"5651:18:16"},"nodeType":"YulExpressionStatement","src":"5651:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5621:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"5629:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5618:2:16"},"nodeType":"YulFunctionCall","src":"5618:30:16"},"nodeType":"YulIf","src":"5615:56:16"},{"nodeType":"YulAssignment","src":"5681:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5711:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5689:21:16"},"nodeType":"YulFunctionCall","src":"5689:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5681:4:16"}]},{"nodeType":"YulAssignment","src":"5755:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5767:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"5773:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5763:3:16"},"nodeType":"YulFunctionCall","src":"5763:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5755:4:16"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5528:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5539:4:16","type":""}],"src":"5477:308:16"},{"body":{"nodeType":"YulBlock","src":"5855:82:16","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5878:3:16"},{"name":"src","nodeType":"YulIdentifier","src":"5883:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"5888:6:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"5865:12:16"},"nodeType":"YulFunctionCall","src":"5865:30:16"},"nodeType":"YulExpressionStatement","src":"5865:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5915:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"5920:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5911:3:16"},"nodeType":"YulFunctionCall","src":"5911:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"5929:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5904:6:16"},"nodeType":"YulFunctionCall","src":"5904:27:16"},"nodeType":"YulExpressionStatement","src":"5904:27:16"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5837:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"5842:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"5847:6:16","type":""}],"src":"5791:146:16"},{"body":{"nodeType":"YulBlock","src":"6027:341:16","statements":[{"nodeType":"YulAssignment","src":"6037:75:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6104:6:16"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6062:41:16"},"nodeType":"YulFunctionCall","src":"6062:49:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6046:15:16"},"nodeType":"YulFunctionCall","src":"6046:66:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6037:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6128:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"6135:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6121:6:16"},"nodeType":"YulFunctionCall","src":"6121:21:16"},"nodeType":"YulExpressionStatement","src":"6121:21:16"},{"nodeType":"YulVariableDeclaration","src":"6151:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6166:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"6173:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6162:3:16"},"nodeType":"YulFunctionCall","src":"6162:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6155:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"6216:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"6218:77:16"},"nodeType":"YulFunctionCall","src":"6218:79:16"},"nodeType":"YulExpressionStatement","src":"6218:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6197:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"6202:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6193:3:16"},"nodeType":"YulFunctionCall","src":"6193:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"6211:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6190:2:16"},"nodeType":"YulFunctionCall","src":"6190:25:16"},"nodeType":"YulIf","src":"6187:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6345:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"6350:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"6355:6:16"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"6308:36:16"},"nodeType":"YulFunctionCall","src":"6308:54:16"},"nodeType":"YulExpressionStatement","src":"6308:54:16"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6000:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"6005:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"6013:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6021:5:16","type":""}],"src":"5943:425:16"},{"body":{"nodeType":"YulBlock","src":"6450:278:16","statements":[{"body":{"nodeType":"YulBlock","src":"6499:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6501:77:16"},"nodeType":"YulFunctionCall","src":"6501:79:16"},"nodeType":"YulExpressionStatement","src":"6501:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6478:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6486:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6474:3:16"},"nodeType":"YulFunctionCall","src":"6474:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"6493:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6470:3:16"},"nodeType":"YulFunctionCall","src":"6470:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6463:6:16"},"nodeType":"YulFunctionCall","src":"6463:35:16"},"nodeType":"YulIf","src":"6460:122:16"},{"nodeType":"YulVariableDeclaration","src":"6591:34:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6618:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6605:12:16"},"nodeType":"YulFunctionCall","src":"6605:20:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6595:6:16","type":""}]},{"nodeType":"YulAssignment","src":"6634:88:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6695:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6703:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6691:3:16"},"nodeType":"YulFunctionCall","src":"6691:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"6710:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"6718:3:16"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6643:47:16"},"nodeType":"YulFunctionCall","src":"6643:79:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6634:5:16"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6428:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"6436:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6444:5:16","type":""}],"src":"6388:340:16"},{"body":{"nodeType":"YulBlock","src":"6826:229:16","statements":[{"body":{"nodeType":"YulBlock","src":"6931:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6933:16:16"},"nodeType":"YulFunctionCall","src":"6933:18:16"},"nodeType":"YulExpressionStatement","src":"6933:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6903:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6911:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6900:2:16"},"nodeType":"YulFunctionCall","src":"6900:30:16"},"nodeType":"YulIf","src":"6897:56:16"},{"nodeType":"YulAssignment","src":"6963:25:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6975:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6983:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6971:3:16"},"nodeType":"YulFunctionCall","src":"6971:17:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6963:4:16"}]},{"nodeType":"YulAssignment","src":"7025:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7037:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"7043:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7033:3:16"},"nodeType":"YulFunctionCall","src":"7033:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7025:4:16"}]}]},"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6810:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6821:4:16","type":""}],"src":"6734:321:16"},{"body":{"nodeType":"YulBlock","src":"7150:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7167:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7170:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7160:6:16"},"nodeType":"YulFunctionCall","src":"7160:12:16"},"nodeType":"YulExpressionStatement","src":"7160:12:16"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"7061:117:16"},{"body":{"nodeType":"YulBlock","src":"7312:833:16","statements":[{"nodeType":"YulAssignment","src":"7322:100:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7414:6:16"}],"functionName":{"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7347:66:16"},"nodeType":"YulFunctionCall","src":"7347:74:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7331:15:16"},"nodeType":"YulFunctionCall","src":"7331:91:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7322:5:16"}]},{"nodeType":"YulVariableDeclaration","src":"7431:16:16","value":{"name":"array","nodeType":"YulIdentifier","src":"7442:5:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7435:3:16","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7464:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"7471:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7457:6:16"},"nodeType":"YulFunctionCall","src":"7457:21:16"},"nodeType":"YulExpressionStatement","src":"7457:21:16"},{"nodeType":"YulAssignment","src":"7487:23:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7498:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"7505:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7494:3:16"},"nodeType":"YulFunctionCall","src":"7494:16:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7487:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"7520:44:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7538:6:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7550:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7558:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7546:3:16"},"nodeType":"YulFunctionCall","src":"7546:17:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7534:3:16"},"nodeType":"YulFunctionCall","src":"7534:30:16"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7524:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7592:103:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"7606:77:16"},"nodeType":"YulFunctionCall","src":"7606:79:16"},"nodeType":"YulExpressionStatement","src":"7606:79:16"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7579:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"7587:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7576:2:16"},"nodeType":"YulFunctionCall","src":"7576:15:16"},"nodeType":"YulIf","src":"7573:122:16"},{"body":{"nodeType":"YulBlock","src":"7780:359:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7795:36:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7827:3:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7814:12:16"},"nodeType":"YulFunctionCall","src":"7814:17:16"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"7799:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7883:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7885:77:16"},"nodeType":"YulFunctionCall","src":"7885:79:16"},"nodeType":"YulExpressionStatement","src":"7885:79:16"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"7850:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"7863:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7847:2:16"},"nodeType":"YulFunctionCall","src":"7847:35:16"},"nodeType":"YulIf","src":"7844:122:16"},{"nodeType":"YulVariableDeclaration","src":"7979:42:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8001:6:16"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"8009:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7997:3:16"},"nodeType":"YulFunctionCall","src":"7997:24:16"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"7983:10:16","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8042:3:16"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"8078:10:16"},{"name":"end","nodeType":"YulIdentifier","src":"8090:3:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8047:30:16"},"nodeType":"YulFunctionCall","src":"8047:47:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8035:6:16"},"nodeType":"YulFunctionCall","src":"8035:60:16"},"nodeType":"YulExpressionStatement","src":"8035:60:16"},{"nodeType":"YulAssignment","src":"8108:21:16","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8119:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8124:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8115:3:16"},"nodeType":"YulFunctionCall","src":"8115:14:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"8108:3:16"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7733:3:16"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7738:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7730:2:16"},"nodeType":"YulFunctionCall","src":"7730:15:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7746:25:16","statements":[{"nodeType":"YulAssignment","src":"7748:21:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7759:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"7764:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7755:3:16"},"nodeType":"YulFunctionCall","src":"7755:14:16"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7748:3:16"}]}]},"pre":{"nodeType":"YulBlock","src":"7708:21:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7710:17:16","value":{"name":"offset","nodeType":"YulIdentifier","src":"7721:6:16"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7714:3:16","type":""}]}]},"src":"7704:435:16"}]},"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7282:6:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"7290:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"7298:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7306:5:16","type":""}],"src":"7200:945:16"},{"body":{"nodeType":"YulBlock","src":"8254:303:16","statements":[{"body":{"nodeType":"YulBlock","src":"8303:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8305:77:16"},"nodeType":"YulFunctionCall","src":"8305:79:16"},"nodeType":"YulExpressionStatement","src":"8305:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8282:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8290:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8278:3:16"},"nodeType":"YulFunctionCall","src":"8278:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"8297:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8274:3:16"},"nodeType":"YulFunctionCall","src":"8274:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8267:6:16"},"nodeType":"YulFunctionCall","src":"8267:35:16"},"nodeType":"YulIf","src":"8264:122:16"},{"nodeType":"YulVariableDeclaration","src":"8395:34:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8422:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8409:12:16"},"nodeType":"YulFunctionCall","src":"8409:20:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8399:6:16","type":""}]},{"nodeType":"YulAssignment","src":"8438:113:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8524:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8532:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8520:3:16"},"nodeType":"YulFunctionCall","src":"8520:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"8539:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"8547:3:16"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8447:72:16"},"nodeType":"YulFunctionCall","src":"8447:104:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8438:5:16"}]}]},"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8232:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"8240:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8248:5:16","type":""}],"src":"8167:390:16"},{"body":{"nodeType":"YulBlock","src":"8735:1183:16","statements":[{"body":{"nodeType":"YulBlock","src":"8782:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8784:77:16"},"nodeType":"YulFunctionCall","src":"8784:79:16"},"nodeType":"YulExpressionStatement","src":"8784:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8756:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"8765:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8752:3:16"},"nodeType":"YulFunctionCall","src":"8752:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"8777:3:16","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8748:3:16"},"nodeType":"YulFunctionCall","src":"8748:33:16"},"nodeType":"YulIf","src":"8745:120:16"},{"nodeType":"YulBlock","src":"8875:287:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8890:45:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8921:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8932:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8917:3:16"},"nodeType":"YulFunctionCall","src":"8917:17:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8904:12:16"},"nodeType":"YulFunctionCall","src":"8904:31:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8894:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8982:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8984:77:16"},"nodeType":"YulFunctionCall","src":"8984:79:16"},"nodeType":"YulExpressionStatement","src":"8984:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8954:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8962:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8951:2:16"},"nodeType":"YulFunctionCall","src":"8951:30:16"},"nodeType":"YulIf","src":"8948:117:16"},{"nodeType":"YulAssignment","src":"9079:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9124:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"9135:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9120:3:16"},"nodeType":"YulFunctionCall","src":"9120:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9144:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9089:30:16"},"nodeType":"YulFunctionCall","src":"9089:63:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9079:6:16"}]}]},{"nodeType":"YulBlock","src":"9172:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9187:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"9201:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9191:6:16","type":""}]},{"nodeType":"YulAssignment","src":"9217:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9252:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"9263:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9248:3:16"},"nodeType":"YulFunctionCall","src":"9248:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9272:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9227:20:16"},"nodeType":"YulFunctionCall","src":"9227:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9217:6:16"}]}]},{"nodeType":"YulBlock","src":"9300:313:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9315:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9346:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9357:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9342:3:16"},"nodeType":"YulFunctionCall","src":"9342:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9329:12:16"},"nodeType":"YulFunctionCall","src":"9329:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9319:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"9408:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9410:77:16"},"nodeType":"YulFunctionCall","src":"9410:79:16"},"nodeType":"YulExpressionStatement","src":"9410:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9380:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"9388:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9377:2:16"},"nodeType":"YulFunctionCall","src":"9377:30:16"},"nodeType":"YulIf","src":"9374:117:16"},{"nodeType":"YulAssignment","src":"9505:98:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9575:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"9586:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9571:3:16"},"nodeType":"YulFunctionCall","src":"9571:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9595:7:16"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9515:55:16"},"nodeType":"YulFunctionCall","src":"9515:88:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9505:6:16"}]}]},{"nodeType":"YulBlock","src":"9623:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9638:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9669:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9680:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9665:3:16"},"nodeType":"YulFunctionCall","src":"9665:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9652:12:16"},"nodeType":"YulFunctionCall","src":"9652:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9642:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"9731:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9733:77:16"},"nodeType":"YulFunctionCall","src":"9733:79:16"},"nodeType":"YulExpressionStatement","src":"9733:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9703:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"9711:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9700:2:16"},"nodeType":"YulFunctionCall","src":"9700:30:16"},"nodeType":"YulIf","src":"9697:117:16"},{"nodeType":"YulAssignment","src":"9828:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9873:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"9884:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9869:3:16"},"nodeType":"YulFunctionCall","src":"9869:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9893:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9838:30:16"},"nodeType":"YulFunctionCall","src":"9838:63:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9828:6:16"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8681:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8692:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8704:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8712:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8720:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8728:6:16","type":""}],"src":"8563:1355:16"},{"body":{"nodeType":"YulBlock","src":"10020:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10037:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"10042:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10030:6:16"},"nodeType":"YulFunctionCall","src":"10030:19:16"},"nodeType":"YulExpressionStatement","src":"10030:19:16"},{"nodeType":"YulAssignment","src":"10058:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10077:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"10082:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10073:3:16"},"nodeType":"YulFunctionCall","src":"10073:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"10058:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9992:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"9997:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10008:11:16","type":""}],"src":"9924:169:16"},{"body":{"nodeType":"YulBlock","src":"10191:285:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10201:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10248:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10215:32:16"},"nodeType":"YulFunctionCall","src":"10215:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10205:6:16","type":""}]},{"nodeType":"YulAssignment","src":"10263:78:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10329:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"10334:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10270:58:16"},"nodeType":"YulFunctionCall","src":"10270:71:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10263:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10389:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"10396:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10385:3:16"},"nodeType":"YulFunctionCall","src":"10385:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"10403:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"10408:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10350:34:16"},"nodeType":"YulFunctionCall","src":"10350:65:16"},"nodeType":"YulExpressionStatement","src":"10350:65:16"},{"nodeType":"YulAssignment","src":"10424:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10435:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10462:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10440:21:16"},"nodeType":"YulFunctionCall","src":"10440:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10431:3:16"},"nodeType":"YulFunctionCall","src":"10431:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10424:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10172:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10179:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10187:3:16","type":""}],"src":"10099:377:16"},{"body":{"nodeType":"YulBlock","src":"10656:359:16","statements":[{"nodeType":"YulAssignment","src":"10666:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10678:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10689:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10674:3:16"},"nodeType":"YulFunctionCall","src":"10674:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10666:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10746:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10759:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10770:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10755:3:16"},"nodeType":"YulFunctionCall","src":"10755:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10702:43:16"},"nodeType":"YulFunctionCall","src":"10702:71:16"},"nodeType":"YulExpressionStatement","src":"10702:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10827:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10840:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10851:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10836:3:16"},"nodeType":"YulFunctionCall","src":"10836:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10783:43:16"},"nodeType":"YulFunctionCall","src":"10783:72:16"},"nodeType":"YulExpressionStatement","src":"10783:72:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10876:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10887:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10872:3:16"},"nodeType":"YulFunctionCall","src":"10872:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10896:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"10902:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10892:3:16"},"nodeType":"YulFunctionCall","src":"10892:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10865:6:16"},"nodeType":"YulFunctionCall","src":"10865:48:16"},"nodeType":"YulExpressionStatement","src":"10865:48:16"},{"nodeType":"YulAssignment","src":"10922:86:16","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10994:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"11003:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10930:63:16"},"nodeType":"YulFunctionCall","src":"10930:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10922:4:16"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10612:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10624:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10632:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10640:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10651:4:16","type":""}],"src":"10482:533:16"},{"body":{"nodeType":"YulBlock","src":"11097:433:16","statements":[{"body":{"nodeType":"YulBlock","src":"11143:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11145:77:16"},"nodeType":"YulFunctionCall","src":"11145:79:16"},"nodeType":"YulExpressionStatement","src":"11145:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11118:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"11127:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11114:3:16"},"nodeType":"YulFunctionCall","src":"11114:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"11139:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11110:3:16"},"nodeType":"YulFunctionCall","src":"11110:32:16"},"nodeType":"YulIf","src":"11107:119:16"},{"nodeType":"YulBlock","src":"11236:287:16","statements":[{"nodeType":"YulVariableDeclaration","src":"11251:45:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11282:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11293:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11278:3:16"},"nodeType":"YulFunctionCall","src":"11278:17:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11265:12:16"},"nodeType":"YulFunctionCall","src":"11265:31:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11255:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"11343:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11345:77:16"},"nodeType":"YulFunctionCall","src":"11345:79:16"},"nodeType":"YulExpressionStatement","src":"11345:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11315:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"11323:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11312:2:16"},"nodeType":"YulFunctionCall","src":"11312:30:16"},"nodeType":"YulIf","src":"11309:117:16"},{"nodeType":"YulAssignment","src":"11440:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11485:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"11496:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11481:3:16"},"nodeType":"YulFunctionCall","src":"11481:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11505:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11450:30:16"},"nodeType":"YulFunctionCall","src":"11450:63:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11440:6:16"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11067:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11078:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11090:6:16","type":""}],"src":"11021:509:16"},{"body":{"nodeType":"YulBlock","src":"11750:501:16","statements":[{"nodeType":"YulAssignment","src":"11760:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11772:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11783:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11768:3:16"},"nodeType":"YulFunctionCall","src":"11768:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11760:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11807:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11818:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11803:3:16"},"nodeType":"YulFunctionCall","src":"11803:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11826:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"11832:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11822:3:16"},"nodeType":"YulFunctionCall","src":"11822:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11796:6:16"},"nodeType":"YulFunctionCall","src":"11796:47:16"},"nodeType":"YulExpressionStatement","src":"11796:47:16"},{"nodeType":"YulAssignment","src":"11852:86:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11924:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"11933:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11860:63:16"},"nodeType":"YulFunctionCall","src":"11860:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11852:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11959:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11970:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11955:3:16"},"nodeType":"YulFunctionCall","src":"11955:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11979:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"11985:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11975:3:16"},"nodeType":"YulFunctionCall","src":"11975:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11948:6:16"},"nodeType":"YulFunctionCall","src":"11948:48:16"},"nodeType":"YulExpressionStatement","src":"11948:48:16"},{"nodeType":"YulAssignment","src":"12005:86:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12077:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"12086:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12013:63:16"},"nodeType":"YulFunctionCall","src":"12013:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12005:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12112:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12123:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12108:3:16"},"nodeType":"YulFunctionCall","src":"12108:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12132:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"12138:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12128:3:16"},"nodeType":"YulFunctionCall","src":"12128:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12101:6:16"},"nodeType":"YulFunctionCall","src":"12101:48:16"},"nodeType":"YulExpressionStatement","src":"12101:48:16"},{"nodeType":"YulAssignment","src":"12158:86:16","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12230:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"12239:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12166:63:16"},"nodeType":"YulFunctionCall","src":"12166:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12158:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11706:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11718:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11726:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11734:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11745:4:16","type":""}],"src":"11536:715:16"},{"body":{"nodeType":"YulBlock","src":"12403:277:16","statements":[{"nodeType":"YulAssignment","src":"12413:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12425:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12436:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12421:3:16"},"nodeType":"YulFunctionCall","src":"12421:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12413:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12493:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12506:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12517:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12502:3:16"},"nodeType":"YulFunctionCall","src":"12502:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12449:43:16"},"nodeType":"YulFunctionCall","src":"12449:71:16"},"nodeType":"YulExpressionStatement","src":"12449:71:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12541:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12552:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12537:3:16"},"nodeType":"YulFunctionCall","src":"12537:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12561:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"12567:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12557:3:16"},"nodeType":"YulFunctionCall","src":"12557:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12530:6:16"},"nodeType":"YulFunctionCall","src":"12530:48:16"},"nodeType":"YulExpressionStatement","src":"12530:48:16"},{"nodeType":"YulAssignment","src":"12587:86:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12659:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"12668:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12595:63:16"},"nodeType":"YulFunctionCall","src":"12595:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12587:4:16"}]}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12367:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12379:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12387:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12398:4:16","type":""}],"src":"12257:423:16"},{"body":{"nodeType":"YulBlock","src":"12806:859:16","statements":[{"body":{"nodeType":"YulBlock","src":"12852:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12854:77:16"},"nodeType":"YulFunctionCall","src":"12854:79:16"},"nodeType":"YulExpressionStatement","src":"12854:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12827:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"12836:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12823:3:16"},"nodeType":"YulFunctionCall","src":"12823:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"12848:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12819:3:16"},"nodeType":"YulFunctionCall","src":"12819:32:16"},"nodeType":"YulIf","src":"12816:119:16"},{"nodeType":"YulBlock","src":"12945:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12960:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"12974:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12964:6:16","type":""}]},{"nodeType":"YulAssignment","src":"12989:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13024:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"13035:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13020:3:16"},"nodeType":"YulFunctionCall","src":"13020:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13044:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12999:20:16"},"nodeType":"YulFunctionCall","src":"12999:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12989:6:16"}]}]},{"nodeType":"YulBlock","src":"13072:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"13087:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13118:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13129:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13114:3:16"},"nodeType":"YulFunctionCall","src":"13114:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13101:12:16"},"nodeType":"YulFunctionCall","src":"13101:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13091:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"13180:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"13182:77:16"},"nodeType":"YulFunctionCall","src":"13182:79:16"},"nodeType":"YulExpressionStatement","src":"13182:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13152:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"13160:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13149:2:16"},"nodeType":"YulFunctionCall","src":"13149:30:16"},"nodeType":"YulIf","src":"13146:117:16"},{"nodeType":"YulAssignment","src":"13277:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13322:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"13333:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13318:3:16"},"nodeType":"YulFunctionCall","src":"13318:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13342:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13287:30:16"},"nodeType":"YulFunctionCall","src":"13287:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13277:6:16"}]}]},{"nodeType":"YulBlock","src":"13370:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"13385:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13416:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13427:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13412:3:16"},"nodeType":"YulFunctionCall","src":"13412:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13399:12:16"},"nodeType":"YulFunctionCall","src":"13399:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13389:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"13478:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"13480:77:16"},"nodeType":"YulFunctionCall","src":"13480:79:16"},"nodeType":"YulExpressionStatement","src":"13480:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13450:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"13458:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13447:2:16"},"nodeType":"YulFunctionCall","src":"13447:30:16"},"nodeType":"YulIf","src":"13444:117:16"},{"nodeType":"YulAssignment","src":"13575:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13620:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"13631:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13616:3:16"},"nodeType":"YulFunctionCall","src":"13616:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13640:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13585:30:16"},"nodeType":"YulFunctionCall","src":"13585:63:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13575:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12760:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12771:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12783:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12791:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12799:6:16","type":""}],"src":"12686:979:16"},{"body":{"nodeType":"YulBlock","src":"13873:442:16","statements":[{"nodeType":"YulAssignment","src":"13883:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13895:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13906:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13891:3:16"},"nodeType":"YulFunctionCall","src":"13891:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13883:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13964:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13977:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13988:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13973:3:16"},"nodeType":"YulFunctionCall","src":"13973:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13920:43:16"},"nodeType":"YulFunctionCall","src":"13920:71:16"},"nodeType":"YulExpressionStatement","src":"13920:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14045:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14058:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14069:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14054:3:16"},"nodeType":"YulFunctionCall","src":"14054:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14001:43:16"},"nodeType":"YulFunctionCall","src":"14001:72:16"},"nodeType":"YulExpressionStatement","src":"14001:72:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14127:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14140:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14151:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14136:3:16"},"nodeType":"YulFunctionCall","src":"14136:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14083:43:16"},"nodeType":"YulFunctionCall","src":"14083:72:16"},"nodeType":"YulExpressionStatement","src":"14083:72:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14176:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14187:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14172:3:16"},"nodeType":"YulFunctionCall","src":"14172:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14196:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"14202:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14192:3:16"},"nodeType":"YulFunctionCall","src":"14192:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14165:6:16"},"nodeType":"YulFunctionCall","src":"14165:48:16"},"nodeType":"YulExpressionStatement","src":"14165:48:16"},{"nodeType":"YulAssignment","src":"14222:86:16","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14294:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"14303:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14230:63:16"},"nodeType":"YulFunctionCall","src":"14230:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14222:4:16"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13821:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13833:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13841:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13849:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13857:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13868:4:16","type":""}],"src":"13671:644:16"},{"body":{"nodeType":"YulBlock","src":"14495:359:16","statements":[{"nodeType":"YulAssignment","src":"14505:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14517:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14528:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14513:3:16"},"nodeType":"YulFunctionCall","src":"14513:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14505:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14585:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14598:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14609:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14594:3:16"},"nodeType":"YulFunctionCall","src":"14594:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14541:43:16"},"nodeType":"YulFunctionCall","src":"14541:71:16"},"nodeType":"YulExpressionStatement","src":"14541:71:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14633:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14644:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14629:3:16"},"nodeType":"YulFunctionCall","src":"14629:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14653:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"14659:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14649:3:16"},"nodeType":"YulFunctionCall","src":"14649:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14622:6:16"},"nodeType":"YulFunctionCall","src":"14622:48:16"},"nodeType":"YulExpressionStatement","src":"14622:48:16"},{"nodeType":"YulAssignment","src":"14679:86:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14751:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"14760:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14687:63:16"},"nodeType":"YulFunctionCall","src":"14687:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14679:4:16"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14819:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14832:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14843:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14828:3:16"},"nodeType":"YulFunctionCall","src":"14828:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14775:43:16"},"nodeType":"YulFunctionCall","src":"14775:72:16"},"nodeType":"YulExpressionStatement","src":"14775:72:16"}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14451:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14463:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14471:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14479:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14490:4:16","type":""}],"src":"14321:533:16"},{"body":{"nodeType":"YulBlock","src":"14997:988:16","statements":[{"body":{"nodeType":"YulBlock","src":"15044:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15046:77:16"},"nodeType":"YulFunctionCall","src":"15046:79:16"},"nodeType":"YulExpressionStatement","src":"15046:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15018:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"15027:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15014:3:16"},"nodeType":"YulFunctionCall","src":"15014:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"15039:3:16","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15010:3:16"},"nodeType":"YulFunctionCall","src":"15010:33:16"},"nodeType":"YulIf","src":"15007:120:16"},{"nodeType":"YulBlock","src":"15137:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"15152:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"15166:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15156:6:16","type":""}]},{"nodeType":"YulAssignment","src":"15181:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15216:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"15227:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15212:3:16"},"nodeType":"YulFunctionCall","src":"15212:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15236:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15191:20:16"},"nodeType":"YulFunctionCall","src":"15191:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15181:6:16"}]}]},{"nodeType":"YulBlock","src":"15264:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"15279:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15310:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15321:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15306:3:16"},"nodeType":"YulFunctionCall","src":"15306:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15293:12:16"},"nodeType":"YulFunctionCall","src":"15293:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15283:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"15372:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15374:77:16"},"nodeType":"YulFunctionCall","src":"15374:79:16"},"nodeType":"YulExpressionStatement","src":"15374:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15344:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"15352:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15341:2:16"},"nodeType":"YulFunctionCall","src":"15341:30:16"},"nodeType":"YulIf","src":"15338:117:16"},{"nodeType":"YulAssignment","src":"15469:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15514:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"15525:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15510:3:16"},"nodeType":"YulFunctionCall","src":"15510:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15534:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15479:30:16"},"nodeType":"YulFunctionCall","src":"15479:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15469:6:16"}]}]},{"nodeType":"YulBlock","src":"15562:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"15577:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"15591:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15581:6:16","type":""}]},{"nodeType":"YulAssignment","src":"15607:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15642:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"15653:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15638:3:16"},"nodeType":"YulFunctionCall","src":"15638:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15662:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15617:20:16"},"nodeType":"YulFunctionCall","src":"15617:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"15607:6:16"}]}]},{"nodeType":"YulBlock","src":"15690:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"15705:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15736:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15747:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15732:3:16"},"nodeType":"YulFunctionCall","src":"15732:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15719:12:16"},"nodeType":"YulFunctionCall","src":"15719:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15709:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"15798:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15800:77:16"},"nodeType":"YulFunctionCall","src":"15800:79:16"},"nodeType":"YulExpressionStatement","src":"15800:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15770:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"15778:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15767:2:16"},"nodeType":"YulFunctionCall","src":"15767:30:16"},"nodeType":"YulIf","src":"15764:117:16"},{"nodeType":"YulAssignment","src":"15895:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15940:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"15951:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15936:3:16"},"nodeType":"YulFunctionCall","src":"15936:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15960:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15905:30:16"},"nodeType":"YulFunctionCall","src":"15905:63:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"15895:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14943:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14954:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14966:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14974:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14982:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14990:6:16","type":""}],"src":"14860:1125:16"},{"body":{"nodeType":"YulBlock","src":"16074:391:16","statements":[{"body":{"nodeType":"YulBlock","src":"16120:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16122:77:16"},"nodeType":"YulFunctionCall","src":"16122:79:16"},"nodeType":"YulExpressionStatement","src":"16122:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16095:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"16104:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16091:3:16"},"nodeType":"YulFunctionCall","src":"16091:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"16116:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16087:3:16"},"nodeType":"YulFunctionCall","src":"16087:32:16"},"nodeType":"YulIf","src":"16084:119:16"},{"nodeType":"YulBlock","src":"16213:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"16228:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"16242:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16232:6:16","type":""}]},{"nodeType":"YulAssignment","src":"16257:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16292:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"16303:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16288:3:16"},"nodeType":"YulFunctionCall","src":"16288:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16312:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"16267:20:16"},"nodeType":"YulFunctionCall","src":"16267:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16257:6:16"}]}]},{"nodeType":"YulBlock","src":"16340:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"16355:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"16369:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16359:6:16","type":""}]},{"nodeType":"YulAssignment","src":"16385:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16420:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"16431:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16416:3:16"},"nodeType":"YulFunctionCall","src":"16416:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16440:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"16395:20:16"},"nodeType":"YulFunctionCall","src":"16395:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16385:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16036:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16047:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16059:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16067:6:16","type":""}],"src":"15991:474:16"},{"body":{"nodeType":"YulBlock","src":"16564:561:16","statements":[{"body":{"nodeType":"YulBlock","src":"16610:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16612:77:16"},"nodeType":"YulFunctionCall","src":"16612:79:16"},"nodeType":"YulExpressionStatement","src":"16612:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16585:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"16594:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16581:3:16"},"nodeType":"YulFunctionCall","src":"16581:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"16606:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16577:3:16"},"nodeType":"YulFunctionCall","src":"16577:32:16"},"nodeType":"YulIf","src":"16574:119:16"},{"nodeType":"YulBlock","src":"16703:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"16718:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"16732:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16722:6:16","type":""}]},{"nodeType":"YulAssignment","src":"16747:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16782:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"16793:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16778:3:16"},"nodeType":"YulFunctionCall","src":"16778:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16802:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"16757:20:16"},"nodeType":"YulFunctionCall","src":"16757:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16747:6:16"}]}]},{"nodeType":"YulBlock","src":"16830:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"16845:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16876:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16887:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16872:3:16"},"nodeType":"YulFunctionCall","src":"16872:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16859:12:16"},"nodeType":"YulFunctionCall","src":"16859:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16849:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"16938:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"16940:77:16"},"nodeType":"YulFunctionCall","src":"16940:79:16"},"nodeType":"YulExpressionStatement","src":"16940:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16910:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16918:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16907:2:16"},"nodeType":"YulFunctionCall","src":"16907:30:16"},"nodeType":"YulIf","src":"16904:117:16"},{"nodeType":"YulAssignment","src":"17035:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17080:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"17091:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17076:3:16"},"nodeType":"YulFunctionCall","src":"17076:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17100:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17045:30:16"},"nodeType":"YulFunctionCall","src":"17045:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17035:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16526:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16537:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16549:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16557:6:16","type":""}],"src":"16471:654:16"},{"body":{"nodeType":"YulBlock","src":"17249:195:16","statements":[{"nodeType":"YulAssignment","src":"17259:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17271:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17282:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17267:3:16"},"nodeType":"YulFunctionCall","src":"17267:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17259:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17306:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17317:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17302:3:16"},"nodeType":"YulFunctionCall","src":"17302:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17325:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"17331:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17321:3:16"},"nodeType":"YulFunctionCall","src":"17321:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17295:6:16"},"nodeType":"YulFunctionCall","src":"17295:47:16"},"nodeType":"YulExpressionStatement","src":"17295:47:16"},{"nodeType":"YulAssignment","src":"17351:86:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17423:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"17432:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17359:63:16"},"nodeType":"YulFunctionCall","src":"17359:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17351:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17221:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17233:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17244:4:16","type":""}],"src":"17131:313:16"},{"body":{"nodeType":"YulBlock","src":"17570:859:16","statements":[{"body":{"nodeType":"YulBlock","src":"17616:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17618:77:16"},"nodeType":"YulFunctionCall","src":"17618:79:16"},"nodeType":"YulExpressionStatement","src":"17618:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17591:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"17600:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17587:3:16"},"nodeType":"YulFunctionCall","src":"17587:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"17612:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17583:3:16"},"nodeType":"YulFunctionCall","src":"17583:32:16"},"nodeType":"YulIf","src":"17580:119:16"},{"nodeType":"YulBlock","src":"17709:287:16","statements":[{"nodeType":"YulVariableDeclaration","src":"17724:45:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17755:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17766:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17751:3:16"},"nodeType":"YulFunctionCall","src":"17751:17:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17738:12:16"},"nodeType":"YulFunctionCall","src":"17738:31:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17728:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"17816:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17818:77:16"},"nodeType":"YulFunctionCall","src":"17818:79:16"},"nodeType":"YulExpressionStatement","src":"17818:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17788:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"17796:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17785:2:16"},"nodeType":"YulFunctionCall","src":"17785:30:16"},"nodeType":"YulIf","src":"17782:117:16"},{"nodeType":"YulAssignment","src":"17913:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17958:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"17969:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17954:3:16"},"nodeType":"YulFunctionCall","src":"17954:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17978:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17923:30:16"},"nodeType":"YulFunctionCall","src":"17923:63:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17913:6:16"}]}]},{"nodeType":"YulBlock","src":"18006:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"18021:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"18035:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18025:6:16","type":""}]},{"nodeType":"YulAssignment","src":"18051:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18086:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"18097:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18082:3:16"},"nodeType":"YulFunctionCall","src":"18082:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18106:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18061:20:16"},"nodeType":"YulFunctionCall","src":"18061:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18051:6:16"}]}]},{"nodeType":"YulBlock","src":"18134:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"18149:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18180:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18191:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18176:3:16"},"nodeType":"YulFunctionCall","src":"18176:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18163:12:16"},"nodeType":"YulFunctionCall","src":"18163:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18153:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"18242:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18244:77:16"},"nodeType":"YulFunctionCall","src":"18244:79:16"},"nodeType":"YulExpressionStatement","src":"18244:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18214:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"18222:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18211:2:16"},"nodeType":"YulFunctionCall","src":"18211:30:16"},"nodeType":"YulIf","src":"18208:117:16"},{"nodeType":"YulAssignment","src":"18339:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18384:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"18395:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18380:3:16"},"nodeType":"YulFunctionCall","src":"18380:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18404:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18349:30:16"},"nodeType":"YulFunctionCall","src":"18349:63:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"18339:6:16"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17524:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17535:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17547:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17555:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17563:6:16","type":""}],"src":"17450:979:16"},{"body":{"nodeType":"YulBlock","src":"18509:40:16","statements":[{"nodeType":"YulAssignment","src":"18520:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18536:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18530:5:16"},"nodeType":"YulFunctionCall","src":"18530:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18520:6:16"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18492:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18502:6:16","type":""}],"src":"18435:114:16"},{"body":{"nodeType":"YulBlock","src":"18666:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18683:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"18688:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18676:6:16"},"nodeType":"YulFunctionCall","src":"18676:19:16"},"nodeType":"YulExpressionStatement","src":"18676:19:16"},{"nodeType":"YulAssignment","src":"18704:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18723:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18728:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18719:3:16"},"nodeType":"YulFunctionCall","src":"18719:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"18704:11:16"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18638:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"18643:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"18654:11:16","type":""}],"src":"18555:184:16"},{"body":{"nodeType":"YulBlock","src":"18817:60:16","statements":[{"nodeType":"YulAssignment","src":"18827:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"18835:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"18827:4:16"}]},{"nodeType":"YulAssignment","src":"18848:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18860:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18865:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18856:3:16"},"nodeType":"YulFunctionCall","src":"18856:14:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"18848:4:16"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"18804:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"18812:4:16","type":""}],"src":"18745:132:16"},{"body":{"nodeType":"YulBlock","src":"18938:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18955:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18978:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18960:17:16"},"nodeType":"YulFunctionCall","src":"18960:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18948:6:16"},"nodeType":"YulFunctionCall","src":"18948:37:16"},"nodeType":"YulExpressionStatement","src":"18948:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18926:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18933:3:16","type":""}],"src":"18883:108:16"},{"body":{"nodeType":"YulBlock","src":"19077:99:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19121:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"19129:3:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"19087:33:16"},"nodeType":"YulFunctionCall","src":"19087:46:16"},"nodeType":"YulExpressionStatement","src":"19087:46:16"},{"nodeType":"YulAssignment","src":"19142:28:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19160:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"19165:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19156:3:16"},"nodeType":"YulFunctionCall","src":"19156:14:16"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"19142:10:16"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"19050:6:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19058:3:16","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"19066:10:16","type":""}],"src":"18997:179:16"},{"body":{"nodeType":"YulBlock","src":"19257:38:16","statements":[{"nodeType":"YulAssignment","src":"19267:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"19279:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"19284:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19275:3:16"},"nodeType":"YulFunctionCall","src":"19275:14:16"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"19267:4:16"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"19244:3:16","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"19252:4:16","type":""}],"src":"19182:113:16"},{"body":{"nodeType":"YulBlock","src":"19455:608:16","statements":[{"nodeType":"YulVariableDeclaration","src":"19465:68:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19527:5:16"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"19479:47:16"},"nodeType":"YulFunctionCall","src":"19479:54:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"19469:6:16","type":""}]},{"nodeType":"YulAssignment","src":"19542:93:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19623:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"19628:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19549:73:16"},"nodeType":"YulFunctionCall","src":"19549:86:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19542:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"19644:71:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19709:5:16"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"19659:49:16"},"nodeType":"YulFunctionCall","src":"19659:56:16"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"19648:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19724:21:16","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"19738:7:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"19728:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"19814:224:16","statements":[{"nodeType":"YulVariableDeclaration","src":"19828:34:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19855:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19849:5:16"},"nodeType":"YulFunctionCall","src":"19849:13:16"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"19832:13:16","type":""}]},{"nodeType":"YulAssignment","src":"19875:70:16","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"19926:13:16"},{"name":"pos","nodeType":"YulIdentifier","src":"19941:3:16"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"19882:43:16"},"nodeType":"YulFunctionCall","src":"19882:63:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19875:3:16"}]},{"nodeType":"YulAssignment","src":"19958:70:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"20021:6:16"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"19968:52:16"},"nodeType":"YulFunctionCall","src":"19968:60:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19958:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19776:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"19779:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19773:2:16"},"nodeType":"YulFunctionCall","src":"19773:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19787:18:16","statements":[{"nodeType":"YulAssignment","src":"19789:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19798:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"19801:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19794:3:16"},"nodeType":"YulFunctionCall","src":"19794:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"19789:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"19758:14:16","statements":[{"nodeType":"YulVariableDeclaration","src":"19760:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"19769:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"19764:1:16","type":""}]}]},"src":"19754:284:16"},{"nodeType":"YulAssignment","src":"20047:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"20054:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20047:3:16"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19434:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19441:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19450:3:16","type":""}],"src":"19331:732:16"},{"body":{"nodeType":"YulBlock","src":"20217:225:16","statements":[{"nodeType":"YulAssignment","src":"20227:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20239:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20250:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20235:3:16"},"nodeType":"YulFunctionCall","src":"20235:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20227:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20274:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20285:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20270:3:16"},"nodeType":"YulFunctionCall","src":"20270:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20293:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"20299:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20289:3:16"},"nodeType":"YulFunctionCall","src":"20289:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20263:6:16"},"nodeType":"YulFunctionCall","src":"20263:47:16"},"nodeType":"YulExpressionStatement","src":"20263:47:16"},{"nodeType":"YulAssignment","src":"20319:116:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20421:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"20430:4:16"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20327:93:16"},"nodeType":"YulFunctionCall","src":"20327:108:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20319:4:16"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20189:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20201:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20212:4:16","type":""}],"src":"20069:373:16"},{"body":{"nodeType":"YulBlock","src":"20558:689:16","statements":[{"body":{"nodeType":"YulBlock","src":"20604:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20606:77:16"},"nodeType":"YulFunctionCall","src":"20606:79:16"},"nodeType":"YulExpressionStatement","src":"20606:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20579:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"20588:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20575:3:16"},"nodeType":"YulFunctionCall","src":"20575:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"20600:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20571:3:16"},"nodeType":"YulFunctionCall","src":"20571:32:16"},"nodeType":"YulIf","src":"20568:119:16"},{"nodeType":"YulBlock","src":"20697:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"20712:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"20726:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20716:6:16","type":""}]},{"nodeType":"YulAssignment","src":"20741:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20776:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"20787:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20772:3:16"},"nodeType":"YulFunctionCall","src":"20772:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20796:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"20751:20:16"},"nodeType":"YulFunctionCall","src":"20751:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20741:6:16"}]}]},{"nodeType":"YulBlock","src":"20824:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"20839:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"20853:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20843:6:16","type":""}]},{"nodeType":"YulAssignment","src":"20869:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20904:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"20915:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20900:3:16"},"nodeType":"YulFunctionCall","src":"20900:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20924:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"20879:20:16"},"nodeType":"YulFunctionCall","src":"20879:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"20869:6:16"}]}]},{"nodeType":"YulBlock","src":"20952:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"20967:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20998:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"21009:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20994:3:16"},"nodeType":"YulFunctionCall","src":"20994:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20981:12:16"},"nodeType":"YulFunctionCall","src":"20981:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20971:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"21060:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21062:77:16"},"nodeType":"YulFunctionCall","src":"21062:79:16"},"nodeType":"YulExpressionStatement","src":"21062:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21032:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"21040:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21029:2:16"},"nodeType":"YulFunctionCall","src":"21029:30:16"},"nodeType":"YulIf","src":"21026:117:16"},{"nodeType":"YulAssignment","src":"21157:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21202:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"21213:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21198:3:16"},"nodeType":"YulFunctionCall","src":"21198:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21222:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"21167:30:16"},"nodeType":"YulFunctionCall","src":"21167:63:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"21157:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20512:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20523:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20535:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20543:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20551:6:16","type":""}],"src":"20448:799:16"},{"body":{"nodeType":"YulBlock","src":"21390:988:16","statements":[{"body":{"nodeType":"YulBlock","src":"21437:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"21439:77:16"},"nodeType":"YulFunctionCall","src":"21439:79:16"},"nodeType":"YulExpressionStatement","src":"21439:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21411:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"21420:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21407:3:16"},"nodeType":"YulFunctionCall","src":"21407:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"21432:3:16","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21403:3:16"},"nodeType":"YulFunctionCall","src":"21403:33:16"},"nodeType":"YulIf","src":"21400:120:16"},{"nodeType":"YulBlock","src":"21530:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"21545:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"21559:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21549:6:16","type":""}]},{"nodeType":"YulAssignment","src":"21574:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21609:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"21620:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21605:3:16"},"nodeType":"YulFunctionCall","src":"21605:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21629:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21584:20:16"},"nodeType":"YulFunctionCall","src":"21584:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21574:6:16"}]}]},{"nodeType":"YulBlock","src":"21657:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"21672:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"21686:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21676:6:16","type":""}]},{"nodeType":"YulAssignment","src":"21702:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21737:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"21748:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21733:3:16"},"nodeType":"YulFunctionCall","src":"21733:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21757:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21712:20:16"},"nodeType":"YulFunctionCall","src":"21712:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"21702:6:16"}]}]},{"nodeType":"YulBlock","src":"21785:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"21800:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21831:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"21842:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21827:3:16"},"nodeType":"YulFunctionCall","src":"21827:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21814:12:16"},"nodeType":"YulFunctionCall","src":"21814:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21804:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"21893:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21895:77:16"},"nodeType":"YulFunctionCall","src":"21895:79:16"},"nodeType":"YulExpressionStatement","src":"21895:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21865:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"21873:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21862:2:16"},"nodeType":"YulFunctionCall","src":"21862:30:16"},"nodeType":"YulIf","src":"21859:117:16"},{"nodeType":"YulAssignment","src":"21990:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22035:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"22046:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22031:3:16"},"nodeType":"YulFunctionCall","src":"22031:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22055:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"22000:30:16"},"nodeType":"YulFunctionCall","src":"22000:63:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"21990:6:16"}]}]},{"nodeType":"YulBlock","src":"22083:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"22098:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22129:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22140:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22125:3:16"},"nodeType":"YulFunctionCall","src":"22125:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22112:12:16"},"nodeType":"YulFunctionCall","src":"22112:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22102:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"22191:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"22193:77:16"},"nodeType":"YulFunctionCall","src":"22193:79:16"},"nodeType":"YulExpressionStatement","src":"22193:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22163:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"22171:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22160:2:16"},"nodeType":"YulFunctionCall","src":"22160:30:16"},"nodeType":"YulIf","src":"22157:117:16"},{"nodeType":"YulAssignment","src":"22288:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22333:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"22344:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22329:3:16"},"nodeType":"YulFunctionCall","src":"22329:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22353:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"22298:30:16"},"nodeType":"YulFunctionCall","src":"22298:63:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"22288:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21336:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21347:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21359:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21367:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21375:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21383:6:16","type":""}],"src":"21253:1125:16"},{"body":{"nodeType":"YulBlock","src":"22426:48:16","statements":[{"nodeType":"YulAssignment","src":"22436:32:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22461:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22454:6:16"},"nodeType":"YulFunctionCall","src":"22454:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22447:6:16"},"nodeType":"YulFunctionCall","src":"22447:21:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"22436:7:16"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22408:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"22418:7:16","type":""}],"src":"22384:90:16"},{"body":{"nodeType":"YulBlock","src":"22539:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22556:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22576:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"22561:14:16"},"nodeType":"YulFunctionCall","src":"22561:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22549:6:16"},"nodeType":"YulFunctionCall","src":"22549:34:16"},"nodeType":"YulExpressionStatement","src":"22549:34:16"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22527:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22534:3:16","type":""}],"src":"22480:109:16"},{"body":{"nodeType":"YulBlock","src":"22889:809:16","statements":[{"nodeType":"YulAssignment","src":"22899:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22911:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22922:3:16","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22907:3:16"},"nodeType":"YulFunctionCall","src":"22907:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22899:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22947:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22958:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22943:3:16"},"nodeType":"YulFunctionCall","src":"22943:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22966:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"22972:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22962:3:16"},"nodeType":"YulFunctionCall","src":"22962:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22936:6:16"},"nodeType":"YulFunctionCall","src":"22936:47:16"},"nodeType":"YulExpressionStatement","src":"22936:47:16"},{"nodeType":"YulAssignment","src":"22992:86:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23064:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"23073:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23000:63:16"},"nodeType":"YulFunctionCall","src":"23000:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22992:4:16"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23126:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23139:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23150:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23135:3:16"},"nodeType":"YulFunctionCall","src":"23135:18:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"23088:37:16"},"nodeType":"YulFunctionCall","src":"23088:66:16"},"nodeType":"YulExpressionStatement","src":"23088:66:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23202:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23215:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23226:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23211:3:16"},"nodeType":"YulFunctionCall","src":"23211:18:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"23164:37:16"},"nodeType":"YulFunctionCall","src":"23164:66:16"},"nodeType":"YulExpressionStatement","src":"23164:66:16"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23278:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23291:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23302:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23287:3:16"},"nodeType":"YulFunctionCall","src":"23287:18:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"23240:37:16"},"nodeType":"YulFunctionCall","src":"23240:66:16"},"nodeType":"YulExpressionStatement","src":"23240:66:16"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"23354:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23367:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23378:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23363:3:16"},"nodeType":"YulFunctionCall","src":"23363:19:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"23316:37:16"},"nodeType":"YulFunctionCall","src":"23316:67:16"},"nodeType":"YulExpressionStatement","src":"23316:67:16"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"23431:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23444:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23455:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23440:3:16"},"nodeType":"YulFunctionCall","src":"23440:19:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"23393:37:16"},"nodeType":"YulFunctionCall","src":"23393:67:16"},"nodeType":"YulExpressionStatement","src":"23393:67:16"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"23508:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23521:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23532:3:16","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23517:3:16"},"nodeType":"YulFunctionCall","src":"23517:19:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"23470:37:16"},"nodeType":"YulFunctionCall","src":"23470:67:16"},"nodeType":"YulExpressionStatement","src":"23470:67:16"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"23585:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23598:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23609:3:16","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23594:3:16"},"nodeType":"YulFunctionCall","src":"23594:19:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"23547:37:16"},"nodeType":"YulFunctionCall","src":"23547:67:16"},"nodeType":"YulExpressionStatement","src":"23547:67:16"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"23662:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23675:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23686:3:16","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23671:3:16"},"nodeType":"YulFunctionCall","src":"23671:19:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"23624:37:16"},"nodeType":"YulFunctionCall","src":"23624:67:16"},"nodeType":"YulExpressionStatement","src":"23624:67:16"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__to_t_string_memory_ptr_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22797:9:16","type":""},{"name":"value8","nodeType":"YulTypedName","src":"22809:6:16","type":""},{"name":"value7","nodeType":"YulTypedName","src":"22817:6:16","type":""},{"name":"value6","nodeType":"YulTypedName","src":"22825:6:16","type":""},{"name":"value5","nodeType":"YulTypedName","src":"22833:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22841:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22849:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22857:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22865:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22873:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22884:4:16","type":""}],"src":"22595:1103:16"},{"body":{"nodeType":"YulBlock","src":"23926:513:16","statements":[{"nodeType":"YulAssignment","src":"23936:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23948:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23959:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23944:3:16"},"nodeType":"YulFunctionCall","src":"23944:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23936:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24017:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24030:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24041:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24026:3:16"},"nodeType":"YulFunctionCall","src":"24026:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23973:43:16"},"nodeType":"YulFunctionCall","src":"23973:71:16"},"nodeType":"YulExpressionStatement","src":"23973:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24098:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24111:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24122:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24107:3:16"},"nodeType":"YulFunctionCall","src":"24107:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24054:43:16"},"nodeType":"YulFunctionCall","src":"24054:72:16"},"nodeType":"YulExpressionStatement","src":"24054:72:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24147:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24158:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24143:3:16"},"nodeType":"YulFunctionCall","src":"24143:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24167:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"24173:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24163:3:16"},"nodeType":"YulFunctionCall","src":"24163:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24136:6:16"},"nodeType":"YulFunctionCall","src":"24136:48:16"},"nodeType":"YulExpressionStatement","src":"24136:48:16"},{"nodeType":"YulAssignment","src":"24193:86:16","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24265:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"24274:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24201:63:16"},"nodeType":"YulFunctionCall","src":"24201:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24193:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24300:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24311:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24296:3:16"},"nodeType":"YulFunctionCall","src":"24296:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24320:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"24326:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24316:3:16"},"nodeType":"YulFunctionCall","src":"24316:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24289:6:16"},"nodeType":"YulFunctionCall","src":"24289:48:16"},"nodeType":"YulExpressionStatement","src":"24289:48:16"},{"nodeType":"YulAssignment","src":"24346:86:16","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24418:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"24427:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24354:63:16"},"nodeType":"YulFunctionCall","src":"24354:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24346:4:16"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23874:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23886:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23894:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23902:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23910:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23921:4:16","type":""}],"src":"23704:735:16"},{"body":{"nodeType":"YulBlock","src":"24537:118:16","statements":[{"nodeType":"YulAssignment","src":"24547:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24559:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24570:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24555:3:16"},"nodeType":"YulFunctionCall","src":"24555:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24547:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24621:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24634:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24645:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24630:3:16"},"nodeType":"YulFunctionCall","src":"24630:17:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"24583:37:16"},"nodeType":"YulFunctionCall","src":"24583:65:16"},"nodeType":"YulExpressionStatement","src":"24583:65:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24509:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24521:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24532:4:16","type":""}],"src":"24445:210:16"},{"body":{"nodeType":"YulBlock","src":"24791:1029:16","statements":[{"body":{"nodeType":"YulBlock","src":"24837:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24839:77:16"},"nodeType":"YulFunctionCall","src":"24839:79:16"},"nodeType":"YulExpressionStatement","src":"24839:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24812:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"24821:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24808:3:16"},"nodeType":"YulFunctionCall","src":"24808:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"24833:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24804:3:16"},"nodeType":"YulFunctionCall","src":"24804:32:16"},"nodeType":"YulIf","src":"24801:119:16"},{"nodeType":"YulBlock","src":"24930:287:16","statements":[{"nodeType":"YulVariableDeclaration","src":"24945:45:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24976:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24987:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24972:3:16"},"nodeType":"YulFunctionCall","src":"24972:17:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24959:12:16"},"nodeType":"YulFunctionCall","src":"24959:31:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24949:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"25037:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25039:77:16"},"nodeType":"YulFunctionCall","src":"25039:79:16"},"nodeType":"YulExpressionStatement","src":"25039:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25009:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"25017:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25006:2:16"},"nodeType":"YulFunctionCall","src":"25006:30:16"},"nodeType":"YulIf","src":"25003:117:16"},{"nodeType":"YulAssignment","src":"25134:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25179:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"25190:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25175:3:16"},"nodeType":"YulFunctionCall","src":"25175:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25199:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"25144:30:16"},"nodeType":"YulFunctionCall","src":"25144:63:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25134:6:16"}]}]},{"nodeType":"YulBlock","src":"25227:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"25242:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25273:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25284:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25269:3:16"},"nodeType":"YulFunctionCall","src":"25269:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25256:12:16"},"nodeType":"YulFunctionCall","src":"25256:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25246:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"25335:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25337:77:16"},"nodeType":"YulFunctionCall","src":"25337:79:16"},"nodeType":"YulExpressionStatement","src":"25337:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25307:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"25315:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25304:2:16"},"nodeType":"YulFunctionCall","src":"25304:30:16"},"nodeType":"YulIf","src":"25301:117:16"},{"nodeType":"YulAssignment","src":"25432:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25477:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"25488:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25473:3:16"},"nodeType":"YulFunctionCall","src":"25473:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25497:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"25442:30:16"},"nodeType":"YulFunctionCall","src":"25442:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"25432:6:16"}]}]},{"nodeType":"YulBlock","src":"25525:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"25540:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25571:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25582:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25567:3:16"},"nodeType":"YulFunctionCall","src":"25567:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25554:12:16"},"nodeType":"YulFunctionCall","src":"25554:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25544:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"25633:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25635:77:16"},"nodeType":"YulFunctionCall","src":"25635:79:16"},"nodeType":"YulExpressionStatement","src":"25635:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25605:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"25613:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25602:2:16"},"nodeType":"YulFunctionCall","src":"25602:30:16"},"nodeType":"YulIf","src":"25599:117:16"},{"nodeType":"YulAssignment","src":"25730:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25775:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"25786:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25771:3:16"},"nodeType":"YulFunctionCall","src":"25771:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25795:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"25740:30:16"},"nodeType":"YulFunctionCall","src":"25740:63:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"25730:6:16"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24745:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24756:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24768:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24776:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24784:6:16","type":""}],"src":"24661:1159:16"},{"body":{"nodeType":"YulBlock","src":"25854:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25871:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25874:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25864:6:16"},"nodeType":"YulFunctionCall","src":"25864:88:16"},"nodeType":"YulExpressionStatement","src":"25864:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25968:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"25971:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25961:6:16"},"nodeType":"YulFunctionCall","src":"25961:15:16"},"nodeType":"YulExpressionStatement","src":"25961:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25992:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25995:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25985:6:16"},"nodeType":"YulFunctionCall","src":"25985:15:16"},"nodeType":"YulExpressionStatement","src":"25985:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"25826:180:16"},{"body":{"nodeType":"YulBlock","src":"26063:269:16","statements":[{"nodeType":"YulAssignment","src":"26073:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"26087:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"26093:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"26083:3:16"},"nodeType":"YulFunctionCall","src":"26083:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"26073:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"26104:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"26134:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"26140:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26130:3:16"},"nodeType":"YulFunctionCall","src":"26130:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"26108:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"26181:51:16","statements":[{"nodeType":"YulAssignment","src":"26195:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"26209:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"26217:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26205:3:16"},"nodeType":"YulFunctionCall","src":"26205:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"26195:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"26161:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26154:6:16"},"nodeType":"YulFunctionCall","src":"26154:26:16"},"nodeType":"YulIf","src":"26151:81:16"},{"body":{"nodeType":"YulBlock","src":"26284:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"26298:16:16"},"nodeType":"YulFunctionCall","src":"26298:18:16"},"nodeType":"YulExpressionStatement","src":"26298:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"26248:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"26271:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"26279:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"26268:2:16"},"nodeType":"YulFunctionCall","src":"26268:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"26245:2:16"},"nodeType":"YulFunctionCall","src":"26245:38:16"},"nodeType":"YulIf","src":"26242:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"26047:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"26056:6:16","type":""}],"src":"26012:320:16"},{"body":{"nodeType":"YulBlock","src":"26366:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26383:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26386:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26376:6:16"},"nodeType":"YulFunctionCall","src":"26376:88:16"},"nodeType":"YulExpressionStatement","src":"26376:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26480:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26483:4:16","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26473:6:16"},"nodeType":"YulFunctionCall","src":"26473:15:16"},"nodeType":"YulExpressionStatement","src":"26473:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26504:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26507:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26497:6:16"},"nodeType":"YulFunctionCall","src":"26497:15:16"},"nodeType":"YulExpressionStatement","src":"26497:15:16"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"26338:180:16"},{"body":{"nodeType":"YulBlock","src":"26552:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26569:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26572:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26562:6:16"},"nodeType":"YulFunctionCall","src":"26562:88:16"},"nodeType":"YulExpressionStatement","src":"26562:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26666:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26669:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26659:6:16"},"nodeType":"YulFunctionCall","src":"26659:15:16"},"nodeType":"YulExpressionStatement","src":"26659:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26690:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26693:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26683:6:16"},"nodeType":"YulFunctionCall","src":"26683:15:16"},"nodeType":"YulExpressionStatement","src":"26683:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"26524:180:16"},{"body":{"nodeType":"YulBlock","src":"26753:190:16","statements":[{"nodeType":"YulAssignment","src":"26763:33:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26790:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26772:17:16"},"nodeType":"YulFunctionCall","src":"26772:24:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"26763:5:16"}]},{"body":{"nodeType":"YulBlock","src":"26886:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26888:16:16"},"nodeType":"YulFunctionCall","src":"26888:18:16"},"nodeType":"YulExpressionStatement","src":"26888:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26811:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"26818:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"26808:2:16"},"nodeType":"YulFunctionCall","src":"26808:77:16"},"nodeType":"YulIf","src":"26805:103:16"},{"nodeType":"YulAssignment","src":"26917:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26928:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"26935:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26924:3:16"},"nodeType":"YulFunctionCall","src":"26924:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"26917:3:16"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26739:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"26749:3:16","type":""}],"src":"26710:233:16"},{"body":{"nodeType":"YulBlock","src":"27003:87:16","statements":[{"nodeType":"YulAssignment","src":"27013:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"27021:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"27013:4:16"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27041:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"27044:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27034:6:16"},"nodeType":"YulFunctionCall","src":"27034:14:16"},"nodeType":"YulExpressionStatement","src":"27034:14:16"},{"nodeType":"YulAssignment","src":"27057:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27075:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27078:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"27065:9:16"},"nodeType":"YulFunctionCall","src":"27065:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"27057:4:16"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"26990:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"26998:4:16","type":""}],"src":"26949:141:16"},{"body":{"nodeType":"YulBlock","src":"27140:49:16","statements":[{"nodeType":"YulAssignment","src":"27150:33:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27168:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"27175:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27164:3:16"},"nodeType":"YulFunctionCall","src":"27164:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"27180:2:16","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"27160:3:16"},"nodeType":"YulFunctionCall","src":"27160:23:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"27150:6:16"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27123:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"27133:6:16","type":""}],"src":"27096:93:16"},{"body":{"nodeType":"YulBlock","src":"27248:54:16","statements":[{"nodeType":"YulAssignment","src":"27258:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"27283:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"27289:5:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"27279:3:16"},"nodeType":"YulFunctionCall","src":"27279:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"27258:8:16"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"27223:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"27229:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"27239:8:16","type":""}],"src":"27195:107:16"},{"body":{"nodeType":"YulBlock","src":"27384:317:16","statements":[{"nodeType":"YulVariableDeclaration","src":"27394:35:16","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"27415:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"27427:1:16","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27411:3:16"},"nodeType":"YulFunctionCall","src":"27411:18:16"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"27398:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"27438:109:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"27469:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"27480:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"27450:18:16"},"nodeType":"YulFunctionCall","src":"27450:97:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"27442:4:16","type":""}]},{"nodeType":"YulAssignment","src":"27556:51:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"27587:9:16"},{"name":"toInsert","nodeType":"YulIdentifier","src":"27598:8:16"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"27568:18:16"},"nodeType":"YulFunctionCall","src":"27568:39:16"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"27556:8:16"}]},{"nodeType":"YulAssignment","src":"27616:30:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27629:5:16"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"27640:4:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"27636:3:16"},"nodeType":"YulFunctionCall","src":"27636:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27625:3:16"},"nodeType":"YulFunctionCall","src":"27625:21:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"27616:5:16"}]},{"nodeType":"YulAssignment","src":"27655:40:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27668:5:16"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"27679:8:16"},{"name":"mask","nodeType":"YulIdentifier","src":"27689:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27675:3:16"},"nodeType":"YulFunctionCall","src":"27675:19:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"27665:2:16"},"nodeType":"YulFunctionCall","src":"27665:30:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"27655:6:16"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27345:5:16","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"27352:10:16","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"27364:8:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"27377:6:16","type":""}],"src":"27308:393:16"},{"body":{"nodeType":"YulBlock","src":"27739:28:16","statements":[{"nodeType":"YulAssignment","src":"27749:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"27756:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"27749:3:16"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27725:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"27735:3:16","type":""}],"src":"27707:60:16"},{"body":{"nodeType":"YulBlock","src":"27833:82:16","statements":[{"nodeType":"YulAssignment","src":"27843:66:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27901:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27883:17:16"},"nodeType":"YulFunctionCall","src":"27883:24:16"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"27874:8:16"},"nodeType":"YulFunctionCall","src":"27874:34:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27856:17:16"},"nodeType":"YulFunctionCall","src":"27856:53:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"27843:9:16"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27813:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"27823:9:16","type":""}],"src":"27773:142:16"},{"body":{"nodeType":"YulBlock","src":"27968:28:16","statements":[{"nodeType":"YulAssignment","src":"27978:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"27985:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"27978:3:16"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27954:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"27964:3:16","type":""}],"src":"27921:75:16"},{"body":{"nodeType":"YulBlock","src":"28078:193:16","statements":[{"nodeType":"YulVariableDeclaration","src":"28088:63:16","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"28143:7:16"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"28112:30:16"},"nodeType":"YulFunctionCall","src":"28112:39:16"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"28092:16:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28167:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28207:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"28201:5:16"},"nodeType":"YulFunctionCall","src":"28201:11:16"},{"name":"offset","nodeType":"YulIdentifier","src":"28214:6:16"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"28246:16:16"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"28222:23:16"},"nodeType":"YulFunctionCall","src":"28222:41:16"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"28173:27:16"},"nodeType":"YulFunctionCall","src":"28173:91:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"28160:6:16"},"nodeType":"YulFunctionCall","src":"28160:105:16"},"nodeType":"YulExpressionStatement","src":"28160:105:16"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"28055:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"28061:6:16","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"28069:7:16","type":""}],"src":"28002:269:16"},{"body":{"nodeType":"YulBlock","src":"28326:24:16","statements":[{"nodeType":"YulAssignment","src":"28336:8:16","value":{"kind":"number","nodeType":"YulLiteral","src":"28343:1:16","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"28336:3:16"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"28322:3:16","type":""}],"src":"28277:73:16"},{"body":{"nodeType":"YulBlock","src":"28409:136:16","statements":[{"nodeType":"YulVariableDeclaration","src":"28419:46:16","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"28433:30:16"},"nodeType":"YulFunctionCall","src":"28433:32:16"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"28423:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28518:4:16"},{"name":"offset","nodeType":"YulIdentifier","src":"28524:6:16"},{"name":"zero_0","nodeType":"YulIdentifier","src":"28532:6:16"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"28474:43:16"},"nodeType":"YulFunctionCall","src":"28474:65:16"},"nodeType":"YulExpressionStatement","src":"28474:65:16"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"28395:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"28401:6:16","type":""}],"src":"28356:189:16"},{"body":{"nodeType":"YulBlock","src":"28601:136:16","statements":[{"body":{"nodeType":"YulBlock","src":"28668:63:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"28712:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"28719:1:16","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"28682:29:16"},"nodeType":"YulFunctionCall","src":"28682:39:16"},"nodeType":"YulExpressionStatement","src":"28682:39:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"28621:5:16"},{"name":"end","nodeType":"YulIdentifier","src":"28628:3:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28618:2:16"},"nodeType":"YulFunctionCall","src":"28618:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"28633:26:16","statements":[{"nodeType":"YulAssignment","src":"28635:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"28648:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"28655:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28644:3:16"},"nodeType":"YulFunctionCall","src":"28644:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"28635:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"28615:2:16","statements":[]},"src":"28611:120:16"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"28589:5:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"28596:3:16","type":""}],"src":"28551:186:16"},{"body":{"nodeType":"YulBlock","src":"28822:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"28848:431:16","statements":[{"nodeType":"YulVariableDeclaration","src":"28862:54:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"28910:5:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"28878:31:16"},"nodeType":"YulFunctionCall","src":"28878:38:16"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"28866:8:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28929:63:16","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"28952:8:16"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"28980:10:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"28962:17:16"},"nodeType":"YulFunctionCall","src":"28962:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28948:3:16"},"nodeType":"YulFunctionCall","src":"28948:44:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"28933:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"29149:27:16","statements":[{"nodeType":"YulAssignment","src":"29151:23:16","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"29166:8:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"29151:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"29133:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"29145:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"29130:2:16"},"nodeType":"YulFunctionCall","src":"29130:18:16"},"nodeType":"YulIf","src":"29127:49:16"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"29218:11:16"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"29235:8:16"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"29263:3:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"29245:17:16"},"nodeType":"YulFunctionCall","src":"29245:22:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29231:3:16"},"nodeType":"YulFunctionCall","src":"29231:37:16"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"29189:28:16"},"nodeType":"YulFunctionCall","src":"29189:80:16"},"nodeType":"YulExpressionStatement","src":"29189:80:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"28839:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"28844:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28836:2:16"},"nodeType":"YulFunctionCall","src":"28836:11:16"},"nodeType":"YulIf","src":"28833:446:16"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"28798:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"28805:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"28810:10:16","type":""}],"src":"28743:543:16"},{"body":{"nodeType":"YulBlock","src":"29355:54:16","statements":[{"nodeType":"YulAssignment","src":"29365:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"29390:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"29396:5:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"29386:3:16"},"nodeType":"YulFunctionCall","src":"29386:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"29365:8:16"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"29330:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"29336:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"29346:8:16","type":""}],"src":"29292:117:16"},{"body":{"nodeType":"YulBlock","src":"29466:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"29476:68:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29525:1:16","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"29528:5:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"29521:3:16"},"nodeType":"YulFunctionCall","src":"29521:13:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29540:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"29536:3:16"},"nodeType":"YulFunctionCall","src":"29536:6:16"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"29492:28:16"},"nodeType":"YulFunctionCall","src":"29492:51:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"29488:3:16"},"nodeType":"YulFunctionCall","src":"29488:56:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"29480:4:16","type":""}]},{"nodeType":"YulAssignment","src":"29553:25:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29567:4:16"},{"name":"mask","nodeType":"YulIdentifier","src":"29573:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29563:3:16"},"nodeType":"YulFunctionCall","src":"29563:15:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"29553:6:16"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"29443:4:16","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"29449:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"29459:6:16","type":""}],"src":"29415:169:16"},{"body":{"nodeType":"YulBlock","src":"29670:214:16","statements":[{"nodeType":"YulAssignment","src":"29803:37:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29830:4:16"},{"name":"len","nodeType":"YulIdentifier","src":"29836:3:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"29811:18:16"},"nodeType":"YulFunctionCall","src":"29811:29:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"29803:4:16"}]},{"nodeType":"YulAssignment","src":"29849:29:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29860:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29870:1:16","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"29873:3:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"29866:3:16"},"nodeType":"YulFunctionCall","src":"29866:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"29857:2:16"},"nodeType":"YulFunctionCall","src":"29857:21:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"29849:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"29651:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"29657:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"29665:4:16","type":""}],"src":"29589:295:16"},{"body":{"nodeType":"YulBlock","src":"29981:1303:16","statements":[{"nodeType":"YulVariableDeclaration","src":"29992:51:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"30039:3:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"30006:32:16"},"nodeType":"YulFunctionCall","src":"30006:37:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"29996:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"30128:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"30130:16:16"},"nodeType":"YulFunctionCall","src":"30130:18:16"},"nodeType":"YulExpressionStatement","src":"30130:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"30100:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"30108:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30097:2:16"},"nodeType":"YulFunctionCall","src":"30097:30:16"},"nodeType":"YulIf","src":"30094:56:16"},{"nodeType":"YulVariableDeclaration","src":"30160:52:16","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"30206:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"30200:5:16"},"nodeType":"YulFunctionCall","src":"30200:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"30174:25:16"},"nodeType":"YulFunctionCall","src":"30174:38:16"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"30164:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"30305:4:16"},{"name":"oldLen","nodeType":"YulIdentifier","src":"30311:6:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"30319:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"30259:45:16"},"nodeType":"YulFunctionCall","src":"30259:67:16"},"nodeType":"YulExpressionStatement","src":"30259:67:16"},{"nodeType":"YulVariableDeclaration","src":"30336:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"30353:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"30340:9:16","type":""}]},{"nodeType":"YulAssignment","src":"30364:17:16","value":{"kind":"number","nodeType":"YulLiteral","src":"30377:4:16","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"30364:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"30428:611:16","statements":[{"nodeType":"YulVariableDeclaration","src":"30442:37:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"30461:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30473:4:16","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"30469:3:16"},"nodeType":"YulFunctionCall","src":"30469:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30457:3:16"},"nodeType":"YulFunctionCall","src":"30457:22:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"30446:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"30493:51:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"30539:4:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"30507:31:16"},"nodeType":"YulFunctionCall","src":"30507:37:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"30497:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"30557:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"30566:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"30561:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"30625:163:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"30650:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"30668:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"30673:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30664:3:16"},"nodeType":"YulFunctionCall","src":"30664:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30658:5:16"},"nodeType":"YulFunctionCall","src":"30658:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"30643:6:16"},"nodeType":"YulFunctionCall","src":"30643:42:16"},"nodeType":"YulExpressionStatement","src":"30643:42:16"},{"nodeType":"YulAssignment","src":"30702:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"30716:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"30724:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30712:3:16"},"nodeType":"YulFunctionCall","src":"30712:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"30702:6:16"}]},{"nodeType":"YulAssignment","src":"30743:31:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"30760:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"30771:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30756:3:16"},"nodeType":"YulFunctionCall","src":"30756:18:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"30743:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"30591:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"30594:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30588:2:16"},"nodeType":"YulFunctionCall","src":"30588:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"30603:21:16","statements":[{"nodeType":"YulAssignment","src":"30605:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"30614:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"30617:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30610:3:16"},"nodeType":"YulFunctionCall","src":"30610:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"30605:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"30584:3:16","statements":[]},"src":"30580:208:16"},{"body":{"nodeType":"YulBlock","src":"30824:156:16","statements":[{"nodeType":"YulVariableDeclaration","src":"30842:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"30869:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"30874:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30865:3:16"},"nodeType":"YulFunctionCall","src":"30865:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30859:5:16"},"nodeType":"YulFunctionCall","src":"30859:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"30846:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"30909:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"30936:9:16"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"30951:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"30959:4:16","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30947:3:16"},"nodeType":"YulFunctionCall","src":"30947:17:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"30917:18:16"},"nodeType":"YulFunctionCall","src":"30917:48:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"30902:6:16"},"nodeType":"YulFunctionCall","src":"30902:64:16"},"nodeType":"YulExpressionStatement","src":"30902:64:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"30807:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"30816:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30804:2:16"},"nodeType":"YulFunctionCall","src":"30804:19:16"},"nodeType":"YulIf","src":"30801:179:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31000:4:16"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"31014:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"31022:1:16","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"31010:3:16"},"nodeType":"YulFunctionCall","src":"31010:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"31026:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31006:3:16"},"nodeType":"YulFunctionCall","src":"31006:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"30993:6:16"},"nodeType":"YulFunctionCall","src":"30993:36:16"},"nodeType":"YulExpressionStatement","src":"30993:36:16"}]},"nodeType":"YulCase","src":"30421:618:16","value":{"kind":"number","nodeType":"YulLiteral","src":"30426:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"31056:222:16","statements":[{"nodeType":"YulVariableDeclaration","src":"31070:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"31083:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"31074:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"31107:67:16","statements":[{"nodeType":"YulAssignment","src":"31125:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"31144:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"31149:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31140:3:16"},"nodeType":"YulFunctionCall","src":"31140:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31134:5:16"},"nodeType":"YulFunctionCall","src":"31134:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"31125:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"31100:6:16"},"nodeType":"YulIf","src":"31097:77:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31194:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31253:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"31260:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"31200:52:16"},"nodeType":"YulFunctionCall","src":"31200:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"31187:6:16"},"nodeType":"YulFunctionCall","src":"31187:81:16"},"nodeType":"YulExpressionStatement","src":"31187:81:16"}]},"nodeType":"YulCase","src":"31048:230:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"30401:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"30409:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30398:2:16"},"nodeType":"YulFunctionCall","src":"30398:14:16"},"nodeType":"YulSwitch","src":"30391:887:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"29970:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"29976:3:16","type":""}],"src":"29889:1395:16"},{"body":{"nodeType":"YulBlock","src":"31404:34:16","statements":[{"nodeType":"YulAssignment","src":"31414:18:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"31429:3:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"31414:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31376:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"31381:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"31392:11:16","type":""}],"src":"31290:148:16"},{"body":{"nodeType":"YulBlock","src":"31554:280:16","statements":[{"nodeType":"YulVariableDeclaration","src":"31564:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31611:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"31578:32:16"},"nodeType":"YulFunctionCall","src":"31578:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"31568:6:16","type":""}]},{"nodeType":"YulAssignment","src":"31626:96:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31710:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"31715:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"31633:76:16"},"nodeType":"YulFunctionCall","src":"31633:89:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31626:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31770:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"31777:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31766:3:16"},"nodeType":"YulFunctionCall","src":"31766:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"31784:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"31789:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"31731:34:16"},"nodeType":"YulFunctionCall","src":"31731:65:16"},"nodeType":"YulExpressionStatement","src":"31731:65:16"},{"nodeType":"YulAssignment","src":"31805:23:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31816:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"31821:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31812:3:16"},"nodeType":"YulFunctionCall","src":"31812:16:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31805:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31535:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"31542:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31550:3:16","type":""}],"src":"31444:390:16"},{"body":{"nodeType":"YulBlock","src":"31976:139:16","statements":[{"nodeType":"YulAssignment","src":"31987:102:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32076:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"32085:3:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"31994:81:16"},"nodeType":"YulFunctionCall","src":"31994:95:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31987:3:16"}]},{"nodeType":"YulAssignment","src":"32099:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"32106:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32099:3:16"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31955:3:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31961:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31972:3:16","type":""}],"src":"31840:275:16"},{"body":{"nodeType":"YulBlock","src":"32234:34:16","statements":[{"nodeType":"YulAssignment","src":"32244:18:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"32259:3:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"32244:11:16"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32206:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"32211:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"32222:11:16","type":""}],"src":"32121:147:16"},{"body":{"nodeType":"YulBlock","src":"32331:87:16","statements":[{"nodeType":"YulAssignment","src":"32341:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"32349:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"32341:4:16"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32369:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"32372:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32362:6:16"},"nodeType":"YulFunctionCall","src":"32362:14:16"},"nodeType":"YulExpressionStatement","src":"32362:14:16"},{"nodeType":"YulAssignment","src":"32385:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32403:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32406:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"32393:9:16"},"nodeType":"YulFunctionCall","src":"32393:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"32385:4:16"}]}]},"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"32318:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"32326:4:16","type":""}],"src":"32274:144:16"},{"body":{"nodeType":"YulBlock","src":"32555:769:16","statements":[{"nodeType":"YulVariableDeclaration","src":"32565:29:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32588:5:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"32582:5:16"},"nodeType":"YulFunctionCall","src":"32582:12:16"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"32569:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"32603:50:16","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"32643:9:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"32617:25:16"},"nodeType":"YulFunctionCall","src":"32617:36:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"32607:6:16","type":""}]},{"nodeType":"YulAssignment","src":"32662:95:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32745:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"32750:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"32669:75:16"},"nodeType":"YulFunctionCall","src":"32669:88:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32662:3:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"32806:159:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32859:3:16"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"32868:9:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32883:4:16","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"32879:3:16"},"nodeType":"YulFunctionCall","src":"32879:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32864:3:16"},"nodeType":"YulFunctionCall","src":"32864:25:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32852:6:16"},"nodeType":"YulFunctionCall","src":"32852:38:16"},"nodeType":"YulExpressionStatement","src":"32852:38:16"},{"nodeType":"YulAssignment","src":"32903:52:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32914:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"32923:6:16"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"32945:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"32938:6:16"},"nodeType":"YulFunctionCall","src":"32938:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"32931:6:16"},"nodeType":"YulFunctionCall","src":"32931:22:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"32919:3:16"},"nodeType":"YulFunctionCall","src":"32919:35:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32910:3:16"},"nodeType":"YulFunctionCall","src":"32910:45:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32903:3:16"}]}]},"nodeType":"YulCase","src":"32799:166:16","value":{"kind":"number","nodeType":"YulLiteral","src":"32804:1:16","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"32981:337:16","statements":[{"nodeType":"YulVariableDeclaration","src":"33026:56:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33076:5:16"}],"functionName":{"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulIdentifier","src":"33041:34:16"},"nodeType":"YulFunctionCall","src":"33041:41:16"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"33030:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"33095:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"33104:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"33099:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"33162:110:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33191:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"33196:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33187:3:16"},"nodeType":"YulFunctionCall","src":"33187:11:16"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"33206:7:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"33200:5:16"},"nodeType":"YulFunctionCall","src":"33200:14:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33180:6:16"},"nodeType":"YulFunctionCall","src":"33180:35:16"},"nodeType":"YulExpressionStatement","src":"33180:35:16"},{"nodeType":"YulAssignment","src":"33232:26:16","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"33247:7:16"},{"kind":"number","nodeType":"YulLiteral","src":"33256:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33243:3:16"},"nodeType":"YulFunctionCall","src":"33243:15:16"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"33232:7:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"33129:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"33132:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33126:2:16"},"nodeType":"YulFunctionCall","src":"33126:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"33140:21:16","statements":[{"nodeType":"YulAssignment","src":"33142:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"33151:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"33154:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33147:3:16"},"nodeType":"YulFunctionCall","src":"33147:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"33142:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"33122:3:16","statements":[]},"src":"33118:154:16"},{"nodeType":"YulAssignment","src":"33285:23:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33296:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"33301:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33292:3:16"},"nodeType":"YulFunctionCall","src":"33292:16:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"33285:3:16"}]}]},"nodeType":"YulCase","src":"32974:344:16","value":{"kind":"number","nodeType":"YulLiteral","src":"32979:1:16","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"32777:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"32788:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32773:3:16"},"nodeType":"YulFunctionCall","src":"32773:17:16"},"nodeType":"YulSwitch","src":"32766:552:16"}]},"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32536:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"32543:3:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"32551:3:16","type":""}],"src":"32446:878:16"},{"body":{"nodeType":"YulBlock","src":"33465:138:16","statements":[{"nodeType":"YulAssignment","src":"33476:101:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33564:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"33573:3:16"}],"functionName":{"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"33483:80:16"},"nodeType":"YulFunctionCall","src":"33483:94:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33476:3:16"}]},{"nodeType":"YulAssignment","src":"33587:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"33594:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33587:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33444:3:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33450:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33461:3:16","type":""}],"src":"33330:273:16"},{"body":{"nodeType":"YulBlock","src":"33653:147:16","statements":[{"nodeType":"YulAssignment","src":"33663:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33686:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33668:17:16"},"nodeType":"YulFunctionCall","src":"33668:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"33663:1:16"}]},{"nodeType":"YulAssignment","src":"33697:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"33720:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33702:17:16"},"nodeType":"YulFunctionCall","src":"33702:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"33697:1:16"}]},{"nodeType":"YulAssignment","src":"33731:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33742:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"33745:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33738:3:16"},"nodeType":"YulFunctionCall","src":"33738:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"33731:3:16"}]},{"body":{"nodeType":"YulBlock","src":"33771:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"33773:16:16"},"nodeType":"YulFunctionCall","src":"33773:18:16"},"nodeType":"YulExpressionStatement","src":"33773:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33763:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"33766:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33760:2:16"},"nodeType":"YulFunctionCall","src":"33760:10:16"},"nodeType":"YulIf","src":"33757:36:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"33640:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"33643:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"33649:3:16","type":""}],"src":"33609:191:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string[]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[]\n    function abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__to_t_string_memory_ptr_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_bytes_storage_ptr(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_bytes_storage_ptr(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x342 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x812FAE1F GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xB527D45E GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xD3791B20 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xEC245802 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xEC245802 EQ PUSH2 0xB26 JUMPI DUP1 PUSH4 0xEC399255 EQ PUSH2 0xB44 JUMPI DUP1 PUSH4 0xECA7F5FE EQ PUSH2 0xB74 JUMPI DUP1 PUSH4 0xFF4A37EF EQ PUSH2 0xBA4 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0xD3791B20 EQ PUSH2 0xABC JUMPI DUP1 PUSH4 0xE32ACC1A EQ PUSH2 0xADA JUMPI DUP1 PUSH4 0xE3863CEF EQ PUSH2 0xB0A JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0xC29595C5 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xC29595C5 EQ PUSH2 0xA1F JUMPI DUP1 PUSH4 0xCA013F17 EQ PUSH2 0xA3B JUMPI DUP1 PUSH4 0xCACE8D46 EQ PUSH2 0xA59 JUMPI DUP1 PUSH4 0xCD230809 EQ PUSH2 0xA8C JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0xB527D45E EQ PUSH2 0x9B2 JUMPI DUP1 PUSH4 0xC04E7430 EQ PUSH2 0x9E5 JUMPI DUP1 PUSH4 0xC04FE978 EQ PUSH2 0xA01 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x9077007D GT PUSH2 0x171 JUMPI DUP1 PUSH4 0xA1CA9178 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0xA1CA9178 EQ PUSH2 0x92A JUMPI DUP1 PUSH4 0xAA2BF5D3 EQ PUSH2 0x95A JUMPI DUP1 PUSH4 0xAA4CDF2A EQ PUSH2 0x978 JUMPI DUP1 PUSH4 0xB16060A6 EQ PUSH2 0x9A8 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x9077007D EQ PUSH2 0x8B6 JUMPI DUP1 PUSH4 0x97EE7606 EQ PUSH2 0x8D4 JUMPI DUP1 PUSH4 0x9F9FF54B EQ PUSH2 0x8F2 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x812FAE1F EQ PUSH2 0x7BE JUMPI DUP1 PUSH4 0x82FCC732 EQ PUSH2 0x7EE JUMPI DUP1 PUSH4 0x87633EB2 EQ PUSH2 0x81E JUMPI DUP1 PUSH4 0x881DE858 EQ PUSH2 0x83A JUMPI DUP1 PUSH4 0x8C59143D EQ PUSH2 0x856 JUMPI DUP1 PUSH4 0x8D3D2595 EQ PUSH2 0x886 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x3F87A2F4 GT PUSH2 0x292 JUMPI DUP1 PUSH4 0x6ECDA4EE GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x7BBD582D GT PUSH2 0x20A JUMPI DUP1 PUSH4 0x7BBD582D EQ PUSH2 0x70D JUMPI DUP1 PUSH4 0x7F2035D4 EQ PUSH2 0x72B JUMPI DUP1 PUSH4 0x7FC543EC EQ PUSH2 0x75C JUMPI DUP1 PUSH4 0x803F5B9F EQ PUSH2 0x78E JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x6ECDA4EE EQ PUSH2 0x67D JUMPI DUP1 PUSH4 0x77935BE7 EQ PUSH2 0x6AD JUMPI DUP1 PUSH4 0x77B2EC23 EQ PUSH2 0x6DD JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x4A797BD7 GT PUSH2 0x26C JUMPI DUP1 PUSH4 0x4A797BD7 EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0x4BE7ADB5 EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0x5132F0C7 EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0x5D907DA1 EQ PUSH2 0x64D JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x3F87A2F4 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x468D0C80 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x494CE295 EQ PUSH2 0x5B3 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x1B592AEB GT PUSH2 0x2FF JUMPI DUP1 PUSH4 0x27A568B9 GT PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x27A568B9 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x29B56F60 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x330B8F26 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0x3F50602F EQ PUSH2 0x51E JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x1B592AEB EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0x1BA44C4C EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0x1E9AC9F5 EQ PUSH2 0x46D JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0xC90F09D EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x109AC970 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x1171B621 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x131D44F2 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0x13BF4CEA EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x18426B46 EQ PUSH2 0x3ED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x34F PUSH2 0xBD6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x342A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x342A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D7 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x3691 JUMP JUMPDEST PUSH2 0xFA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x425 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x464 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x487 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x37D4 JUMP JUMPDEST PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x381D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D7 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x342A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x507 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x515 SWAP3 SWAP2 SWAP1 PUSH2 0x3869 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x538 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x3899 JUMP JUMPDEST PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x568 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x166D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x578 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3924 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x1725 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0x39AE JUMP JUMPDEST PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DA SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EB PUSH2 0x18A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F8 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x616 SWAP2 SWAP1 PUSH2 0x3A4D JUMP JUMPDEST PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x628 SWAP2 SWAP1 PUSH2 0x342A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x3A8D JUMP JUMPDEST PUSH2 0x1A3F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x667 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x1AE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x697 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x692 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x1B8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x37D4 JUMP JUMPDEST PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D4 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F2 SWAP2 SWAP1 PUSH2 0x3B0B JUMP JUMPDEST PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x704 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x715 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x722 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x745 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x740 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x753 SWAP3 SWAP2 SWAP1 PUSH2 0x3869 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x776 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x771 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x1DB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x785 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B5 SWAP2 SWAP1 PUSH2 0x3C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D3 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x1F4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0x3C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x808 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x803 SWAP2 SWAP1 PUSH2 0x3C76 JUMP JUMPDEST PUSH2 0x202F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x815 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x838 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x833 SWAP2 SWAP1 PUSH2 0x3A8D JUMP JUMPDEST PUSH2 0x20EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x854 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x3899 JUMP JUMPDEST PUSH2 0x2111 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x870 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x3CE5 JUMP JUMPDEST PUSH2 0x215E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87D SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x89B SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8AD SWAP2 SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8BE PUSH2 0x22A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8CB SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8DC PUSH2 0x22AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E9 SWAP2 SWAP1 PUSH2 0x342A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x37D4 JUMP JUMPDEST PUSH2 0x23E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x921 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x944 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x93F SWAP2 SWAP1 PUSH2 0x37D4 JUMP JUMPDEST PUSH2 0x253B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x951 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x962 PUSH2 0x25AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96F SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x992 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x98D SWAP2 SWAP1 PUSH2 0x37D4 JUMP JUMPDEST PUSH2 0x25B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99F SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B0 PUSH2 0x2639 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9C7 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x28EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9DC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9FA SWAP2 SWAP1 PUSH2 0x3A8D JUMP JUMPDEST PUSH2 0x2A2B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA09 PUSH2 0x2A53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA16 SWAP2 SWAP1 PUSH2 0x342A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA39 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA34 SWAP2 SWAP1 PUSH2 0x3A8D JUMP JUMPDEST PUSH2 0x2B8D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA43 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA6E SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x2BBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA83 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA1 SWAP2 SWAP1 PUSH2 0x3A8D JUMP JUMPDEST PUSH2 0x2CFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB3 SWAP2 SWAP1 PUSH2 0x3E86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAC4 PUSH2 0x2D8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD1 SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAEF SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x2D92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB01 SWAP2 SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB24 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB1F SWAP2 SWAP1 PUSH2 0x3C76 JUMP JUMPDEST PUSH2 0x2E3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB2E PUSH2 0x2F50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3B SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB59 SWAP2 SWAP1 PUSH2 0x3EA1 JUMP JUMPDEST PUSH2 0x2F56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6B SWAP2 SWAP1 PUSH2 0x345B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB8E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB89 SWAP2 SWAP1 PUSH2 0x37D4 JUMP JUMPDEST PUSH2 0x3080 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9B SWAP2 SWAP1 PUSH2 0x3E86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBBE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB9 SWAP2 SWAP1 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x30F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBCD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2F PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x440E PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 MLOAD DUP1 PUSH2 0x300 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2C3 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x47B1 PUSH2 0x2C3 SWAP2 CODECOPY PUSH1 0x40 MLOAD DUP1 PUSH2 0x780 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x75B DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4A74 PUSH2 0x75B SWAP2 CODECOPY PUSH2 0x2F56 JUMP JUMPDEST POP PUSH2 0xC6F PUSH1 0x40 MLOAD DUP1 PUSH2 0x320 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2F3 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x51CF PUSH2 0x2F3 SWAP2 CODECOPY PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x440E PUSH1 0x2A SWAP2 CODECOPY PUSH2 0x1C58 JUMP JUMPDEST POP PUSH1 0x60 PUSH2 0xCB2 PUSH1 0x40 MLOAD DUP1 PUSH2 0x3A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x379 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4438 PUSH2 0x379 SWAP2 CODECOPY PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x440E PUSH1 0x2A SWAP2 CODECOPY PUSH2 0xFA0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD6 JUMPI PUSH2 0xCD5 PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD09 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xCF4 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xE1A JUMPI DUP5 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0xE07 JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xD5C SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD88 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDD5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDAA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDD5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDB8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xDED JUMPI PUSH2 0xDEC PUSH2 0x3FA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xE03 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xE12 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD14 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE4B JUMPI PUSH2 0xE4A PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE7E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE69 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xF8F JUMPI DUP5 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0xF6E JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xED1 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEFD SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF4A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF1F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF4A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF2D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF62 JUMPI PUSH2 0xF61 PUSH2 0x3FA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0xF79 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0xF87 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE89 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xFF2 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x16 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1012 SWAP2 SWAP1 PUSH2 0x4308 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x104D SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x10B2 JUMPI PUSH2 0x1087 PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x107A JUMPI PUSH2 0x1079 PUSH2 0x3FA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x31A4 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x109A SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0x10AA SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1055 JUMP JUMPDEST POP PUSH1 0x3 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x10F5 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1121 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x116E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1143 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x116E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1151 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x11DE JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x11B5 SWAP2 SWAP1 PUSH2 0x43C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x11CB JUMPI DUP1 SWAP2 POP POP PUSH2 0x11E4 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x11D6 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1180 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x120C SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1238 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1285 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x125A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1285 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1268 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x129A SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12C6 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1313 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1313 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1328 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1354 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13A1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1376 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13A1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1384 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13CB JUMPI PUSH2 0x13CA PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13FE JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x13E9 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x14DE JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x142F SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x145B SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14A8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x147D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14A8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x148B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x14C0 JUMPI PUSH2 0x14BF PUSH2 0x3FA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x14D6 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1404 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x150F SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x153B SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1588 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x155D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1588 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x156B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x16 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15A6 SWAP2 SWAP1 PUSH2 0x4308 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x13 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x162F SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1645 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x165C SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x7 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x16A2 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16CE SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x171B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16F0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x171B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16FE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x174E SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x177A SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x179C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x16 DUP4 PUSH1 0x40 MLOAD PUSH2 0x17EB SWAP2 SWAP1 PUSH2 0x4308 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x15 PUSH1 0x0 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x187E SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x9 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1895 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x9 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18CD JUMPI PUSH2 0x18CC PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1900 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x18EB JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1A33 JUMPI DUP6 PUSH1 0x12 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x194F JUMPI POP DUP5 PUSH1 0x12 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1A12 JUMPI PUSH1 0x12 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1975 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19A1 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A06 JUMPI PUSH2 0x1A05 PUSH2 0x3FA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0x1A1D SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x1A2B SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x190B JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x16 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1A51 SWAP2 SWAP1 PUSH2 0x4308 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1AC2 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD9 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1B05 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B31 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B7E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B53 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B7E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B61 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x1BA9 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BD5 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C22 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BF7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C22 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C05 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0xF DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1CA3 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x16 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1CB9 SWAP2 SWAP1 PUSH2 0x4308 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1CF4 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x2 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1D34 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D60 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DAD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D82 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DAD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D90 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1DE0 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E0C SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E59 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E2E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E59 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E3C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E89 JUMPI PUSH2 0x1E88 PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1EB7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1F41 JUMPI DUP5 PUSH1 0x13 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1F2E JUMPI PUSH1 0x13 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1F13 JUMPI PUSH2 0x1F12 PUSH2 0x3FA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1F2A SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1F39 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1EC2 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x9 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F6C JUMPI PUSH2 0x1F6B PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F9A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x2024 JUMPI DUP5 PUSH1 0x15 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x2011 JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FF6 JUMPI PUSH2 0x1FF5 PUSH2 0x3FA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x200D SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x201C SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FA5 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x16 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2043 SWAP2 SWAP1 PUSH2 0x4308 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x12 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x20C4 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x20DB SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x6 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x210C SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2134 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP DUP1 PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2158 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x14 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x21BF SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x21D5 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x21EC SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x8 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2221 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x224D SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x229A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x226F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x229A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x227D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22CC JUMPI PUSH2 0x22CB PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x22FF JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x22EA JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x23DF JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2330 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x235C SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x23A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x237E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x23A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x238C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x23C1 JUMPI PUSH2 0x23C0 PUSH2 0x3FA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x23D7 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2305 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x16 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x2420 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x244C SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2499 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x246E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2499 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x247C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x25A1 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x2578 SWAP2 SWAP1 PUSH2 0x43C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x258E JUMPI DUP1 SWAP2 POP POP PUSH2 0x25A7 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2599 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2543 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x262E JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x25EF SWAP2 SWAP1 PUSH2 0x43C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x261B JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP POP PUSH2 0x2634 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2626 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x25BA JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x269F JUMPI PUSH1 0xA PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x266A SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x267A SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x268A SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2697 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x263C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x26EE JUMPI PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x26D9 SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x26E6 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26A3 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2745 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2728 SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x273D SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26F2 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x279C JUMPI PUSH1 0x11 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2787 SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2794 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2749 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2803 JUMPI PUSH1 0x13 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x27DE SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x27EE SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x27FB SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27A0 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x2862 JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x284D SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x285A SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2807 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x28B9 JUMPI PUSH1 0x12 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x28A4 SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x28B1 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2866 JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x291A SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2946 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2993 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2968 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2993 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2976 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x29A8 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29D4 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2A21 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2A21 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A04 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2A4E SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A72 JUMPI PUSH2 0x2A71 PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AA5 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2A90 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x2B85 JUMPI PUSH1 0xA PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2AD6 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B02 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B4F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B24 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B4F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B32 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2B67 JUMPI PUSH2 0x2B66 PUSH2 0x3FA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2B7D SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2AAB JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2BB0 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2BEA SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C16 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C63 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C38 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C63 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C46 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x2C78 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CA4 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2CF1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2CC6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2CF1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CD4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2D81 JUMPI DUP5 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x2D64 JUMPI POP PUSH1 0x14 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x40 MLOAD PUSH2 0x2D52 SWAP2 SWAP1 PUSH2 0x43C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST ISZERO PUSH2 0x2D6E JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x2D79 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2D05 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2DB5 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2DE1 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E2E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E03 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E2E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E11 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x16 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2E4C SWAP2 SWAP1 PUSH2 0x4308 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2E9A SWAP2 SWAP1 PUSH2 0x43D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xF DUP3 PUSH1 0x40 MLOAD PUSH2 0x2EB2 SWAP2 SWAP1 PUSH2 0x4308 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2ECF SWAP2 SWAP1 PUSH2 0x43D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x10 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2F25 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2F46 SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46616C7365000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0xA PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2FD1 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2FE7 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2FFD SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP SWAP1 POP POP DUP2 PUSH1 0xB PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x3022 SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x16 DUP6 PUSH1 0x40 MLOAD PUSH2 0x3035 SWAP2 SWAP1 PUSH2 0x4308 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x306F SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x30E7 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x30BD SWAP2 SWAP1 PUSH2 0x43C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x30D4 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x30ED JUMP JUMPDEST DUP1 DUP1 PUSH2 0x30DF SWAP1 PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3088 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x3121 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x314D SWAP1 PUSH2 0x3F77 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x319A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x316F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x319A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x317D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x11 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x31FB SWAP2 SWAP1 PUSH2 0x41FA JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x3210 SWAP1 PUSH2 0x3F77 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x3222 JUMPI POP PUSH2 0x3241 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3240 SWAP2 SWAP1 PUSH2 0x3244 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x325D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x3245 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3288 DUP2 PUSH2 0x3275 JUMP JUMPDEST DUP2 EQ PUSH2 0x3293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x32A5 DUP2 PUSH2 0x327F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32C1 JUMPI PUSH2 0x32C0 PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32CF DUP5 DUP3 DUP6 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x333E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3323 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3366 DUP3 PUSH2 0x3304 JUMP JUMPDEST PUSH2 0x3370 DUP2 DUP6 PUSH2 0x330F JUMP JUMPDEST SWAP4 POP PUSH2 0x3380 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3320 JUMP JUMPDEST PUSH2 0x3389 DUP2 PUSH2 0x334A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A0 DUP4 DUP4 PUSH2 0x335B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33C0 DUP3 PUSH2 0x32D8 JUMP JUMPDEST PUSH2 0x33CA DUP2 DUP6 PUSH2 0x32E3 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x33DC DUP6 PUSH2 0x32F4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3418 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x33F9 DUP6 DUP3 PUSH2 0x3394 JUMP JUMPDEST SWAP5 POP PUSH2 0x3404 DUP4 PUSH2 0x33A8 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x33E0 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3444 DUP2 DUP5 PUSH2 0x33B5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3455 DUP2 PUSH2 0x3275 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3470 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x344C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x34B8 DUP3 PUSH2 0x334A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x34D7 JUMPI PUSH2 0x34D6 PUSH2 0x3480 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34EA PUSH2 0x3261 JUMP JUMPDEST SWAP1 POP PUSH2 0x34F6 DUP3 DUP3 PUSH2 0x34AF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3516 JUMPI PUSH2 0x3515 PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH2 0x351F DUP3 PUSH2 0x334A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x354E PUSH2 0x3549 DUP5 PUSH2 0x34FB JUMP JUMPDEST PUSH2 0x34E0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x356A JUMPI PUSH2 0x3569 PUSH2 0x347B JUMP JUMPDEST JUMPDEST PUSH2 0x3575 DUP5 DUP3 DUP6 PUSH2 0x352C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3592 JUMPI PUSH2 0x3591 PUSH2 0x3476 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x35A2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x353B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x35C6 JUMPI PUSH2 0x35C5 PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x35EF PUSH2 0x35EA DUP5 PUSH2 0x35AB JUMP JUMPDEST PUSH2 0x34E0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3612 JUMPI PUSH2 0x3611 PUSH2 0x35D7 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3659 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3637 JUMPI PUSH2 0x3636 PUSH2 0x3476 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x3644 DUP10 DUP3 PUSH2 0x357D JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3614 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3678 JUMPI PUSH2 0x3677 PUSH2 0x3476 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3688 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x35DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x36AB JUMPI PUSH2 0x36AA PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36C9 JUMPI PUSH2 0x36C8 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x36D5 DUP8 DUP3 DUP9 ADD PUSH2 0x357D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x36E6 DUP8 DUP3 DUP9 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3707 JUMPI PUSH2 0x3706 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3713 DUP8 DUP3 DUP9 ADD PUSH2 0x3663 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3734 JUMPI PUSH2 0x3733 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3740 DUP8 DUP3 DUP9 ADD PUSH2 0x357D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3768 DUP3 PUSH2 0x3304 JUMP JUMPDEST PUSH2 0x3772 DUP2 DUP6 PUSH2 0x374C JUMP JUMPDEST SWAP4 POP PUSH2 0x3782 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3320 JUMP JUMPDEST PUSH2 0x378B DUP2 PUSH2 0x334A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x37AB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x344C JUMP JUMPDEST PUSH2 0x37B8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x344C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x37CA DUP2 DUP5 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37EA JUMPI PUSH2 0x37E9 PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3808 JUMPI PUSH2 0x3807 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3814 DUP5 DUP3 DUP6 ADD PUSH2 0x357D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3837 DUP2 DUP7 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x384B DUP2 DUP6 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x385F DUP2 DUP5 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x387E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x344C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3890 DUP2 DUP5 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x38B2 JUMPI PUSH2 0x38B1 PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38C0 DUP7 DUP3 DUP8 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38E1 JUMPI PUSH2 0x38E0 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x38ED DUP7 DUP3 DUP8 ADD PUSH2 0x357D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x390E JUMPI PUSH2 0x390D PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x391A DUP7 DUP3 DUP8 ADD PUSH2 0x357D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3939 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x344C JUMP JUMPDEST PUSH2 0x3946 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x344C JUMP JUMPDEST PUSH2 0x3953 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x344C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3965 DUP2 DUP5 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3985 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x344C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3997 DUP2 DUP6 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP PUSH2 0x39A6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x344C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x39C8 JUMPI PUSH2 0x39C7 PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39D6 DUP8 DUP3 DUP9 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39F7 JUMPI PUSH2 0x39F6 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3A03 DUP8 DUP3 DUP9 ADD PUSH2 0x357D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3A14 DUP8 DUP3 DUP9 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A35 JUMPI PUSH2 0x3A34 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3A41 DUP8 DUP3 DUP9 ADD PUSH2 0x357D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A64 JUMPI PUSH2 0x3A63 PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A72 DUP6 DUP3 DUP7 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3A83 DUP6 DUP3 DUP7 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3AA4 JUMPI PUSH2 0x3AA3 PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3AB2 DUP6 DUP3 DUP7 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AD3 JUMPI PUSH2 0x3AD2 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3ADF DUP6 DUP3 DUP7 ADD PUSH2 0x357D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B03 DUP2 DUP5 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3B24 JUMPI PUSH2 0x3B23 PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B42 JUMPI PUSH2 0x3B41 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3B4E DUP7 DUP3 DUP8 ADD PUSH2 0x357D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3B5F DUP7 DUP3 DUP8 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B80 JUMPI PUSH2 0x3B7F PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3B8C DUP7 DUP3 DUP8 ADD PUSH2 0x357D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BCB DUP2 PUSH2 0x3275 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BDD DUP4 DUP4 PUSH2 0x3BC2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C01 DUP3 PUSH2 0x3B96 JUMP JUMPDEST PUSH2 0x3C0B DUP2 DUP6 PUSH2 0x3BA1 JUMP JUMPDEST SWAP4 POP PUSH2 0x3C16 DUP4 PUSH2 0x3BB2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C47 JUMPI DUP2 MLOAD PUSH2 0x3C2E DUP9 DUP3 PUSH2 0x3BD1 JUMP JUMPDEST SWAP8 POP PUSH2 0x3C39 DUP4 PUSH2 0x3BE9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3C1A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C6E DUP2 DUP5 PUSH2 0x3BF6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3C8F JUMPI PUSH2 0x3C8E PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C9D DUP7 DUP3 DUP8 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3CAE DUP7 DUP3 DUP8 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CCF JUMPI PUSH2 0x3CCE PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3CDB DUP7 DUP3 DUP8 ADD PUSH2 0x357D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3CFF JUMPI PUSH2 0x3CFE PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D0D DUP8 DUP3 DUP9 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3D1E DUP8 DUP3 DUP9 ADD PUSH2 0x3296 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D3F JUMPI PUSH2 0x3D3E PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3D4B DUP8 DUP3 DUP9 ADD PUSH2 0x357D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D6C JUMPI PUSH2 0x3D6B PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3D78 DUP8 DUP3 DUP9 ADD PUSH2 0x357D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D99 DUP2 PUSH2 0x3D84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DBA DUP2 DUP13 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP PUSH2 0x3DC9 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x3D90 JUMP JUMPDEST PUSH2 0x3DD6 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x3D90 JUMP JUMPDEST PUSH2 0x3DE3 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x3D90 JUMP JUMPDEST PUSH2 0x3DF0 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x3D90 JUMP JUMPDEST PUSH2 0x3DFD PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x3D90 JUMP JUMPDEST PUSH2 0x3E0A PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x3D90 JUMP JUMPDEST PUSH2 0x3E17 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x3D90 JUMP JUMPDEST PUSH2 0x3E25 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x3D90 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3E48 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x344C JUMP JUMPDEST PUSH2 0x3E55 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x344C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3E67 DUP2 DUP6 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3E7B DUP2 DUP5 PUSH2 0x375D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E9B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3D90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3EBA JUMPI PUSH2 0x3EB9 PUSH2 0x326B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3ED8 JUMPI PUSH2 0x3ED7 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3EE4 DUP7 DUP3 DUP8 ADD PUSH2 0x357D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F05 JUMPI PUSH2 0x3F04 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3F11 DUP7 DUP3 DUP8 ADD PUSH2 0x357D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F32 JUMPI PUSH2 0x3F31 PUSH2 0x3270 JUMP JUMPDEST JUMPDEST PUSH2 0x3F3E DUP7 DUP3 DUP8 ADD PUSH2 0x357D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3F8F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3FA2 JUMPI PUSH2 0x3FA1 PUSH2 0x3F48 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4011 DUP3 PUSH2 0x3275 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4043 JUMPI PUSH2 0x4042 PUSH2 0x3FD7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x40B0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4073 JUMP JUMPDEST PUSH2 0x40BA DUP7 DUP4 PUSH2 0x4073 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40F7 PUSH2 0x40F2 PUSH2 0x40ED DUP5 PUSH2 0x3275 JUMP JUMPDEST PUSH2 0x40D2 JUMP JUMPDEST PUSH2 0x3275 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4111 DUP4 PUSH2 0x40DC JUMP JUMPDEST PUSH2 0x4125 PUSH2 0x411D DUP3 PUSH2 0x40FE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4080 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x413A PUSH2 0x412D JUMP JUMPDEST PUSH2 0x4145 DUP2 DUP5 DUP5 PUSH2 0x4108 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4169 JUMPI PUSH2 0x415E PUSH1 0x0 DUP3 PUSH2 0x4132 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x414B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x41AE JUMPI PUSH2 0x417F DUP2 PUSH2 0x404E JUMP JUMPDEST PUSH2 0x4188 DUP5 PUSH2 0x4063 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4197 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x41AB PUSH2 0x41A3 DUP6 PUSH2 0x4063 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x414A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41D1 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x41B3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41EA DUP4 DUP4 PUSH2 0x41C0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4203 DUP3 PUSH2 0x3304 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421C JUMPI PUSH2 0x421B PUSH2 0x3480 JUMP JUMPDEST JUMPDEST PUSH2 0x4226 DUP3 SLOAD PUSH2 0x3F77 JUMP JUMPDEST PUSH2 0x4231 DUP3 DUP3 DUP6 PUSH2 0x416D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4264 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4252 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x425C DUP6 DUP3 PUSH2 0x41DE JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x42C4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4272 DUP7 PUSH2 0x404E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x429A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4275 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x42B7 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x42B3 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x41C0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42E2 DUP3 PUSH2 0x3304 JUMP JUMPDEST PUSH2 0x42EC DUP2 DUP6 PUSH2 0x42CC JUMP JUMPDEST SWAP4 POP PUSH2 0x42FC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3320 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4314 DUP3 DUP5 PUSH2 0x42D7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x434C DUP2 PUSH2 0x3F77 JUMP JUMPDEST PUSH2 0x4356 DUP2 DUP7 PUSH2 0x431F JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x4371 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x4386 JUMPI PUSH2 0x43B9 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x43B9 JUMP JUMPDEST PUSH2 0x438F DUP6 PUSH2 0x432A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x43B1 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4392 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43CE DUP3 DUP5 PUSH2 0x433F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43E4 DUP3 PUSH2 0x3275 JUMP JUMPDEST SWAP2 POP PUSH2 0x43EF DUP4 PUSH2 0x3275 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4407 JUMPI PUSH2 0x4406 PUSH2 0x3FD7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID ADDRESS PUSH25 0x38366262366436653138633565656163613165383363316536 BALANCE CALLDATASIZE ORIGIN PUSH4 0x63343333 PUSH5 0x6363373061 CALLVALUE PUSH28 0x227469746C65223A224173736574204D65746164617461222C227479 PUSH17 0x65223A226F626A656374222C2270726F70 PUSH6 0x727469657322 GASPRICE PUSH28 0x225469746C65223A7B2274797065223A22737472696E67222C226465 PUSH20 0x6372697074696F6E223A22536F6C61722070616E PUSH6 0x6C73206F6E20 PUSH21 0x686520436F6E73657175656E636573204E6F6E6120 PUSH4 0x6F6D6D75 PUSH15 0x6974792063656E74657220227D2C22 DIFFICULTY PUSH6 0x736372697074 PUSH10 0x6F6E223A7B2274797065 0x22 GASPRICE 0x22 PUSH20 0x7472696E67222C226465736372697074696F6E22 GASPRICE 0x22 JUMPI PUSH6 0x2063616E2069 PUSH15 0x735C6E227D2C225374727563747572 PUSH6 0x4C656674223A PUSH28 0x2274797065223A22737472696E67222C226465736372697074696F6E 0x22 GASPRICE JUMPDEST 0x22 MSTORE PUSH6 0x70726573656E PUSH21 0x617469766573204265726C696E222C22436F6D6D75 PUSH15 0x697479222C224368696C6472656E22 0x5D PUSH30 0x2C225374727563747572655269676874223A7B2274797065223A22737472 PUSH10 0x6E67222C226465736372 PUSH10 0x7074696F6E223A5B2232 ADDRESS 0x25 0x22 0x2C 0x22 CALLDATACOPY ADDRESS 0x25 0x22 0x2C 0x22 BALANCE ADDRESS 0x25 0x22 0x5D PUSH30 0x2C22516F75746174696F6E223A7B226C696E6B223A2268747470733A2F2F PUSH22 0x706C6F61646966792E6E65742F353237336433353064 PUSH7 0x6430303164312F PUSH18 0x756F746174696F6E5F436F6E73657175656E PUSH4 0x65735F4E PUSH16 0x6E615F636F6D6D756E6974795F63656E PUSH21 0x65722E706466222C227072697A65223A222434382C ADDRESS CALLDATACOPY BALANCE 0x2E CALLDATALOAD CALLDATALOAD 0x22 PUSH30 0x2C2277616C6C6574223A7B2274797065223A22737472696E67222C226465 PUSH20 0x6372697074696F6E223A22307844363062433062 ADDRESS ADDRESS PUSH4 0x31443861 CALLDATACOPY BALANCE CODESIZE CHAINID TIMESTAMP CALLDATASIZE PUSH7 0x44654463343436 CALLDATASIZE PUSH4 0x37413131 CODESIZE ADDRESS CODESIZE CALLDATASIZE CODESIZE PUSH4 0x227D2C22 PUSH13 0x6F676F223A7B2274797065223A 0x22 PUSH20 0x7472696E67222C226465736372697074696F6E22 GASPRICE PUSH28 0x2275726C223A2268747470733A2F2F626166796265696634666B3674 PUSH24 0x696B6B63796F70676C687070646F376464336C3334626D36 PUSH18 0x65646A65336D786674656335653762346865 CALLDATALOAD CALLVALUE 0x2E PUSH10 0x7066732E6E667473746F PUSH19 0x6167652E6C696E6B222C2274797065223A2269 PUSH14 0x6167652F706E67227D7D2C22616C PUSH13 0x46696C6573223A5B7B2275726C 0x22 GASPRICE 0x22 PUSH9 0x747470733A2F2F6261 PUSH7 0x79626569663466 PUSH12 0x367477696B6B63796F70676C PUSH9 0x7070646F376464336C CALLER CALLVALUE PUSH3 0x6D3671 PUSH6 0x646A65336D78 PUSH7 0x74656335653762 CALLVALUE PUSH9 0x6535342E697066732E PUSH15 0x667473746F726167652E6C696E6B22 0x2C 0x22 PUSH21 0x797065223A22696D6167652F706E67227D5D7D7D7B 0x22 PUSH21 0x69746C65223A224173736574204D65746164617461 0x22 0x2C 0x22 PUSH21 0x797065223A226F626A656374222C2270726F706572 PUSH21 0x696573223A7B225469746C65223A7B227479706522 GASPRICE 0x22 PUSH20 0x7472696E67222C226465736372697074696F6E22 GASPRICE 0x22 0x4C PUSH2 0x6B65 KECCAK256 0x4E PUSH16 0x6E612C204F726C616E646F205553227D 0x2C 0x22 DIFFICULTY PUSH6 0x736372697074 PUSH10 0x6F6E223A7B2274797065 0x22 GASPRICE 0x22 PUSH20 0x7472696E67222C226465736372697074696F6E22 GASPRICE 0x22 0x22 PUSH30 0x2C2253746172745F44617465223A7B2274797065223A22737472696E6722 0x2C 0x22 PUSH5 0x6573637269 PUSH17 0x74696F6E223A22323032332D30382D3136 SLOAD BALANCE BALANCE GASPRICE BALANCE CALLVALUE 0x22 PUSH30 0x2C226C6F676F223A7B2274797065223A22737472696E67222C2264657363 PUSH19 0x697074696F6E223A7B2275726C223A22687474 PUSH17 0x733A2F2F62616679626569636235797933 CALLDATASIZE PUSH16 0x63733479756C7068367A707837676773 PUSH26 0x6567696E736A776E6674376D6C3763786F6A79777062736A7571 CALLVALUE 0x2E PUSH10 0x7066732E6E667473746F PUSH19 0x6167652E6C696E6B222C2274797065223A2269 PUSH14 0x6167652F706E67227D7D2C227761 PUSH13 0x6C6574223A7B2274797065223A 0x22 PUSH20 0x7472696E67222C226465736372697074696F6E22 GASPRICE 0x22 ADDRESS PUSH25 0x38366262366436653138633565656163613165383363316536 BALANCE CALLDATASIZE ORIGIN PUSH4 0x63343333 PUSH5 0x6363373061 CALLVALUE 0x22 PUSH30 0x2C22537562735072696365223A7B2274797065223A226E756D626572222C 0x22 PUSH5 0x6573637269 PUSH17 0x74696F6E223A22302E3035227D2C227479 PUSH17 0x65696D67223A7B2274797065223A227374 PUSH19 0x696E67222C226465736372697074696F6E223A 0x22 DIFFICULTY PUSH2 0x6F22 PUSH30 0x2C22616C6C46696C6573223A5B7B2275726C223A2268747470733A2F2F62 PUSH2 0x6679 PUSH3 0x656963 PUSH3 0x357979 CALLER CALLDATASIZE PUSH16 0x63733479756C7068367A707837676773 PUSH26 0x6567696E736A776E6674376D6C3763786F6A79777062736A7571 CALLVALUE 0x2E PUSH10 0x7066732E6E667473746F PUSH19 0x6167652E6C696E6B222C2274797065223A2269 PUSH14 0x6167652F706E67227D5D7D7D3C62 PUSH16 0x64793E3C6469762069643D2264616F2D PUSH4 0x6F6E7461 PUSH10 0x6E6572223E3C64697620 PUSH4 0x6C617373 RETURNDATASIZE 0x22 PUSH5 0x616F2D636F PUSH15 0x7461696E657220666C657820697465 PUSH14 0x732D63656E74657220666C65782D PUSH4 0x6F6C2067 PUSH2 0x702D CODESIZE KECCAK256 PUSH19 0x656C6174697665223E3C64697620636C617373 RETURNDATASIZE 0x22 PUSH5 0x616F2D7469 PUSH21 0x6C65206761702D3820666C657820666C65782D636F PUSH13 0x2072656C6174697665223E3C64 PUSH10 0x763E3C68312069643D22 PUSH5 0x616F2D7469 PUSH21 0x6C652220636C6173733D22746578742D6D6F6F6E2D CALLER ORIGIN KECCAK256 PUSH7 0x6F6E742D626F6C PUSH5 0x223E4C616B PUSH6 0x204E6F6E612C KECCAK256 0x4F PUSH19 0x6C616E646F2055533C2F68313E3C2F6469763E EXTCODECOPY PUSH5 0x697620636C PUSH2 0x7373 RETURNDATASIZE 0x22 PUSH7 0x6C657820676170 0x2D CALLVALUE KECCAK256 PUSH11 0x7573746966792D62657477 PUSH6 0x656E20746162 PUSH20 0x223E3C64697620636C6173733D22666C6578223E EXTCODECOPY PUSH2 0x2068 PUSH19 0x65663D222F3F713D416C6C2220636C6173733D 0x22 DIFFICULTY PUSH16 0x6E6174696F6E4261724C696E6B207461 PUSH3 0x20626C PUSH16 0x636B2070782D332070792D3220616374 PUSH10 0x7665223E416C6C3C2F61 RETURNDATACOPY EXTCODECOPY PUSH2 0x2068 PUSH19 0x65663D222F3F713D546F6461792220636C6173 PUSH20 0x3D22446F6E6174696F6E4261724C696E6B207461 PUSH3 0x20626C PUSH16 0x636B2070782D332070792D32223E546F PUSH5 0x61793C2F61 RETURNDATACOPY EXTCODECOPY PUSH2 0x2068 PUSH19 0x65663D222F3F713D546869732532304D6F6E74 PUSH9 0x2220636C6173733D22 DIFFICULTY PUSH16 0x6E6174696F6E4261724C696E6B207461 PUSH3 0x20626C PUSH16 0x636B2070782D332070792D32223E5468 PUSH10 0x73204D6F6E74683C2F61 RETURNDATACOPY EXTCODECOPY 0x2F PUSH5 0x69763E3C62 PUSH22 0x74746F6E20747970653D22627574746F6E222076616C PUSH22 0x653D2243726561746520476F616C2220636C6173733D 0x22 PUSH17 0x792D322070782D34206761702D32207465 PUSH25 0x742D6D6F6F6E2D313420726F756E6465642D6D6F6F6E2D692D PUSH20 0x6D207A2D3020666C6578206A7573746966792D63 PUSH6 0x6E7465722069 PUSH21 0x656D732D63656E74657220666F6E742D6D65646975 PUSH14 0x206E6F2D756E6465726C696E6520 PUSH16 0x766572666C6F772D68696464656E2073 PUSH6 0x6C6563742D6E PUSH16 0x6E65206F75746C696E652D6E6F6E6520 PUSH21 0x72616E736974696F6E206475726174696F6E2D3230 ADDRESS KECCAK256 PUSH2 0x6374 PUSH10 0x76653A7363616C652D39 ADDRESS KECCAK256 PUSH7 0x6F6375732D7669 PUSH20 0x69626C653A736861646F772D666F637573206274 PUSH15 0x2D7072696D61727920637265617465 0x2D PUSH8 0x6F616C2D626C6F63 PUSH12 0x223E3C64697620636C617373 RETURNDATASIZE 0x22 PUSH8 0x61702D3222206964 RETURNDATASIZE 0x22 PUSH10 0x716F6B6A223E0A202020 KECCAK256 KECCAK256 KECCAK256 KECCAK256 EXP KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 EXTCODECOPY 0x2F PUSH5 0x69763E3C2F PUSH3 0x757474 PUSH16 0x6E3E3C2F6469763E3C2F6469763E3C64 PUSH10 0x7620636C6173733D2264 PUSH2 0x6F2D PUSH5 0x6976696465 PUSH19 0x223E0A20203C2F6469763E3C64697620636C61 PUSH20 0x733D22666C657820666C65782D636F6C20676170 0x2D CODESIZE 0x22 RETURNDATACOPY EXTCODECOPY PUSH10 0x6D672069643D2264616F 0x2D PUSH10 0x6D61676522207372633D 0x22 PUSH9 0x747470733A2F2F6261 PUSH7 0x79626569636235 PUSH26 0x7933366F63733479756C7068367A707837676773796567696E73 PUSH11 0x776E6674376D6C3763786F PUSH11 0x79777062736A7571342E69 PUSH17 0x66732E6E667473746F726167652E6C696E PUSH12 0x222F3E3C2F6469763E3C6469 PUSH23 0x2069643D22676F616C2D636F6E7461696E65722220636C PUSH2 0x7373 RETURNDATASIZE 0x22 PUSH7 0x6C657820666C65 PUSH25 0x2D636F6C206761702D38223E0A0A20203C2F6469763E3C2F64 PUSH10 0x763E3C2F6469763E3C2F PUSH3 0x6F6479 RETURNDATACOPY EXTCODECOPY PUSH20 0x74796C653E2A207B20626F782D73697A696E673A KECCAK256 PUSH3 0x6F7264 PUSH6 0x722D626F783B KECCAK256 PUSH30 0x20626F6479207B6D617267696E3A20303B7D2364616F2D7469746C657B77 PUSH10 0x6474683A3738253B7D23 PUSH10 0x716F6B6A7B666C65782D PUSH5 0x6972656374 PUSH10 0x6F6E3A726F772D726576 PUSH6 0x7273653B6469 PUSH20 0x706C61793A666C65783B7D2E70792D322E70782D CALLVALUE 0x2E PUSH8 0x61702D322E746578 PUSH21 0x2D6D6F6F6E2D31342E726F756E6465642D6D6F6F6E 0x2D PUSH10 0x2D736D2E72656C617469 PUSH23 0x652E7A2D302E666C65782E6A7573746966792D63656E74 PUSH6 0x722E6974656D PUSH20 0x2D63656E7465722E666F6E742D6D656469756D2E PUSH15 0x6F2D756E6465726C696E652E6F7665 PUSH19 0x666C6F772D68696464656E2E73656C6563742D PUSH15 0x6F6E652E6F75746C696E652D6E6F6E PUSH6 0x2E7472616E73 PUSH10 0x74696F6E2E6475726174 PUSH10 0x6F6E2D3230302E616374 PUSH10 0x76655C3A7363616C652D CODECOPY ADDRESS 0x2E PUSH7 0x6F6375732D7669 PUSH20 0x69626C655C3A736861646F772D666F6375732E62 PUSH21 0x6E2D7072696D6172792E6372656174652D676F616C 0x2D PUSH3 0x6C6F63 PUSH12 0x2E7B706F736974696F6E3A72 PUSH6 0x6C6174697665 EXTCODESIZE PUSH19 0x696768743A3070783B7D2E70792D322E70782D CALLVALUE 0x2E PUSH8 0x61702D322E746578 PUSH21 0x2D6D6F6F6E2D31342E726F756E6465642D6D6F6F6E 0x2D PUSH10 0x2D736D2E7A2D302E666C PUSH6 0x782E6A757374 PUSH10 0x66792D63656E7465722E PUSH10 0x74656D732D63656E7465 PUSH19 0x2E666F6E742D6D656469756D2E6E6F2D756E64 PUSH6 0x726C696E652E PUSH16 0x766572666C6F772D68696464656E2E73 PUSH6 0x6C6563742D6E PUSH16 0x6E652E6F75746C696E652D6E6F6E652E PUSH21 0x72616E736974696F6E2E6475726174696F6E2D3230 ADDRESS 0x2E PUSH2 0x6374 PUSH10 0x76655C3A7363616C652D CODECOPY ADDRESS 0x2E PUSH7 0x6F6375732D7669 PUSH20 0x69626C655C3A736861646F772D666F6375732E62 PUSH21 0x6E2D7072696D6172792E6372656174652D676F616C 0x2D PUSH3 0x6C6F63 PUSH12 0x2E7B72696768743A31307078 EXTCODESIZE PUSH17 0x6F736974696F6E3A6162736F6C7574653B PUSH30 0x3C2F7374796C653E7B227469746C65223A224173736574204D6574616461 PUSH21 0x61222C2274797065223A226F626A656374222C2270 PUSH19 0x6F70657274696573223A7B225469746C65223A PUSH28 0x2274797065223A22737472696E67222C226465736372697074696F6E 0x22 GASPRICE 0x22 MSTORE PUSH6 0x6E657761626C PUSH6 0x20656E657267 PUSH26 0x227D2C224465736372697074696F6E223A7B2274797065223A22 PUSH20 0x7472696E67222C226465736372697074696F6E22 GASPRICE 0x22 0x4F PUSH22 0x722044414F206973207374617274696E672069742773 KECCAK256 PUSH16 0x776E2072656E657761626C6520656E65 PUSH19 0x677920636F6D70616E7920746861742064656C PUSH10 0x7665727320656E657267 PUSH26 0x20666F72207468652077686F6C6520636F6D6D756E697479227D 0x2C 0x22 TIMESTAMP PUSH22 0x64676574223A7B2274797065223A22737472696E6722 0x2C 0x22 PUSH5 0x6573637269 PUSH17 0x74696F6E223A2224312C3030302C303030 0x22 PUSH30 0x2C22456E645F44617465223A7B2274797065223A22737472696E67222C22 PUSH5 0x6573637269 PUSH17 0x74696F6E223A22323032332D30382D3331 SLOAD ORIGIN ORIGIN GASPRICE CALLVALUE ADDRESS 0x22 PUSH30 0x2C2277616C6C6574223A7B2274797065223A22737472696E67222C226465 PUSH20 0x6372697074696F6E223A22307838366262366436 PUSH6 0x313863356565 PUSH2 0x6361 BALANCE PUSH6 0x383363316536 BALANCE CALLDATASIZE ORIGIN PUSH4 0x63343333 PUSH5 0x6363373061 CALLVALUE 0x22 PUSH30 0x2C226C6F676F223A7B2274797065223A22737472696E67222C2264657363 PUSH19 0x697074696F6E223A7B2275726C223A22687474 PUSH17 0x733A2F2F62616679626569633567347876 PUSH11 0x376D7972676B6236326C65 PUSH15 0x6C64376F72706C32687273706D7A6C PUSH27 0x6364627A70796F746333337471796770652E697066732E6E667473 PUSH21 0x6F726167652E6C696E6B222C2274797065223A2269 PUSH14 0x6167652F6A706567227D7D2C2261 PUSH13 0x6C46696C6573223A5B7B227572 PUSH13 0x223A2268747470733A2F2F6261 PUSH7 0x79626569633567 CALLVALUE PUSH25 0x766A376D7972676B6236326C656E6C64376F72706C32687273 PUSH17 0x6D7A6C7A6364627A70796F746333337471 PUSH26 0x6770652E697066732E6E667473746F726167652E6C696E6B222C 0x22 PUSH21 0x797065223A22696D6167652F6A706567227D5D7D7D LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x691F7A46C8CBCA96533D9DF9C519AE4288B0052D72E687889C24300BA8431C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"170:19117:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14690:4594;;;:::i;:::-;;5834:480;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1877:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9059:452;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1814:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6823:582;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1908:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3114:71;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6322:313;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2091:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5518:308;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2360:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;11350:367;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3537:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2614:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;12247:366;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1949:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10780:546;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8190:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4854:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2235:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2748:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5028:322;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1748:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2484:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2861;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;11725:514;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12621:523;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10385:387;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4161:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4297:239;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13152:363;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10199:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1986:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8739:312;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3647:56;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;9519:321;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2059:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9848:343;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13961:721;;;:::i;:::-;;3274:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;7680:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4544:302;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5358:152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2020:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3393:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;13525:424;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1845:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6643:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7823:359;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1778:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3765:388;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8425:306;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2961:74;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;14690:4594;14731:2713;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;:2713::i;:::-;;17455:820;;;;;;;;;;;;;;;;;;18227:1;17455:820;;;;;;;;;;;;;;;;;:11;:820::i;:::-;;18286:19;18316:960;;;;;;;;;;;;;;;;;;19223:1;19226:3;18316:960;;;;;;;;;;;;;;;;;:12;:960::i;:::-;;14720:4564;14690:4594::o;5834:480::-;5905:15;5972:26;6014:9;;6001:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5972:52;;6035:17;6068:9;6080:1;6068:13;;6063:214;6087:9;;6083:1;:13;6063:214;;;6146:7;6122:10;:13;6133:1;6122:13;;;;;;;;;;;:20;;;:31;6118:148;;6198:10;:13;6209:1;6198:13;;;;;;;;;;;:22;;6174:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;6185:9;6174:21;;;;;;;;:::i;:::-;;;;;;;:46;;;;6239:11;;;;;:::i;:::-;;;;6118:148;6098:3;;;;;:::i;:::-;;;;6063:214;;;;6296:10;6289:17;;;;5834:480;;;:::o;1877:24::-;;;;:::o;9059:452::-;9132:15;9200:26;9242:10;;9229:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9200:53;;9264:17;9297:9;9309:1;9297:13;;9292:182;9316:10;;9312:1;:14;9292:182;;;9378:8;9352:11;:14;9364:1;9352:14;;;;;;;;;;;:22;;;:34;9348:88;;9412:11;:14;9424:1;9412:14;;;;;;;;;;;:24;;9388:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;9399:9;9388:21;;;;;;;;:::i;:::-;;;;;;;:48;;;;9348:88;9451:11;;;;;:::i;:::-;;;;9328:3;;;;;:::i;:::-;;;;9292:182;;;;9493:10;9486:17;;;;9059:452;;;:::o;1814:24::-;;;;:::o;6823:582::-;6961:7;7048:41;;;;;;;;7065:8;7048:41;;;;7075:10;7048:41;;;;7087:1;7048:41;;;7022:11;:23;7034:10;;7022:23;;;;;;;;;;;:67;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7130:4;7100:12;7113:7;7100:21;;;;;;:::i;:::-;;;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;7145:10;;:12;;;;;;;;;:::i;:::-;;;;;;7175:9;7170:198;7194:16;:23;7190:1;:27;7170:198;;;7239:81;7267:10;;7279:19;;7300:16;7317:1;7300:19;;;;;;;;:::i;:::-;;;;;;;;7239:27;:81::i;:::-;7335:19;;:21;;;;;;;;;:::i;:::-;;;;;;7219:3;;;;;:::i;:::-;;;;7170:198;;;;7387:10;;7380:17;;6823:582;;;;;;:::o;1908:34::-;;;;:::o;3114:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6322:313::-;6401:7;6460:9;6472:1;6460:13;;6455:152;6479:9;;6475:1;:13;6455:152;;;6574:9;6558:27;;;;;;6530:10;:13;6541:1;6530:13;;;;;;;;;;;:22;;6514:40;;;;;;:::i;:::-;;;;;;;;:71;6510:85;;6594:1;6587:8;;;;;6510:85;6490:3;;;;;:::i;:::-;;;;6455:152;;;;6626:1;6619:8;;6322:313;;;;:::o;2091:51::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5518:308::-;5564:15;5621:26;5663:9;;5650:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5621:52;;5689:9;5684:105;5708:9;;5704:1;:13;5684:105;;;5755:10;:13;5766:1;5755:13;;;;;;;;;;;:22;;5739:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;5750:1;5739:13;;;;;;;;:::i;:::-;;;;;;;:38;;;;5719:3;;;;;:::i;:::-;;;;5684:105;;;;5808:10;5801:17;;;5518:308;:::o;2360:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11350:367::-;11449:7;11505:4;11473:12;11486:7;11473:21;;;;;;:::i;:::-;;;;;;;;;;;;;:29;;;:36;;;;;;;;;;;;;;;;;;11594:58;;;;;;;;11609:12;;11594:58;;;;11623:9;11594:58;;;;11634:8;11594:58;;;;11644:7;11594:58;;;11565:12;:26;11578:12;;11565:26;;;;;;;;;;;:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;11663:12;;:14;;;;;;;;;:::i;:::-;;;;;;11697:12;;11690:19;;11350:367;;;;;:::o;3537:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2614:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12247:366::-;12364:7;12416:4;12386:12;12399:7;12386:21;;;;;;:::i;:::-;;;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;12498:54;;;;;;;;12511:10;;12498:54;;;;12523:11;12498:54;;;;12535:8;12498:54;;;;12545:6;12498:54;;;12472:11;:23;12484:10;;12472:23;;;;;;;;;;;:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;12563:10;;:12;;;;;;;;;:::i;:::-;;;;;;12595:10;;12588:17;;12247:366;;;;;;:::o;1949:30::-;;;;:::o;10780:546::-;10873:15;10943:26;10985:15;;10972:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10943:58;;11012:17;11045:9;11057:1;11045:13;;11040:251;11064:15;;11060:1;:19;11040:251;;;11140:8;11105:20;:23;11126:1;11105:23;;;;;;;;;;;:31;;;:43;:92;;;;;11188:9;11152:20;:23;11173:1;11152:23;;;;;;;;;;;:32;;;:45;11105:92;11101:152;;;11223:20;:23;11244:1;11223:23;;;;;;;;;;;:30;;11199:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;11210:9;11199:21;;;;;;;;:::i;:::-;;;;;;;:54;;;;11101:152;11268:11;;;;;:::i;:::-;;;;11081:3;;;;;:::i;:::-;;;;11040:251;;;;11308:10;11301:17;;;;10780:546;;;;:::o;8190:227::-;8300:4;8270:12;8283:6;8270:20;;;;;;:::i;:::-;;;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;8343:44;;;;;;;;8363:6;8343:44;;;;8379:6;8343:44;;;8315:14;:25;8330:9;;8315:25;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;8398:9;;:11;;;;;;;;;:::i;:::-;;;;;;8190:227;;:::o;4854:153::-;4909:13;4973:9;:18;4983:7;4973:18;;;;;;;;;;;:26;;4966:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4854:153;;;:::o;2235:48::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2748:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5028:322::-;5129:7;5212:35;;;;;;;;5228:7;5212:35;;;;5237:9;5212:35;;;5188:10;:21;5199:9;;5188:21;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;5287:4;5258:12;5271:7;5258:21;;;;;;:::i;:::-;;;;;;;;;;;;;:26;;;:33;;;;;;;;;;;;;;;;;;5302:9;;:11;;;;;;;;;:::i;:::-;;;;;;5333:9;;5326:16;;5028:322;;;;;:::o;1748:23::-;;;;:::o;2484:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2861:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11725:514::-;11783:16;11859:36;11912:12;;11898:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11859:66;;11936:15;11967:9;11979:1;11967:13;;11962:231;11986:12;;11982:1;:16;11962:231;;;12052:8;12024:12;:15;12037:1;12024:15;;;;;;;;;;;:24;;;:36;12020:162;;12112:12;:15;12125:1;12112:15;;;;;;;;;;;:26;;;12081:19;12101:7;12081:28;;;;;;;;:::i;:::-;;;;;;;:57;;;;;12157:9;;;;;:::i;:::-;;;;12020:162;12000:3;;;;;:::i;:::-;;;;11962:231;;;;12212:19;12205:26;;;;11725:514;;;:::o;12621:523::-;12683:16;12759:37;12813:10;;12799:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12759:65;;12835:17;12868:9;12880:1;12868:13;;12863:234;12887:10;;12883:1;:14;12863:234;;;12952:10;12923:11;:14;12935:1;12923:14;;;;;;;;;;;:25;;;:39;12919:167;;13017:11;:14;13029:1;13017:14;;;;;;;;;;;:23;;;12983:20;13004:9;12983:31;;;;;;;;:::i;:::-;;;;;;;:57;;;;;13059:11;;;;;:::i;:::-;;;;12919:167;12899:3;;;;;:::i;:::-;;;;12863:234;;;;13116:20;13109:27;;;;12621:523;;;:::o;10385:387::-;10493:7;10543:4;10514:12;10527:7;10514:21;;;;;;:::i;:::-;;;;;;;;;;;;;:26;;;:33;;;;;;;;;;;;;;;;;;10648:53;;;;;;;;10672:8;10648:53;;;;10682:9;10648:53;;;;10693:7;10648:53;;;10608:20;:37;10629:15;;10608:37;;;;;;;;;;;:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;10712:15;;:17;;;;;;;;;:::i;:::-;;;;;;10749:15;;10742:22;;10385:387;;;;;:::o;4161:128::-;4272:9;4246:14;:23;4261:7;4246:23;;;;;;;;;;;:35;;;;;;:::i;:::-;;4161:128;;:::o;4297:239::-;4469:11;4437:9;:18;4447:7;4437:18;;;;;;;;;;;:29;;:43;;;;;;:::i;:::-;;4520:8;4491:9;:18;4501:7;4491:18;;;;;;;;;;;:26;;:37;;;;;;:::i;:::-;;4297:239;;;:::o;13152:363::-;13275:7;13379:61;;;;;;;;13399:11;13379:61;;;;13412:9;13379:61;;;;13423:7;13379:61;;;;13431:8;13379:61;;;13340:17;:36;13358:17;;13340:36;;;;;;;;;;;:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;13451:17;;:19;;;;;;;;;:::i;:::-;;;;;;13490:17;;13483:24;;13152:363;;;;;;:::o;10199:165::-;10258:13;10324:11;:22;10336:9;10324:22;;;;;;;;;;;:32;;10317:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10199:165;;;:::o;1986:27::-;;;;:::o;8739:312::-;8785:15;8842:26;8884:10;;8871:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8842:53;;8911:9;8906:108;8930:10;;8926:1;:14;8906:108;;;8978:11;:14;8990:1;8978:14;;;;;;;;;;;:24;;8962:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;8973:1;8962:13;;;;;;;;:::i;:::-;;;;;;;:40;;;;8942:3;;;;;:::i;:::-;;;;8906:108;;;;9033:10;9026:17;;;8739:312;:::o;3647:56::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9519:321::-;9601:7;9661:9;9673:1;9661:13;;9656:156;9680:10;;9676:1;:14;9656:156;;;9778:10;9762:28;;;;;;9732:11;:14;9744:1;9732:14;;;;;;;;;;;:24;;9716:42;;;;;;:::i;:::-;;;;;;;;:74;9712:88;;9799:1;9792:8;;;;;9712:88;9692:3;;;;;:::i;:::-;;;;9656:156;;;;9831:1;9824:8;;9519:321;;;;:::o;2059:25::-;;;;:::o;9848:343::-;9931:7;9991:9;10003:1;9991:13;;9986:177;10010:10;;10006:1;:14;9986:177;;;10108:10;10092:28;;;;;;10062:11;:14;10074:1;10062:14;;;;;;;;;;;:24;;10046:42;;;;;;:::i;:::-;;;;;;;;:74;10042:109;;10129:11;:14;10141:1;10129:14;;;;;;;;;;;:22;;;10122:29;;;;;10042:109;10022:3;;;;;:::i;:::-;;;;9986:177;;;;10182:1;10175:8;;9848:343;;;;:::o;13961:721::-;14005:9;14000:58;14024:8;;14020:1;:12;14000:58;;;14046:9;:12;14056:1;14046:12;;;;;;;;;;;;14039:19;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;14034:3;;;;;:::i;:::-;;;;14000:58;;;;14074:9;14069:60;14093:9;;14089:1;:13;14069:60;;;14116:10;:13;14127:1;14116:13;;;;;;;;;;;;14109:20;;;;;;;;;;;;;;:::i;:::-;;;14104:3;;;;;:::i;:::-;;;;14069:60;;;;14145:9;14140:62;14164:10;;14160:1;:14;14140:62;;;14188:11;:14;14200:1;14188:14;;;;;;;;;;;;14181:21;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;14176:3;;;;;:::i;:::-;;;;14140:62;;;;14218:9;14213:71;14237:9;;14233:1;:13;14213:71;;;14260:21;:24;14282:1;14260:24;;;;;;;;;;;;14253:31;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14248:3;;;;;:::i;:::-;;;;14213:71;;;;14300:9;14295:65;14319:12;;14315:1;:16;14295:65;;;14345:12;:15;14358:1;14345:15;;;;;;;;;;;;14338:22;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;14333:3;;;;;:::i;:::-;;;;14295:65;;;;14376:9;14371:62;14395:10;;14391:1;:14;14371:62;;;14419:11;:14;14431:1;14419:14;;;;;;;;;;;;14412:21;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14407:3;;;;;:::i;:::-;;;;14371:62;;;;14449:9;14444:76;14468:15;;14464:1;:19;14444:76;;;14497:20;:23;14518:1;14497:23;;;;;;;;;;;;14490:30;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14485:3;;;;;:::i;:::-;;;;14444:76;;;;14542:1;14531:8;:12;;;;14566:1;14554:9;:13;;;;14591:1;14578:10;:14;;;;14618:1;14603:12;:16;;;;14643:1;14630:10;:14;;;;14673:1;14655:15;:19;;;;13961:721::o;3274:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7680:135::-;7797:10;7762:11;:22;7774:9;7762:22;;;;;;;;;;;:32;;:45;;;;;;:::i;:::-;;7680:135;;:::o;4544:302::-;4589:15;4645:26;4687:8;;4674:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4645:51;;4712:9;4707:102;4731:8;;4727:1;:12;4707:102;;;4777:9;:12;4787:1;4777:12;;;;;;;;;;;:20;;4761:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;4772:1;4761:13;;;;;;;;:::i;:::-;;;;;;;:36;;;;4741:3;;;;;:::i;:::-;;;;4707:102;;;;4828:10;4821:17;;;4544:302;:::o;5358:152::-;5493:9;5461:10;:20;5472:8;5461:20;;;;;;;;;;;:29;;:41;;;;;;:::i;:::-;;5358:152;;:::o;2020:32::-;;;;:::o;3393:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;13525:424::-;13612:4;13637:9;13649:5;13637:17;;13670:9;13665:253;13689:17;;13685:1;:21;13665:253;;;13767:11;13732:17;:20;13750:1;13732:20;;;;;;;;;;;:31;;;:46;:127;;;;;13828:17;:20;13846:1;13828:20;;;;;;;;;;;:29;;13812:47;;;;;;:::i;:::-;;;;;;;;13798:8;13782:26;;;;;;:77;13732:127;13728:179;;;13886:4;13879:11;;13728:179;13708:3;;;;;:::i;:::-;;;;13665:253;;;;13937:4;13930:11;;;13525:424;;;;:::o;1845:25::-;;;;:::o;6643:159::-;6700:13;6765:10;:20;6776:8;6765:20;;;;;;;;;;;:29;;6758:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6643:159;;;:::o;7823:359::-;7959:4;7925:12;7938:8;7925:22;;;;;;:::i;:::-;;;;;;;;;;;;;:31;;;:38;;;;;;;;;;;;;;;;;;8009:9;7974:11;:22;7986:9;7974:22;;;;;;;;;;;:31;;;:44;;;;;;;:::i;:::-;;;;;;;;8051:9;8029:8;8038;8029:18;;;;;;:::i;:::-;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;8100:47;;;;;;;;8116:9;8100:47;;;;8127:8;8100:47;;;;8137:9;8100:47;;;8071:10;:26;8082:14;;8071:26;;;;;;;;;;;:76;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8158:14;;:16;;;;;;;;;:::i;:::-;;;;;;7823:359;;;:::o;1778:29::-;;;;:::o;3765:388::-;3877:7;3956:46;;;;;;;;3971:11;3956:46;;;;3984:8;3956:46;;;;;;;;;;;;;;;;;;;;;;;;3934:9;:19;3944:8;;3934:19;;;;;;;;;;;:68;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;4040:9;4013:14;:24;4028:8;;4013:24;;;;;;;;;;;:36;;;;;;:::i;:::-;;4092:4;4060:12;4073:11;4060:25;;;;;;:::i;:::-;;;;;;;;;;;;;:29;;;:36;;;;;;;;;;;;;;;;;;4107:8;;:10;;;;;;;;;:::i;:::-;;;;;;4137:8;;4130:15;;3765:388;;;;;:::o;8425:306::-;8494:4;8550:9;8562:1;8550:13;;8545:154;8569:9;;8565:1;:13;8545:154;;;8666:6;8650:24;;;;;;8620:14;:17;8635:1;8620:17;;;;;;;;;;;:24;;8604:42;;;;;;:::i;:::-;;;;;;;;:70;8600:87;;8683:4;8676:11;;;;;8600:87;8580:3;;;;;:::i;:::-;;;;8545:154;;;;8718:5;8711:12;;8425:306;;;;:::o;2961:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7413:259::-;7591:73;;;;;;;;7617:9;7591:73;;;;7628:18;7591:73;;;;7648:15;7591:73;;;7547:21;:41;7569:18;7547:41;;;;;;;;;;;:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7413:259;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:124::-;1102:6;1136:5;1130:12;1120:22;;1025:124;;;:::o;1155:194::-;1264:11;1298:6;1293:3;1286:19;1338:4;1333:3;1329:14;1314:29;;1155:194;;;;:::o;1355:142::-;1432:4;1455:3;1447:11;;1485:4;1480:3;1476:14;1468:22;;1355:142;;;:::o;1503:99::-;1555:6;1589:5;1583:12;1573:22;;1503:99;;;:::o;1608:159::-;1682:11;1716:6;1711:3;1704:19;1756:4;1751:3;1747:14;1732:29;;1608:159;;;;:::o;1773:246::-;1854:1;1864:113;1878:6;1875:1;1872:13;1864:113;;;1963:1;1958:3;1954:11;1948:18;1944:1;1939:3;1935:11;1928:39;1900:2;1897:1;1893:10;1888:15;;1864:113;;;2011:1;2002:6;1997:3;1993:16;1986:27;1835:184;1773:246;;;:::o;2025:102::-;2066:6;2117:2;2113:7;2108:2;2101:5;2097:14;2093:28;2083:38;;2025:102;;;:::o;2133:357::-;2211:3;2239:39;2272:5;2239:39;:::i;:::-;2294:61;2348:6;2343:3;2294:61;:::i;:::-;2287:68;;2364:65;2422:6;2417:3;2410:4;2403:5;2399:16;2364:65;:::i;:::-;2454:29;2476:6;2454:29;:::i;:::-;2449:3;2445:39;2438:46;;2215:275;2133:357;;;;:::o;2496:196::-;2585:10;2620:66;2682:3;2674:6;2620:66;:::i;:::-;2606:80;;2496:196;;;;:::o;2698:123::-;2778:4;2810;2805:3;2801:14;2793:22;;2698:123;;;:::o;2855:991::-;2994:3;3023:64;3081:5;3023:64;:::i;:::-;3103:96;3192:6;3187:3;3103:96;:::i;:::-;3096:103;;3225:3;3270:4;3262:6;3258:17;3253:3;3249:27;3300:66;3360:5;3300:66;:::i;:::-;3389:7;3420:1;3405:396;3430:6;3427:1;3424:13;3405:396;;;3501:9;3495:4;3491:20;3486:3;3479:33;3552:6;3546:13;3580:84;3659:4;3644:13;3580:84;:::i;:::-;3572:92;;3687:70;3750:6;3687:70;:::i;:::-;3677:80;;3786:4;3781:3;3777:14;3770:21;;3465:336;3452:1;3449;3445:9;3440:14;;3405:396;;;3409:14;3817:4;3810:11;;3837:3;3830:10;;2999:847;;;;;2855:991;;;;:::o;3852:413::-;4015:4;4053:2;4042:9;4038:18;4030:26;;4102:9;4096:4;4092:20;4088:1;4077:9;4073:17;4066:47;4130:128;4253:4;4244:6;4130:128;:::i;:::-;4122:136;;3852:413;;;;:::o;4271:118::-;4358:24;4376:5;4358:24;:::i;:::-;4353:3;4346:37;4271:118;;:::o;4395:222::-;4488:4;4526:2;4515:9;4511:18;4503:26;;4539:71;4607:1;4596:9;4592:17;4583:6;4539:71;:::i;:::-;4395:222;;;;:::o;4623:117::-;4732:1;4729;4722:12;4746:117;4855:1;4852;4845:12;4869:180;4917:77;4914:1;4907:88;5014:4;5011:1;5004:15;5038:4;5035:1;5028:15;5055:281;5138:27;5160:4;5138:27;:::i;:::-;5130:6;5126:40;5268:6;5256:10;5253:22;5232:18;5220:10;5217:34;5214:62;5211:88;;;5279:18;;:::i;:::-;5211:88;5319:10;5315:2;5308:22;5098:238;5055:281;;:::o;5342:129::-;5376:6;5403:20;;:::i;:::-;5393:30;;5432:33;5460:4;5452:6;5432:33;:::i;:::-;5342:129;;;:::o;5477:308::-;5539:4;5629:18;5621:6;5618:30;5615:56;;;5651:18;;:::i;:::-;5615:56;5689:29;5711:6;5689:29;:::i;:::-;5681:37;;5773:4;5767;5763:15;5755:23;;5477:308;;;:::o;5791:146::-;5888:6;5883:3;5878;5865:30;5929:1;5920:6;5915:3;5911:16;5904:27;5791:146;;;:::o;5943:425::-;6021:5;6046:66;6062:49;6104:6;6062:49;:::i;:::-;6046:66;:::i;:::-;6037:75;;6135:6;6128:5;6121:21;6173:4;6166:5;6162:16;6211:3;6202:6;6197:3;6193:16;6190:25;6187:112;;;6218:79;;:::i;:::-;6187:112;6308:54;6355:6;6350:3;6345;6308:54;:::i;:::-;6027:341;5943:425;;;;;:::o;6388:340::-;6444:5;6493:3;6486:4;6478:6;6474:17;6470:27;6460:122;;6501:79;;:::i;:::-;6460:122;6618:6;6605:20;6643:79;6718:3;6710:6;6703:4;6695:6;6691:17;6643:79;:::i;:::-;6634:88;;6450:278;6388:340;;;;:::o;6734:321::-;6821:4;6911:18;6903:6;6900:30;6897:56;;;6933:18;;:::i;:::-;6897:56;6983:4;6975:6;6971:17;6963:25;;7043:4;7037;7033:15;7025:23;;6734:321;;;:::o;7061:117::-;7170:1;7167;7160:12;7200:945;7306:5;7331:91;7347:74;7414:6;7347:74;:::i;:::-;7331:91;:::i;:::-;7322:100;;7442:5;7471:6;7464:5;7457:21;7505:4;7498:5;7494:16;7487:23;;7558:4;7550:6;7546:17;7538:6;7534:30;7587:3;7579:6;7576:15;7573:122;;;7606:79;;:::i;:::-;7573:122;7721:6;7704:435;7738:6;7733:3;7730:15;7704:435;;;7827:3;7814:17;7863:18;7850:11;7847:35;7844:122;;;7885:79;;:::i;:::-;7844:122;8009:11;8001:6;7997:24;8047:47;8090:3;8078:10;8047:47;:::i;:::-;8042:3;8035:60;8124:4;8119:3;8115:14;8108:21;;7780:359;;7764:4;7759:3;7755:14;7748:21;;7704:435;;;7708:21;7312:833;;7200:945;;;;;:::o;8167:390::-;8248:5;8297:3;8290:4;8282:6;8278:17;8274:27;8264:122;;8305:79;;:::i;:::-;8264:122;8422:6;8409:20;8447:104;8547:3;8539:6;8532:4;8524:6;8520:17;8447:104;:::i;:::-;8438:113;;8254:303;8167:390;;;;:::o;8563:1355::-;8704:6;8712;8720;8728;8777:3;8765:9;8756:7;8752:23;8748:33;8745:120;;;8784:79;;:::i;:::-;8745:120;8932:1;8921:9;8917:17;8904:31;8962:18;8954:6;8951:30;8948:117;;;8984:79;;:::i;:::-;8948:117;9089:63;9144:7;9135:6;9124:9;9120:22;9089:63;:::i;:::-;9079:73;;8875:287;9201:2;9227:53;9272:7;9263:6;9252:9;9248:22;9227:53;:::i;:::-;9217:63;;9172:118;9357:2;9346:9;9342:18;9329:32;9388:18;9380:6;9377:30;9374:117;;;9410:79;;:::i;:::-;9374:117;9515:88;9595:7;9586:6;9575:9;9571:22;9515:88;:::i;:::-;9505:98;;9300:313;9680:2;9669:9;9665:18;9652:32;9711:18;9703:6;9700:30;9697:117;;;9733:79;;:::i;:::-;9697:117;9838:63;9893:7;9884:6;9873:9;9869:22;9838:63;:::i;:::-;9828:73;;9623:288;8563:1355;;;;;;;:::o;9924:169::-;10008:11;10042:6;10037:3;10030:19;10082:4;10077:3;10073:14;10058:29;;9924:169;;;;:::o;10099:377::-;10187:3;10215:39;10248:5;10215:39;:::i;:::-;10270:71;10334:6;10329:3;10270:71;:::i;:::-;10263:78;;10350:65;10408:6;10403:3;10396:4;10389:5;10385:16;10350:65;:::i;:::-;10440:29;10462:6;10440:29;:::i;:::-;10435:3;10431:39;10424:46;;10191:285;10099:377;;;;:::o;10482:533::-;10651:4;10689:2;10678:9;10674:18;10666:26;;10702:71;10770:1;10759:9;10755:17;10746:6;10702:71;:::i;:::-;10783:72;10851:2;10840:9;10836:18;10827:6;10783:72;:::i;:::-;10902:9;10896:4;10892:20;10887:2;10876:9;10872:18;10865:48;10930:78;11003:4;10994:6;10930:78;:::i;:::-;10922:86;;10482:533;;;;;;:::o;11021:509::-;11090:6;11139:2;11127:9;11118:7;11114:23;11110:32;11107:119;;;11145:79;;:::i;:::-;11107:119;11293:1;11282:9;11278:17;11265:31;11323:18;11315:6;11312:30;11309:117;;;11345:79;;:::i;:::-;11309:117;11450:63;11505:7;11496:6;11485:9;11481:22;11450:63;:::i;:::-;11440:73;;11236:287;11021:509;;;;:::o;11536:715::-;11745:4;11783:2;11772:9;11768:18;11760:26;;11832:9;11826:4;11822:20;11818:1;11807:9;11803:17;11796:47;11860:78;11933:4;11924:6;11860:78;:::i;:::-;11852:86;;11985:9;11979:4;11975:20;11970:2;11959:9;11955:18;11948:48;12013:78;12086:4;12077:6;12013:78;:::i;:::-;12005:86;;12138:9;12132:4;12128:20;12123:2;12112:9;12108:18;12101:48;12166:78;12239:4;12230:6;12166:78;:::i;:::-;12158:86;;11536:715;;;;;;:::o;12257:423::-;12398:4;12436:2;12425:9;12421:18;12413:26;;12449:71;12517:1;12506:9;12502:17;12493:6;12449:71;:::i;:::-;12567:9;12561:4;12557:20;12552:2;12541:9;12537:18;12530:48;12595:78;12668:4;12659:6;12595:78;:::i;:::-;12587:86;;12257:423;;;;;:::o;12686:979::-;12783:6;12791;12799;12848:2;12836:9;12827:7;12823:23;12819:32;12816:119;;;12854:79;;:::i;:::-;12816:119;12974:1;12999:53;13044:7;13035:6;13024:9;13020:22;12999:53;:::i;:::-;12989:63;;12945:117;13129:2;13118:9;13114:18;13101:32;13160:18;13152:6;13149:30;13146:117;;;13182:79;;:::i;:::-;13146:117;13287:63;13342:7;13333:6;13322:9;13318:22;13287:63;:::i;:::-;13277:73;;13072:288;13427:2;13416:9;13412:18;13399:32;13458:18;13450:6;13447:30;13444:117;;;13480:79;;:::i;:::-;13444:117;13585:63;13640:7;13631:6;13620:9;13616:22;13585:63;:::i;:::-;13575:73;;13370:288;12686:979;;;;;:::o;13671:644::-;13868:4;13906:3;13895:9;13891:19;13883:27;;13920:71;13988:1;13977:9;13973:17;13964:6;13920:71;:::i;:::-;14001:72;14069:2;14058:9;14054:18;14045:6;14001:72;:::i;:::-;14083;14151:2;14140:9;14136:18;14127:6;14083:72;:::i;:::-;14202:9;14196:4;14192:20;14187:2;14176:9;14172:18;14165:48;14230:78;14303:4;14294:6;14230:78;:::i;:::-;14222:86;;13671:644;;;;;;;:::o;14321:533::-;14490:4;14528:2;14517:9;14513:18;14505:26;;14541:71;14609:1;14598:9;14594:17;14585:6;14541:71;:::i;:::-;14659:9;14653:4;14649:20;14644:2;14633:9;14629:18;14622:48;14687:78;14760:4;14751:6;14687:78;:::i;:::-;14679:86;;14775:72;14843:2;14832:9;14828:18;14819:6;14775:72;:::i;:::-;14321:533;;;;;;:::o;14860:1125::-;14966:6;14974;14982;14990;15039:3;15027:9;15018:7;15014:23;15010:33;15007:120;;;15046:79;;:::i;:::-;15007:120;15166:1;15191:53;15236:7;15227:6;15216:9;15212:22;15191:53;:::i;:::-;15181:63;;15137:117;15321:2;15310:9;15306:18;15293:32;15352:18;15344:6;15341:30;15338:117;;;15374:79;;:::i;:::-;15338:117;15479:63;15534:7;15525:6;15514:9;15510:22;15479:63;:::i;:::-;15469:73;;15264:288;15591:2;15617:53;15662:7;15653:6;15642:9;15638:22;15617:53;:::i;:::-;15607:63;;15562:118;15747:2;15736:9;15732:18;15719:32;15778:18;15770:6;15767:30;15764:117;;;15800:79;;:::i;:::-;15764:117;15905:63;15960:7;15951:6;15940:9;15936:22;15905:63;:::i;:::-;15895:73;;15690:288;14860:1125;;;;;;;:::o;15991:474::-;16059:6;16067;16116:2;16104:9;16095:7;16091:23;16087:32;16084:119;;;16122:79;;:::i;:::-;16084:119;16242:1;16267:53;16312:7;16303:6;16292:9;16288:22;16267:53;:::i;:::-;16257:63;;16213:117;16369:2;16395:53;16440:7;16431:6;16420:9;16416:22;16395:53;:::i;:::-;16385:63;;16340:118;15991:474;;;;;:::o;16471:654::-;16549:6;16557;16606:2;16594:9;16585:7;16581:23;16577:32;16574:119;;;16612:79;;:::i;:::-;16574:119;16732:1;16757:53;16802:7;16793:6;16782:9;16778:22;16757:53;:::i;:::-;16747:63;;16703:117;16887:2;16876:9;16872:18;16859:32;16918:18;16910:6;16907:30;16904:117;;;16940:79;;:::i;:::-;16904:117;17045:63;17100:7;17091:6;17080:9;17076:22;17045:63;:::i;:::-;17035:73;;16830:288;16471:654;;;;;:::o;17131:313::-;17244:4;17282:2;17271:9;17267:18;17259:26;;17331:9;17325:4;17321:20;17317:1;17306:9;17302:17;17295:47;17359:78;17432:4;17423:6;17359:78;:::i;:::-;17351:86;;17131:313;;;;:::o;17450:979::-;17547:6;17555;17563;17612:2;17600:9;17591:7;17587:23;17583:32;17580:119;;;17618:79;;:::i;:::-;17580:119;17766:1;17755:9;17751:17;17738:31;17796:18;17788:6;17785:30;17782:117;;;17818:79;;:::i;:::-;17782:117;17923:63;17978:7;17969:6;17958:9;17954:22;17923:63;:::i;:::-;17913:73;;17709:287;18035:2;18061:53;18106:7;18097:6;18086:9;18082:22;18061:53;:::i;:::-;18051:63;;18006:118;18191:2;18180:9;18176:18;18163:32;18222:18;18214:6;18211:30;18208:117;;;18244:79;;:::i;:::-;18208:117;18349:63;18404:7;18395:6;18384:9;18380:22;18349:63;:::i;:::-;18339:73;;18134:288;17450:979;;;;;:::o;18435:114::-;18502:6;18536:5;18530:12;18520:22;;18435:114;;;:::o;18555:184::-;18654:11;18688:6;18683:3;18676:19;18728:4;18723:3;18719:14;18704:29;;18555:184;;;;:::o;18745:132::-;18812:4;18835:3;18827:11;;18865:4;18860:3;18856:14;18848:22;;18745:132;;;:::o;18883:108::-;18960:24;18978:5;18960:24;:::i;:::-;18955:3;18948:37;18883:108;;:::o;18997:179::-;19066:10;19087:46;19129:3;19121:6;19087:46;:::i;:::-;19165:4;19160:3;19156:14;19142:28;;18997:179;;;;:::o;19182:113::-;19252:4;19284;19279:3;19275:14;19267:22;;19182:113;;;:::o;19331:732::-;19450:3;19479:54;19527:5;19479:54;:::i;:::-;19549:86;19628:6;19623:3;19549:86;:::i;:::-;19542:93;;19659:56;19709:5;19659:56;:::i;:::-;19738:7;19769:1;19754:284;19779:6;19776:1;19773:13;19754:284;;;19855:6;19849:13;19882:63;19941:3;19926:13;19882:63;:::i;:::-;19875:70;;19968:60;20021:6;19968:60;:::i;:::-;19958:70;;19814:224;19801:1;19798;19794:9;19789:14;;19754:284;;;19758:14;20054:3;20047:10;;19455:608;;;19331:732;;;;:::o;20069:373::-;20212:4;20250:2;20239:9;20235:18;20227:26;;20299:9;20293:4;20289:20;20285:1;20274:9;20270:17;20263:47;20327:108;20430:4;20421:6;20327:108;:::i;:::-;20319:116;;20069:373;;;;:::o;20448:799::-;20535:6;20543;20551;20600:2;20588:9;20579:7;20575:23;20571:32;20568:119;;;20606:79;;:::i;:::-;20568:119;20726:1;20751:53;20796:7;20787:6;20776:9;20772:22;20751:53;:::i;:::-;20741:63;;20697:117;20853:2;20879:53;20924:7;20915:6;20904:9;20900:22;20879:53;:::i;:::-;20869:63;;20824:118;21009:2;20998:9;20994:18;20981:32;21040:18;21032:6;21029:30;21026:117;;;21062:79;;:::i;:::-;21026:117;21167:63;21222:7;21213:6;21202:9;21198:22;21167:63;:::i;:::-;21157:73;;20952:288;20448:799;;;;;:::o;21253:1125::-;21359:6;21367;21375;21383;21432:3;21420:9;21411:7;21407:23;21403:33;21400:120;;;21439:79;;:::i;:::-;21400:120;21559:1;21584:53;21629:7;21620:6;21609:9;21605:22;21584:53;:::i;:::-;21574:63;;21530:117;21686:2;21712:53;21757:7;21748:6;21737:9;21733:22;21712:53;:::i;:::-;21702:63;;21657:118;21842:2;21831:9;21827:18;21814:32;21873:18;21865:6;21862:30;21859:117;;;21895:79;;:::i;:::-;21859:117;22000:63;22055:7;22046:6;22035:9;22031:22;22000:63;:::i;:::-;21990:73;;21785:288;22140:2;22129:9;22125:18;22112:32;22171:18;22163:6;22160:30;22157:117;;;22193:79;;:::i;:::-;22157:117;22298:63;22353:7;22344:6;22333:9;22329:22;22298:63;:::i;:::-;22288:73;;22083:288;21253:1125;;;;;;;:::o;22384:90::-;22418:7;22461:5;22454:13;22447:21;22436:32;;22384:90;;;:::o;22480:109::-;22561:21;22576:5;22561:21;:::i;:::-;22556:3;22549:34;22480:109;;:::o;22595:1103::-;22884:4;22922:3;22911:9;22907:19;22899:27;;22972:9;22966:4;22962:20;22958:1;22947:9;22943:17;22936:47;23000:78;23073:4;23064:6;23000:78;:::i;:::-;22992:86;;23088:66;23150:2;23139:9;23135:18;23126:6;23088:66;:::i;:::-;23164;23226:2;23215:9;23211:18;23202:6;23164:66;:::i;:::-;23240;23302:2;23291:9;23287:18;23278:6;23240:66;:::i;:::-;23316:67;23378:3;23367:9;23363:19;23354:6;23316:67;:::i;:::-;23393;23455:3;23444:9;23440:19;23431:6;23393:67;:::i;:::-;23470;23532:3;23521:9;23517:19;23508:6;23470:67;:::i;:::-;23547;23609:3;23598:9;23594:19;23585:6;23547:67;:::i;:::-;23624;23686:3;23675:9;23671:19;23662:6;23624:67;:::i;:::-;22595:1103;;;;;;;;;;;;:::o;23704:735::-;23921:4;23959:3;23948:9;23944:19;23936:27;;23973:71;24041:1;24030:9;24026:17;24017:6;23973:71;:::i;:::-;24054:72;24122:2;24111:9;24107:18;24098:6;24054:72;:::i;:::-;24173:9;24167:4;24163:20;24158:2;24147:9;24143:18;24136:48;24201:78;24274:4;24265:6;24201:78;:::i;:::-;24193:86;;24326:9;24320:4;24316:20;24311:2;24300:9;24296:18;24289:48;24354:78;24427:4;24418:6;24354:78;:::i;:::-;24346:86;;23704:735;;;;;;;:::o;24445:210::-;24532:4;24570:2;24559:9;24555:18;24547:26;;24583:65;24645:1;24634:9;24630:17;24621:6;24583:65;:::i;:::-;24445:210;;;;:::o;24661:1159::-;24768:6;24776;24784;24833:2;24821:9;24812:7;24808:23;24804:32;24801:119;;;24839:79;;:::i;:::-;24801:119;24987:1;24976:9;24972:17;24959:31;25017:18;25009:6;25006:30;25003:117;;;25039:79;;:::i;:::-;25003:117;25144:63;25199:7;25190:6;25179:9;25175:22;25144:63;:::i;:::-;25134:73;;24930:287;25284:2;25273:9;25269:18;25256:32;25315:18;25307:6;25304:30;25301:117;;;25337:79;;:::i;:::-;25301:117;25442:63;25497:7;25488:6;25477:9;25473:22;25442:63;:::i;:::-;25432:73;;25227:288;25582:2;25571:9;25567:18;25554:32;25613:18;25605:6;25602:30;25599:117;;;25635:79;;:::i;:::-;25599:117;25740:63;25795:7;25786:6;25775:9;25771:22;25740:63;:::i;:::-;25730:73;;25525:288;24661:1159;;;;;:::o;25826:180::-;25874:77;25871:1;25864:88;25971:4;25968:1;25961:15;25995:4;25992:1;25985:15;26012:320;26056:6;26093:1;26087:4;26083:12;26073:22;;26140:1;26134:4;26130:12;26161:18;26151:81;;26217:4;26209:6;26205:17;26195:27;;26151:81;26279:2;26271:6;26268:14;26248:18;26245:38;26242:84;;26298:18;;:::i;:::-;26242:84;26063:269;26012:320;;;:::o;26338:180::-;26386:77;26383:1;26376:88;26483:4;26480:1;26473:15;26507:4;26504:1;26497:15;26524:180;26572:77;26569:1;26562:88;26669:4;26666:1;26659:15;26693:4;26690:1;26683:15;26710:233;26749:3;26772:24;26790:5;26772:24;:::i;:::-;26763:33;;26818:66;26811:5;26808:77;26805:103;;26888:18;;:::i;:::-;26805:103;26935:1;26928:5;26924:13;26917:20;;26710:233;;;:::o;26949:141::-;26998:4;27021:3;27013:11;;27044:3;27041:1;27034:14;27078:4;27075:1;27065:18;27057:26;;26949:141;;;:::o;27096:93::-;27133:6;27180:2;27175;27168:5;27164:14;27160:23;27150:33;;27096:93;;;:::o;27195:107::-;27239:8;27289:5;27283:4;27279:16;27258:37;;27195:107;;;;:::o;27308:393::-;27377:6;27427:1;27415:10;27411:18;27450:97;27480:66;27469:9;27450:97;:::i;:::-;27568:39;27598:8;27587:9;27568:39;:::i;:::-;27556:51;;27640:4;27636:9;27629:5;27625:21;27616:30;;27689:4;27679:8;27675:19;27668:5;27665:30;27655:40;;27384:317;;27308:393;;;;;:::o;27707:60::-;27735:3;27756:5;27749:12;;27707:60;;;:::o;27773:142::-;27823:9;27856:53;27874:34;27883:24;27901:5;27883:24;:::i;:::-;27874:34;:::i;:::-;27856:53;:::i;:::-;27843:66;;27773:142;;;:::o;27921:75::-;27964:3;27985:5;27978:12;;27921:75;;;:::o;28002:269::-;28112:39;28143:7;28112:39;:::i;:::-;28173:91;28222:41;28246:16;28222:41;:::i;:::-;28214:6;28207:4;28201:11;28173:91;:::i;:::-;28167:4;28160:105;28078:193;28002:269;;;:::o;28277:73::-;28322:3;28277:73;:::o;28356:189::-;28433:32;;:::i;:::-;28474:65;28532:6;28524;28518:4;28474:65;:::i;:::-;28409:136;28356:189;;:::o;28551:186::-;28611:120;28628:3;28621:5;28618:14;28611:120;;;28682:39;28719:1;28712:5;28682:39;:::i;:::-;28655:1;28648:5;28644:13;28635:22;;28611:120;;;28551:186;;:::o;28743:543::-;28844:2;28839:3;28836:11;28833:446;;;28878:38;28910:5;28878:38;:::i;:::-;28962:29;28980:10;28962:29;:::i;:::-;28952:8;28948:44;29145:2;29133:10;29130:18;29127:49;;;29166:8;29151:23;;29127:49;29189:80;29245:22;29263:3;29245:22;:::i;:::-;29235:8;29231:37;29218:11;29189:80;:::i;:::-;28848:431;;28833:446;28743:543;;;:::o;29292:117::-;29346:8;29396:5;29390:4;29386:16;29365:37;;29292:117;;;;:::o;29415:169::-;29459:6;29492:51;29540:1;29536:6;29528:5;29525:1;29521:13;29492:51;:::i;:::-;29488:56;29573:4;29567;29563:15;29553:25;;29466:118;29415:169;;;;:::o;29589:295::-;29665:4;29811:29;29836:3;29830:4;29811:29;:::i;:::-;29803:37;;29873:3;29870:1;29866:11;29860:4;29857:21;29849:29;;29589:295;;;;:::o;29889:1395::-;30006:37;30039:3;30006:37;:::i;:::-;30108:18;30100:6;30097:30;30094:56;;;30130:18;;:::i;:::-;30094:56;30174:38;30206:4;30200:11;30174:38;:::i;:::-;30259:67;30319:6;30311;30305:4;30259:67;:::i;:::-;30353:1;30377:4;30364:17;;30409:2;30401:6;30398:14;30426:1;30421:618;;;;31083:1;31100:6;31097:77;;;31149:9;31144:3;31140:19;31134:26;31125:35;;31097:77;31200:67;31260:6;31253:5;31200:67;:::i;:::-;31194:4;31187:81;31056:222;30391:887;;30421:618;30473:4;30469:9;30461:6;30457:22;30507:37;30539:4;30507:37;:::i;:::-;30566:1;30580:208;30594:7;30591:1;30588:14;30580:208;;;30673:9;30668:3;30664:19;30658:26;30650:6;30643:42;30724:1;30716:6;30712:14;30702:24;;30771:2;30760:9;30756:18;30743:31;;30617:4;30614:1;30610:12;30605:17;;30580:208;;;30816:6;30807:7;30804:19;30801:179;;;30874:9;30869:3;30865:19;30859:26;30917:48;30959:4;30951:6;30947:17;30936:9;30917:48;:::i;:::-;30909:6;30902:64;30824:156;30801:179;31026:1;31022;31014:6;31010:14;31006:22;31000:4;30993:36;30428:611;;;30391:887;;29981:1303;;;29889:1395;;:::o;31290:148::-;31392:11;31429:3;31414:18;;31290:148;;;;:::o;31444:390::-;31550:3;31578:39;31611:5;31578:39;:::i;:::-;31633:89;31715:6;31710:3;31633:89;:::i;:::-;31626:96;;31731:65;31789:6;31784:3;31777:4;31770:5;31766:16;31731:65;:::i;:::-;31821:6;31816:3;31812:16;31805:23;;31554:280;31444:390;;;;:::o;31840:275::-;31972:3;31994:95;32085:3;32076:6;31994:95;:::i;:::-;31987:102;;32106:3;32099:10;;31840:275;;;;:::o;32121:147::-;32222:11;32259:3;32244:18;;32121:147;;;;:::o;32274:144::-;32326:4;32349:3;32341:11;;32372:3;32369:1;32362:14;32406:4;32403:1;32393:18;32385:26;;32274:144;;;:::o;32446:878::-;32551:3;32588:5;32582:12;32617:36;32643:9;32617:36;:::i;:::-;32669:88;32750:6;32745:3;32669:88;:::i;:::-;32662:95;;32788:1;32777:9;32773:17;32804:1;32799:166;;;;32979:1;32974:344;;;;32766:552;;32799:166;32883:4;32879:9;32868;32864:25;32859:3;32852:38;32945:6;32938:14;32931:22;32923:6;32919:35;32914:3;32910:45;32903:52;;32799:166;;32974:344;33041:41;33076:5;33041:41;:::i;:::-;33104:1;33118:154;33132:6;33129:1;33126:13;33118:154;;;33206:7;33200:14;33196:1;33191:3;33187:11;33180:35;33256:1;33247:7;33243:15;33232:26;;33154:4;33151:1;33147:12;33142:17;;33118:154;;;33301:6;33296:3;33292:16;33285:23;;32981:337;;32766:552;;32555:769;;32446:878;;;;:::o;33330:273::-;33461:3;33483:94;33573:3;33564:6;33483:94;:::i;:::-;33476:101;;33594:3;33587:10;;33330:273;;;;:::o;33609:191::-;33649:3;33668:20;33686:1;33668:20;:::i;:::-;33663:25;;33702:20;33720:1;33702:20;:::i;:::-;33697:25;;33745:1;33742;33738:9;33731:16;;33766:3;33763:1;33760:10;33757:36;;;33773:18;;:::i;:::-;33757:36;33609:191;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"4350200","executionCost":"5034","totalCost":"4355234"},"external":{"_dao_ids()":"2496","_dao_uris(uint256)":"infinite","_donated(string)":"infinite","_donations(uint256)":"infinite","_donations_ids()":"2495","_goal_ids()":"2564","_goal_uris(uint256)":"infinite","_ideas_ids()":"2496","_ideas_uris(uint256)":"infinite","_ideas_vote_ids()":"2497","_join_ids()":"2520","_joined_person(uint256)":"infinite","_message_ids()":"2497","_message_read_ids()":"2518","_reply_ids()":"2518","_smart_contract_ids()":"2498","_smart_contracts_uris(uint256)":"infinite","_template_uris(uint256)":"infinite","_user_badges(string)":"infinite","addTempData()":"infinite","add_donation(uint256,uint256,string)":"infinite","all_goal_ideas_votes(uint256)":"infinite","all_messages(uint256)":"infinite","all_read_messages(uint256)":"infinite","all_replies(uint256)":"infinite","create_dao(string,string,string)":"infinite","create_goal(string,uint256,string)":"infinite","create_goal_ideas_vote(uint256,uint256,string)":"infinite","create_ideas(string,uint256,string[],string)":"infinite","dao_uri(uint256)":"infinite","getMsgIDs(uint256)":"infinite","getReadMsg(uint256,string)":"infinite","getReplyIDs(uint256)":"infinite","get_all_daos()":"infinite","get_all_goals()":"infinite","get_all_goals_by_dao_id(uint256)":"infinite","get_all_ideas()":"infinite","get_all_ideas_by_goal_id(uint256)":"infinite","get_goal_id_by_goal_uri(string)":"infinite","get_goal_id_from_ideas_uri(string)":"infinite","get_ideas_id_by_ideas_uri(string)":"infinite","get_ideas_votes_from_goal(uint256,uint256)":"infinite","goal_uri(uint256)":"infinite","ideas_uri(uint256)":"infinite","is_person_joined(string)":"infinite","join_community(uint256,string)":"infinite","reset_all()":"infinite","sendMsg(uint256,string,string)":"infinite","sendReadMsg(uint256,uint256,string,string)":"infinite","sendReply(uint256,string,uint256,string)":"infinite","set_dao(uint256,string,string)":"infinite","set_goal(uint256,string)":"infinite","set_ideas(uint256,string)":"infinite","update_template(uint256,string)":"infinite"},"internal":{"create_ideas_smart_contract(uint256,uint256,string memory)":"infinite"}},"methodIdentifiers":{"_dao_ids()":"7bbd582d","_dao_uris(uint256)":"27a568b9","_donated(string)":"77935be7","_donations(uint256)":"7fc543ec","_donations_ids()":"ec245802","_goal_ids()":"13bf4cea","_goal_uris(uint256)":"7f2035d4","_ideas_ids()":"d3791b20","_ideas_uris(uint256)":"468d0c80","_ideas_vote_ids()":"4a797bd7","_join_ids()":"1171b621","_joined_person(uint256)":"330b8f26","_message_ids()":"9077007d","_message_read_ids()":"ca013f17","_reply_ids()":"aa2bf5d3","_smart_contract_ids()":"1b592aeb","_smart_contracts_uris(uint256)":"ff4a37ef","_template_uris(uint256)":"6ecda4ee","_user_badges(string)":"9f9ff54b","addTempData()":"0c90f09d","add_donation(uint256,uint256,string)":"e3863cef","all_goal_ideas_votes(uint256)":"1ba44c4c","all_messages(uint256)":"b527d45e","all_read_messages(uint256)":"cace8d46","all_replies(uint256)":"3f87a2f4","create_dao(string,string,string)":"ec399255","create_goal(string,uint256,string)":"77b2ec23","create_goal_ideas_vote(uint256,uint256,string)":"82fcc732","create_ideas(string,uint256,string[],string)":"18426b46","dao_uri(uint256)":"5d907da1","getMsgIDs(uint256)":"803f5b9f","getReadMsg(uint256,string)":"cd230809","getReplyIDs(uint256)":"812fae1f","get_all_daos()":"c04fe978","get_all_goals()":"29b56f60","get_all_goals_by_dao_id(uint256)":"109ac970","get_all_ideas()":"97ee7606","get_all_ideas_by_goal_id(uint256)":"131d44f2","get_goal_id_by_goal_uri(string)":"1e9ac9f5","get_goal_id_from_ideas_uri(string)":"aa4cdf2a","get_ideas_id_by_ideas_uri(string)":"a1ca9178","get_ideas_votes_from_goal(uint256,uint256)":"4be7adb5","goal_uri(uint256)":"e32acc1a","ideas_uri(uint256)":"8d3d2595","is_person_joined(string)":"eca7f5fe","join_community(uint256,string)":"5132f0c7","reset_all()":"b16060a6","sendMsg(uint256,string,string)":"3f50602f","sendReadMsg(uint256,uint256,string,string)":"8c59143d","sendReply(uint256,string,uint256,string)":"494ce295","set_dao(uint256,string,string)":"881de858","set_goal(uint256,string)":"c29595c5","set_ideas(uint256,string)":"c04e7430","update_template(uint256,string)":"87633eb2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"_dao_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_dao_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dao_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"finished\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"_donated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_donations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"wallet\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"donation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_donations_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_goal_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_goal_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"goal_uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ideas_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_ideas_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ideas_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"donation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ideas_vote_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_join_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_joined_person\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"daoid\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"wallet\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_message_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_message_read_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_reply_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_smart_contract_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_smart_contracts_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"smart_contract_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"smart_contract_uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_template_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"_user_badges\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"wallet\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"dao\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"joined\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"goal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"ideas\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"donation\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"comment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reply\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addTempData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_doantion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_donator\",\"type\":\"string\"}],\"name\":\"add_donation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_goal_ideas_votes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"wallet\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_messages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sender\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_read_messages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_replies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reply_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_template\",\"type\":\"string\"}],\"name\":\"create_dao\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_wallet\",\"type\":\"string\"}],\"name\":\"create_goal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_wallet\",\"type\":\"string\"}],\"name\":\"create_goal_ideas_vote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"_smart_contracts\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"_wallet\",\"type\":\"string\"}],\"name\":\"create_ideas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"}],\"name\":\"dao_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"}],\"name\":\"getMsgIDs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"name\":\"getReadMsg\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"}],\"name\":\"getReplyIDs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_daos\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_goals\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"}],\"name\":\"get_all_goals_by_dao_id\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_ideas\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"}],\"name\":\"get_all_ideas_by_goal_id\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"}],\"name\":\"get_goal_id_by_goal_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"get_goal_id_from_ideas_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"get_ideas_id_by_ideas_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"}],\"name\":\"get_ideas_votes_from_goal\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"}],\"name\":\"goal_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"}],\"name\":\"ideas_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"wallet\",\"type\":\"string\"}],\"name\":\"is_person_joined\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"person\",\"type\":\"string\"}],\"name\":\"join_community\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reset_all\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_sender\",\"type\":\"string\"}],\"name\":\"sendMsg\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"name\":\"sendReadMsg\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_reply\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_wallet\",\"type\":\"string\"}],\"name\":\"sendReply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_uri\",\"type\":\"string\"}],\"name\":\"set_dao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"}],\"name\":\"set_goal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"set_ideas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_template\",\"type\":\"string\"}],\"name\":\"update_template\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MoonDAO.sol\":\"MoonDAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"contracts/MoonDAO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\nimport '@openzeppelin/contracts/utils/Strings.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\n\\r\\ncontract MoonDAO {\\r\\n    struct dao_uri_struct {\\r\\n        string dao_wallet;\\r\\n        string dao_uri;\\r\\n        string finished;\\r\\n    }\\r\\n    struct goal_uri_struct {\\r\\n        uint256 dao_id;\\r\\n        string goal_uri;\\r\\n    }\\r\\n\\r\\n    struct ideas_uri_struct {\\r\\n        uint256 goal_id;\\r\\n        string ideas_uri;\\r\\n        uint256 donation;\\r\\n    }\\r\\n\\r\\n    struct donation_struct {\\r\\n        uint256 ideas_id;\\r\\n        string wallet;\\r\\n        uint256 donation;\\r\\n    }\\r\\n\\r\\n    struct smart_contract_uri_struct {\\r\\n        uint256 smart_contract_id;\\r\\n        uint256 ideas_id;\\r\\n        string smart_contract_uri;\\r\\n    }\\r\\n    struct goal_ideas_votes_struct {\\r\\n        uint256 goal_id;\\r\\n        uint256 ideas_id;\\r\\n        string wallet;\\r\\n    }\\r\\n    struct message_struct {\\r\\n        uint256 message_id;\\r\\n        uint256 ideas_id;\\r\\n        string message;\\r\\n        string sender;\\r\\n    }\\r\\n    struct message_read_struct {\\r\\n        uint256 message_id;\\r\\n        uint256 ideas_id;\\r\\n        string wallet;\\r\\n        string msg_type;\\r\\n    }\\r\\n    struct reply_struct {\\r\\n        uint256 reply_id;\\r\\n        uint256 message_id;\\r\\n        uint256 ideas_id;\\r\\n        string message;\\r\\n    }\\r\\n\\r\\n    struct UnbondingRequest {\\r\\n        int64 completionTime;\\r\\n        uint256 amount;\\r\\n    }\\r\\n\\r\\n    struct join_struct {\\r\\n        uint256 daoid;\\r\\n        string wallet;\\r\\n    }\\r\\n\\r\\n    struct user_badge_struct {\\r\\n        string wallet;\\r\\n        bool dao;\\r\\n        bool joined;\\r\\n        bool goal;\\r\\n        bool ideas;\\r\\n        bool vote;\\r\\n        bool donation;\\r\\n        bool comment;\\r\\n        bool reply;\\r\\n    }\\r\\n    uint256 public _dao_ids;\\r\\n    uint256 public _donations_ids;\\r\\n    uint256 public _goal_ids;\\r\\n    uint256 public _ideas_ids;\\r\\n    uint256 public _join_ids;\\r\\n    uint256 public _smart_contract_ids;\\r\\n    uint256 public _ideas_vote_ids;\\r\\n    uint256 public _message_ids;\\r\\n    uint256 public _message_read_ids;\\r\\n    uint256 public _reply_ids;\\r\\n    mapping(uint256 => dao_uri_struct) public _dao_uris; //_dao_ids              => (Dao)                    Dao Wallet + Dao URI   + Finished\\r\\n    mapping(uint256 => string) public _template_uris; //_dao_ids              => (Dao)                   Template HTML Code\\r\\n    mapping(uint256 => join_struct) public _joined_person; //_join_ids             => (Dao)                  join_struct\\r\\n\\r\\n    mapping(uint256 => goal_uri_struct) public _goal_uris; //_goal_ids             => (Goal)                   Dao ID + Goal URI\\r\\n    mapping(uint256 => ideas_uri_struct) public _ideas_uris; //_ideas_ids            => (Ideas)                  Goal ID + Ideas URI\\r\\n    mapping(string => uint256) public _donated; //string            => (Donated to ideas)                amount\\r\\n    mapping(uint256 => donation_struct) public _donations; //uint256            => donation_struct\\r\\n    mapping(uint256 => smart_contract_uri_struct) public _smart_contracts_uris; //_smart_contract_ids   => (Ideas Smart contract)   Goal ID + Ideas URI\\r\\n    mapping(uint256 => goal_ideas_votes_struct) public all_goal_ideas_votes; //_ideas_vote_ids       => (Vote)                   Goal ID + Ideas ID + Wallet\\r\\n\\r\\n    mapping(uint256 => message_struct) public all_messages; // all_messages        => _message_ids + message_struct\\r\\n\\r\\n    mapping(uint256 => message_read_struct) public all_read_messages; // all_read_messages        => _message_read_ids + message_read_struct\\r\\n\\r\\n    mapping(uint256 => reply_struct) public all_replies; // all_messages        => _reply_ids + reply_struct\\r\\n    mapping(string => user_badge_struct) public _user_badges; //string            => user_badge_struct\\r\\n\\r\\n    //Daos\\r\\n    function create_dao(string memory _dao_wallet, string memory _dao_uri, string memory _template) public returns (uint256) {\\r\\n        //Create Dao into _dao_uris\\r\\n        _dao_uris[_dao_ids] = dao_uri_struct(_dao_wallet, _dao_uri, 'False');\\r\\n        _template_uris[_dao_ids] = _template;\\r\\n        _user_badges[_dao_wallet].dao = true;\\r\\n        _dao_ids++;\\r\\n\\r\\n        return _dao_ids;\\r\\n    }\\r\\n\\r\\n    function update_template(uint256 _dao_id, string memory _template) public {\\r\\n        _template_uris[_dao_id] = _template;\\r\\n    }\\r\\n\\r\\n    function set_dao(uint256 _dao_id, string memory _dao_wallet, string memory _dao_uri) public {\\r\\n        //Set Dao of wallet and uri\\r\\n        _dao_uris[_dao_id].dao_wallet = _dao_wallet;\\r\\n        _dao_uris[_dao_id].dao_uri = _dao_uri;\\r\\n    }\\r\\n\\r\\n    function get_all_daos() public view returns (string[] memory) {\\r\\n        //Getting all doas\\r\\n        string[] memory _StoreInfo = new string[](_dao_ids);\\r\\n        for (uint256 i = 0; i < _dao_ids; i++) {\\r\\n            _StoreInfo[i] = _dao_uris[i].dao_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function dao_uri(uint256 _dao_id) public view returns (string memory) {\\r\\n        //Getting one dao URI\\r\\n        return _dao_uris[_dao_id].dao_uri;\\r\\n    }\\r\\n\\r\\n    //Goals\\r\\n    function create_goal(string memory _goal_uri, uint256 _dao_id,string memory _wallet) public returns (uint256) {\\r\\n        //Create goal into _goal_uris\\r\\n        _goal_uris[_goal_ids] = goal_uri_struct(_dao_id, _goal_uri);\\r\\n        _user_badges[_wallet].goal = true;\\r\\n        _goal_ids++;\\r\\n\\r\\n        return _goal_ids;\\r\\n    }\\r\\n\\r\\n    function set_goal(uint256 _goal_id, string memory _goal_uri) public {\\r\\n        //Set goal uri\\r\\n        _goal_uris[_goal_id].goal_uri = _goal_uri;\\r\\n    }\\r\\n\\r\\n    function get_all_goals() public view returns (string[] memory) {\\r\\n        //Getting all goals\\r\\n        string[] memory _StoreInfo = new string[](_goal_ids);\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n            _StoreInfo[i] = _goal_uris[i].goal_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_all_goals_by_dao_id(uint256 _dao_id) public view returns (string[] memory) {\\r\\n        //Getting all goals by dao id\\r\\n        string[] memory _StoreInfo = new string[](_goal_ids);\\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n            if (_goal_uris[i].dao_id == _dao_id) {\\r\\n                _StoreInfo[_store_id] = _goal_uris[i].goal_uri;\\r\\n                _store_id++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_goal_id_by_goal_uri(string memory _goal_uri) public view returns (uint256) {\\r\\n        //Getting goal id by uri\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n            if (keccak256(bytes(_goal_uris[i].goal_uri)) == keccak256(bytes(_goal_uri))) return i;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function goal_uri(uint256 _goal_id) public view returns (string memory) {\\r\\n        //Getting one goal URI\\r\\n        return _goal_uris[_goal_id].goal_uri;\\r\\n    }\\r\\n\\r\\n    //Ideas\\r\\n    function create_ideas(string memory _ideas_uri, uint256 _goal_id, string[] memory _smart_contracts,string memory _wallet) public returns (uint256) {\\r\\n        //Create ideas into _ideas_uris\\r\\n        _ideas_uris[_ideas_ids] = ideas_uri_struct(_goal_id, _ideas_uri, 0);\\r\\n        _user_badges[_wallet].ideas = true;\\r\\n        _ideas_ids++;\\r\\n\\r\\n        for (uint256 i = 0; i < _smart_contracts.length; i++) {\\r\\n            create_ideas_smart_contract(_ideas_ids, _smart_contract_ids, _smart_contracts[i]);\\r\\n            _smart_contract_ids++;\\r\\n        }\\r\\n\\r\\n        return _ideas_ids;\\r\\n    }\\r\\n\\r\\n    function create_ideas_smart_contract(uint256 _ideas_id, uint256 _smart_contract_id, string memory _smart_contract) private {\\r\\n        _smart_contracts_uris[_smart_contract_id] = smart_contract_uri_struct(_ideas_id, _smart_contract_id, _smart_contract);\\r\\n    }\\r\\n\\r\\n    function set_ideas(uint256 _ideas_id, string memory _ideas_uri) public {\\r\\n        _ideas_uris[_ideas_id].ideas_uri = _ideas_uri;\\r\\n    }\\r\\n\\r\\n    function add_donation(uint256 _ideas_id, uint256 _doantion, string memory _donator) public {\\r\\n        _user_badges[_donator].donation = true;\\r\\n        _ideas_uris[_ideas_id].donation += _doantion;\\r\\n        _donated[_donator] += _doantion;\\r\\n        _donations[_donations_ids] = donation_struct(_ideas_id, _donator, _doantion);\\r\\n        _donations_ids++;\\r\\n    }\\r\\n\\r\\n    function join_community(uint256 dao_id, string memory person) public {\\r\\n        _user_badges[person].joined = true;\\r\\n        _joined_person[_join_ids] = join_struct({daoid: dao_id, wallet: person});\\r\\n        _join_ids++;\\r\\n    }\\r\\n\\r\\n    function is_person_joined(string memory wallet) public view returns (bool) {\\r\\n        //Getting goal id by uri\\r\\n        for (uint256 i = 0; i < _join_ids; i++) {\\r\\n            if (keccak256(bytes(_joined_person[i].wallet)) == keccak256(bytes(wallet))) return true;\\r\\n        }\\r\\n\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function get_all_ideas() public view returns (string[] memory) {\\r\\n        //Getting all ideas\\r\\n        string[] memory _StoreInfo = new string[](_ideas_ids);\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            _StoreInfo[i] = _ideas_uris[i].ideas_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_all_ideas_by_goal_id(uint256 _goal_id) public view returns (string[] memory) {\\r\\n        //Getting all ideas by goal id\\r\\n        string[] memory _StoreInfo = new string[](_ideas_ids);\\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            if (_ideas_uris[i].goal_id == _goal_id) _StoreInfo[_store_id] = _ideas_uris[i].ideas_uri;\\r\\n            _store_id++;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_ideas_id_by_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\\r\\n        //Getting ideas id by uri\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return i;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function get_goal_id_from_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\\r\\n        //Getting ideas id by uri\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return _ideas_uris[i].goal_id;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function ideas_uri(uint256 _ideas_id) public view returns (string memory) {\\r\\n        //Getting one ideas URI\\r\\n        return _ideas_uris[_ideas_id].ideas_uri;\\r\\n    }\\r\\n\\r\\n    //Votes\\r\\n    function create_goal_ideas_vote(uint256 _goal_id, uint256 _ideas_id, string memory _wallet) public returns (uint256) {\\r\\n         _user_badges[_wallet].vote = true;\\r\\n        //Create votes into all_goal_ideas_votes\\r\\n        all_goal_ideas_votes[_ideas_vote_ids] = goal_ideas_votes_struct(_goal_id, _ideas_id, _wallet);\\r\\n        _ideas_vote_ids++;\\r\\n\\r\\n        return _ideas_vote_ids;\\r\\n    }\\r\\n\\r\\n    function get_ideas_votes_from_goal(uint256 _goal_id, uint256 _ideas_id) public view returns (string[] memory) {\\r\\n        //gets all ideas votes from goal\\r\\n        string[] memory _StoreInfo = new string[](_ideas_vote_ids);\\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _ideas_vote_ids; i++) {\\r\\n            if (all_goal_ideas_votes[i].goal_id == _goal_id && all_goal_ideas_votes[i].ideas_id == _ideas_id) _StoreInfo[_store_id] = all_goal_ideas_votes[i].wallet;\\r\\n            _store_id++;\\r\\n        }\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    //Messages\\r\\n    function sendMsg(uint256 _ideas_id, string memory _message, string memory _sender) public returns (uint256) {\\r\\n            _user_badges[_sender].comment = true;\\r\\n        //Create messsage into all_messages\\r\\n        all_messages[_message_ids] = message_struct(_message_ids, _ideas_id, _message, _sender);\\r\\n        _message_ids++;\\r\\n\\r\\n        return _message_ids;\\r\\n    }\\r\\n\\r\\n    function getMsgIDs(uint256 ideas_id) public view returns (uint256[] memory) {\\r\\n        //Getting all messages ids by idea id\\r\\n        uint256[] memory _All_Ideas_Messages = new uint256[](_message_ids);\\r\\n        uint256 _msg_id;\\r\\n        for (uint256 i = 0; i < _message_ids; i++) {\\r\\n            if (all_messages[i].ideas_id == ideas_id) {\\r\\n                _All_Ideas_Messages[_msg_id] = all_messages[i].message_id;\\r\\n                _msg_id++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _All_Ideas_Messages;\\r\\n    }\\r\\n\\r\\n    function sendReply(uint256 _message_id, string memory _reply,uint256 ideas_id,string memory _wallet) public returns (uint256) {\\r\\n          _user_badges[_wallet].reply = true;\\r\\n        //Create reply into all_replies\\r\\n        all_replies[_reply_ids] = reply_struct(_reply_ids, _message_id,ideas_id, _reply);\\r\\n        _reply_ids++;\\r\\n\\r\\n        return _reply_ids;\\r\\n    }\\r\\n\\r\\n    function getReplyIDs(uint256 message_id) public view returns (uint256[] memory) {\\r\\n        //Getting all messages ids by idea id\\r\\n        uint256[] memory _All_Messages_Replys = new uint256[](_reply_ids);\\r\\n        uint256 _reply_id;\\r\\n        for (uint256 i = 0; i < _reply_ids; i++) {\\r\\n            if (all_replies[i].message_id == message_id) {\\r\\n                _All_Messages_Replys[_reply_id] = all_replies[i].reply_id;\\r\\n                _reply_id++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _All_Messages_Replys;\\r\\n    }\\r\\n\\r\\n    function sendReadMsg(uint256 _message_id, uint256 _ideas_id,string memory _wallet, string memory msg_type) public returns (uint256) {\\r\\n        //Create messsage into all_messages\\r\\n        all_read_messages[_message_read_ids] = message_read_struct(_message_id, _ideas_id, _wallet,msg_type);\\r\\n        _message_read_ids++;\\r\\n\\r\\n        return _message_read_ids;\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n  function getReadMsg(uint256 _message_id, string memory msg_type)  public view returns (bool) {\\r\\n       \\r\\n       bool read = false;\\r\\n        for (uint256 i = 0; i < _message_read_ids; i++) {\\r\\n            if (all_read_messages[i].message_id == _message_id && keccak256(bytes(msg_type)) == keccak256(bytes(all_read_messages[i].msg_type))) {\\r\\n               read = true; \\r\\n            }\\r\\n        }\\r\\n\\r\\n        return read;\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n    function reset_all() public {\\r\\n        for (uint256 i = 0; i < _dao_ids; i++) delete _dao_uris[i];\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) delete _goal_uris[i];\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) delete _ideas_uris[i];\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) delete _smart_contracts_uris[i];\\r\\n        for (uint256 i = 0; i < _message_ids; i++) delete all_messages[i];\\r\\n        for (uint256 i = 0; i < _reply_ids; i++) delete all_replies[i];\\r\\n        for (uint256 i = 0; i < _ideas_vote_ids; i++) delete all_goal_ideas_votes[i];\\r\\n        _dao_ids = 0;\\r\\n        _goal_ids = 0;\\r\\n        _ideas_ids = 0;\\r\\n        _message_ids = 0;\\r\\n        _reply_ids = 0;\\r\\n        _ideas_vote_ids = 0;\\r\\n    }\\r\\n\\r\\n    function addTempData() public {\\r\\n        create_dao(\\r\\n            '0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4',\\r\\n            '{\\\"title\\\":\\\"Asset Metadata\\\",\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"Title\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"Lake Nona, Orlando US\\\"},\\\"Description\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"\\\"},\\\"Start_Date\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"2023-08-16T11:14\\\"},\\\"logo\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":{\\\"url\\\":\\\"https://bafybeicb5yy36ocs4yulph6zpx7ggsyeginsjwnft7ml7cxojywpbsjuq4.ipfs.nftstorage.link\\\",\\\"type\\\":\\\"image/png\\\"}},\\\"wallet\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4\\\"},\\\"SubsPrice\\\":{\\\"type\\\":\\\"number\\\",\\\"description\\\":\\\"0.05\\\"},\\\"typeimg\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"Dao\\\"},\\\"allFiles\\\":[{\\\"url\\\":\\\"https://bafybeicb5yy36ocs4yulph6zpx7ggsyeginsjwnft7ml7cxojywpbsjuq4.ipfs.nftstorage.link\\\",\\\"type\\\":\\\"image/png\\\"}]}}',\\r\\n            '<body><div id=\\\"dao-container\\\"><div class=\\\"dao-container flex items-center flex-col gap-8 relative\\\"><div class=\\\"dao-title gap-8 flex flex-col relative\\\"><div><h1 id=\\\"dao-title\\\" class=\\\"text-moon-32 font-bold\\\">Lake Nona, Orlando US</h1></div><div class=\\\"flex gap-4 justify-between tabs\\\"><div class=\\\"flex\\\"><a href=\\\"/?q=All\\\" class=\\\"DonationBarLink tab block px-3 py-2 active\\\">All</a><a href=\\\"/?q=Today\\\" class=\\\"DonationBarLink tab block px-3 py-2\\\">Today</a><a href=\\\"/?q=This%20Month\\\" class=\\\"DonationBarLink tab block px-3 py-2\\\">This Month</a></div><button type=\\\"button\\\" value=\\\"Create Goal\\\" class=\\\"py-2 px-4 gap-2 text-moon-14 rounded-moon-i-sm z-0 flex justify-center items-center font-medium no-underline overflow-hidden select-none outline-none transition duration-200 active:scale-90 focus-visible:shadow-focus btn-primary create-goal-block\\\"><div class=\\\"gap-2\\\" id=\\\"iqokj\\\">\\\\n       \\\\n      </div></button></div></div><div class=\\\"dao-divider\\\">\\\\n  </div><div class=\\\"flex flex-col gap-8\\\"><img id=\\\"dao-image\\\" src=\\\"https://bafybeicb5yy36ocs4yulph6zpx7ggsyeginsjwnft7ml7cxojywpbsjuq4.ipfs.nftstorage.link\\\"/></div><div id=\\\"goal-container\\\" class=\\\"flex flex-col gap-8\\\">\\\\n\\\\n  </div></div></div></body><style>* { box-sizing: border-box; } body {margin: 0;}#dao-title{width:78%;}#iqokj{flex-direction:row-reverse;display:flex;}.py-2.px-4.gap-2.text-moon-14.rounded-moon-i-sm.relative.z-0.flex.justify-center.items-center.font-medium.no-underline.overflow-hidden.select-none.outline-none.transition.duration-200.active\\\\\\\\:scale-90.focus-visible\\\\\\\\:shadow-focus.btn-primary.create-goal-block.{position:relative;right:0px;}.py-2.px-4.gap-2.text-moon-14.rounded-moon-i-sm.z-0.flex.justify-center.items-center.font-medium.no-underline.overflow-hidden.select-none.outline-none.transition.duration-200.active\\\\\\\\:scale-90.focus-visible\\\\\\\\:shadow-focus.btn-primary.create-goal-block.{right:10px;position:absolute;}</style>'\\r\\n        );\\r\\n        create_goal('{\\\"title\\\":\\\"Asset Metadata\\\",\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"Title\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"Renewable energy\\\"},\\\"Description\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"Our DAO is starting it\\\\'s own renewable energy company that delivers energy for the whole community\\\"},\\\"Budget\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"$1,000,000\\\"},\\\"End_Date\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"2023-08-31T22:40\\\"},\\\"wallet\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4\\\"},\\\"logo\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":{\\\"url\\\":\\\"https://bafybeic5g4xvj7myrgkb62lenld7orpl2hrspmzlzcdbzpyotc33tqygpe.ipfs.nftstorage.link\\\",\\\"type\\\":\\\"image/jpeg\\\"}},\\\"allFiles\\\":[{\\\"url\\\":\\\"https://bafybeic5g4xvj7myrgkb62lenld7orpl2hrspmzlzcdbzpyotc33tqygpe.ipfs.nftstorage.link\\\",\\\"type\\\":\\\"image/jpeg\\\"}]}}', 0, '0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4');\\r\\n        string[] memory row;\\r\\n        create_ideas('{\\\"title\\\":\\\"Asset Metadata\\\",\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"Title\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"Solar panels on the Consequences Nona community center \\\"},\\\"Description\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"We can ins\\\\\\\\n\\\"},\\\"StructureLeft\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":[\\\"Representatives Berlin\\\",\\\"Community\\\",\\\"Children\\\"]},\\\"StructureRight\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":[\\\"20%\\\",\\\"70%\\\",\\\"10%\\\"]},\\\"Qoutation\\\":{\\\"link\\\":\\\"https://uploadify.net/5273d350dfd001d1/quotation_Consequences_Nona_community_center.pdf\\\",\\\"prize\\\":\\\"$48,071.55\\\"},\\\"wallet\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"0xD60bC0b00c1D8a718FB6fDeDc4466c7A1180868c\\\"},\\\"logo\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":{\\\"url\\\":\\\"https://bafybeif4fk6twikkcyopglhppdo7dd3l34bm6qedje3mxftec5e7b4he54.ipfs.nftstorage.link\\\",\\\"type\\\":\\\"image/png\\\"}},\\\"allFiles\\\":[{\\\"url\\\":\\\"https://bafybeif4fk6twikkcyopglhppdo7dd3l34bm6qedje3mxftec5e7b4he54.ipfs.nftstorage.link\\\",\\\"type\\\":\\\"image/png\\\"}]}}', 0, row, '0x86bb6d6e18c5eeaca1e83c1e6162cc433dcc70a4');\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x9d0b2e8b5f1538c03f5269ea552298a547243c67acf1b0425fff9e5667c85ff2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2414,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"_dao_ids","offset":0,"slot":"0","type":"t_uint256"},{"astId":2416,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"_donations_ids","offset":0,"slot":"1","type":"t_uint256"},{"astId":2418,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"_goal_ids","offset":0,"slot":"2","type":"t_uint256"},{"astId":2420,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"_ideas_ids","offset":0,"slot":"3","type":"t_uint256"},{"astId":2422,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"_join_ids","offset":0,"slot":"4","type":"t_uint256"},{"astId":2424,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"_smart_contract_ids","offset":0,"slot":"5","type":"t_uint256"},{"astId":2426,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"_ideas_vote_ids","offset":0,"slot":"6","type":"t_uint256"},{"astId":2428,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"_message_ids","offset":0,"slot":"7","type":"t_uint256"},{"astId":2430,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"_message_read_ids","offset":0,"slot":"8","type":"t_uint256"},{"astId":2432,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"_reply_ids","offset":0,"slot":"9","type":"t_uint256"},{"astId":2437,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"_dao_uris","offset":0,"slot":"10","type":"t_mapping(t_uint256,t_struct(dao_uri_struct)2323_storage)"},{"astId":2441,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"_template_uris","offset":0,"slot":"11","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":2446,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"_joined_person","offset":0,"slot":"12","type":"t_mapping(t_uint256,t_struct(join_struct)2393_storage)"},{"astId":2451,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"_goal_uris","offset":0,"slot":"13","type":"t_mapping(t_uint256,t_struct(goal_uri_struct)2328_storage)"},{"astId":2456,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"_ideas_uris","offset":0,"slot":"14","type":"t_mapping(t_uint256,t_struct(ideas_uri_struct)2335_storage)"},{"astId":2460,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"_donated","offset":0,"slot":"15","type":"t_mapping(t_string_memory_ptr,t_uint256)"},{"astId":2465,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"_donations","offset":0,"slot":"16","type":"t_mapping(t_uint256,t_struct(donation_struct)2342_storage)"},{"astId":2470,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"_smart_contracts_uris","offset":0,"slot":"17","type":"t_mapping(t_uint256,t_struct(smart_contract_uri_struct)2349_storage)"},{"astId":2475,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"all_goal_ideas_votes","offset":0,"slot":"18","type":"t_mapping(t_uint256,t_struct(goal_ideas_votes_struct)2356_storage)"},{"astId":2480,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"all_messages","offset":0,"slot":"19","type":"t_mapping(t_uint256,t_struct(message_struct)2365_storage)"},{"astId":2485,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"all_read_messages","offset":0,"slot":"20","type":"t_mapping(t_uint256,t_struct(message_read_struct)2374_storage)"},{"astId":2490,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"all_replies","offset":0,"slot":"21","type":"t_mapping(t_uint256,t_struct(reply_struct)2383_storage)"},{"astId":2495,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"_user_badges","offset":0,"slot":"22","type":"t_mapping(t_string_memory_ptr,t_struct(user_badge_struct)2412_storage)"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_string_memory_ptr,t_struct(user_badge_struct)2412_storage)":{"encoding":"mapping","key":"t_string_memory_ptr","label":"mapping(string => struct MoonDAO.user_badge_struct)","numberOfBytes":"32","value":"t_struct(user_badge_struct)2412_storage"},"t_mapping(t_string_memory_ptr,t_uint256)":{"encoding":"mapping","key":"t_string_memory_ptr","label":"mapping(string => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_uint256,t_struct(dao_uri_struct)2323_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct MoonDAO.dao_uri_struct)","numberOfBytes":"32","value":"t_struct(dao_uri_struct)2323_storage"},"t_mapping(t_uint256,t_struct(donation_struct)2342_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct MoonDAO.donation_struct)","numberOfBytes":"32","value":"t_struct(donation_struct)2342_storage"},"t_mapping(t_uint256,t_struct(goal_ideas_votes_struct)2356_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct MoonDAO.goal_ideas_votes_struct)","numberOfBytes":"32","value":"t_struct(goal_ideas_votes_struct)2356_storage"},"t_mapping(t_uint256,t_struct(goal_uri_struct)2328_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct MoonDAO.goal_uri_struct)","numberOfBytes":"32","value":"t_struct(goal_uri_struct)2328_storage"},"t_mapping(t_uint256,t_struct(ideas_uri_struct)2335_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct MoonDAO.ideas_uri_struct)","numberOfBytes":"32","value":"t_struct(ideas_uri_struct)2335_storage"},"t_mapping(t_uint256,t_struct(join_struct)2393_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct MoonDAO.join_struct)","numberOfBytes":"32","value":"t_struct(join_struct)2393_storage"},"t_mapping(t_uint256,t_struct(message_read_struct)2374_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct MoonDAO.message_read_struct)","numberOfBytes":"32","value":"t_struct(message_read_struct)2374_storage"},"t_mapping(t_uint256,t_struct(message_struct)2365_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct MoonDAO.message_struct)","numberOfBytes":"32","value":"t_struct(message_struct)2365_storage"},"t_mapping(t_uint256,t_struct(reply_struct)2383_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct MoonDAO.reply_struct)","numberOfBytes":"32","value":"t_struct(reply_struct)2383_storage"},"t_mapping(t_uint256,t_struct(smart_contract_uri_struct)2349_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct MoonDAO.smart_contract_uri_struct)","numberOfBytes":"32","value":"t_struct(smart_contract_uri_struct)2349_storage"},"t_string_memory_ptr":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(dao_uri_struct)2323_storage":{"encoding":"inplace","label":"struct MoonDAO.dao_uri_struct","members":[{"astId":2318,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"dao_wallet","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2320,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"dao_uri","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2322,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"finished","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(donation_struct)2342_storage":{"encoding":"inplace","label":"struct MoonDAO.donation_struct","members":[{"astId":2337,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"ideas_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2339,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"wallet","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2341,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"donation","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(goal_ideas_votes_struct)2356_storage":{"encoding":"inplace","label":"struct MoonDAO.goal_ideas_votes_struct","members":[{"astId":2351,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"goal_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2353,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":2355,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"wallet","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(goal_uri_struct)2328_storage":{"encoding":"inplace","label":"struct MoonDAO.goal_uri_struct","members":[{"astId":2325,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"dao_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2327,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"goal_uri","offset":0,"slot":"1","type":"t_string_storage"}],"numberOfBytes":"64"},"t_struct(ideas_uri_struct)2335_storage":{"encoding":"inplace","label":"struct MoonDAO.ideas_uri_struct","members":[{"astId":2330,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"goal_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2332,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"ideas_uri","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2334,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"donation","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(join_struct)2393_storage":{"encoding":"inplace","label":"struct MoonDAO.join_struct","members":[{"astId":2390,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"daoid","offset":0,"slot":"0","type":"t_uint256"},{"astId":2392,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"wallet","offset":0,"slot":"1","type":"t_string_storage"}],"numberOfBytes":"64"},"t_struct(message_read_struct)2374_storage":{"encoding":"inplace","label":"struct MoonDAO.message_read_struct","members":[{"astId":2367,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"message_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2369,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":2371,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"wallet","offset":0,"slot":"2","type":"t_string_storage"},{"astId":2373,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"msg_type","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(message_struct)2365_storage":{"encoding":"inplace","label":"struct MoonDAO.message_struct","members":[{"astId":2358,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"message_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2360,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":2362,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"message","offset":0,"slot":"2","type":"t_string_storage"},{"astId":2364,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"sender","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(reply_struct)2383_storage":{"encoding":"inplace","label":"struct MoonDAO.reply_struct","members":[{"astId":2376,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"reply_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2378,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"message_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":2380,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"ideas_id","offset":0,"slot":"2","type":"t_uint256"},{"astId":2382,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"message","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(smart_contract_uri_struct)2349_storage":{"encoding":"inplace","label":"struct MoonDAO.smart_contract_uri_struct","members":[{"astId":2344,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"smart_contract_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2346,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":2348,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"smart_contract_uri","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(user_badge_struct)2412_storage":{"encoding":"inplace","label":"struct MoonDAO.user_badge_struct","members":[{"astId":2395,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"wallet","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2397,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"dao","offset":0,"slot":"1","type":"t_bool"},{"astId":2399,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"joined","offset":1,"slot":"1","type":"t_bool"},{"astId":2401,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"goal","offset":2,"slot":"1","type":"t_bool"},{"astId":2403,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"ideas","offset":3,"slot":"1","type":"t_bool"},{"astId":2405,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"vote","offset":4,"slot":"1","type":"t_bool"},{"astId":2407,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"donation","offset":5,"slot":"1","type":"t_bool"},{"astId":2409,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"comment","offset":6,"slot":"1","type":"t_bool"},{"astId":2411,"contract":"contracts/MoonDAO.sol:MoonDAO","label":"reply","offset":7,"slot":"1","type":"t_bool"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/precompiles/Batch.sol":{"Batch":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"}],"name":"SubcallFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"}],"name":"SubcallSucceeded","type":"event"},{"inputs":[{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"uint256[]","name":"value","type":"uint256[]"},{"internalType":"bytes[]","name":"callData","type":"bytes[]"},{"internalType":"uint64[]","name":"gasLimit","type":"uint64[]"}],"name":"batchAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"uint256[]","name":"value","type":"uint256[]"},{"internalType":"bytes[]","name":"callData","type":"bytes[]"},{"internalType":"uint64[]","name":"gasLimit","type":"uint64[]"}],"name":"batchSome","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"uint256[]","name":"value","type":"uint256[]"},{"internalType":"bytes[]","name":"callData","type":"bytes[]"},{"internalType":"uint64[]","name":"gasLimit","type":"uint64[]"}],"name":"batchSomeUntilFailure","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"The Moonbeam Team","custom:address":"0x0000000000000000000000000000000000000808","details":"Allows to perform multiple calls throught one call to the precompile. Can be used by EOA to do multiple calls in a single transaction.","kind":"dev","methods":{"batchAll(address[],uint256[],bytes[],uint64[])":{"custom:selector":"96e292b8","details":"Batch multiple calls into a single transaction. All calls are performed from the address calling this precompile. In case of one subcall reverting, the entire batch will revert.","params":{"callData":"Call data for each `to` address. If array is shorter than \"to\" then additional calls will be performed with an empty call data.","gasLimit":"Gas limit for each `to` address. Use 0 to forward all the remaining gas. If array is shorter than \"to\" then the remaining gas available will be used.","to":"List of addresses to call.","value":"List of values for each subcall. If array is shorter than \"to\" then additional calls will be performed with a value of 0."}},"batchSome(address[],uint256[],bytes[],uint64[])":{"custom:selector":"79df4b9c","details":"Batch multiple calls into a single transaction. All calls are performed from the address calling this precompile. In case of one subcall reverting following subcalls will still be attempted.","params":{"callData":"Call data for each `to` address. If array is shorter than \"to\" then additional calls will be performed with an empty call data.","gasLimit":"Gas limit for each `to` address. Use 0 to forward all the remaining gas. If array is shorter than \"to\" then the remaining gas available will be used.","to":"List of addresses to call.","value":"List of values for each subcall. If array is shorter than \"to\" then additional calls will be performed with a value of 0."}},"batchSomeUntilFailure(address[],uint256[],bytes[],uint64[])":{"custom:selector":"cf0491c7","details":"Batch multiple calls into a single transaction. All calls are performed from the address calling this precompile. In case of one subcall reverting, no more subcalls will be executed but the batch transaction will succeed. Use batchAll to revert on any subcall revert.","params":{"callData":"Call data for each `to` address. If array is shorter than \"to\" then additional calls will be performed with an empty call data.","gasLimit":"Gas limit for each `to` address. Use 0 to forward all the remaining gas. If array is shorter than \"to\" then the remaining gas available will be used.","to":"List of addresses to call.","value":"List of values for each subcall. If array is shorter than \"to\" then additional calls will be performed with a value of 0."}}},"title":"Batch precompile","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"batchAll(address[],uint256[],bytes[],uint64[])":"96e292b8","batchSome(address[],uint256[],bytes[],uint64[])":"79df4b9c","batchSomeUntilFailure(address[],uint256[],bytes[],uint64[])":"cf0491c7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"SubcallFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"SubcallSucceeded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"callData\",\"type\":\"bytes[]\"},{\"internalType\":\"uint64[]\",\"name\":\"gasLimit\",\"type\":\"uint64[]\"}],\"name\":\"batchAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"callData\",\"type\":\"bytes[]\"},{\"internalType\":\"uint64[]\",\"name\":\"gasLimit\",\"type\":\"uint64[]\"}],\"name\":\"batchSome\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"callData\",\"type\":\"bytes[]\"},{\"internalType\":\"uint64[]\",\"name\":\"gasLimit\",\"type\":\"uint64[]\"}],\"name\":\"batchSomeUntilFailure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Moonbeam Team\",\"custom:address\":\"0x0000000000000000000000000000000000000808\",\"details\":\"Allows to perform multiple calls throught one call to the precompile. Can be used by EOA to do multiple calls in a single transaction.\",\"kind\":\"dev\",\"methods\":{\"batchAll(address[],uint256[],bytes[],uint64[])\":{\"custom:selector\":\"96e292b8\",\"details\":\"Batch multiple calls into a single transaction. All calls are performed from the address calling this precompile. In case of one subcall reverting, the entire batch will revert.\",\"params\":{\"callData\":\"Call data for each `to` address. If array is shorter than \\\"to\\\" then additional calls will be performed with an empty call data.\",\"gasLimit\":\"Gas limit for each `to` address. Use 0 to forward all the remaining gas. If array is shorter than \\\"to\\\" then the remaining gas available will be used.\",\"to\":\"List of addresses to call.\",\"value\":\"List of values for each subcall. If array is shorter than \\\"to\\\" then additional calls will be performed with a value of 0.\"}},\"batchSome(address[],uint256[],bytes[],uint64[])\":{\"custom:selector\":\"79df4b9c\",\"details\":\"Batch multiple calls into a single transaction. All calls are performed from the address calling this precompile. In case of one subcall reverting following subcalls will still be attempted.\",\"params\":{\"callData\":\"Call data for each `to` address. If array is shorter than \\\"to\\\" then additional calls will be performed with an empty call data.\",\"gasLimit\":\"Gas limit for each `to` address. Use 0 to forward all the remaining gas. If array is shorter than \\\"to\\\" then the remaining gas available will be used.\",\"to\":\"List of addresses to call.\",\"value\":\"List of values for each subcall. If array is shorter than \\\"to\\\" then additional calls will be performed with a value of 0.\"}},\"batchSomeUntilFailure(address[],uint256[],bytes[],uint64[])\":{\"custom:selector\":\"cf0491c7\",\"details\":\"Batch multiple calls into a single transaction. All calls are performed from the address calling this precompile. In case of one subcall reverting, no more subcalls will be executed but the batch transaction will succeed. Use batchAll to revert on any subcall revert.\",\"params\":{\"callData\":\"Call data for each `to` address. If array is shorter than \\\"to\\\" then additional calls will be performed with an empty call data.\",\"gasLimit\":\"Gas limit for each `to` address. Use 0 to forward all the remaining gas. If array is shorter than \\\"to\\\" then the remaining gas available will be used.\",\"to\":\"List of addresses to call.\",\"value\":\"List of values for each subcall. If array is shorter than \\\"to\\\" then additional calls will be performed with a value of 0.\"}}},\"title\":\"Batch precompile\",\"version\":1},\"userdoc\":{\"events\":{\"SubcallFailed(uint256)\":{\"notice\":\"Emitted when a subcall fails.\"},\"SubcallSucceeded(uint256)\":{\"notice\":\"Emitted when a subcall succeeds.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/Batch.sol\":\"Batch\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/precompiles/Batch.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.8.3;\\n\\n/// @dev The Batch contract's address.\\naddress constant BATCH_ADDRESS = 0x0000000000000000000000000000000000000808;\\n\\n/// @dev The Batch contract's instance.\\nBatch constant BATCH_CONTRACT = Batch(BATCH_ADDRESS);\\n\\n/// @author The Moonbeam Team\\n/// @title Batch precompile\\n/// @dev Allows to perform multiple calls throught one call to the precompile.\\n/// Can be used by EOA to do multiple calls in a single transaction.\\n/// @custom:address 0x0000000000000000000000000000000000000808\\ninterface Batch {\\n    /// @dev Batch multiple calls into a single transaction.\\n    /// All calls are performed from the address calling this precompile.\\n    ///\\n    /// In case of one subcall reverting following subcalls will still be attempted.\\n    ///\\n    /// @param to List of addresses to call.\\n    /// @param value List of values for each subcall. If array is shorter than \\\"to\\\" then additional\\n    /// calls will be performed with a value of 0.\\n    /// @param callData Call data for each `to` address. If array is shorter than \\\"to\\\" then\\n    /// additional calls will be performed with an empty call data.\\n    /// @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\\n    /// If array is shorter than \\\"to\\\" then the remaining gas available will be used.\\n    /// @custom:selector 79df4b9c\\n    function batchSome(\\n        address[] memory to,\\n        uint256[] memory value,\\n        bytes[] memory callData,\\n        uint64[] memory gasLimit\\n    ) external;\\n\\n    /// @dev Batch multiple calls into a single transaction.\\n    /// All calls are performed from the address calling this precompile.\\n    ///\\n    /// In case of one subcall reverting, no more subcalls will be executed but\\n    /// the batch transaction will succeed. Use batchAll to revert on any subcall revert.\\n    ///\\n    /// @param to List of addresses to call.\\n    /// @param value List of values for each subcall. If array is shorter than \\\"to\\\" then additional\\n    /// calls will be performed with a value of 0.\\n    /// @param callData Call data for each `to` address. If array is shorter than \\\"to\\\" then\\n    /// additional calls will be performed with an empty call data.\\n    /// @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\\n    /// If array is shorter than \\\"to\\\" then the remaining gas available will be used.\\n    /// @custom:selector cf0491c7\\n    function batchSomeUntilFailure(\\n        address[] memory to,\\n        uint256[] memory value,\\n        bytes[] memory callData,\\n        uint64[] memory gasLimit\\n    ) external;\\n\\n    /// @dev Batch multiple calls into a single transaction.\\n    /// All calls are performed from the address calling this precompile.\\n    ///\\n    /// In case of one subcall reverting, the entire batch will revert.\\n    ///\\n    /// @param to List of addresses to call.\\n    /// @param value List of values for each subcall. If array is shorter than \\\"to\\\" then additional\\n    /// calls will be performed with a value of 0.\\n    /// @param callData Call data for each `to` address. If array is shorter than \\\"to\\\" then\\n    /// additional calls will be performed with an empty call data.\\n    /// @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\\n    /// If array is shorter than \\\"to\\\" then the remaining gas available will be used.\\n    /// @custom:selector 96e292b8\\n    function batchAll(\\n        address[] memory to,\\n        uint256[] memory value,\\n        bytes[] memory callData,\\n        uint64[] memory gasLimit\\n    ) external;\\n\\n    /// Emitted when a subcall succeeds.\\n    event SubcallSucceeded(uint256 index);\\n\\n    /// Emitted when a subcall fails.\\n    event SubcallFailed(uint256 index);\\n}\",\"keccak256\":\"0xfcf0987df54c887c3e6b94e85ffdf830c65f817477c1ca36a385f0efbe9a7917\",\"license\":\"GPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"SubcallFailed(uint256)":{"notice":"Emitted when a subcall fails."},"SubcallSucceeded(uint256)":{"notice":"Emitted when a subcall succeeds."}},"kind":"user","methods":{},"version":1}}},"contracts/precompiles/InterchainAccountRouter.sol":{"IInterchainAccountRouter":{"abi":[{"inputs":[{"internalType":"uint32","name":"_destinationDomain","type":"uint32"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"callRemote","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_destination","type":"uint32"},{"internalType":"address","name":"_owner","type":"address"}],"name":"getRemoteInterchainAccount","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"callRemote(uint32,address,uint256,bytes)":"1ddce514","getRemoteInterchainAccount(uint32,address)":"0e258285"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"callRemote\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_destination\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getRemoteInterchainAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/InterchainAccountRouter.sol\":\"IInterchainAccountRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"contracts/precompiles/InterchainAccountRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.6.11;\\n\\nimport {CallLib} from \\\"./libs/Call.sol\\\";\\n\\ninterface IInterchainAccountRouter {\\n    function callRemote(\\n        uint32 _destinationDomain,\\n         address to,\\n        uint256 value,\\n        bytes memory data\\n    ) external returns (bytes32);\\n\\n    function getRemoteInterchainAccount(uint32 _destination, address _owner)\\n        external\\n        view\\n        returns (address);\\n}\\n\",\"keccak256\":\"0xe7827c13219625fe05975850257d586d8855097486908cc05dee8c2dd0974c87\",\"license\":\"MIT OR Apache-2.0\"},\"contracts/precompiles/libs/Call.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.13;\\n\\nimport {Address} from \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\n\\nimport {TypeCasts} from \\\"./TypeCasts.sol\\\";\\n\\nlibrary CallLib {\\n    struct StaticCall {\\n        // supporting non EVM targets\\n        bytes32 to;\\n        bytes data;\\n    }\\n\\n    struct Call {\\n        // supporting non EVM targets\\n        bytes32 to;\\n        uint256 value;\\n        bytes data;\\n    }\\n\\n    struct StaticCallWithCallback {\\n        StaticCall _call;\\n        bytes callback;\\n    }\\n\\n    function call(Call memory _call)\\n        internal\\n        returns (bytes memory returnData)\\n    {\\n        return\\n            Address.functionCallWithValue(\\n                TypeCasts.bytes32ToAddress(_call.to),\\n                _call.data,\\n                _call.value\\n            );\\n    }\\n\\n    function staticcall(StaticCall memory _call)\\n        private\\n        view\\n        returns (bytes memory)\\n    {\\n        return\\n            Address.functionStaticCall(\\n                TypeCasts.bytes32ToAddress(_call.to),\\n                _call.data\\n            );\\n    }\\n\\n    function staticcall(StaticCallWithCallback memory _call)\\n        internal\\n        view\\n        returns (bytes memory callback)\\n    {\\n        return bytes.concat(_call.callback, staticcall(_call._call));\\n    }\\n\\n    function multicall(Call[] memory calls) internal {\\n        uint256 i = 0;\\n        uint256 len = calls.length;\\n        while (i < len) {\\n            call(calls[i]);\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function multistaticcall(StaticCallWithCallback[] memory _calls)\\n        internal\\n        view\\n        returns (bytes[] memory)\\n    {\\n        uint256 i = 0;\\n        uint256 len = _calls.length;\\n        bytes[] memory callbacks = new bytes[](len);\\n        while (i < len) {\\n            callbacks[i] = staticcall(_calls[i]);\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n        return callbacks;\\n    }\\n\\n    function multicallto(address to, bytes[] memory calls) internal {\\n        uint256 i = 0;\\n        uint256 len = calls.length;\\n        while (i < len) {\\n            Address.functionCall(to, calls[i]);\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function build(bytes32 to, bytes memory data)\\n        internal\\n        pure\\n        returns (StaticCall memory)\\n    {\\n        return StaticCall(to, data);\\n    }\\n\\n    function build(address to, bytes memory data)\\n        internal\\n        pure\\n        returns (StaticCall memory)\\n    {\\n        return build(TypeCasts.addressToBytes32(to), data);\\n    }\\n\\n    function build(\\n        bytes32 to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal pure returns (Call memory) {\\n        return Call(to, value, data);\\n    }\\n\\n    function build(\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal pure returns (Call memory) {\\n        return Call(TypeCasts.addressToBytes32(to), value, data);\\n    }\\n\\n    function build(\\n        bytes32 to,\\n        bytes memory data,\\n        bytes memory callback\\n    ) internal pure returns (StaticCallWithCallback memory) {\\n        return StaticCallWithCallback(build(to, data), callback);\\n    }\\n\\n    function build(\\n        address to,\\n        bytes memory data,\\n        bytes memory callback\\n    ) internal pure returns (StaticCallWithCallback memory) {\\n        return StaticCallWithCallback(build(to, data), callback);\\n    }\\n}\",\"keccak256\":\"0x2693fa7fcae2cd6bca27985dcc167bf31449f3214e9ded58b0dd1d7afa486f91\",\"license\":\"Apache-2.0\"},\"contracts/precompiles/libs/TypeCasts.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.6.11;\\n\\nlibrary TypeCasts {\\n    // alignment preserving cast\\n    function addressToBytes32(address _addr) internal pure returns (bytes32) {\\n        return bytes32(uint256(uint160(_addr)));\\n    }\\n\\n    // alignment preserving cast\\n    function bytes32ToAddress(bytes32 _buf) internal pure returns (address) {\\n        return address(uint160(uint256(_buf)));\\n    }\\n}\",\"keccak256\":\"0x80776a1b0d8a74abdca8f68ce6df4fec6bd0aabaf9eb0e07c2c5e5bb93cc0df9\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/precompiles/InterchainGasPaymaster.sol":{"IInterchainGasPaymaster":{"abi":[{"inputs":[{"internalType":"bytes32","name":"_messageId","type":"bytes32"},{"internalType":"uint32","name":"_destinationDomain","type":"uint32"},{"internalType":"uint256","name":"_gasAmount","type":"uint256"},{"internalType":"address","name":"_refundAddress","type":"address"}],"name":"payForGas","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"payForGas(bytes32,uint32,uint256,address)":"11bf2c18"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"_destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_gasAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_refundAddress\",\"type\":\"address\"}],\"name\":\"payForGas\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/InterchainGasPaymaster.sol\":\"IInterchainGasPaymaster\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/precompiles/InterchainGasPaymaster.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.6.11;\\n\\ninterface IInterchainGasPaymaster {\\n    function payForGas(\\n        bytes32 _messageId,\\n         uint32 _destinationDomain,\\n        uint256 _gasAmount,\\n        address _refundAddress\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x4d5188f3ca02d35fc6da457ad3d195ba6299232e9976df1cc869bf9a627a9860\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/precompiles/PriceFeed.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"decimals()\":{\"notice\":\"Returns the decimals to offset on the getLatestPrice call\"},\"description()\":{\"notice\":\"Returns the description of the underlying price feed aggregator\"},\"getRoundData(uint80)\":{\"notice\":\"Returns price data about a specific round\"},\"latestRoundData()\":{\"notice\":\"Returns price data from the latest round\"},\"version()\":{\"notice\":\"Returns the version number representing the type of aggregator the proxy points to\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/PriceFeed.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/precompiles/PriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n    /**\\n     * Returns the decimals to offset on the getLatestPrice call\\n     */\\n    function decimals() external view returns (uint8);\\n\\n    /**\\n     * Returns the description of the underlying price feed aggregator\\n     */\\n    function description() external view returns (string memory);\\n\\n    /**\\n     * Returns the version number representing the type of aggregator the proxy points to\\n     */\\n    function version() external view returns (uint256);\\n\\n    /**\\n     * Returns price data about a specific round\\n     */\\n    function getRoundData(uint80 _roundId) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n    /**\\n     * Returns price data from the latest round\\n     */\\n    function latestRoundData() external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x7c48033e36218c383461610560e3f1d7d74569bdbcc872b6ebd1f320e8a7e2a4\",\"license\":\"GPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"decimals()":{"notice":"Returns the decimals to offset on the getLatestPrice call"},"description()":{"notice":"Returns the description of the underlying price feed aggregator"},"getRoundData(uint80)":{"notice":"Returns price data about a specific round"},"latestRoundData()":{"notice":"Returns price data from the latest round"},"version()":{"notice":"Returns the version number representing the type of aggregator the proxy points to"}},"version":1}}},"contracts/precompiles/libs/Call.sol":{"CallLib":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122070103c6e604bf1241e5a26fe21e291274997ff6e4da5fe7790faec993c28073764736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x103C6E604BF1241E5A26FE21E291274997 SELFDESTRUCT PUSH15 0x4DA5FE7790FAEC993C28073764736F PUSH13 0x63430008110033000000000000 ","sourceMap":"177:3280:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122070103c6e604bf1241e5a26fe21e291274997ff6e4da5fe7790faec993c28073764736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x103C6E604BF1241E5A26FE21E291274997 SELFDESTRUCT PUSH15 0x4DA5FE7790FAEC993C28073764736F PUSH13 0x63430008110033000000000000 ","sourceMap":"177:3280:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"build(address,bytes memory)":"infinite","build(address,bytes memory,bytes memory)":"infinite","build(address,uint256,bytes memory)":"infinite","build(bytes32,bytes memory)":"infinite","build(bytes32,bytes memory,bytes memory)":"infinite","build(bytes32,uint256,bytes memory)":"infinite","call(struct CallLib.Call memory)":"infinite","multicall(struct CallLib.Call memory[] memory)":"infinite","multicallto(address,bytes memory[] memory)":"infinite","multistaticcall(struct CallLib.StaticCallWithCallback memory[] memory)":"infinite","staticcall(struct CallLib.StaticCall memory)":"infinite","staticcall(struct CallLib.StaticCallWithCallback memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/libs/Call.sol\":\"CallLib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"contracts/precompiles/libs/Call.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.13;\\n\\nimport {Address} from \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\n\\nimport {TypeCasts} from \\\"./TypeCasts.sol\\\";\\n\\nlibrary CallLib {\\n    struct StaticCall {\\n        // supporting non EVM targets\\n        bytes32 to;\\n        bytes data;\\n    }\\n\\n    struct Call {\\n        // supporting non EVM targets\\n        bytes32 to;\\n        uint256 value;\\n        bytes data;\\n    }\\n\\n    struct StaticCallWithCallback {\\n        StaticCall _call;\\n        bytes callback;\\n    }\\n\\n    function call(Call memory _call)\\n        internal\\n        returns (bytes memory returnData)\\n    {\\n        return\\n            Address.functionCallWithValue(\\n                TypeCasts.bytes32ToAddress(_call.to),\\n                _call.data,\\n                _call.value\\n            );\\n    }\\n\\n    function staticcall(StaticCall memory _call)\\n        private\\n        view\\n        returns (bytes memory)\\n    {\\n        return\\n            Address.functionStaticCall(\\n                TypeCasts.bytes32ToAddress(_call.to),\\n                _call.data\\n            );\\n    }\\n\\n    function staticcall(StaticCallWithCallback memory _call)\\n        internal\\n        view\\n        returns (bytes memory callback)\\n    {\\n        return bytes.concat(_call.callback, staticcall(_call._call));\\n    }\\n\\n    function multicall(Call[] memory calls) internal {\\n        uint256 i = 0;\\n        uint256 len = calls.length;\\n        while (i < len) {\\n            call(calls[i]);\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function multistaticcall(StaticCallWithCallback[] memory _calls)\\n        internal\\n        view\\n        returns (bytes[] memory)\\n    {\\n        uint256 i = 0;\\n        uint256 len = _calls.length;\\n        bytes[] memory callbacks = new bytes[](len);\\n        while (i < len) {\\n            callbacks[i] = staticcall(_calls[i]);\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n        return callbacks;\\n    }\\n\\n    function multicallto(address to, bytes[] memory calls) internal {\\n        uint256 i = 0;\\n        uint256 len = calls.length;\\n        while (i < len) {\\n            Address.functionCall(to, calls[i]);\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function build(bytes32 to, bytes memory data)\\n        internal\\n        pure\\n        returns (StaticCall memory)\\n    {\\n        return StaticCall(to, data);\\n    }\\n\\n    function build(address to, bytes memory data)\\n        internal\\n        pure\\n        returns (StaticCall memory)\\n    {\\n        return build(TypeCasts.addressToBytes32(to), data);\\n    }\\n\\n    function build(\\n        bytes32 to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal pure returns (Call memory) {\\n        return Call(to, value, data);\\n    }\\n\\n    function build(\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal pure returns (Call memory) {\\n        return Call(TypeCasts.addressToBytes32(to), value, data);\\n    }\\n\\n    function build(\\n        bytes32 to,\\n        bytes memory data,\\n        bytes memory callback\\n    ) internal pure returns (StaticCallWithCallback memory) {\\n        return StaticCallWithCallback(build(to, data), callback);\\n    }\\n\\n    function build(\\n        address to,\\n        bytes memory data,\\n        bytes memory callback\\n    ) internal pure returns (StaticCallWithCallback memory) {\\n        return StaticCallWithCallback(build(to, data), callback);\\n    }\\n}\",\"keccak256\":\"0x2693fa7fcae2cd6bca27985dcc167bf31449f3214e9ded58b0dd1d7afa486f91\",\"license\":\"Apache-2.0\"},\"contracts/precompiles/libs/TypeCasts.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.6.11;\\n\\nlibrary TypeCasts {\\n    // alignment preserving cast\\n    function addressToBytes32(address _addr) internal pure returns (bytes32) {\\n        return bytes32(uint256(uint160(_addr)));\\n    }\\n\\n    // alignment preserving cast\\n    function bytes32ToAddress(bytes32 _buf) internal pure returns (address) {\\n        return address(uint160(uint256(_buf)));\\n    }\\n}\",\"keccak256\":\"0x80776a1b0d8a74abdca8f68ce6df4fec6bd0aabaf9eb0e07c2c5e5bb93cc0df9\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/precompiles/libs/TypeCasts.sol":{"TypeCasts":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122027038f0aa4a082eaf925bf4ec82d5ba08faba863aa921b8de86683b877e9d4be64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 SUB DUP16 EXP LOG4 LOG0 DUP3 0xEA 0xF9 0x25 0xBF 0x4E 0xC8 0x2D JUMPDEST LOG0 DUP16 0xAB 0xA8 PUSH4 0xAA921B8D 0xE8 PUSH7 0x83B877E9D4BE64 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"73:354:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122027038f0aa4a082eaf925bf4ec82d5ba08faba863aa921b8de86683b877e9d4be64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 SUB DUP16 EXP LOG4 LOG0 DUP3 0xEA 0xF9 0x25 0xBF 0x4E 0xC8 0x2D JUMPDEST LOG0 DUP16 0xAB 0xA8 PUSH4 0xAA921B8D 0xE8 PUSH7 0x83B877E9D4BE64 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"73:354:15:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"addressToBytes32(address)":"infinite","bytes32ToAddress(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/libs/TypeCasts.sol\":\"TypeCasts\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/precompiles/libs/TypeCasts.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.6.11;\\n\\nlibrary TypeCasts {\\n    // alignment preserving cast\\n    function addressToBytes32(address _addr) internal pure returns (bytes32) {\\n        return bytes32(uint256(uint160(_addr)));\\n    }\\n\\n    // alignment preserving cast\\n    function bytes32ToAddress(bytes32 _buf) internal pure returns (address) {\\n        return address(uint160(uint256(_buf)));\\n    }\\n}\",\"keccak256\":\"0x80776a1b0d8a74abdca8f68ce6df4fec6bd0aabaf9eb0e07c2c5e5bb93cc0df9\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}