{"id":"4c7c7143f00aa3ee7375ce3187a3b2e2","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/HyperContract.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\r\npragma solidity >=0.6.11;\r\nimport \"./precompiles/InterchainAccountRouter.sol\";\r\nimport \"./precompiles/InterchainGasPaymaster.sol\";\r\nimport {CallLib} from \"./precompiles/libs/Call.sol\";\r\n\r\ncontract HyperContract {\r\n    bytes32 public lastMessageID ;\r\n    function sendTransaction(\r\n        uint32 ethereumDomain,\r\n        address routerAddress,\r\n        address toAddress,\r\n        uint256 value,\r\n        bytes memory data\r\n    ) public {\r\n        IInterchainAccountRouter router = IInterchainAccountRouter(\r\n            routerAddress\r\n        );\r\n        lastMessageID = router.callRemote(\r\n            ethereumDomain,\r\n            (toAddress),\r\n            value,\r\n            data\r\n        );\r\n    }\r\n\r\n function processMessage(\r\n        uint32 ethereumDomain,\r\n        address igpAddress,\r\n        uint256 gasAmount\r\n    ) public payable {\r\n      \r\n        // The testnet DefaultIsmInterchainGasPaymaster\r\n        IInterchainGasPaymaster igp = IInterchainGasPaymaster(igpAddress);\r\n        igp.payForGas{value: msg.value}(\r\n            // The ID of the message\r\n            lastMessageID,\r\n            // Destination domain\r\n            ethereumDomain,\r\n            // The total gas amount. This should be the\r\n            // overhead gas amount + gas used by the call being made\r\n            gasAmount,\r\n            // Refund the msg.sender\r\n            msg.sender\r\n        );\r\n    }\r\n\r\n    \r\n}\r\n"},"contracts/PlanetDAO.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport '@openzeppelin/contracts/utils/Strings.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\n\r\ncontract PlanetDAO {\r\n    struct dao_uri_struct {\r\n        string dao_wallet;\r\n        string dao_uri;\r\n        string finished;\r\n    }\r\n    struct goal_uri_struct {\r\n        string dao_id;\r\n        string goal_uri;\r\n    }\r\n\r\n    struct ideas_uri_struct {\r\n        uint256 goal_id;\r\n        string ideas_uri;\r\n        uint256 donation;\r\n    }\r\n\r\n    struct donation_struct {\r\n        uint256 ideas_id;\r\n        uint256 userid;\r\n        uint256 donation;\r\n    }\r\n\r\n    struct smart_contract_uri_struct {\r\n        uint256 smart_contract_id;\r\n        uint256 ideas_id;\r\n        string smart_contract_uri;\r\n    }\r\n    struct goal_ideas_votes_struct {\r\n        uint256 goal_id;\r\n        uint256 ideas_id;\r\n        uint256 user_id;\r\n    }\r\n    struct message_struct {\r\n        uint256 message_id;\r\n        uint256 ideas_id;\r\n        string message;\r\n        string sender;\r\n    }\r\n    struct message_read_struct {\r\n        uint256 message_id;\r\n        uint256 ideas_id;\r\n        uint256 user_id;\r\n        string msg_type;\r\n    }\r\n    struct reply_struct {\r\n        uint256 reply_id;\r\n        uint256 message_id;\r\n        uint256 ideas_id;\r\n        string message;\r\n    }\r\n\r\n    struct UnbondingRequest {\r\n        int64 completionTime;\r\n        uint256 amount;\r\n    }\r\n\r\n    struct join_struct {\r\n        uint256 daoid;\r\n        uint256 user_id;\r\n    }\r\n\r\n    struct user_badge_struct {\r\n        uint256 user_id;\r\n        bool dao;\r\n        bool joined;\r\n        bool goal;\r\n        bool ideas;\r\n        bool vote;\r\n        bool donation;\r\n        bool comment;\r\n        bool reply;\r\n    }\r\n    \r\n    struct feed_struct {\r\n        uint256 feed_id;\r\n        uint256 date;\r\n        string Type;\r\n        string data;\r\n    }\r\n    uint256 public _dao_ids;\r\n    uint256 public _donations_ids;\r\n    uint256 public _goal_ids;\r\n    uint256 public _ideas_ids;\r\n    uint256 public _join_ids;\r\n    uint256 public _smart_contract_ids;\r\n    uint256 public _ideas_vote_ids;\r\n    uint256 public _message_ids;\r\n    uint256 public _message_read_ids;\r\n    uint256 public _reply_ids;\r\n    uint256 public _feed_ids;\r\n    mapping(uint256 => dao_uri_struct) public _dao_uris; //_dao_ids              => (Dao)                    Dao Wallet + Dao URI   + Finished\r\n    mapping(uint256 => string) public _template_uris; //_dao_ids              => (Dao)                   Template HTML Code\r\n    mapping(uint256 => join_struct) public _joined_person; //_join_ids             => (Dao)                  join_struct\r\n\r\n    mapping(uint256 => goal_uri_struct) public _goal_uris; //_goal_ids             => (Goal)                   Dao ID + Goal URI\r\n    mapping(uint256 => ideas_uri_struct) public _ideas_uris; //_ideas_ids            => (Ideas)                  Goal ID + Ideas URI\r\n    mapping(uint256 => uint256) public _donated; //uint256            => (Donated to ideas)                amount\r\n    mapping(uint256 => feed_struct) public _feeds; //_feed_ids            => (feed_struct)\r\n    mapping(uint256 => donation_struct) public _donations; //uint256            => donation_struct\r\n    mapping(uint256 => smart_contract_uri_struct) public _smart_contracts_uris; //_smart_contract_ids   => (Ideas Smart contract)   Goal ID + Ideas URI\r\n    mapping(uint256 => goal_ideas_votes_struct) public all_goal_ideas_votes; //_ideas_vote_ids       => (Vote)                   Goal ID + Ideas ID + User Id\r\n\r\n    mapping(uint256 => message_struct) public all_messages; // all_messages        => _message_ids + message_struct\r\n\r\n    mapping(uint256 => message_read_struct) public all_read_messages; // all_read_messages        => _message_read_ids + message_read_struct\r\n\r\n    mapping(uint256 => reply_struct) public all_replies; // all_messages        => _reply_ids + reply_struct\r\n    mapping(uint256 => user_badge_struct) public _user_badges; //user_id            => user_badge_struct\r\n\r\n    //Daos\r\n    function create_dao(string memory _dao_wallet, string memory _dao_uri, string memory _template,uint256 user_id) public returns (uint256) {\r\n        //Create Dao into _dao_uris\r\n        _dao_uris[_dao_ids] = dao_uri_struct(_dao_wallet, _dao_uri, 'False');\r\n        _template_uris[_dao_ids] = _template;\r\n        _user_badges[user_id].dao = true;\r\n        _dao_ids++;\r\n\r\n        return _dao_ids;\r\n    }\r\n\r\n    function update_template(uint256 _dao_id, string memory _template) public {\r\n        _template_uris[_dao_id] = _template;\r\n    }\r\n\r\n    function set_dao(uint256 _dao_id, string memory _dao_wallet, string memory _dao_uri) public {\r\n        //Set Dao of wallet and uri\r\n        _dao_uris[_dao_id].dao_wallet = _dao_wallet;\r\n        _dao_uris[_dao_id].dao_uri = _dao_uri;\r\n    }\r\n\r\n    function get_all_daos() public view returns (string[] memory) {\r\n        //Getting all doas\r\n        string[] memory _StoreInfo = new string[](_dao_ids);\r\n        for (uint256 i = 0; i < _dao_ids; i++) {\r\n            _StoreInfo[i] = _dao_uris[i].dao_uri;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function dao_uri(uint256 _dao_id) public view returns (string memory) {\r\n        //Getting one dao URI\r\n        return _dao_uris[_dao_id].dao_uri;\r\n    }\r\n\r\n    function add_Feed(string memory feed_text,string memory _type) public {\r\n         _feeds[_feed_ids] = feed_struct(_feed_ids,block.timestamp,_type,feed_text);\r\n         _feed_ids++;\r\n    }\r\n\r\n    //Goals\r\n    function create_goal(string memory _goal_uri, string memory  _dao_id,uint256 _user_id, string memory _feed) public returns (uint256) {\r\n        //Create goal into _goal_uris\r\n        _goal_uris[_goal_ids] = goal_uri_struct(_dao_id, _goal_uri);\r\n       \r\n        _user_badges[_user_id].goal = true;\r\n        _goal_ids++;\r\n        add_Feed(_feed,\"goal\");\r\n\r\n        return _goal_ids;\r\n    }\r\n\r\n    function set_goal(uint256 _goal_id, string memory _goal_uri) public {\r\n        //Set goal uri\r\n        _goal_uris[_goal_id].goal_uri = _goal_uri;\r\n    }\r\n\r\n    function get_all_goals() public view returns (string[] memory) {\r\n        //Getting all goals\r\n        string[] memory _StoreInfo = new string[](_goal_ids);\r\n        for (uint256 i = 0; i < _goal_ids; i++) {\r\n            _StoreInfo[i] = _goal_uris[i].goal_uri;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_all_goals_by_dao_id(string memory _dao_id) public view returns (string[] memory) {\r\n        //Getting all goals by dao id\r\n        string[] memory _StoreInfo = new string[](_goal_ids);\r\n        uint256 _store_id;\r\n        for (uint256 i = 0; i < _goal_ids; i++) {\r\n            if (keccak256(bytes(_goal_uris[i].dao_id)) == keccak256(bytes(_dao_id))) {\r\n                _StoreInfo[_store_id] = _goal_uris[i].goal_uri;\r\n                _store_id++;\r\n            }\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_goal_id_by_goal_uri(string memory _goal_uri) public view returns (uint256) {\r\n        //Getting goal id by uri\r\n        for (uint256 i = 0; i < _goal_ids; i++) {\r\n            if (keccak256(bytes(_goal_uris[i].goal_uri)) == keccak256(bytes(_goal_uri))) return i;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function goal_uri(uint256 _goal_id) public view returns (string memory) {\r\n        //Getting one goal URI\r\n        return _goal_uris[_goal_id].goal_uri;\r\n    }\r\n\r\n    //Ideas\r\n    function create_ideas(string memory _ideas_uri, uint256 _goal_id, string[] memory _smart_contracts,uint256 _user_id, string memory _feed) public returns (uint256) {\r\n        //Create ideas into _ideas_uris\r\n        _ideas_uris[_ideas_ids] = ideas_uri_struct(_goal_id, _ideas_uri, 0);\r\n        _user_badges[_user_id].ideas = true;\r\n        _ideas_ids++;\r\n\r\n        for (uint256 i = 0; i < _smart_contracts.length; i++) {\r\n            create_ideas_smart_contract(_ideas_ids, _smart_contract_ids, _smart_contracts[i]);\r\n            _smart_contract_ids++;\r\n        }\r\n        add_Feed(_feed,\"idea\");\r\n\r\n        return _ideas_ids;\r\n    }\r\n\r\n    function create_ideas_smart_contract(uint256 _ideas_id, uint256 _smart_contract_id, string memory _smart_contract) private {\r\n        _smart_contracts_uris[_smart_contract_id] = smart_contract_uri_struct(_ideas_id, _smart_contract_id, _smart_contract);\r\n    }\r\n\r\n    function set_ideas(uint256 _ideas_id, string memory _ideas_uri) public {\r\n        _ideas_uris[_ideas_id].ideas_uri = _ideas_uri;\r\n    }\r\n\r\n    function add_donation(uint256 _ideas_id, uint256 _doantion,  uint256 _userid, string memory _feed1, string memory _feed2) public {\r\n      if (_user_badges[_userid].donation == false){\r\n        add_Feed(_feed1,\"badge\");\r\n      }\r\n      add_Feed(_feed2,\"donation\");\r\n      \r\n      _user_badges[_userid].donation = true;\r\n        _ideas_uris[_ideas_id].donation += _doantion;\r\n        _donated[_userid] += _doantion;\r\n        _donations[_donations_ids] = donation_struct(_ideas_id, _userid, _doantion);\r\n        _donations_ids++;\r\n\r\n        \r\n    }\r\n\r\n    function join_community(uint256 dao_id, uint256 person, string memory _feed) public {\r\n        _user_badges[person].joined = true;\r\n        _joined_person[_join_ids] = join_struct({daoid: dao_id, user_id: person});\r\n        _join_ids++;\r\n         add_Feed(_feed,\"join\");\r\n\r\n\r\n    }\r\n\r\n    function is_person_joined( uint256 person) public view returns (bool) {\r\n \r\n        for (uint256 i = 0; i < _join_ids; i++) {\r\n            if (_joined_person[i].user_id == person) return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function get_all_ideas() public view returns (string[] memory) {\r\n        //Getting all ideas\r\n        string[] memory _StoreInfo = new string[](_ideas_ids);\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            _StoreInfo[i] = _ideas_uris[i].ideas_uri;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_all_ideas_by_goal_id(uint256 _goal_id) public view returns (string[] memory) {\r\n        //Getting all ideas by goal id\r\n        string[] memory _StoreInfo = new string[](_ideas_ids);\r\n        uint256 _store_id;\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            if (_ideas_uris[i].goal_id == _goal_id) _StoreInfo[_store_id] = _ideas_uris[i].ideas_uri;\r\n            _store_id++;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_ideas_id_by_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\r\n        //Getting ideas id by uri\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return i;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function get_goal_id_from_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\r\n        //Getting ideas id by uri\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return _ideas_uris[i].goal_id;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function ideas_uri(uint256 _ideas_id) public view returns (string memory) {\r\n        //Getting one ideas URI\r\n        return _ideas_uris[_ideas_id].ideas_uri;\r\n    }\r\n\r\n    //Votes\r\n    function create_goal_ideas_vote(uint256 _goal_id, uint256 _ideas_id, uint256 _user_id, string memory _feed) public returns (uint256) {\r\n         _user_badges[_user_id].vote = true;\r\n        //Create votes into all_goal_ideas_votes\r\n        all_goal_ideas_votes[_ideas_vote_ids] = goal_ideas_votes_struct(_goal_id, _ideas_id, _user_id);\r\n        _ideas_vote_ids++;\r\n        add_Feed(_feed,\"vote\");\r\n\r\n        return _ideas_vote_ids;\r\n    }\r\n\r\n    function get_ideas_votes_from_goal(uint256 _goal_id, uint256 _ideas_id) public view returns (uint256[] memory ) {\r\n        //gets all ideas votes from goal\r\n        uint256[] memory _StoreInfo = new uint256[](_ideas_vote_ids);\r\n        uint256 _store_id;\r\n        for (uint256 i = 0; i < _ideas_vote_ids; i++) {\r\n            if (all_goal_ideas_votes[i].goal_id == _goal_id && all_goal_ideas_votes[i].ideas_id == _ideas_id) _StoreInfo[_store_id] = all_goal_ideas_votes[i].user_id;\r\n            _store_id++;\r\n        }\r\n        return _StoreInfo;\r\n    }\r\n\r\n    //Messages\r\n    function sendMsg(uint256 _ideas_id, string memory _message, string memory _sender, uint256 _user_id) public returns (uint256) {\r\n            _user_badges[_user_id].comment = true;\r\n        //Create messsage into all_messages\r\n        all_messages[_message_ids] = message_struct(_message_ids, _ideas_id, _message, _sender);\r\n        _message_ids++;\r\n\r\n        return _message_ids;\r\n    }\r\n\r\n    function getMsgIDs(uint256 ideas_id) public view returns (uint256[] memory) {\r\n        //Getting all messages ids by idea id\r\n        uint256[] memory _All_Ideas_Messages = new uint256[](_message_ids);\r\n        uint256 _msg_id;\r\n        for (uint256 i = 0; i < _message_ids; i++) {\r\n            if (all_messages[i].ideas_id == ideas_id) {\r\n                _All_Ideas_Messages[_msg_id] = all_messages[i].message_id;\r\n                _msg_id++;\r\n            }\r\n        }\r\n\r\n        return _All_Ideas_Messages;\r\n    }\r\n\r\n    function sendReply(uint256 _message_id, string memory _reply,uint256 ideas_id,uint256 _userid) public returns (uint256) {\r\n          _user_badges[_userid].reply = true;\r\n        //Create reply into all_replies\r\n        all_replies[_reply_ids] = reply_struct(_reply_ids, _message_id,ideas_id, _reply);\r\n        _reply_ids++;\r\n\r\n        return _reply_ids;\r\n    }\r\n\r\n    function getReplyIDs(uint256 message_id) public view returns (uint256[] memory) {\r\n        //Getting all messages ids by idea id\r\n        uint256[] memory _All_Messages_Replys = new uint256[](_reply_ids);\r\n        uint256 _reply_id;\r\n        for (uint256 i = 0; i < _reply_ids; i++) {\r\n            if (all_replies[i].message_id == message_id) {\r\n                _All_Messages_Replys[_reply_id] = all_replies[i].reply_id;\r\n                _reply_id++;\r\n            }\r\n        }\r\n\r\n        return _All_Messages_Replys;\r\n    }\r\n\r\n    function sendReadMsg(uint256 _message_id, uint256 _ideas_id,uint256 _wallet, string memory msg_type) public returns (uint256) {\r\n        //Create messsage into all_messages\r\n        all_read_messages[_message_read_ids] = message_read_struct(_message_id, _ideas_id, _wallet,msg_type);\r\n        _message_read_ids++;\r\n\r\n        return _message_read_ids;\r\n    }\r\n\r\n\r\n\r\n  function getReadMsg(uint256 _message_id, string memory msg_type)  public view returns (bool) {\r\n       \r\n       bool read = false;\r\n        for (uint256 i = 0; i < _message_read_ids; i++) {\r\n            if (all_read_messages[i].message_id == _message_id && keccak256(bytes(msg_type)) == keccak256(bytes(all_read_messages[i].msg_type))) {\r\n               read = true; \r\n            }\r\n        }\r\n\r\n        return read;\r\n    }\r\n\r\n\r\n\r\n    function reset_all() public {\r\n        for (uint256 i = 0; i < _dao_ids; i++) delete _dao_uris[i];\r\n        for (uint256 i = 0; i < _goal_ids; i++) delete _goal_uris[i];\r\n        for (uint256 i = 0; i < _ideas_ids; i++) delete _ideas_uris[i];\r\n        for (uint256 i = 0; i < _goal_ids; i++) delete _smart_contracts_uris[i];\r\n        for (uint256 i = 0; i < _message_ids; i++) delete all_messages[i];\r\n        for (uint256 i = 0; i < _reply_ids; i++) delete all_replies[i];\r\n        for (uint256 i = 0; i < _ideas_vote_ids; i++) delete all_goal_ideas_votes[i];\r\n        _dao_ids = 0;\r\n        _goal_ids = 0;\r\n        _ideas_ids = 0;\r\n        _message_ids = 0;\r\n        _reply_ids = 0;\r\n        _ideas_vote_ids = 0;\r\n    }\r\n\r\n   \r\n}\r\n"},"contracts/precompiles/Batch.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\r\npragma solidity >=0.8.3;\r\n\r\n/// @dev The Batch contract's address.\r\naddress constant BATCH_ADDRESS = 0x0000000000000000000000000000000000000808;\r\n\r\n/// @dev The Batch contract's instance.\r\nBatch constant BATCH_CONTRACT = Batch(BATCH_ADDRESS);\r\n\r\n/// @author The Moonbeam Team\r\n/// @title Batch precompile\r\n/// @dev Allows to perform multiple calls throught one call to the precompile.\r\n/// Can be used by EOA to do multiple calls in a single transaction.\r\n/// @custom:address 0x0000000000000000000000000000000000000808\r\ninterface Batch {\r\n    /// @dev Batch multiple calls into a single transaction.\r\n    /// All calls are performed from the address calling this precompile.\r\n    ///\r\n    /// In case of one subcall reverting following subcalls will still be attempted.\r\n    ///\r\n    /// @param to List of addresses to call.\r\n    /// @param value List of values for each subcall. If array is shorter than \"to\" then additional\r\n    /// calls will be performed with a value of 0.\r\n    /// @param callData Call data for each `to` address. If array is shorter than \"to\" then\r\n    /// additional calls will be performed with an empty call data.\r\n    /// @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\r\n    /// If array is shorter than \"to\" then the remaining gas available will be used.\r\n    /// @custom:selector 79df4b9c\r\n    function batchSome(\r\n        address[] memory to,\r\n        uint256[] memory value,\r\n        bytes[] memory callData,\r\n        uint64[] memory gasLimit\r\n    ) external;\r\n\r\n    /// @dev Batch multiple calls into a single transaction.\r\n    /// All calls are performed from the address calling this precompile.\r\n    ///\r\n    /// In case of one subcall reverting, no more subcalls will be executed but\r\n    /// the batch transaction will succeed. Use batchAll to revert on any subcall revert.\r\n    ///\r\n    /// @param to List of addresses to call.\r\n    /// @param value List of values for each subcall. If array is shorter than \"to\" then additional\r\n    /// calls will be performed with a value of 0.\r\n    /// @param callData Call data for each `to` address. If array is shorter than \"to\" then\r\n    /// additional calls will be performed with an empty call data.\r\n    /// @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\r\n    /// If array is shorter than \"to\" then the remaining gas available will be used.\r\n    /// @custom:selector cf0491c7\r\n    function batchSomeUntilFailure(\r\n        address[] memory to,\r\n        uint256[] memory value,\r\n        bytes[] memory callData,\r\n        uint64[] memory gasLimit\r\n    ) external;\r\n\r\n    /// @dev Batch multiple calls into a single transaction.\r\n    /// All calls are performed from the address calling this precompile.\r\n    ///\r\n    /// In case of one subcall reverting, the entire batch will revert.\r\n    ///\r\n    /// @param to List of addresses to call.\r\n    /// @param value List of values for each subcall. If array is shorter than \"to\" then additional\r\n    /// calls will be performed with a value of 0.\r\n    /// @param callData Call data for each `to` address. If array is shorter than \"to\" then\r\n    /// additional calls will be performed with an empty call data.\r\n    /// @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\r\n    /// If array is shorter than \"to\" then the remaining gas available will be used.\r\n    /// @custom:selector 96e292b8\r\n    function batchAll(\r\n        address[] memory to,\r\n        uint256[] memory value,\r\n        bytes[] memory callData,\r\n        uint64[] memory gasLimit\r\n    ) external;\r\n\r\n    /// Emitted when a subcall succeeds.\r\n    event SubcallSucceeded(uint256 index);\r\n\r\n    /// Emitted when a subcall fails.\r\n    event SubcallFailed(uint256 index);\r\n}"},"contracts/precompiles/InterchainAccountRouter.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\r\npragma solidity >=0.6.11;\r\n\r\nimport {CallLib} from \"./libs/Call.sol\";\r\n\r\ninterface IInterchainAccountRouter {\r\n    function callRemote(\r\n        uint32 _destinationDomain,\r\n         address to,\r\n        uint256 value,\r\n        bytes memory data\r\n    ) external returns (bytes32);\r\n\r\n    function getRemoteInterchainAccount(uint32 _destination, address _owner)\r\n        external\r\n        view\r\n        returns (address);\r\n}\r\n"},"contracts/precompiles/InterchainGasPaymaster.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\r\npragma solidity >=0.6.11;\r\n\r\ninterface IInterchainGasPaymaster {\r\n    function payForGas(\r\n        bytes32 _messageId,\r\n         uint32 _destinationDomain,\r\n        uint256 _gasAmount,\r\n        address _refundAddress\r\n    ) external payable;\r\n}\r\n"},"contracts/precompiles/libs/Call.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.13;\r\n\r\nimport {Address} from \"@openzeppelin/contracts/utils/Address.sol\";\r\n\r\nimport {TypeCasts} from \"./TypeCasts.sol\";\r\n\r\nlibrary CallLib {\r\n    struct StaticCall {\r\n        // supporting non EVM targets\r\n        bytes32 to;\r\n        bytes data;\r\n    }\r\n\r\n    struct Call {\r\n        // supporting non EVM targets\r\n        bytes32 to;\r\n        uint256 value;\r\n        bytes data;\r\n    }\r\n\r\n    struct StaticCallWithCallback {\r\n        StaticCall _call;\r\n        bytes callback;\r\n    }\r\n\r\n    function call(Call memory _call)\r\n        internal\r\n        returns (bytes memory returnData)\r\n    {\r\n        return\r\n            Address.functionCallWithValue(\r\n                TypeCasts.bytes32ToAddress(_call.to),\r\n                _call.data,\r\n                _call.value\r\n            );\r\n    }\r\n\r\n    function staticcall(StaticCall memory _call)\r\n        private\r\n        view\r\n        returns (bytes memory)\r\n    {\r\n        return\r\n            Address.functionStaticCall(\r\n                TypeCasts.bytes32ToAddress(_call.to),\r\n                _call.data\r\n            );\r\n    }\r\n\r\n    function staticcall(StaticCallWithCallback memory _call)\r\n        internal\r\n        view\r\n        returns (bytes memory callback)\r\n    {\r\n        return bytes.concat(_call.callback, staticcall(_call._call));\r\n    }\r\n\r\n    function multicall(Call[] memory calls) internal {\r\n        uint256 i = 0;\r\n        uint256 len = calls.length;\r\n        while (i < len) {\r\n            call(calls[i]);\r\n            unchecked {\r\n                ++i;\r\n            }\r\n        }\r\n    }\r\n\r\n    function multistaticcall(StaticCallWithCallback[] memory _calls)\r\n        internal\r\n        view\r\n        returns (bytes[] memory)\r\n    {\r\n        uint256 i = 0;\r\n        uint256 len = _calls.length;\r\n        bytes[] memory callbacks = new bytes[](len);\r\n        while (i < len) {\r\n            callbacks[i] = staticcall(_calls[i]);\r\n            unchecked {\r\n                ++i;\r\n            }\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    function multicallto(address to, bytes[] memory calls) internal {\r\n        uint256 i = 0;\r\n        uint256 len = calls.length;\r\n        while (i < len) {\r\n            Address.functionCall(to, calls[i]);\r\n            unchecked {\r\n                ++i;\r\n            }\r\n        }\r\n    }\r\n\r\n    function build(bytes32 to, bytes memory data)\r\n        internal\r\n        pure\r\n        returns (StaticCall memory)\r\n    {\r\n        return StaticCall(to, data);\r\n    }\r\n\r\n    function build(address to, bytes memory data)\r\n        internal\r\n        pure\r\n        returns (StaticCall memory)\r\n    {\r\n        return build(TypeCasts.addressToBytes32(to), data);\r\n    }\r\n\r\n    function build(\r\n        bytes32 to,\r\n        uint256 value,\r\n        bytes memory data\r\n    ) internal pure returns (Call memory) {\r\n        return Call(to, value, data);\r\n    }\r\n\r\n    function build(\r\n        address to,\r\n        uint256 value,\r\n        bytes memory data\r\n    ) internal pure returns (Call memory) {\r\n        return Call(TypeCasts.addressToBytes32(to), value, data);\r\n    }\r\n\r\n    function build(\r\n        bytes32 to,\r\n        bytes memory data,\r\n        bytes memory callback\r\n    ) internal pure returns (StaticCallWithCallback memory) {\r\n        return StaticCallWithCallback(build(to, data), callback);\r\n    }\r\n\r\n    function build(\r\n        address to,\r\n        bytes memory data,\r\n        bytes memory callback\r\n    ) internal pure returns (StaticCallWithCallback memory) {\r\n        return StaticCallWithCallback(build(to, data), callback);\r\n    }\r\n}"},"contracts/precompiles/libs/TypeCasts.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\r\npragma solidity >=0.6.11;\r\n\r\nlibrary TypeCasts {\r\n    // alignment preserving cast\r\n    function addressToBytes32(address _addr) internal pure returns (bytes32) {\r\n        return bytes32(uint256(uint160(_addr)));\r\n    }\r\n\r\n    // alignment preserving cast\r\n    function bytes32ToAddress(bytes32 _buf) internal pure returns (address) {\r\n        return address(uint160(uint256(_buf)));\r\n    }\r\n}"},"contracts/precompiles/PriceFeed.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\r\npragma solidity ^0.8.0;\r\n\r\ninterface AggregatorV3Interface {\r\n    /**\r\n     * Returns the decimals to offset on the getLatestPrice call\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * Returns the description of the underlying price feed aggregator\r\n     */\r\n    function description() external view returns (string memory);\r\n\r\n    /**\r\n     * Returns the version number representing the type of aggregator the proxy points to\r\n     */\r\n    function version() external view returns (uint256);\r\n\r\n    /**\r\n     * Returns price data about a specific round\r\n     */\r\n    function getRoundData(uint80 _roundId) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\r\n\r\n    /**\r\n     * Returns price data from the latest round\r\n     */\r\n    function latestRoundData() external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\r\n}\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1049],"ERC20":[586],"IERC20":[664],"IERC20Metadata":[689]},"id":587,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:0"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":665,"src":"130:22:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":690,"src":"153:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":1050,"src":"195:33:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6,"name":"Context","nameLocations":["1550:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1049,"src":"1550:7:0"},"id":7,"nodeType":"InheritanceSpecifier","src":"1550:7:0"},{"baseName":{"id":8,"name":"IERC20","nameLocations":["1559:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"1559:6:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"1559:6:0"},{"baseName":{"id":10,"name":"IERC20Metadata","nameLocations":["1567:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"1567:14:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"1567:14:0"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"230:1301:0","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":586,"linearizedBaseContracts":[586,689,664,1049],"name":"ERC20","nameLocation":"1541:5:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":15,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:0","nodeType":"VariableDeclaration","scope":586,"src":"1588:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":14,"keyType":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":21,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:0","nodeType":"VariableDeclaration","scope":586,"src":"1640:67:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":20,"keyType":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":19,"keyType":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":23,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:0","nodeType":"VariableDeclaration","scope":586,"src":"1714:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":22,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":25,"mutability":"mutable","name":"_name","nameLocation":"1764:5:0","nodeType":"VariableDeclaration","scope":586,"src":"1749:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":24,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":27,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:0","nodeType":"VariableDeclaration","scope":586,"src":"1775:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":26,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":43,"nodeType":"Block","src":"2036:57:0","statements":[{"expression":{"id":37,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":35,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2046:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":36,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2054:5:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":38,"nodeType":"ExpressionStatement","src":"2046:13:0"},{"expression":{"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2069:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2079:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":42,"nodeType":"ExpressionStatement","src":"2069:17:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"1804:171:0","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":44,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"name_","nameLocation":"2006:5:0","nodeType":"VariableDeclaration","scope":44,"src":"1992:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:0","nodeType":"VariableDeclaration","scope":44,"src":"2013:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":31,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:0"},"returnParameters":{"id":34,"nodeType":"ParameterList","parameters":[],"src":"2036:0:0"},"scope":586,"src":"1980:113:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[676],"body":{"id":53,"nodeType":"Block","src":"2227:29:0","statements":[{"expression":{"id":51,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2244:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"2237:12:0"}]},"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"2099:54:0","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:0","nodeType":"FunctionDefinition","overrides":{"id":47,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:0"},"parameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"2171:2:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"2212:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":48,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:0"},"scope":586,"src":"2158:98:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[682],"body":{"id":63,"nodeType":"Block","src":"2440:31:0","statements":[{"expression":{"id":61,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2457:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":60,"id":62,"nodeType":"Return","src":"2450:14:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"2262:102:0","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":64,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:0","nodeType":"FunctionDefinition","overrides":{"id":57,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:0"},"parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"2384:2:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64,"src":"2425:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":58,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:0"},"scope":586,"src":"2369:102:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[688],"body":{"id":73,"nodeType":"Block","src":"3169:26:0","statements":[{"expression":{"hexValue":"3138","id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:0","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":70,"id":72,"nodeType":"Return","src":"3179:9:0"}]},"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"2477:622:0","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":74,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[],"src":"3121:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":74,"src":"3162:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":68,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:0"},"scope":586,"src":"3104:91:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[613],"body":{"id":83,"nodeType":"Block","src":"3325:36:0","statements":[{"expression":{"id":81,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"3342:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":80,"id":82,"nodeType":"Return","src":"3335:19:0"}]},"documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"3201:49:0","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":84,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:0","nodeType":"FunctionDefinition","overrides":{"id":77,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:0"},"parameters":{"id":76,"nodeType":"ParameterList","parameters":[],"src":"3275:2:0"},"returnParameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":84,"src":"3316:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":78,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:0"},"scope":586,"src":"3255:106:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[621],"body":{"id":97,"nodeType":"Block","src":"3502:42:0","statements":[{"expression":{"baseExpression":{"id":93,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"3519:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":95,"indexExpression":{"id":94,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"3529:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":92,"id":96,"nodeType":"Return","src":"3512:25:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"3367:47:0","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":98,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:0","nodeType":"FunctionDefinition","overrides":{"id":89,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:0"},"parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"account","nameLocation":"3446:7:0","nodeType":"VariableDeclaration","scope":98,"src":"3438:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:0"},"returnParameters":{"id":92,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":98,"src":"3493:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":90,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:0"},"scope":586,"src":"3419:125:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[631],"body":{"id":122,"nodeType":"Block","src":"3825:104:0","statements":[{"assignments":[110],"declarations":[{"constant":false,"id":110,"mutability":"mutable","name":"owner","nameLocation":"3843:5:0","nodeType":"VariableDeclaration","scope":122,"src":"3835:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":109,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":113,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"3851:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:0"},{"expression":{"arguments":[{"id":115,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"3883:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":116,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"3890:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":117,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3894:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":114,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"3873:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":119,"nodeType":"ExpressionStatement","src":"3873:28:0"},{"expression":{"hexValue":"74727565","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":108,"id":121,"nodeType":"Return","src":"3911:11:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"3550:185:0","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":123,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:0","nodeType":"FunctionDefinition","overrides":{"id":105,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:0"},"parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"to","nameLocation":"3766:2:0","nodeType":"VariableDeclaration","scope":123,"src":"3758:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"amount","nameLocation":"3778:6:0","nodeType":"VariableDeclaration","scope":123,"src":"3770:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":123,"src":"3819:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":106,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:0"},"scope":586,"src":"3740:189:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[641],"body":{"id":140,"nodeType":"Block","src":"4085:51:0","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":134,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"4102:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":136,"indexExpression":{"id":135,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"4114:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":138,"indexExpression":{"id":137,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4121:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":133,"id":139,"nodeType":"Return","src":"4095:34:0"}]},"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"3935:47:0","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":141,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:0","nodeType":"FunctionDefinition","overrides":{"id":130,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:0"},"parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"owner","nameLocation":"4014:5:0","nodeType":"VariableDeclaration","scope":141,"src":"4006:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":128,"mutability":"mutable","name":"spender","nameLocation":"4029:7:0","nodeType":"VariableDeclaration","scope":141,"src":"4021:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:0"},"returnParameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"4076:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:0"},"scope":586,"src":"3987:149:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[651],"body":{"id":165,"nodeType":"Block","src":"4533:108:0","statements":[{"assignments":[153],"declarations":[{"constant":false,"id":153,"mutability":"mutable","name":"owner","nameLocation":"4551:5:0","nodeType":"VariableDeclaration","scope":165,"src":"4543:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":156,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":154,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"4559:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:0"},{"expression":{"arguments":[{"id":158,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4590:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":159,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"4597:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":160,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4606:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":157,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"4581:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"4581:32:0"},{"expression":{"hexValue":"74727565","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":151,"id":164,"nodeType":"Return","src":"4623:11:0"}]},"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"4142:297:0","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":166,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:0","nodeType":"FunctionDefinition","overrides":{"id":148,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:0"},"parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"spender","nameLocation":"4469:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4461:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"amount","nameLocation":"4486:6:0","nodeType":"VariableDeclaration","scope":166,"src":"4478:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:0"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":166,"src":"4527:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":149,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:0"},"scope":586,"src":"4444:197:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[663],"body":{"id":198,"nodeType":"Block","src":"5306:153:0","statements":[{"assignments":[180],"declarations":[{"constant":false,"id":180,"mutability":"mutable","name":"spender","nameLocation":"5324:7:0","nodeType":"VariableDeclaration","scope":198,"src":"5316:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":183,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":181,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"5334:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:0"},{"expression":{"arguments":[{"id":185,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5372:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":186,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"5378:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":187,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5387:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":184,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"5356:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":189,"nodeType":"ExpressionStatement","src":"5356:38:0"},{"expression":{"arguments":[{"id":191,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5414:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":192,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5420:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":193,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5424:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":190,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5404:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"5404:27:0"},{"expression":{"hexValue":"74727565","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":178,"id":197,"nodeType":"Return","src":"5441:11:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4647:551:0","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":199,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:0","nodeType":"FunctionDefinition","overrides":{"id":175,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:0"},"parameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"from","nameLocation":"5233:4:0","nodeType":"VariableDeclaration","scope":199,"src":"5225:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":168,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"5247:2:0","nodeType":"VariableDeclaration","scope":199,"src":"5239:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"amount","nameLocation":"5259:6:0","nodeType":"VariableDeclaration","scope":199,"src":"5251:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:0"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"5300:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":176,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:0"},"scope":586,"src":"5203:256:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":227,"nodeType":"Block","src":"5948:140:0","statements":[{"assignments":[210],"declarations":[{"constant":false,"id":210,"mutability":"mutable","name":"owner","nameLocation":"5966:5:0","nodeType":"VariableDeclaration","scope":227,"src":"5958:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":213,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":211,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"5974:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:0"},{"expression":{"arguments":[{"id":215,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"6005:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":216,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"6012:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":218,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"6031:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":219,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"6038:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6021:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":221,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6049:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":214,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5996:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":224,"nodeType":"ExpressionStatement","src":"5996:64:0"},{"expression":{"hexValue":"74727565","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":208,"id":226,"nodeType":"Return","src":"6070:11:0"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"5465:384:0","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":228,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:0","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"spender","nameLocation":"5889:7:0","nodeType":"VariableDeclaration","scope":228,"src":"5881:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:0","nodeType":"VariableDeclaration","scope":228,"src":"5898:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:0"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"5942:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":206,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:0"},"scope":586,"src":"5854:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":268,"nodeType":"Block","src":"6674:328:0","statements":[{"assignments":[239],"declarations":[{"constant":false,"id":239,"mutability":"mutable","name":"owner","nameLocation":"6692:5:0","nodeType":"VariableDeclaration","scope":268,"src":"6684:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":242,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":240,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"6700:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:0"},{"assignments":[244],"declarations":[{"constant":false,"id":244,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:0","nodeType":"VariableDeclaration","scope":268,"src":"6722:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":249,"initialValue":{"arguments":[{"id":246,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"6759:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":247,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"6766:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":245,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6749:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":251,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6792:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":252,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"6812:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":256,"nodeType":"ExpressionStatement","src":"6784:85:0"},{"id":265,"nodeType":"UncheckedBlock","src":"6879:95:0","statements":[{"expression":{"arguments":[{"id":258,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"6912:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":259,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"6919:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":260,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6928:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":261,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"6947:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":257,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6903:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":264,"nodeType":"ExpressionStatement","src":"6903:60:0"}]},{"expression":{"hexValue":"74727565","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":237,"id":267,"nodeType":"Return","src":"6984:11:0"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"6094:476:0","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":269,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:0","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"spender","nameLocation":"6610:7:0","nodeType":"VariableDeclaration","scope":269,"src":"6602:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:0","nodeType":"VariableDeclaration","scope":269,"src":"6619:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:0"},"returnParameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":269,"src":"6668:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":235,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:0"},"scope":586,"src":"6575:427:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":345,"nodeType":"Block","src":"7534:710:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":280,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7552:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:0","typeDescriptions":{}}},"id":284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":288,"nodeType":"ExpressionStatement","src":"7544:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":290,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7630:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:0","typeDescriptions":{}}},"id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":289,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"7622:64:0"},{"expression":{"arguments":[{"id":300,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7718:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":301,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7724:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":302,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7728:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":299,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"7697:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":304,"nodeType":"ExpressionStatement","src":"7697:38:0"},{"assignments":[306],"declarations":[{"constant":false,"id":306,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:0","nodeType":"VariableDeclaration","scope":345,"src":"7746:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":310,"initialValue":{"baseExpression":{"id":307,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"7768:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":309,"indexExpression":{"id":308,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7778:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":312,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7801:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":313,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7816:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":317,"nodeType":"ExpressionStatement","src":"7793:72:0"},{"id":332,"nodeType":"UncheckedBlock","src":"7875:273:0","statements":[{"expression":{"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":318,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"7899:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":320,"indexExpression":{"id":319,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7909:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":321,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7917:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":322,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7931:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":325,"nodeType":"ExpressionStatement","src":"7899:38:0"},{"expression":{"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":326,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"8114:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":328,"indexExpression":{"id":327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8124:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":329,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8131:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":331,"nodeType":"ExpressionStatement","src":"8114:23:0"}]},{"eventCall":{"arguments":[{"id":334,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"8172:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":335,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8178:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":336,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8182:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":333,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"8163:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":338,"nodeType":"EmitStatement","src":"8158:31:0"},{"expression":{"arguments":[{"id":340,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"8220:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":341,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8226:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":342,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8230:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":339,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"8200:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":344,"nodeType":"ExpressionStatement","src":"8200:37:0"}]},"documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"7008:443:0","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":346,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:0","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"from","nameLocation":"7483:4:0","nodeType":"VariableDeclaration","scope":346,"src":"7475:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"to","nameLocation":"7497:2:0","nodeType":"VariableDeclaration","scope":346,"src":"7489:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"amount","nameLocation":"7509:6:0","nodeType":"VariableDeclaration","scope":346,"src":"7501:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:0"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[],"src":"7534:0:0"},"scope":586,"src":"7456:788:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":402,"nodeType":"Block","src":"8585:470:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":355,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8603:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:0","typeDescriptions":{}}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":363,"nodeType":"ExpressionStatement","src":"8595:65:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:0","typeDescriptions":{}}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":369,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8704:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":370,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8713:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":364,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"8671:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"ExpressionStatement","src":"8671:49:0"},{"expression":{"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":373,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"8731:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":374,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8747:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":376,"nodeType":"ExpressionStatement","src":"8731:22:0"},{"id":383,"nodeType":"UncheckedBlock","src":"8763:175:0","statements":[{"expression":{"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":377,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"8899:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":379,"indexExpression":{"id":378,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8909:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":380,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8921:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":382,"nodeType":"ExpressionStatement","src":"8899:28:0"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:0","typeDescriptions":{}}},"id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":389,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8973:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":390,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8982:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":384,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"8952:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":392,"nodeType":"EmitStatement","src":"8947:42:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:0","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":398,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"9032:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":399,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"9041:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":393,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"9000:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"ExpressionStatement","src":"9000:48:0"}]},"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"8250:265:0","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":403,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:0","nodeType":"FunctionDefinition","parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"account","nameLocation":"8543:7:0","nodeType":"VariableDeclaration","scope":403,"src":"8535:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"amount","nameLocation":"8560:6:0","nodeType":"VariableDeclaration","scope":403,"src":"8552:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:0"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[],"src":"8585:0:0"},"scope":586,"src":"8520:535:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":474,"nodeType":"Block","src":"9440:594:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":412,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9458:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:0","typeDescriptions":{}}},"id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":420,"nodeType":"ExpressionStatement","src":"9450:67:0"},{"expression":{"arguments":[{"id":422,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9549:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:0","typeDescriptions":{}}},"id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9570:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":421,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"9528:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"9528:49:0"},{"assignments":[431],"declarations":[{"constant":false,"id":431,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:0","nodeType":"VariableDeclaration","scope":474,"src":"9588:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":435,"initialValue":{"baseExpression":{"id":432,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"9613:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":434,"indexExpression":{"id":433,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9623:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":437,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"9649:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":438,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9667:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":436,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":442,"nodeType":"ExpressionStatement","src":"9641:71:0"},{"id":455,"nodeType":"UncheckedBlock","src":"9722:194:0","statements":[{"expression":{"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":443,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"9746:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":445,"indexExpression":{"id":444,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9756:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":446,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"9767:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":447,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9784:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":450,"nodeType":"ExpressionStatement","src":"9746:44:0"},{"expression":{"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":451,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"9883:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":452,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9899:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":454,"nodeType":"ExpressionStatement","src":"9883:22:0"}]},{"eventCall":{"arguments":[{"id":457,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:0","typeDescriptions":{}}},"id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":462,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9961:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":456,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"9931:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":464,"nodeType":"EmitStatement","src":"9926:42:0"},{"expression":{"arguments":[{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9999:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:0","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":471,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"10020:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":465,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"9979:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":473,"nodeType":"ExpressionStatement","src":"9979:48:0"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"9061:309:0","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":475,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:0","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"account","nameLocation":"9398:7:0","nodeType":"VariableDeclaration","scope":475,"src":"9390:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":408,"mutability":"mutable","name":"amount","nameLocation":"9415:6:0","nodeType":"VariableDeclaration","scope":475,"src":"9407:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":407,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:0"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"9440:0:0"},"scope":586,"src":"9375:659:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":519,"nodeType":"Block","src":"10540:257:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":486,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10558:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:0","typeDescriptions":{}}},"id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":494,"nodeType":"ExpressionStatement","src":"10550:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":496,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10636:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:0","typeDescriptions":{}}},"id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":495,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"10628:68:0"},{"expression":{"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":505,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"10707:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":508,"indexExpression":{"id":506,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10719:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":509,"indexExpression":{"id":507,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10726:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":510,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"10737:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":512,"nodeType":"ExpressionStatement","src":"10707:36:0"},{"eventCall":{"arguments":[{"id":514,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10767:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":515,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10774:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":516,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"10783:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":513,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10758:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":518,"nodeType":"EmitStatement","src":"10753:37:0"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"10040:412:0","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":520,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:0","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"owner","nameLocation":"10483:5:0","nodeType":"VariableDeclaration","scope":520,"src":"10475:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"spender","nameLocation":"10498:7:0","nodeType":"VariableDeclaration","scope":520,"src":"10490:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"amount","nameLocation":"10515:6:0","nodeType":"VariableDeclaration","scope":520,"src":"10507:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:0"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"10540:0:0"},"scope":586,"src":"10457:340:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":562,"nodeType":"Block","src":"11168:321:0","statements":[{"assignments":[531],"declarations":[{"constant":false,"id":531,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:0","nodeType":"VariableDeclaration","scope":562,"src":"11178:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":536,"initialValue":{"arguments":[{"id":533,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"11215:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"11222:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":532,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"11205:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":537,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11244:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":539,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":538,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:0","memberName":"max","nodeType":"MemberAccess","src":"11264:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"IfStatement","src":"11240:243:0","trueBody":{"id":560,"nodeType":"Block","src":"11283:200:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":545,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11305:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":546,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"11325:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":544,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":550,"nodeType":"ExpressionStatement","src":"11297:68:0"},{"id":559,"nodeType":"UncheckedBlock","src":"11379:94:0","statements":[{"expression":{"arguments":[{"id":552,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"11416:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":553,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"11423:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11432:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":555,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"11451:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":551,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"11407:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"ExpressionStatement","src":"11407:51:0"}]}]}}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"10803:270:0","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":563,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:0","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"owner","nameLocation":"11111:5:0","nodeType":"VariableDeclaration","scope":563,"src":"11103:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"spender","nameLocation":"11126:7:0","nodeType":"VariableDeclaration","scope":563,"src":"11118:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"amount","nameLocation":"11143:6:0","nodeType":"VariableDeclaration","scope":563,"src":"11135:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":526,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:0"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"11168:0:0"},"scope":586,"src":"11078:411:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":573,"nodeType":"Block","src":"12162:2:0","statements":[]},"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"11495:573:0","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":574,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:0","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"from","nameLocation":"12111:4:0","nodeType":"VariableDeclaration","scope":574,"src":"12103:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"to","nameLocation":"12125:2:0","nodeType":"VariableDeclaration","scope":574,"src":"12117:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"amount","nameLocation":"12137:6:0","nodeType":"VariableDeclaration","scope":574,"src":"12129:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:0"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"12162:0:0"},"scope":586,"src":"12073:91:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":584,"nodeType":"Block","src":"12840:2:0","statements":[]},"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"12170:577:0","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":585,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:0","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"from","nameLocation":"12789:4:0","nodeType":"VariableDeclaration","scope":585,"src":"12781:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"to","nameLocation":"12803:2:0","nodeType":"VariableDeclaration","scope":585,"src":"12795:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"amount","nameLocation":"12815:6:0","nodeType":"VariableDeclaration","scope":585,"src":"12807:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:0"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"12840:0:0"},"scope":586,"src":"12752:90:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":587,"src":"1532:11312:0","usedErrors":[]}],"src":"105:12740:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[664]},"id":665,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":588,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"131:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":664,"linearizedBaseContracts":[664],"name":"IERC20","nameLocation":"212:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"225:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":598,"name":"Transfer","nameLocation":"394:8:1","nodeType":"EventDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:1","nodeType":"VariableDeclaration","scope":598,"src":"403:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":594,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:1","nodeType":"VariableDeclaration","scope":598,"src":"425:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":593,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":596,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:1","nodeType":"VariableDeclaration","scope":598,"src":"445:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":595,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:1"},"src":"388:72:1"},{"anonymous":false,"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"466:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":607,"name":"Approval","nameLocation":"625:8:1","nodeType":"EventDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:1","nodeType":"VariableDeclaration","scope":607,"src":"634:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":603,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:1","nodeType":"VariableDeclaration","scope":607,"src":"657:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:1","nodeType":"VariableDeclaration","scope":607,"src":"682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:1"},"src":"619:78:1"},{"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"703:66:1","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":613,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":613,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":664,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"835:72:1","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":621,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":621,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":621,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":664,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"986:202:1","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":631,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:1","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"1219:2:1","nodeType":"VariableDeclaration","scope":631,"src":"1211:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"amount","nameLocation":"1231:6:1","nodeType":"VariableDeclaration","scope":631,"src":"1223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:1"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":631,"src":"1257:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":628,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:1"},"scope":664,"src":"1193:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"1269:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":641,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:1","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"owner","nameLocation":"1565:5:1","nodeType":"VariableDeclaration","scope":641,"src":"1557:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"spender","nameLocation":"1580:7:1","nodeType":"VariableDeclaration","scope":641,"src":"1572:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:1"},"returnParameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":641,"src":"1612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:1"},"scope":664,"src":"1538:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"1627:642:1","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":651,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:1","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":644,"mutability":"mutable","name":"spender","nameLocation":"2299:7:1","nodeType":"VariableDeclaration","scope":651,"src":"2291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":646,"mutability":"mutable","name":"amount","nameLocation":"2316:6:1","nodeType":"VariableDeclaration","scope":651,"src":"2308:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:1"},"returnParameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":651,"src":"2342:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":648,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:1"},"scope":664,"src":"2274:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"2354:287:1","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":663,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:1","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"from","nameLocation":"2676:4:1","nodeType":"VariableDeclaration","scope":663,"src":"2668:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"to","nameLocation":"2690:2:1","nodeType":"VariableDeclaration","scope":663,"src":"2682:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"amount","nameLocation":"2702:6:1","nodeType":"VariableDeclaration","scope":663,"src":"2694:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:1"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":663,"src":"2728:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":660,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:1"},"scope":664,"src":"2646:88:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":665,"src":"202:2534:1","usedErrors":[]}],"src":"106:2631:1"},"id":1},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[664],"IERC20Metadata":[689]},"id":690,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":666,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":667,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":690,"sourceUnit":665,"src":"135:23:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":669,"name":"IERC20","nameLocations":["305:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"305:6:2"},"id":670,"nodeType":"InheritanceSpecifier","src":"305:6:2"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":668,"nodeType":"StructuredDocumentation","src":"160:116:2","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":689,"linearizedBaseContracts":[689,664],"name":"IERC20Metadata","nameLocation":"287:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"318:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":676,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:2","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[],"src":"390:2:2"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":676,"src":"416:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":673,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:2"},"scope":689,"src":"377:54:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"437:56:2","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":682,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:2","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[],"src":"513:2:2"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":682,"src":"539:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":679,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:2"},"scope":689,"src":"498:56:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"560:65:2","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":688,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:2","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"647:2:2"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":688,"src":"673:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":685,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:2"},"scope":689,"src":"630:50:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":690,"src":"277:405:2","usedErrors":[]}],"src":"110:573:2"},"id":2},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1019]},"id":1020,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":691,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"126:67:3","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1019,"linearizedBaseContracts":[1019],"name":"Address","nameLocation":"202:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":706,"nodeType":"Block","src":"1478:254:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":700,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"1702:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:3","memberName":"code","nodeType":"MemberAccess","src":"1702:12:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:3","memberName":"length","nodeType":"MemberAccess","src":"1702:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":699,"id":705,"nodeType":"Return","src":"1695:30:3"}]},"documentation":{"id":693,"nodeType":"StructuredDocumentation","src":"216:1191:3","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":707,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:3","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"account","nameLocation":"1440:7:3","nodeType":"VariableDeclaration","scope":707,"src":"1432:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:3"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":707,"src":"1472:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":697,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:3"},"scope":1019,"src":"1412:320:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":740,"nodeType":"Block","src":"2718:241:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":718,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1019","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1019","typeString":"library Address"}],"id":717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:3","typeDescriptions":{}}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:3","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":721,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"2761:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":715,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":725,"nodeType":"ExpressionStatement","src":"2728:73:3"},{"assignments":[727,null],"declarations":[{"constant":false,"id":727,"mutability":"mutable","name":"success","nameLocation":"2818:7:3","nodeType":"VariableDeclaration","scope":740,"src":"2813:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":726,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":734,"initialValue":{"arguments":[{"hexValue":"","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":728,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"2831:9:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:3","memberName":"call","nodeType":"MemberAccess","src":"2831:14:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":730,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"2853:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:3"},{"expression":{"arguments":[{"id":736,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"2882:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":735,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":739,"nodeType":"ExpressionStatement","src":"2874:78:3"}]},"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"1738:904:3","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":741,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:3","nodeType":"FunctionDefinition","parameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:3","nodeType":"VariableDeclaration","scope":741,"src":"2666:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"amount","nameLocation":"2701:6:3","nodeType":"VariableDeclaration","scope":741,"src":"2693:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":711,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:3"},"returnParameters":{"id":714,"nodeType":"ParameterList","parameters":[],"src":"2718:0:3"},"scope":1019,"src":"2647:312:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":758,"nodeType":"Block","src":"3790:96:3","statements":[{"expression":{"arguments":[{"id":752,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"3829:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":753,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"3837:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":751,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[799,843],"referencedDeclaration":843,"src":"3807:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":750,"id":757,"nodeType":"Return","src":"3800:79:3"}]},"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"2965:731:3","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":759,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:3","nodeType":"FunctionDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"target","nameLocation":"3731:6:3","nodeType":"VariableDeclaration","scope":759,"src":"3723:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"data","nameLocation":"3752:4:3","nodeType":"VariableDeclaration","scope":759,"src":"3739:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":745,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:3"},"returnParameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":759,"src":"3776:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":748,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:3"},"scope":1019,"src":"3701:185:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":778,"nodeType":"Block","src":"4255:76:3","statements":[{"expression":{"arguments":[{"id":772,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"4294:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":773,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"4302:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":775,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"4311:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":771,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[799,843],"referencedDeclaration":843,"src":"4272:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":770,"id":777,"nodeType":"Return","src":"4265:59:3"}]},"documentation":{"id":760,"nodeType":"StructuredDocumentation","src":"3892:211:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":779,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:3","nodeType":"FunctionDefinition","parameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"target","nameLocation":"4147:6:3","nodeType":"VariableDeclaration","scope":779,"src":"4139:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"data","nameLocation":"4176:4:3","nodeType":"VariableDeclaration","scope":779,"src":"4163:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":763,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:3","nodeType":"VariableDeclaration","scope":779,"src":"4190:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":765,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:3"},"returnParameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":779,"src":"4241:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":768,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:3"},"scope":1019,"src":"4108:223:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":798,"nodeType":"Block","src":"4806:111:3","statements":[{"expression":{"arguments":[{"id":792,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"4845:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":793,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"4853:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"4859:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":791,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[799,843],"referencedDeclaration":843,"src":"4823:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":790,"id":797,"nodeType":"Return","src":"4816:94:3"}]},"documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"4337:351:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":799,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:3","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"target","nameLocation":"4732:6:3","nodeType":"VariableDeclaration","scope":799,"src":"4724:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":781,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"data","nameLocation":"4753:4:3","nodeType":"VariableDeclaration","scope":799,"src":"4740:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":783,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"value","nameLocation":"4767:5:3","nodeType":"VariableDeclaration","scope":799,"src":"4759:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:3"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":799,"src":"4792:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":788,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:3"},"scope":1019,"src":"4693:224:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":842,"nodeType":"Block","src":"5344:267:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":816,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1019","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1019","typeString":"library Address"}],"id":815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":814,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:3","typeDescriptions":{}}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:3","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"5387:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":813,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":823,"nodeType":"ExpressionStatement","src":"5354:81:3"},{"assignments":[825,827],"declarations":[{"constant":false,"id":825,"mutability":"mutable","name":"success","nameLocation":"5451:7:3","nodeType":"VariableDeclaration","scope":842,"src":"5446:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":824,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":827,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:3","nodeType":"VariableDeclaration","scope":842,"src":"5460:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":826,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":834,"initialValue":{"arguments":[{"id":832,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"5513:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":828,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"5487:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:3","memberName":"call","nodeType":"MemberAccess","src":"5487:11:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"5506:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:3"},{"expression":{"arguments":[{"id":836,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"5562:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":837,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"5570:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":838,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"5579:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":839,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"5591:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":835,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"5535:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":812,"id":841,"nodeType":"Return","src":"5528:76:3"}]},"documentation":{"id":800,"nodeType":"StructuredDocumentation","src":"4923:237:3","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":843,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:3","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"mutability":"mutable","name":"target","nameLocation":"5213:6:3","nodeType":"VariableDeclaration","scope":843,"src":"5205:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":804,"mutability":"mutable","name":"data","nameLocation":"5242:4:3","nodeType":"VariableDeclaration","scope":843,"src":"5229:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":803,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"value","nameLocation":"5264:5:3","nodeType":"VariableDeclaration","scope":843,"src":"5256:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:3","nodeType":"VariableDeclaration","scope":843,"src":"5279:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":807,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:3"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":843,"src":"5330:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":810,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:3"},"scope":1019,"src":"5165:446:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":859,"nodeType":"Block","src":"5888:97:3","statements":[{"expression":{"arguments":[{"id":854,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"5924:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":855,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"5932:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":853,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[860,889],"referencedDeclaration":889,"src":"5905:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":852,"id":858,"nodeType":"Return","src":"5898:80:3"}]},"documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"5617:166:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":860,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:3","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"target","nameLocation":"5824:6:3","nodeType":"VariableDeclaration","scope":860,"src":"5816:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"data","nameLocation":"5845:4:3","nodeType":"VariableDeclaration","scope":860,"src":"5832:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":847,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:3"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":860,"src":"5874:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":850,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:3"},"scope":1019,"src":"5788:197:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":888,"nodeType":"Block","src":"6327:168:3","statements":[{"assignments":[873,875],"declarations":[{"constant":false,"id":873,"mutability":"mutable","name":"success","nameLocation":"6343:7:3","nodeType":"VariableDeclaration","scope":888,"src":"6338:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":872,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:3","nodeType":"VariableDeclaration","scope":888,"src":"6352:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":874,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":880,"initialValue":{"arguments":[{"id":878,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"6397:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":876,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"6379:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:3","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:3","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:3"},{"expression":{"arguments":[{"id":882,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"6446:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":883,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"6454:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":884,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"6463:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":885,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"6475:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":881,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"6419:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":871,"id":887,"nodeType":"Return","src":"6412:76:3"}]},"documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"5991:173:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":889,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:3","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"target","nameLocation":"6214:6:3","nodeType":"VariableDeclaration","scope":889,"src":"6206:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":865,"mutability":"mutable","name":"data","nameLocation":"6243:4:3","nodeType":"VariableDeclaration","scope":889,"src":"6230:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":864,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:3","nodeType":"VariableDeclaration","scope":889,"src":"6257:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":866,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:3"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":889,"src":"6313:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":869,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:3"},"scope":1019,"src":"6169:326:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":905,"nodeType":"Block","src":"6771:101:3","statements":[{"expression":{"arguments":[{"id":900,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"6809:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":901,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"6817:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":899,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[906,935],"referencedDeclaration":935,"src":"6788:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":898,"id":904,"nodeType":"Return","src":"6781:84:3"}]},"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"6501:168:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":906,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:3","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"target","nameLocation":"6712:6:3","nodeType":"VariableDeclaration","scope":906,"src":"6704:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"data","nameLocation":"6733:4:3","nodeType":"VariableDeclaration","scope":906,"src":"6720:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":893,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:3"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":906,"src":"6757:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":896,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:3"},"scope":1019,"src":"6674:198:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":934,"nodeType":"Block","src":"7213:170:3","statements":[{"assignments":[919,921],"declarations":[{"constant":false,"id":919,"mutability":"mutable","name":"success","nameLocation":"7229:7:3","nodeType":"VariableDeclaration","scope":934,"src":"7224:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":918,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":921,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:3","nodeType":"VariableDeclaration","scope":934,"src":"7238:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":920,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":926,"initialValue":{"arguments":[{"id":924,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"7285:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":922,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"7265:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:3","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:3","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:3"},{"expression":{"arguments":[{"id":928,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"7334:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":929,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"7342:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":930,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"7351:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":931,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"7363:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":927,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"7307:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":917,"id":933,"nodeType":"Return","src":"7300:76:3"}]},"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"6878:175:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":935,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:3","nodeType":"FunctionDefinition","parameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"target","nameLocation":"7105:6:3","nodeType":"VariableDeclaration","scope":935,"src":"7097:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":911,"mutability":"mutable","name":"data","nameLocation":"7134:4:3","nodeType":"VariableDeclaration","scope":935,"src":"7121:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":910,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":913,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:3","nodeType":"VariableDeclaration","scope":935,"src":"7148:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":912,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:3"},"returnParameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":935,"src":"7199:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":915,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:3"},"scope":1019,"src":"7058:325:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":973,"nodeType":"Block","src":"7865:434:3","statements":[{"condition":{"id":949,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"7879:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":971,"nodeType":"Block","src":"8235:58:3","statements":[{"expression":{"arguments":[{"id":967,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"8257:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":968,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"8269:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":966,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"8249:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":970,"nodeType":"ExpressionStatement","src":"8249:33:3"}]},"id":972,"nodeType":"IfStatement","src":"7875:418:3","trueBody":{"id":965,"nodeType":"Block","src":"7888:341:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":950,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"7906:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:3","memberName":"length","nodeType":"MemberAccess","src":"7906:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":962,"nodeType":"IfStatement","src":"7902:286:3","trueBody":{"id":961,"nodeType":"Block","src":"7930:258:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":956,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"8132:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":955,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"8121:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":954,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":960,"nodeType":"ExpressionStatement","src":"8113:60:3"}]}},{"expression":{"id":963,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"8208:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":948,"id":964,"nodeType":"Return","src":"8201:17:3"}]}}]},"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"7389:277:3","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":974,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:3","nodeType":"FunctionDefinition","parameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"target","nameLocation":"7724:6:3","nodeType":"VariableDeclaration","scope":974,"src":"7716:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":940,"mutability":"mutable","name":"success","nameLocation":"7745:7:3","nodeType":"VariableDeclaration","scope":974,"src":"7740:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":939,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":942,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:3","nodeType":"VariableDeclaration","scope":974,"src":"7762:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":941,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":944,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:3","nodeType":"VariableDeclaration","scope":974,"src":"7795:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":943,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:3"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":974,"src":"7851:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":946,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:3"},"scope":1019,"src":"7671:628:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":997,"nodeType":"Block","src":"8680:135:3","statements":[{"condition":{"id":986,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"8694:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":995,"nodeType":"Block","src":"8751:58:3","statements":[{"expression":{"arguments":[{"id":991,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"8773:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":992,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"8785:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":990,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"8765:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":994,"nodeType":"ExpressionStatement","src":"8765:33:3"}]},"id":996,"nodeType":"IfStatement","src":"8690:119:3","trueBody":{"id":989,"nodeType":"Block","src":"8703:42:3","statements":[{"expression":{"id":987,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"8724:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":985,"id":988,"nodeType":"Return","src":"8717:17:3"}]}}]},"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"8305:210:3","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":998,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:3","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"success","nameLocation":"8560:7:3","nodeType":"VariableDeclaration","scope":998,"src":"8555:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":976,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:3","nodeType":"VariableDeclaration","scope":998,"src":"8577:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":978,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:3","nodeType":"VariableDeclaration","scope":998,"src":"8610:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":980,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:3"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":998,"src":"8666:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":983,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:3"},"scope":1019,"src":"8520:295:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1017,"nodeType":"Block","src":"8904:457:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1005,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"8980:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:3","memberName":"length","nodeType":"MemberAccess","src":"8980:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1015,"nodeType":"Block","src":"9310:45:3","statements":[{"expression":{"arguments":[{"id":1012,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"9331:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1011,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1014,"nodeType":"ExpressionStatement","src":"9324:20:3"}]},"id":1016,"nodeType":"IfStatement","src":"8976:379:3","trueBody":{"id":1010,"nodeType":"Block","src":"9003:301:3","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:3","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:3","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:3"},"nodeType":"YulFunctionCall","src":"9202:17:3"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:3","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:3","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:3"},"nodeType":"YulFunctionCall","src":"9243:19:3"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:3"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:3"},"nodeType":"YulFunctionCall","src":"9236:44:3"},"nodeType":"YulExpressionStatement","src":"9236:44:3"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1000,"isOffset":false,"isSlot":false,"src":"9208:10:3","valueSize":1},{"declaration":1000,"isOffset":false,"isSlot":false,"src":"9251:10:3","valueSize":1}],"id":1009,"nodeType":"InlineAssembly","src":"9152:142:3"}]}}]},"id":1018,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:3","nodeType":"FunctionDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:3","nodeType":"VariableDeclaration","scope":1018,"src":"8838:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":999,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1002,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:3","nodeType":"VariableDeclaration","scope":1018,"src":"8863:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1001,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:3"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[],"src":"8904:0:3"},"scope":1019,"src":"8821:540:3","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1020,"src":"194:9169:3","usedErrors":[]}],"src":"101:9263:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1049]},"id":1050,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1021,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1022,"nodeType":"StructuredDocumentation","src":"126:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1049,"linearizedBaseContracts":[1049],"name":"Context","nameLocation":"641:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1030,"nodeType":"Block","src":"717:34:4","statements":[{"expression":{"expression":{"id":1027,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:4","memberName":"sender","nodeType":"MemberAccess","src":"734:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1026,"id":1029,"nodeType":"Return","src":"727:17:4"}]},"id":1031,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:4","nodeType":"FunctionDefinition","parameters":{"id":1023,"nodeType":"ParameterList","parameters":[],"src":"674:2:4"},"returnParameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1031,"src":"708:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:4"},"scope":1049,"src":"655:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1039,"nodeType":"Block","src":"824:32:4","statements":[{"expression":{"expression":{"id":1036,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:4","memberName":"data","nodeType":"MemberAccess","src":"841:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1035,"id":1038,"nodeType":"Return","src":"834:15:4"}]},"id":1040,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:4","nodeType":"FunctionDefinition","parameters":{"id":1032,"nodeType":"ParameterList","parameters":[],"src":"774:2:4"},"returnParameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1040,"src":"808:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1033,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:4"},"scope":1049,"src":"757:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1047,"nodeType":"Block","src":"934:25:4","statements":[{"expression":{"hexValue":"30","id":1045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1044,"id":1046,"nodeType":"Return","src":"944:8:4"}]},"id":1048,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:4","nodeType":"FunctionDefinition","parameters":{"id":1041,"nodeType":"ParameterList","parameters":[],"src":"891:2:4"},"returnParameters":{"id":1044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1048,"src":"925:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1042,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:4"},"scope":1049,"src":"862:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1050,"src":"623:338:4","usedErrors":[]}],"src":"101:861:4"},"id":4},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2144],"SignedMath":[2249],"Strings":[1278]},"id":1279,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1051,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1052,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1279,"sourceUnit":2145,"src":"126:25:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1053,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1279,"sourceUnit":2250,"src":"152:31:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1054,"nodeType":"StructuredDocumentation","src":"185:34:5","text":" @dev String operations."},"fullyImplemented":true,"id":1278,"linearizedBaseContracts":[1278],"name":"Strings","nameLocation":"228:7:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1057,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:5","nodeType":"VariableDeclaration","scope":1278,"src":"242:54:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1055,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:5","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1060,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:5","nodeType":"VariableDeclaration","scope":1278,"src":"302:43:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1058,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:5","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1107,"nodeType":"Block","src":"518:625:5","statements":[{"id":1106,"nodeType":"UncheckedBlock","src":"528:609:5","statements":[{"assignments":[1069],"declarations":[{"constant":false,"id":1069,"mutability":"mutable","name":"length","nameLocation":"560:6:5","nodeType":"VariableDeclaration","scope":1106,"src":"552:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1068,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1076,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"580:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1070,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"569:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2144_$","typeString":"type(library Math)"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:5","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1981,"src":"569:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:5"},{"assignments":[1078],"declarations":[{"constant":false,"id":1078,"mutability":"mutable","name":"buffer","nameLocation":"618:6:5","nodeType":"VariableDeclaration","scope":1106,"src":"604:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1077,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1083,"initialValue":{"arguments":[{"id":1081,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"638:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1079,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:5"},{"assignments":[1085],"declarations":[{"constant":false,"id":1085,"mutability":"mutable","name":"ptr","nameLocation":"667:3:5","nodeType":"VariableDeclaration","scope":1106,"src":"659:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1084,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1086,"nodeType":"VariableDeclarationStatement","src":"659:11:5"},{"AST":{"nodeType":"YulBlock","src":"740:67:5","statements":[{"nodeType":"YulAssignment","src":"758:35:5","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:5","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:5"},"nodeType":"YulFunctionCall","src":"777:15:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:5"},"nodeType":"YulFunctionCall","src":"765:28:5"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:5"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1078,"isOffset":false,"isSlot":false,"src":"769:6:5","valueSize":1},{"declaration":1069,"isOffset":false,"isSlot":false,"src":"785:6:5","valueSize":1},{"declaration":1085,"isOffset":false,"isSlot":false,"src":"758:3:5","valueSize":1}],"id":1087,"nodeType":"InlineAssembly","src":"731:76:5"},{"body":{"id":1102,"nodeType":"Block","src":"833:267:5","statements":[{"expression":{"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:5","subExpression":{"id":1089,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"851:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1091,"nodeType":"ExpressionStatement","src":"851:5:5"},{"AST":{"nodeType":"YulBlock","src":"934:84:5","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:5"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:5","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:5"},"nodeType":"YulFunctionCall","src":"974:14:5"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:5"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:5"},"nodeType":"YulFunctionCall","src":"969:30:5"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:5"},"nodeType":"YulFunctionCall","src":"956:44:5"},"nodeType":"YulExpressionStatement","src":"956:44:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1057,"isOffset":false,"isSlot":false,"src":"990:8:5","valueSize":1},{"declaration":1085,"isOffset":false,"isSlot":false,"src":"964:3:5","valueSize":1},{"declaration":1063,"isOffset":false,"isSlot":false,"src":"978:5:5","valueSize":1}],"id":1092,"nodeType":"InlineAssembly","src":"925:93:5"},{"expression":{"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"1035:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1096,"nodeType":"ExpressionStatement","src":"1035:11:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"1068:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1101,"nodeType":"IfStatement","src":"1064:21:5","trueBody":{"id":1100,"nodeType":"Break","src":"1080:5:5"}}]},"condition":{"hexValue":"74727565","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1103,"nodeType":"WhileStatement","src":"820:280:5"},{"expression":{"id":1104,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"1120:6:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1067,"id":1105,"nodeType":"Return","src":"1113:13:5"}]}]},"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"352:90:5","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1108,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:5","nodeType":"FunctionDefinition","parameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"value","nameLocation":"473:5:5","nodeType":"VariableDeclaration","scope":1108,"src":"465:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:5"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1108,"src":"503:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1065,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:5"},"scope":1278,"src":"447:696:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1135,"nodeType":"Block","src":"1313:103:5","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"1354:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:5","trueExpression":{"hexValue":"2d","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"1400:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1127,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"1385:10:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$2249_$","typeString":"type(library SignedMath)"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:5","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":2248,"src":"1385:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1126,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1108,1136],"referencedDeclaration":1108,"src":"1376:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1118,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:5","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1116,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:5","typeDescriptions":{}}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1115,"id":1134,"nodeType":"Return","src":"1323:86:5"}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"1149:89:5","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1136,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:5","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"value","nameLocation":"1268:5:5","nodeType":"VariableDeclaration","scope":1136,"src":"1261:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1110,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:5"},"returnParameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1136,"src":"1298:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1113,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:5"},"scope":1278,"src":"1243:173:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1155,"nodeType":"Block","src":"1595:100:5","statements":[{"id":1154,"nodeType":"UncheckedBlock","src":"1605:84:5","statements":[{"expression":{"arguments":[{"id":1145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"1648:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"1667:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1146,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"1655:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2144_$","typeString":"type(library Math)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:5","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2104,"src":"1655:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1144,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1156,1232,1252],"referencedDeclaration":1232,"src":"1636:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1143,"id":1153,"nodeType":"Return","src":"1629:49:5"}]}]},"documentation":{"id":1137,"nodeType":"StructuredDocumentation","src":"1422:94:5","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1156,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:5","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"value","nameLocation":"1550:5:5","nodeType":"VariableDeclaration","scope":1156,"src":"1542:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:5"},"returnParameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1156,"src":"1580:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1141,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:5"},"scope":1278,"src":"1521:174:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1231,"nodeType":"Block","src":"1908:347:5","statements":[{"assignments":[1167],"declarations":[{"constant":false,"id":1167,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:5","nodeType":"VariableDeclaration","scope":1231,"src":"1918:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1166,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1176,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1171,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"1954:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1168,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:5"},{"expression":{"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1177,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"1975:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1179,"indexExpression":{"hexValue":"30","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1182,"nodeType":"ExpressionStatement","src":"1975:15:5"},{"expression":{"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1183,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"2000:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1185,"indexExpression":{"hexValue":"31","id":1184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1188,"nodeType":"ExpressionStatement","src":"2000:15:5"},{"body":{"id":1217,"nodeType":"Block","src":"2070:83:5","statements":[{"expression":{"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1203,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"2084:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1205,"indexExpression":{"id":1204,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"2091:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1206,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"2096:8:5","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1210,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"2105:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:5","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1212,"nodeType":"ExpressionStatement","src":"2084:33:5"},{"expression":{"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"2131:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1216,"nodeType":"ExpressionStatement","src":"2131:11:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1197,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"2058:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1218,"initializationExpression":{"assignments":[1190],"declarations":[{"constant":false,"id":1190,"mutability":"mutable","name":"i","nameLocation":"2038:1:5","nodeType":"VariableDeclaration","scope":1218,"src":"2030:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1196,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1192,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"2046:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:5"},"loopExpression":{"expression":{"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:5","subExpression":{"id":1200,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"2067:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1202,"nodeType":"ExpressionStatement","src":"2065:3:5"},"nodeType":"ForStatement","src":"2025:128:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"2170:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1219,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1225,"nodeType":"ExpressionStatement","src":"2162:55:5"},{"expression":{"arguments":[{"id":1228,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"2241:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1226,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:5","typeDescriptions":{}}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1165,"id":1230,"nodeType":"Return","src":"2227:21:5"}]},"documentation":{"id":1157,"nodeType":"StructuredDocumentation","src":"1701:112:5","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1232,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:5","nodeType":"FunctionDefinition","parameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"value","nameLocation":"1847:5:5","nodeType":"VariableDeclaration","scope":1232,"src":"1839:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1161,"mutability":"mutable","name":"length","nameLocation":"1862:6:5","nodeType":"VariableDeclaration","scope":1232,"src":"1854:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:5"},"returnParameters":{"id":1165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1232,"src":"1893:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1163,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:5"},"scope":1278,"src":"1818:437:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1251,"nodeType":"Block","src":"2480:76:5","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1245,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"2525:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1243,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:5","typeDescriptions":{}}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:5","typeDescriptions":{}}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1248,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"2533:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1240,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1156,1232,1252],"referencedDeclaration":1232,"src":"2497:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1239,"id":1250,"nodeType":"Return","src":"2490:59:5"}]},"documentation":{"id":1233,"nodeType":"StructuredDocumentation","src":"2261:141:5","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1252,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:5","nodeType":"FunctionDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"addr","nameLocation":"2436:4:5","nodeType":"VariableDeclaration","scope":1252,"src":"2428:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:5"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1252,"src":"2465:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1237,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:5"},"scope":1278,"src":"2407:149:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1276,"nodeType":"Block","src":"2711:66:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1265,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"2744:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1263,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:5","typeDescriptions":{}}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1262,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1271,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"2767:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1269,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:5","typeDescriptions":{}}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1268,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1261,"id":1275,"nodeType":"Return","src":"2721:49:5"}]},"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"2562:66:5","text":" @dev Returns true if the two strings are equal."},"id":1277,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:5","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"a","nameLocation":"2662:1:5","nodeType":"VariableDeclaration","scope":1277,"src":"2648:15:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1254,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"b","nameLocation":"2679:1:5","nodeType":"VariableDeclaration","scope":1277,"src":"2665:15:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1256,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:5"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1277,"src":"2705:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1259,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:5"},"scope":1278,"src":"2633:144:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1279,"src":"220:2559:5","usedErrors":[]}],"src":"101:2679:5"},"id":5},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2144]},"id":2145,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1280,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1281,"nodeType":"StructuredDocumentation","src":"128:73:6","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2144,"linearizedBaseContracts":[2144],"name":"Math","nameLocation":"210:4:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1285,"members":[{"id":1282,"name":"Down","nameLocation":"245:4:6","nodeType":"EnumValue","src":"245:4:6"},{"id":1283,"name":"Up","nameLocation":"287:2:6","nodeType":"EnumValue","src":"287:2:6"},{"id":1284,"name":"Zero","nameLocation":"318:4:6","nodeType":"EnumValue","src":"318:4:6"}],"name":"Rounding","nameLocation":"226:8:6","nodeType":"EnumDefinition","src":"221:122:6"},{"body":{"id":1302,"nodeType":"Block","src":"480:37:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1295,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"497:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1296,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"501:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1299,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"509:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:6","trueExpression":{"id":1298,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"505:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1294,"id":1301,"nodeType":"Return","src":"490:20:6"}]},"documentation":{"id":1286,"nodeType":"StructuredDocumentation","src":"349:59:6","text":" @dev Returns the largest of two numbers."},"id":1303,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:6","nodeType":"FunctionDefinition","parameters":{"id":1291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"a","nameLocation":"434:1:6","nodeType":"VariableDeclaration","scope":1303,"src":"426:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1287,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1290,"mutability":"mutable","name":"b","nameLocation":"445:1:6","nodeType":"VariableDeclaration","scope":1303,"src":"437:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1289,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:6"},"returnParameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1303,"src":"471:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1292,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:6"},"scope":2144,"src":"413:104:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1320,"nodeType":"Block","src":"655:37:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1313,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"672:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1314,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"676:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1317,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"684:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:6","trueExpression":{"id":1316,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"680:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1312,"id":1319,"nodeType":"Return","src":"665:20:6"}]},"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"523:60:6","text":" @dev Returns the smallest of two numbers."},"id":1321,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:6","nodeType":"FunctionDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"a","nameLocation":"609:1:6","nodeType":"VariableDeclaration","scope":1321,"src":"601:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1305,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"b","nameLocation":"620:1:6","nodeType":"VariableDeclaration","scope":1321,"src":"612:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1307,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:6"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1321,"src":"646:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1310,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:6"},"scope":2144,"src":"588:104:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1343,"nodeType":"Block","src":"876:82:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1331,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"931:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1332,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"935:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1335,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"941:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1336,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"945:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1338,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1330,"id":1342,"nodeType":"Return","src":"923:28:6"}]},"documentation":{"id":1322,"nodeType":"StructuredDocumentation","src":"698:102:6","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1344,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:6","nodeType":"FunctionDefinition","parameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1324,"mutability":"mutable","name":"a","nameLocation":"830:1:6","nodeType":"VariableDeclaration","scope":1344,"src":"822:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1323,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1326,"mutability":"mutable","name":"b","nameLocation":"841:1:6","nodeType":"VariableDeclaration","scope":1344,"src":"833:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1325,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:6"},"returnParameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1344,"src":"867:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1328,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:6"},"scope":2144,"src":"805:153:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1368,"nodeType":"Block","src":"1228:123:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1354,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"1316:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1358,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"1330:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1361,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1362,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"1339:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:6","trueExpression":{"hexValue":"30","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1353,"id":1367,"nodeType":"Return","src":"1309:35:6"}]},"documentation":{"id":1345,"nodeType":"StructuredDocumentation","src":"964:188:6","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1369,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:6","nodeType":"FunctionDefinition","parameters":{"id":1350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"mutability":"mutable","name":"a","nameLocation":"1182:1:6","nodeType":"VariableDeclaration","scope":1369,"src":"1174:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1346,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1349,"mutability":"mutable","name":"b","nameLocation":"1193:1:6","nodeType":"VariableDeclaration","scope":1369,"src":"1185:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:6"},"returnParameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1369,"src":"1219:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1351,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:6"},"scope":2144,"src":"1157:194:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1491,"nodeType":"Block","src":"1765:4115:6","statements":[{"id":1490,"nodeType":"UncheckedBlock","src":"1775:4099:6","statements":[{"assignments":[1382],"declarations":[{"constant":false,"id":1382,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:6","nodeType":"VariableDeclaration","scope":1490,"src":"2096:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1381,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1383,"nodeType":"VariableDeclarationStatement","src":"2096:13:6"},{"assignments":[1385],"declarations":[{"constant":false,"id":1385,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:6","nodeType":"VariableDeclaration","scope":1490,"src":"2168:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1386,"nodeType":"VariableDeclarationStatement","src":"2168:13:6"},{"AST":{"nodeType":"YulBlock","src":"2248:157:6","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:6"},"nodeType":"YulFunctionCall","src":"2289:6:6"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:6"},"nodeType":"YulFunctionCall","src":"2276:20:6"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:6","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:6"},"nodeType":"YulFunctionCall","src":"2322:9:6"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:6"}]},{"nodeType":"YulAssignment","src":"2348:43:6","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:6"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:6"},"nodeType":"YulFunctionCall","src":"2361:14:6"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:6"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:6"},"nodeType":"YulFunctionCall","src":"2377:13:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:6"},"nodeType":"YulFunctionCall","src":"2357:34:6"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:6"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1382,"isOffset":false,"isSlot":false,"src":"2313:5:6","valueSize":1},{"declaration":1382,"isOffset":false,"isSlot":false,"src":"2369:5:6","valueSize":1},{"declaration":1382,"isOffset":false,"isSlot":false,"src":"2384:5:6","valueSize":1},{"declaration":1385,"isOffset":false,"isSlot":false,"src":"2348:5:6","valueSize":1},{"declaration":1372,"isOffset":false,"isSlot":false,"src":"2283:1:6","valueSize":1},{"declaration":1372,"isOffset":false,"isSlot":false,"src":"2326:1:6","valueSize":1},{"declaration":1374,"isOffset":false,"isSlot":false,"src":"2286:1:6","valueSize":1},{"declaration":1374,"isOffset":false,"isSlot":false,"src":"2329:1:6","valueSize":1}],"id":1387,"nodeType":"InlineAssembly","src":"2239:166:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1388,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"2486:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1396,"nodeType":"IfStatement","src":"2482:368:6","trueBody":{"id":1395,"nodeType":"Block","src":"2498:352:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1391,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"2816:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1392,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"2824:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1380,"id":1394,"nodeType":"Return","src":"2809:26:6"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1398,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"2960:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1399,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"2974:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":1397,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1403,"nodeType":"ExpressionStatement","src":"2952:53:6"},{"assignments":[1405],"declarations":[{"constant":false,"id":1405,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:6","nodeType":"VariableDeclaration","scope":1490,"src":"3261:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1406,"nodeType":"VariableDeclarationStatement","src":"3261:17:6"},{"AST":{"nodeType":"YulBlock","src":"3301:291:6","statements":[{"nodeType":"YulAssignment","src":"3370:38:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:6"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:6"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:6"},"nodeType":"YulFunctionCall","src":"3383:25:6"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:6"}]},{"nodeType":"YulAssignment","src":"3490:41:6","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:6"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:6"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:6"},"nodeType":"YulFunctionCall","src":"3510:20:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:6"},"nodeType":"YulFunctionCall","src":"3499:32:6"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:6"}]},{"nodeType":"YulAssignment","src":"3548:30:6","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:6"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:6"},"nodeType":"YulFunctionCall","src":"3557:21:6"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:6"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1376,"isOffset":false,"isSlot":false,"src":"3396:11:6","valueSize":1},{"declaration":1382,"isOffset":false,"isSlot":false,"src":"3524:5:6","valueSize":1},{"declaration":1382,"isOffset":false,"isSlot":false,"src":"3548:5:6","valueSize":1},{"declaration":1382,"isOffset":false,"isSlot":false,"src":"3561:5:6","valueSize":1},{"declaration":1385,"isOffset":false,"isSlot":false,"src":"3490:5:6","valueSize":1},{"declaration":1385,"isOffset":false,"isSlot":false,"src":"3503:5:6","valueSize":1},{"declaration":1405,"isOffset":false,"isSlot":false,"src":"3370:9:6","valueSize":1},{"declaration":1405,"isOffset":false,"isSlot":false,"src":"3513:9:6","valueSize":1},{"declaration":1405,"isOffset":false,"isSlot":false,"src":"3568:9:6","valueSize":1},{"declaration":1372,"isOffset":false,"isSlot":false,"src":"3390:1:6","valueSize":1},{"declaration":1374,"isOffset":false,"isSlot":false,"src":"3393:1:6","valueSize":1}],"id":1407,"nodeType":"InlineAssembly","src":"3292:300:6"},{"assignments":[1409],"declarations":[{"constant":false,"id":1409,"mutability":"mutable","name":"twos","nameLocation":"3907:4:6","nodeType":"VariableDeclaration","scope":1490,"src":"3899:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1408,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1417,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1410,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"3914:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:6","subExpression":{"id":1411,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"3930:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1415,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:6"},{"AST":{"nodeType":"YulBlock","src":"3969:362:6","statements":[{"nodeType":"YulAssignment","src":"4034:37:6","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:6"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:6"},"nodeType":"YulFunctionCall","src":"4049:22:6"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:6"}]},{"nodeType":"YulAssignment","src":"4138:25:6","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:6"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:6"},"nodeType":"YulFunctionCall","src":"4147:16:6"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:6"}]},{"nodeType":"YulAssignment","src":"4278:39:6","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:6","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:6"},"nodeType":"YulFunctionCall","src":"4294:12:6"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:6"},"nodeType":"YulFunctionCall","src":"4290:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:6"},"nodeType":"YulFunctionCall","src":"4286:31:6"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:6"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1376,"isOffset":false,"isSlot":false,"src":"4034:11:6","valueSize":1},{"declaration":1376,"isOffset":false,"isSlot":false,"src":"4053:11:6","valueSize":1},{"declaration":1382,"isOffset":false,"isSlot":false,"src":"4138:5:6","valueSize":1},{"declaration":1382,"isOffset":false,"isSlot":false,"src":"4151:5:6","valueSize":1},{"declaration":1409,"isOffset":false,"isSlot":false,"src":"4066:4:6","valueSize":1},{"declaration":1409,"isOffset":false,"isSlot":false,"src":"4158:4:6","valueSize":1},{"declaration":1409,"isOffset":false,"isSlot":false,"src":"4278:4:6","valueSize":1},{"declaration":1409,"isOffset":false,"isSlot":false,"src":"4301:4:6","valueSize":1},{"declaration":1409,"isOffset":false,"isSlot":false,"src":"4308:4:6","valueSize":1}],"id":1418,"nodeType":"InlineAssembly","src":"3960:371:6"},{"expression":{"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1419,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"4397:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1420,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"4406:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1421,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"4414:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1424,"nodeType":"ExpressionStatement","src":"4397:21:6"},{"assignments":[1426],"declarations":[{"constant":false,"id":1426,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:6","nodeType":"VariableDeclaration","scope":1490,"src":"4736:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1433,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1428,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"4759:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1430,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:6"},{"expression":{"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1434,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"4992:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1436,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"5007:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1437,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"5021:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1441,"nodeType":"ExpressionStatement","src":"4992:36:6"},{"expression":{"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1442,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"5061:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1444,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"5076:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1445,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"5090:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1449,"nodeType":"ExpressionStatement","src":"5061:36:6"},{"expression":{"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1450,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"5131:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1452,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"5146:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1453,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"5160:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1457,"nodeType":"ExpressionStatement","src":"5131:36:6"},{"expression":{"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1458,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"5201:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1460,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"5216:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1461,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"5230:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1465,"nodeType":"ExpressionStatement","src":"5201:36:6"},{"expression":{"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1466,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"5271:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1468,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"5286:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1469,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"5300:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1473,"nodeType":"ExpressionStatement","src":"5271:36:6"},{"expression":{"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1474,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"5342:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1476,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"5357:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1477,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"5371:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1481,"nodeType":"ExpressionStatement","src":"5342:36:6"},{"expression":{"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1482,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"5812:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1483,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"5821:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1484,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"5829:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1487,"nodeType":"ExpressionStatement","src":"5812:24:6"},{"expression":{"id":1488,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"5857:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1380,"id":1489,"nodeType":"Return","src":"5850:13:6"}]}]},"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"1357:305:6","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1492,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:6","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"x","nameLocation":"1691:1:6","nodeType":"VariableDeclaration","scope":1492,"src":"1683:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"y","nameLocation":"1702:1:6","nodeType":"VariableDeclaration","scope":1492,"src":"1694:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:6","nodeType":"VariableDeclaration","scope":1492,"src":"1705:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:6"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"result","nameLocation":"1757:6:6","nodeType":"VariableDeclaration","scope":1492,"src":"1749:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:6"},"scope":2144,"src":"1667:4213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1535,"nodeType":"Block","src":"6122:189:6","statements":[{"assignments":[1508],"declarations":[{"constant":false,"id":1508,"mutability":"mutable","name":"result","nameLocation":"6140:6:6","nodeType":"VariableDeclaration","scope":1535,"src":"6132:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1507,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1514,"initialValue":{"arguments":[{"id":1510,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"6156:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1511,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"6159:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1512,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"6162:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1509,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1492,1536],"referencedDeclaration":1492,"src":"6149:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1515,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"6188:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1516,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"6200:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1285_$","typeString":"type(enum Math.Rounding)"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:6","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1283,"src":"6200:11:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"}},"src":"6188:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1520,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"6222:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1521,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"6225:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1522,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"6228:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1519,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:6","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1532,"nodeType":"IfStatement","src":"6184:98:6","trueBody":{"id":1531,"nodeType":"Block","src":"6246:36:6","statements":[{"expression":{"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1527,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"6260:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1530,"nodeType":"ExpressionStatement","src":"6260:11:6"}]}},{"expression":{"id":1533,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"6298:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1506,"id":1534,"nodeType":"Return","src":"6291:13:6"}]},"documentation":{"id":1493,"nodeType":"StructuredDocumentation","src":"5886:121:6","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1536,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:6","nodeType":"FunctionDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"x","nameLocation":"6036:1:6","nodeType":"VariableDeclaration","scope":1536,"src":"6028:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1497,"mutability":"mutable","name":"y","nameLocation":"6047:1:6","nodeType":"VariableDeclaration","scope":1536,"src":"6039:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1499,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:6","nodeType":"VariableDeclaration","scope":1536,"src":"6050:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1502,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:6","nodeType":"VariableDeclaration","scope":1536,"src":"6071:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"},"typeName":{"id":1501,"nodeType":"UserDefinedTypeName","pathNode":{"id":1500,"name":"Rounding","nameLocations":["6071:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1285,"src":"6071:8:6"},"referencedDeclaration":1285,"src":"6071:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:6"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1536,"src":"6113:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:6"},"scope":2144,"src":"6012:299:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1647,"nodeType":"Block","src":"6587:1585:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1544,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"6601:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1550,"nodeType":"IfStatement","src":"6597:45:6","trueBody":{"id":1549,"nodeType":"Block","src":"6609:33:6","statements":[{"expression":{"hexValue":"30","id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1543,"id":1548,"nodeType":"Return","src":"6623:8:6"}]}},{"assignments":[1552],"declarations":[{"constant":false,"id":1552,"mutability":"mutable","name":"result","nameLocation":"7329:6:6","nodeType":"VariableDeclaration","scope":1647,"src":"7321:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1551,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1561,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1555,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"7349:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1554,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1816,1852],"referencedDeclaration":1816,"src":"7344:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:6"},{"id":1646,"nodeType":"UncheckedBlock","src":"7758:408:6","statements":[{"expression":{"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1562,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"7782:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1563,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"7792:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1564,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"7801:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1565,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"7805:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1568,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1572,"nodeType":"ExpressionStatement","src":"7782:35:6"},{"expression":{"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1573,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"7831:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1574,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"7841:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1575,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"7850:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1576,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"7854:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1579,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1583,"nodeType":"ExpressionStatement","src":"7831:35:6"},{"expression":{"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"7880:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1585,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"7890:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1586,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"7899:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1587,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"7903:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1590,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1594,"nodeType":"ExpressionStatement","src":"7880:35:6"},{"expression":{"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1595,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"7929:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1596,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"7939:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1597,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"7948:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1598,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"7952:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1601,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1605,"nodeType":"ExpressionStatement","src":"7929:35:6"},{"expression":{"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1606,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"7978:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1607,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"7988:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1608,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"7997:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1609,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"8001:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1616,"nodeType":"ExpressionStatement","src":"7978:35:6"},{"expression":{"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1617,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"8027:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1618,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"8037:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1619,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"8046:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1620,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"8050:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1623,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1627,"nodeType":"ExpressionStatement","src":"8027:35:6"},{"expression":{"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1628,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"8076:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1629,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"8086:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1630,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"8095:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1631,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"8099:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1634,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1638,"nodeType":"ExpressionStatement","src":"8076:35:6"},{"expression":{"arguments":[{"id":1640,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"8136:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1641,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"8144:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1642,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"8148:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1639,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"8132:3:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1543,"id":1645,"nodeType":"Return","src":"8125:30:6"}]}]},"documentation":{"id":1537,"nodeType":"StructuredDocumentation","src":"6317:208:6","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1648,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:6","nodeType":"FunctionDefinition","parameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"a","nameLocation":"6552:1:6","nodeType":"VariableDeclaration","scope":1648,"src":"6544:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1538,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:6"},"returnParameters":{"id":1543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1648,"src":"6578:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1541,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:6"},"scope":2144,"src":"6530:1642:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1683,"nodeType":"Block","src":"8348:161:6","statements":[{"id":1682,"nodeType":"UncheckedBlock","src":"8358:145:6","statements":[{"assignments":[1660],"declarations":[{"constant":false,"id":1660,"mutability":"mutable","name":"result","nameLocation":"8390:6:6","nodeType":"VariableDeclaration","scope":1682,"src":"8382:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1664,"initialValue":{"arguments":[{"id":1662,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"8404:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1661,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1648,1684],"referencedDeclaration":1648,"src":"8399:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"8427:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1666,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"8437:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1667,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"8449:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1285_$","typeString":"type(enum Math.Rounding)"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:6","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1283,"src":"8449:11:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"}},"src":"8437:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"8464:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1671,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"8473:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1673,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"8482:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:6","trueExpression":{"hexValue":"31","id":1676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1658,"id":1681,"nodeType":"Return","src":"8420:72:6"}]}]},"documentation":{"id":1649,"nodeType":"StructuredDocumentation","src":"8178:89:6","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1684,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:6","nodeType":"FunctionDefinition","parameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1651,"mutability":"mutable","name":"a","nameLocation":"8294:1:6","nodeType":"VariableDeclaration","scope":1684,"src":"8286:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1654,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:6","nodeType":"VariableDeclaration","scope":1684,"src":"8297:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"},"typeName":{"id":1653,"nodeType":"UserDefinedTypeName","pathNode":{"id":1652,"name":"Rounding","nameLocations":["8297:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1285,"src":"8297:8:6"},"referencedDeclaration":1285,"src":"8297:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:6"},"returnParameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1684,"src":"8339:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:6"},"scope":2144,"src":"8272:237:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1815,"nodeType":"Block","src":"8694:922:6","statements":[{"assignments":[1693],"declarations":[{"constant":false,"id":1693,"mutability":"mutable","name":"result","nameLocation":"8712:6:6","nodeType":"VariableDeclaration","scope":1815,"src":"8704:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1692,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1695,"initialValue":{"hexValue":"30","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:6"},{"id":1812,"nodeType":"UncheckedBlock","src":"8732:855:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"8760:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1710,"nodeType":"IfStatement","src":"8756:99:6","trueBody":{"id":1709,"nodeType":"Block","src":"8778:77:6","statements":[{"expression":{"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"8796:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1704,"nodeType":"ExpressionStatement","src":"8796:13:6"},{"expression":{"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1705,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"8827:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1708,"nodeType":"ExpressionStatement","src":"8827:13:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"8872:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1725,"nodeType":"IfStatement","src":"8868:96:6","trueBody":{"id":1724,"nodeType":"Block","src":"8889:75:6","statements":[{"expression":{"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"8907:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1719,"nodeType":"ExpressionStatement","src":"8907:12:6"},{"expression":{"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1720,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"8937:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1723,"nodeType":"ExpressionStatement","src":"8937:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"8981:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1740,"nodeType":"IfStatement","src":"8977:96:6","trueBody":{"id":1739,"nodeType":"Block","src":"8998:75:6","statements":[{"expression":{"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"9016:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1734,"nodeType":"ExpressionStatement","src":"9016:12:6"},{"expression":{"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1735,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"9046:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1738,"nodeType":"ExpressionStatement","src":"9046:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"9090:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1755,"nodeType":"IfStatement","src":"9086:96:6","trueBody":{"id":1754,"nodeType":"Block","src":"9107:75:6","statements":[{"expression":{"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"9125:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1749,"nodeType":"ExpressionStatement","src":"9125:12:6"},{"expression":{"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1750,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"9155:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1753,"nodeType":"ExpressionStatement","src":"9155:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"9199:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1770,"nodeType":"IfStatement","src":"9195:93:6","trueBody":{"id":1769,"nodeType":"Block","src":"9215:73:6","statements":[{"expression":{"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"9233:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1764,"nodeType":"ExpressionStatement","src":"9233:11:6"},{"expression":{"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1765,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"9262:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1768,"nodeType":"ExpressionStatement","src":"9262:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"9305:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1785,"nodeType":"IfStatement","src":"9301:93:6","trueBody":{"id":1784,"nodeType":"Block","src":"9321:73:6","statements":[{"expression":{"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"9339:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1779,"nodeType":"ExpressionStatement","src":"9339:11:6"},{"expression":{"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"9368:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1783,"nodeType":"ExpressionStatement","src":"9368:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"9411:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1800,"nodeType":"IfStatement","src":"9407:93:6","trueBody":{"id":1799,"nodeType":"Block","src":"9427:73:6","statements":[{"expression":{"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"9445:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1794,"nodeType":"ExpressionStatement","src":"9445:11:6"},{"expression":{"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1795,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"9474:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1798,"nodeType":"ExpressionStatement","src":"9474:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"9517:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1811,"nodeType":"IfStatement","src":"9513:64:6","trueBody":{"id":1810,"nodeType":"Block","src":"9533:44:6","statements":[{"expression":{"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1806,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"9551:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1809,"nodeType":"ExpressionStatement","src":"9551:11:6"}]}}]},{"expression":{"id":1813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"9603:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1691,"id":1814,"nodeType":"Return","src":"9596:13:6"}]},"documentation":{"id":1685,"nodeType":"StructuredDocumentation","src":"8515:113:6","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1816,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:6","nodeType":"FunctionDefinition","parameters":{"id":1688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"mutability":"mutable","name":"value","nameLocation":"8655:5:6","nodeType":"VariableDeclaration","scope":1816,"src":"8647:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1686,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:6"},"returnParameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1816,"src":"8685:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:6"},"scope":2144,"src":"8633:983:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1851,"nodeType":"Block","src":"9849:165:6","statements":[{"id":1850,"nodeType":"UncheckedBlock","src":"9859:149:6","statements":[{"assignments":[1828],"declarations":[{"constant":false,"id":1828,"mutability":"mutable","name":"result","nameLocation":"9891:6:6","nodeType":"VariableDeclaration","scope":1850,"src":"9883:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1832,"initialValue":{"arguments":[{"id":1830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"9905:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1829,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1816,1852],"referencedDeclaration":1816,"src":"9900:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1833,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"9932:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1834,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"9942:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1835,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"9954:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1285_$","typeString":"type(enum Math.Rounding)"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:6","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1283,"src":"9954:11:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"}},"src":"9942:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1839,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"9974:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"9983:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:6","trueExpression":{"hexValue":"31","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1847,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1826,"id":1849,"nodeType":"Return","src":"9925:72:6"}]}]},"documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"9622:142:6","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1852,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:6","nodeType":"FunctionDefinition","parameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"value","nameLocation":"9791:5:6","nodeType":"VariableDeclaration","scope":1852,"src":"9783:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1818,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1822,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:6","nodeType":"VariableDeclaration","scope":1852,"src":"9798:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"},"typeName":{"id":1821,"nodeType":"UserDefinedTypeName","pathNode":{"id":1820,"name":"Rounding","nameLocations":["9798:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1285,"src":"9798:8:6"},"referencedDeclaration":1285,"src":"9798:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:6"},"returnParameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1852,"src":"9840:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:6"},"scope":2144,"src":"9769:245:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1980,"nodeType":"Block","src":"10201:854:6","statements":[{"assignments":[1861],"declarations":[{"constant":false,"id":1861,"mutability":"mutable","name":"result","nameLocation":"10219:6:6","nodeType":"VariableDeclaration","scope":1980,"src":"10211:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1863,"initialValue":{"hexValue":"30","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:6"},{"id":1977,"nodeType":"UncheckedBlock","src":"10239:787:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10267:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1880,"nodeType":"IfStatement","src":"10263:103:6","trueBody":{"id":1879,"nodeType":"Block","src":"10286:80:6","statements":[{"expression":{"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10304:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1874,"nodeType":"ExpressionStatement","src":"10304:17:6"},{"expression":{"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1875,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"10339:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1878,"nodeType":"ExpressionStatement","src":"10339:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10383:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1897,"nodeType":"IfStatement","src":"10379:103:6","trueBody":{"id":1896,"nodeType":"Block","src":"10402:80:6","statements":[{"expression":{"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10420:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1891,"nodeType":"ExpressionStatement","src":"10420:17:6"},{"expression":{"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1892,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"10455:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1895,"nodeType":"ExpressionStatement","src":"10455:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10499:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1914,"nodeType":"IfStatement","src":"10495:103:6","trueBody":{"id":1913,"nodeType":"Block","src":"10518:80:6","statements":[{"expression":{"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10536:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1908,"nodeType":"ExpressionStatement","src":"10536:17:6"},{"expression":{"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1909,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"10571:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1912,"nodeType":"ExpressionStatement","src":"10571:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10615:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1931,"nodeType":"IfStatement","src":"10611:100:6","trueBody":{"id":1930,"nodeType":"Block","src":"10633:78:6","statements":[{"expression":{"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10651:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1925,"nodeType":"ExpressionStatement","src":"10651:16:6"},{"expression":{"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1926,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"10685:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1929,"nodeType":"ExpressionStatement","src":"10685:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10728:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1948,"nodeType":"IfStatement","src":"10724:100:6","trueBody":{"id":1947,"nodeType":"Block","src":"10746:78:6","statements":[{"expression":{"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10764:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1942,"nodeType":"ExpressionStatement","src":"10764:16:6"},{"expression":{"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1943,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"10798:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1946,"nodeType":"ExpressionStatement","src":"10798:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10841:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1965,"nodeType":"IfStatement","src":"10837:100:6","trueBody":{"id":1964,"nodeType":"Block","src":"10859:78:6","statements":[{"expression":{"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10877:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1959,"nodeType":"ExpressionStatement","src":"10877:16:6"},{"expression":{"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1960,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"10911:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1963,"nodeType":"ExpressionStatement","src":"10911:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10954:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1976,"nodeType":"IfStatement","src":"10950:66:6","trueBody":{"id":1975,"nodeType":"Block","src":"10972:44:6","statements":[{"expression":{"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1971,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"10990:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1974,"nodeType":"ExpressionStatement","src":"10990:11:6"}]}}]},{"expression":{"id":1978,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"11042:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1859,"id":1979,"nodeType":"Return","src":"11035:13:6"}]},"documentation":{"id":1853,"nodeType":"StructuredDocumentation","src":"10020:114:6","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1981,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:6","nodeType":"FunctionDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"value","nameLocation":"10162:5:6","nodeType":"VariableDeclaration","scope":1981,"src":"10154:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1854,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:6"},"returnParameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1981,"src":"10192:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:6"},"scope":2144,"src":"10139:916:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2016,"nodeType":"Block","src":"11290:167:6","statements":[{"id":2015,"nodeType":"UncheckedBlock","src":"11300:151:6","statements":[{"assignments":[1993],"declarations":[{"constant":false,"id":1993,"mutability":"mutable","name":"result","nameLocation":"11332:6:6","nodeType":"VariableDeclaration","scope":2015,"src":"11324:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1992,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1997,"initialValue":{"arguments":[{"id":1995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"11347:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1994,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1981,2017],"referencedDeclaration":1981,"src":"11341:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1998,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"11374:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1999,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"11384:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2000,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"11396:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1285_$","typeString":"type(enum Math.Rounding)"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:6","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1283,"src":"11396:11:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"}},"src":"11384:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2004,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"11417:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"11426:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:6","trueExpression":{"hexValue":"31","id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2012,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1991,"id":2014,"nodeType":"Return","src":"11367:73:6"}]}]},"documentation":{"id":1982,"nodeType":"StructuredDocumentation","src":"11061:143:6","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2017,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:6","nodeType":"FunctionDefinition","parameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1984,"mutability":"mutable","name":"value","nameLocation":"11232:5:6","nodeType":"VariableDeclaration","scope":2017,"src":"11224:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1983,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1987,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:6","nodeType":"VariableDeclaration","scope":2017,"src":"11239:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"},"typeName":{"id":1986,"nodeType":"UserDefinedTypeName","pathNode":{"id":1985,"name":"Rounding","nameLocations":["11239:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1285,"src":"11239:8:6"},"referencedDeclaration":1285,"src":"11239:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:6"},"returnParameters":{"id":1991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2017,"src":"11281:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1989,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:6"},"scope":2144,"src":"11209:248:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2103,"nodeType":"Block","src":"11771:600:6","statements":[{"assignments":[2026],"declarations":[{"constant":false,"id":2026,"mutability":"mutable","name":"result","nameLocation":"11789:6:6","nodeType":"VariableDeclaration","scope":2103,"src":"11781:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2025,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2028,"initialValue":{"hexValue":"30","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:6"},{"id":2100,"nodeType":"UncheckedBlock","src":"11809:533:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"11837:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2043,"nodeType":"IfStatement","src":"11833:98:6","trueBody":{"id":2042,"nodeType":"Block","src":"11855:76:6","statements":[{"expression":{"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"11873:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2037,"nodeType":"ExpressionStatement","src":"11873:13:6"},{"expression":{"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2038,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"11904:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2041,"nodeType":"ExpressionStatement","src":"11904:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"11948:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2058,"nodeType":"IfStatement","src":"11944:95:6","trueBody":{"id":2057,"nodeType":"Block","src":"11965:74:6","statements":[{"expression":{"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"11983:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2052,"nodeType":"ExpressionStatement","src":"11983:12:6"},{"expression":{"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2053,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"12013:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2056,"nodeType":"ExpressionStatement","src":"12013:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"12056:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2073,"nodeType":"IfStatement","src":"12052:95:6","trueBody":{"id":2072,"nodeType":"Block","src":"12073:74:6","statements":[{"expression":{"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"12091:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2067,"nodeType":"ExpressionStatement","src":"12091:12:6"},{"expression":{"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2068,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"12121:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2071,"nodeType":"ExpressionStatement","src":"12121:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"12164:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2088,"nodeType":"IfStatement","src":"12160:95:6","trueBody":{"id":2087,"nodeType":"Block","src":"12181:74:6","statements":[{"expression":{"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"12199:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2082,"nodeType":"ExpressionStatement","src":"12199:12:6"},{"expression":{"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2083,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"12229:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2086,"nodeType":"ExpressionStatement","src":"12229:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"12272:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2099,"nodeType":"IfStatement","src":"12268:64:6","trueBody":{"id":2098,"nodeType":"Block","src":"12288:44:6","statements":[{"expression":{"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2094,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"12306:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2097,"nodeType":"ExpressionStatement","src":"12306:11:6"}]}}]},{"expression":{"id":2101,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"12358:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2024,"id":2102,"nodeType":"Return","src":"12351:13:6"}]},"documentation":{"id":2018,"nodeType":"StructuredDocumentation","src":"11463:240:6","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2104,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:6","nodeType":"FunctionDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2020,"mutability":"mutable","name":"value","nameLocation":"11732:5:6","nodeType":"VariableDeclaration","scope":2104,"src":"11724:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2019,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:6"},"returnParameters":{"id":2024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2104,"src":"11762:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2022,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:6"},"scope":2144,"src":"11708:663:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2142,"nodeType":"Block","src":"12608:174:6","statements":[{"id":2141,"nodeType":"UncheckedBlock","src":"12618:158:6","statements":[{"assignments":[2116],"declarations":[{"constant":false,"id":2116,"mutability":"mutable","name":"result","nameLocation":"12650:6:6","nodeType":"VariableDeclaration","scope":2141,"src":"12642:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2115,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2120,"initialValue":{"arguments":[{"id":2118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"12666:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2117,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2104,2143],"referencedDeclaration":2104,"src":"12659:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2121,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"12693:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2122,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"12703:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2123,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"12715:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1285_$","typeString":"type(enum Math.Rounding)"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:6","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1283,"src":"12715:11:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"}},"src":"12703:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2127,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"12736:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2130,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"12751:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:6","trueExpression":{"hexValue":"31","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2138,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2114,"id":2140,"nodeType":"Return","src":"12686:79:6"}]}]},"documentation":{"id":2105,"nodeType":"StructuredDocumentation","src":"12377:144:6","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2143,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:6","nodeType":"FunctionDefinition","parameters":{"id":2111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2107,"mutability":"mutable","name":"value","nameLocation":"12550:5:6","nodeType":"VariableDeclaration","scope":2143,"src":"12542:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2106,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2110,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:6","nodeType":"VariableDeclaration","scope":2143,"src":"12557:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"},"typeName":{"id":2109,"nodeType":"UserDefinedTypeName","pathNode":{"id":2108,"name":"Rounding","nameLocations":["12557:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1285,"src":"12557:8:6"},"referencedDeclaration":1285,"src":"12557:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1285","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:6"},"returnParameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2143,"src":"12599:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:6"},"scope":2144,"src":"12526:256:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2145,"src":"202:12582:6","usedErrors":[]}],"src":"103:12682:6"},"id":6},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[2249]},"id":2250,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2146,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":2147,"nodeType":"StructuredDocumentation","src":"134:80:7","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2249,"linearizedBaseContracts":[2249],"name":"SignedMath","nameLocation":"223:10:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":2164,"nodeType":"Block","src":"375:37:7","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2157,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"392:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2158,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"396:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2161,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"404:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:7","trueExpression":{"id":2160,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"400:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2156,"id":2163,"nodeType":"Return","src":"385:20:7"}]},"documentation":{"id":2148,"nodeType":"StructuredDocumentation","src":"240:66:7","text":" @dev Returns the largest of two signed numbers."},"id":2165,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:7","nodeType":"FunctionDefinition","parameters":{"id":2153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2150,"mutability":"mutable","name":"a","nameLocation":"331:1:7","nodeType":"VariableDeclaration","scope":2165,"src":"324:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2149,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2152,"mutability":"mutable","name":"b","nameLocation":"341:1:7","nodeType":"VariableDeclaration","scope":2165,"src":"334:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2151,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:7"},"returnParameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2165,"src":"367:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2154,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:7"},"scope":2249,"src":"311:101:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2182,"nodeType":"Block","src":"554:37:7","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2175,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"571:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2176,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"575:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2179,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"583:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:7","trueExpression":{"id":2178,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"579:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2174,"id":2181,"nodeType":"Return","src":"564:20:7"}]},"documentation":{"id":2166,"nodeType":"StructuredDocumentation","src":"418:67:7","text":" @dev Returns the smallest of two signed numbers."},"id":2183,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:7","nodeType":"FunctionDefinition","parameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"a","nameLocation":"510:1:7","nodeType":"VariableDeclaration","scope":2183,"src":"503:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2167,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2170,"mutability":"mutable","name":"b","nameLocation":"520:1:7","nodeType":"VariableDeclaration","scope":2183,"src":"513:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2169,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:7"},"returnParameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2183,"src":"546:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2172,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:7"},"scope":2249,"src":"490:101:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2226,"nodeType":"Block","src":"796:162:7","statements":[{"assignments":[2194],"declarations":[{"constant":false,"id":2194,"mutability":"mutable","name":"x","nameLocation":"865:1:7","nodeType":"VariableDeclaration","scope":2226,"src":"858:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2193,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2207,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2195,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"870:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2196,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"874:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2199,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"881:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2200,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"885:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2202,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2205,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:7"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2208,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"910:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2213,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"930:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2211,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:7","typeDescriptions":{}}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:7","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2209,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:7","typeDescriptions":{}}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2218,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"944:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2219,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"948:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2221,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2192,"id":2225,"nodeType":"Return","src":"903:48:7"}]},"documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"597:126:7","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":2227,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:7","nodeType":"FunctionDefinition","parameters":{"id":2189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"a","nameLocation":"752:1:7","nodeType":"VariableDeclaration","scope":2227,"src":"745:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2185,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2188,"mutability":"mutable","name":"b","nameLocation":"762:1:7","nodeType":"VariableDeclaration","scope":2227,"src":"755:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2187,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:7"},"returnParameters":{"id":2192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2227,"src":"788:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2190,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:7"},"scope":2249,"src":"728:230:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2247,"nodeType":"Block","src":"1102:158:7","statements":[{"id":2246,"nodeType":"UncheckedBlock","src":"1112:142:7","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2237,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"1227:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:7","subExpression":{"id":2241,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"1241:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:7","trueExpression":{"id":2240,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"1236:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:7","typeDescriptions":{}}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2234,"id":2245,"nodeType":"Return","src":"1212:31:7"}]}]},"documentation":{"id":2228,"nodeType":"StructuredDocumentation","src":"964:78:7","text":" @dev Returns the absolute unsigned value of a signed value."},"id":2248,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:7","nodeType":"FunctionDefinition","parameters":{"id":2231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2230,"mutability":"mutable","name":"n","nameLocation":"1067:1:7","nodeType":"VariableDeclaration","scope":2248,"src":"1060:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2229,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:7"},"returnParameters":{"id":2234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2248,"src":"1093:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2232,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:7"},"scope":2249,"src":"1047:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2250,"src":"215:1047:7","usedErrors":[]}],"src":"109:1154:7"},"id":7},"contracts/HyperContract.sol":{"ast":{"absolutePath":"contracts/HyperContract.sol","exportedSymbols":{"CallLib":[4333],"HyperContract":[2320],"IInterchainAccountRouter":[3943],"IInterchainGasPaymaster":[3957]},"id":2321,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2251,"literals":["solidity",">=","0.6",".11"],"nodeType":"PragmaDirective","src":"47:25:8"},{"absolutePath":"contracts/precompiles/InterchainAccountRouter.sol","file":"./precompiles/InterchainAccountRouter.sol","id":2252,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2321,"sourceUnit":3944,"src":"74:51:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/precompiles/InterchainGasPaymaster.sol","file":"./precompiles/InterchainGasPaymaster.sol","id":2253,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2321,"sourceUnit":3958,"src":"127:50:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/precompiles/libs/Call.sol","file":"./precompiles/libs/Call.sol","id":2255,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2321,"sourceUnit":4334,"src":"179:52:8","symbolAliases":[{"foreign":{"id":2254,"name":"CallLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"187:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"HyperContract","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2320,"linearizedBaseContracts":[2320],"name":"HyperContract","nameLocation":"244:13:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"621fbd59","id":2257,"mutability":"mutable","name":"lastMessageID","nameLocation":"280:13:8","nodeType":"VariableDeclaration","scope":2320,"src":"265:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"265:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":2288,"nodeType":"Block","src":"484:265:8","statements":[{"assignments":[2272],"declarations":[{"constant":false,"id":2272,"mutability":"mutable","name":"router","nameLocation":"520:6:8","nodeType":"VariableDeclaration","scope":2288,"src":"495:31:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IInterchainAccountRouter_$3943","typeString":"contract IInterchainAccountRouter"},"typeName":{"id":2271,"nodeType":"UserDefinedTypeName","pathNode":{"id":2270,"name":"IInterchainAccountRouter","nameLocations":["495:24:8"],"nodeType":"IdentifierPath","referencedDeclaration":3943,"src":"495:24:8"},"referencedDeclaration":3943,"src":"495:24:8","typeDescriptions":{"typeIdentifier":"t_contract$_IInterchainAccountRouter_$3943","typeString":"contract IInterchainAccountRouter"}},"visibility":"internal"}],"id":2276,"initialValue":{"arguments":[{"id":2274,"name":"routerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"568:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2273,"name":"IInterchainAccountRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"529:24:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IInterchainAccountRouter_$3943_$","typeString":"type(contract IInterchainAccountRouter)"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"529:63:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IInterchainAccountRouter_$3943","typeString":"contract IInterchainAccountRouter"}},"nodeType":"VariableDeclarationStatement","src":"495:97:8"},{"expression":{"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2277,"name":"lastMessageID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"603:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2280,"name":"ethereumDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"651:14:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"components":[{"id":2281,"name":"toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"681:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"680:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"706:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2284,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"726:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2278,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"619:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IInterchainAccountRouter_$3943","typeString":"contract IInterchainAccountRouter"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"626:10:8","memberName":"callRemote","nodeType":"MemberAccess","referencedDeclaration":3933,"src":"619:17:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint32_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (uint32,address,uint256,bytes memory) external returns (bytes32)"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"619:122:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"603:138:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2287,"nodeType":"ExpressionStatement","src":"603:138:8"}]},"functionSelector":"cef5ddf0","id":2289,"implemented":true,"kind":"function","modifiers":[],"name":"sendTransaction","nameLocation":"310:15:8","nodeType":"FunctionDefinition","parameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2259,"mutability":"mutable","name":"ethereumDomain","nameLocation":"343:14:8","nodeType":"VariableDeclaration","scope":2289,"src":"336:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2258,"name":"uint32","nodeType":"ElementaryTypeName","src":"336:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2261,"mutability":"mutable","name":"routerAddress","nameLocation":"376:13:8","nodeType":"VariableDeclaration","scope":2289,"src":"368:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2260,"name":"address","nodeType":"ElementaryTypeName","src":"368:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2263,"mutability":"mutable","name":"toAddress","nameLocation":"408:9:8","nodeType":"VariableDeclaration","scope":2289,"src":"400:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2262,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2265,"mutability":"mutable","name":"value","nameLocation":"436:5:8","nodeType":"VariableDeclaration","scope":2289,"src":"428:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2264,"name":"uint256","nodeType":"ElementaryTypeName","src":"428:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2267,"mutability":"mutable","name":"data","nameLocation":"465:4:8","nodeType":"VariableDeclaration","scope":2289,"src":"452:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2266,"name":"bytes","nodeType":"ElementaryTypeName","src":"452:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"325:151:8"},"returnParameters":{"id":2269,"nodeType":"ParameterList","parameters":[],"src":"484:0:8"},"scope":2320,"src":"301:448:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2318,"nodeType":"Block","src":"889:546:8","statements":[{"assignments":[2300],"declarations":[{"constant":false,"id":2300,"mutability":"mutable","name":"igp","nameLocation":"989:3:8","nodeType":"VariableDeclaration","scope":2318,"src":"965:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IInterchainGasPaymaster_$3957","typeString":"contract IInterchainGasPaymaster"},"typeName":{"id":2299,"nodeType":"UserDefinedTypeName","pathNode":{"id":2298,"name":"IInterchainGasPaymaster","nameLocations":["965:23:8"],"nodeType":"IdentifierPath","referencedDeclaration":3957,"src":"965:23:8"},"referencedDeclaration":3957,"src":"965:23:8","typeDescriptions":{"typeIdentifier":"t_contract$_IInterchainGasPaymaster_$3957","typeString":"contract IInterchainGasPaymaster"}},"visibility":"internal"}],"id":2304,"initialValue":{"arguments":[{"id":2302,"name":"igpAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"1019:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2301,"name":"IInterchainGasPaymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"995:23:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IInterchainGasPaymaster_$3957_$","typeString":"type(contract IInterchainGasPaymaster)"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"995:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IInterchainGasPaymaster_$3957","typeString":"contract IInterchainGasPaymaster"}},"nodeType":"VariableDeclarationStatement","src":"965:65:8"},{"expression":{"arguments":[{"id":2311,"name":"lastMessageID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"1125:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2312,"name":"ethereumDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"1188:14:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2313,"name":"gasAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"1344:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2314,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1406:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1410:6:8","memberName":"sender","nodeType":"MemberAccess","src":"1406:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2305,"name":"igp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"1041:3:8","typeDescriptions":{"typeIdentifier":"t_contract$_IInterchainGasPaymaster_$3957","typeString":"contract IInterchainGasPaymaster"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1045:9:8","memberName":"payForGas","nodeType":"MemberAccess","referencedDeclaration":3956,"src":"1041:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes32_$_t_uint32_$_t_uint256_$_t_address_$returns$__$","typeString":"function (bytes32,uint32,uint256,address) payable external"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2308,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1062:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1066:5:8","memberName":"value","nodeType":"MemberAccess","src":"1062:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1041:31:8","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes32_$_t_uint32_$_t_uint256_$_t_address_$returns$__$value","typeString":"function (bytes32,uint32,uint256,address) payable external"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1041:386:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2317,"nodeType":"ExpressionStatement","src":"1041:386:8"}]},"functionSelector":"3dd37287","id":2319,"implemented":true,"kind":"function","modifiers":[],"name":"processMessage","nameLocation":"763:14:8","nodeType":"FunctionDefinition","parameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"ethereumDomain","nameLocation":"795:14:8","nodeType":"VariableDeclaration","scope":2319,"src":"788:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2290,"name":"uint32","nodeType":"ElementaryTypeName","src":"788:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2293,"mutability":"mutable","name":"igpAddress","nameLocation":"828:10:8","nodeType":"VariableDeclaration","scope":2319,"src":"820:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2292,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2295,"mutability":"mutable","name":"gasAmount","nameLocation":"857:9:8","nodeType":"VariableDeclaration","scope":2319,"src":"849:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2294,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"777:96:8"},"returnParameters":{"id":2297,"nodeType":"ParameterList","parameters":[],"src":"889:0:8"},"scope":2320,"src":"754:681:8","stateMutability":"payable","virtual":false,"visibility":"public"}],"scope":2321,"src":"235:1211:8","usedErrors":[]}],"src":"47:1401:8"},"id":8},"contracts/PlanetDAO.sol":{"ast":{"absolutePath":"contracts/PlanetDAO.sol","exportedSymbols":{"Context":[1049],"ERC20":[586],"IERC20":[664],"IERC20Metadata":[689],"Math":[2144],"PlanetDAO":[3843],"SignedMath":[2249],"Strings":[1278]},"id":3844,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2322,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:9"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":2323,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3844,"sourceUnit":1279,"src":"58:51:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":2324,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3844,"sourceUnit":587,"src":"111:55:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"PlanetDAO","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3843,"linearizedBaseContracts":[3843],"name":"PlanetDAO","nameLocation":"179:9:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PlanetDAO.dao_uri_struct","id":2331,"members":[{"constant":false,"id":2326,"mutability":"mutable","name":"dao_wallet","nameLocation":"236:10:9","nodeType":"VariableDeclaration","scope":2331,"src":"229:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2325,"name":"string","nodeType":"ElementaryTypeName","src":"229:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2328,"mutability":"mutable","name":"dao_uri","nameLocation":"264:7:9","nodeType":"VariableDeclaration","scope":2331,"src":"257:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2327,"name":"string","nodeType":"ElementaryTypeName","src":"257:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2330,"mutability":"mutable","name":"finished","nameLocation":"289:8:9","nodeType":"VariableDeclaration","scope":2331,"src":"282:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2329,"name":"string","nodeType":"ElementaryTypeName","src":"282:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"dao_uri_struct","nameLocation":"203:14:9","nodeType":"StructDefinition","scope":3843,"src":"196:109:9","visibility":"public"},{"canonicalName":"PlanetDAO.goal_uri_struct","id":2336,"members":[{"constant":false,"id":2333,"mutability":"mutable","name":"dao_id","nameLocation":"352:6:9","nodeType":"VariableDeclaration","scope":2336,"src":"345:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2332,"name":"string","nodeType":"ElementaryTypeName","src":"345:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2335,"mutability":"mutable","name":"goal_uri","nameLocation":"376:8:9","nodeType":"VariableDeclaration","scope":2336,"src":"369:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2334,"name":"string","nodeType":"ElementaryTypeName","src":"369:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"goal_uri_struct","nameLocation":"318:15:9","nodeType":"StructDefinition","scope":3843,"src":"311:81:9","visibility":"public"},{"canonicalName":"PlanetDAO.ideas_uri_struct","id":2343,"members":[{"constant":false,"id":2338,"mutability":"mutable","name":"goal_id","nameLocation":"443:7:9","nodeType":"VariableDeclaration","scope":2343,"src":"435:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2337,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2340,"mutability":"mutable","name":"ideas_uri","nameLocation":"468:9:9","nodeType":"VariableDeclaration","scope":2343,"src":"461:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2339,"name":"string","nodeType":"ElementaryTypeName","src":"461:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2342,"mutability":"mutable","name":"donation","nameLocation":"496:8:9","nodeType":"VariableDeclaration","scope":2343,"src":"488:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2341,"name":"uint256","nodeType":"ElementaryTypeName","src":"488:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ideas_uri_struct","nameLocation":"407:16:9","nodeType":"StructDefinition","scope":3843,"src":"400:112:9","visibility":"public"},{"canonicalName":"PlanetDAO.donation_struct","id":2350,"members":[{"constant":false,"id":2345,"mutability":"mutable","name":"ideas_id","nameLocation":"562:8:9","nodeType":"VariableDeclaration","scope":2350,"src":"554:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2344,"name":"uint256","nodeType":"ElementaryTypeName","src":"554:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2347,"mutability":"mutable","name":"userid","nameLocation":"589:6:9","nodeType":"VariableDeclaration","scope":2350,"src":"581:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"581:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2349,"mutability":"mutable","name":"donation","nameLocation":"614:8:9","nodeType":"VariableDeclaration","scope":2350,"src":"606:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2348,"name":"uint256","nodeType":"ElementaryTypeName","src":"606:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"donation_struct","nameLocation":"527:15:9","nodeType":"StructDefinition","scope":3843,"src":"520:110:9","visibility":"public"},{"canonicalName":"PlanetDAO.smart_contract_uri_struct","id":2357,"members":[{"constant":false,"id":2352,"mutability":"mutable","name":"smart_contract_id","nameLocation":"690:17:9","nodeType":"VariableDeclaration","scope":2357,"src":"682:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2351,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2354,"mutability":"mutable","name":"ideas_id","nameLocation":"726:8:9","nodeType":"VariableDeclaration","scope":2357,"src":"718:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2353,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2356,"mutability":"mutable","name":"smart_contract_uri","nameLocation":"752:18:9","nodeType":"VariableDeclaration","scope":2357,"src":"745:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2355,"name":"string","nodeType":"ElementaryTypeName","src":"745:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"smart_contract_uri_struct","nameLocation":"645:25:9","nodeType":"StructDefinition","scope":3843,"src":"638:140:9","visibility":"public"},{"canonicalName":"PlanetDAO.goal_ideas_votes_struct","id":2364,"members":[{"constant":false,"id":2359,"mutability":"mutable","name":"goal_id","nameLocation":"834:7:9","nodeType":"VariableDeclaration","scope":2364,"src":"826:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2358,"name":"uint256","nodeType":"ElementaryTypeName","src":"826:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2361,"mutability":"mutable","name":"ideas_id","nameLocation":"860:8:9","nodeType":"VariableDeclaration","scope":2364,"src":"852:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2360,"name":"uint256","nodeType":"ElementaryTypeName","src":"852:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2363,"mutability":"mutable","name":"user_id","nameLocation":"887:7:9","nodeType":"VariableDeclaration","scope":2364,"src":"879:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"879:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"goal_ideas_votes_struct","nameLocation":"791:23:9","nodeType":"StructDefinition","scope":3843,"src":"784:118:9","visibility":"public"},{"canonicalName":"PlanetDAO.message_struct","id":2373,"members":[{"constant":false,"id":2366,"mutability":"mutable","name":"message_id","nameLocation":"949:10:9","nodeType":"VariableDeclaration","scope":2373,"src":"941:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2365,"name":"uint256","nodeType":"ElementaryTypeName","src":"941:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2368,"mutability":"mutable","name":"ideas_id","nameLocation":"978:8:9","nodeType":"VariableDeclaration","scope":2373,"src":"970:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2367,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2370,"mutability":"mutable","name":"message","nameLocation":"1004:7:9","nodeType":"VariableDeclaration","scope":2373,"src":"997:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2369,"name":"string","nodeType":"ElementaryTypeName","src":"997:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2372,"mutability":"mutable","name":"sender","nameLocation":"1029:6:9","nodeType":"VariableDeclaration","scope":2373,"src":"1022:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2371,"name":"string","nodeType":"ElementaryTypeName","src":"1022:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"message_struct","nameLocation":"915:14:9","nodeType":"StructDefinition","scope":3843,"src":"908:135:9","visibility":"public"},{"canonicalName":"PlanetDAO.message_read_struct","id":2382,"members":[{"constant":false,"id":2375,"mutability":"mutable","name":"message_id","nameLocation":"1095:10:9","nodeType":"VariableDeclaration","scope":2382,"src":"1087:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1087:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2377,"mutability":"mutable","name":"ideas_id","nameLocation":"1124:8:9","nodeType":"VariableDeclaration","scope":2382,"src":"1116:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2376,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2379,"mutability":"mutable","name":"user_id","nameLocation":"1151:7:9","nodeType":"VariableDeclaration","scope":2382,"src":"1143:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1143:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2381,"mutability":"mutable","name":"msg_type","nameLocation":"1176:8:9","nodeType":"VariableDeclaration","scope":2382,"src":"1169:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2380,"name":"string","nodeType":"ElementaryTypeName","src":"1169:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"message_read_struct","nameLocation":"1056:19:9","nodeType":"StructDefinition","scope":3843,"src":"1049:143:9","visibility":"public"},{"canonicalName":"PlanetDAO.reply_struct","id":2391,"members":[{"constant":false,"id":2384,"mutability":"mutable","name":"reply_id","nameLocation":"1237:8:9","nodeType":"VariableDeclaration","scope":2391,"src":"1229:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2386,"mutability":"mutable","name":"message_id","nameLocation":"1264:10:9","nodeType":"VariableDeclaration","scope":2391,"src":"1256:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2385,"name":"uint256","nodeType":"ElementaryTypeName","src":"1256:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2388,"mutability":"mutable","name":"ideas_id","nameLocation":"1293:8:9","nodeType":"VariableDeclaration","scope":2391,"src":"1285:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"1285:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2390,"mutability":"mutable","name":"message","nameLocation":"1319:7:9","nodeType":"VariableDeclaration","scope":2391,"src":"1312:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2389,"name":"string","nodeType":"ElementaryTypeName","src":"1312:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"reply_struct","nameLocation":"1205:12:9","nodeType":"StructDefinition","scope":3843,"src":"1198:136:9","visibility":"public"},{"canonicalName":"PlanetDAO.UnbondingRequest","id":2396,"members":[{"constant":false,"id":2393,"mutability":"mutable","name":"completionTime","nameLocation":"1383:14:9","nodeType":"VariableDeclaration","scope":2396,"src":"1377:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":2392,"name":"int64","nodeType":"ElementaryTypeName","src":"1377:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":2395,"mutability":"mutable","name":"amount","nameLocation":"1416:6:9","nodeType":"VariableDeclaration","scope":2396,"src":"1408:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2394,"name":"uint256","nodeType":"ElementaryTypeName","src":"1408:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UnbondingRequest","nameLocation":"1349:16:9","nodeType":"StructDefinition","scope":3843,"src":"1342:88:9","visibility":"public"},{"canonicalName":"PlanetDAO.join_struct","id":2401,"members":[{"constant":false,"id":2398,"mutability":"mutable","name":"daoid","nameLocation":"1476:5:9","nodeType":"VariableDeclaration","scope":2401,"src":"1468:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2400,"mutability":"mutable","name":"user_id","nameLocation":"1500:7:9","nodeType":"VariableDeclaration","scope":2401,"src":"1492:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2399,"name":"uint256","nodeType":"ElementaryTypeName","src":"1492:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"join_struct","nameLocation":"1445:11:9","nodeType":"StructDefinition","scope":3843,"src":"1438:77:9","visibility":"public"},{"canonicalName":"PlanetDAO.user_badge_struct","id":2420,"members":[{"constant":false,"id":2403,"mutability":"mutable","name":"user_id","nameLocation":"1567:7:9","nodeType":"VariableDeclaration","scope":2420,"src":"1559:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1559:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2405,"mutability":"mutable","name":"dao","nameLocation":"1590:3:9","nodeType":"VariableDeclaration","scope":2420,"src":"1585:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2404,"name":"bool","nodeType":"ElementaryTypeName","src":"1585:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2407,"mutability":"mutable","name":"joined","nameLocation":"1609:6:9","nodeType":"VariableDeclaration","scope":2420,"src":"1604:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2406,"name":"bool","nodeType":"ElementaryTypeName","src":"1604:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2409,"mutability":"mutable","name":"goal","nameLocation":"1631:4:9","nodeType":"VariableDeclaration","scope":2420,"src":"1626:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2408,"name":"bool","nodeType":"ElementaryTypeName","src":"1626:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2411,"mutability":"mutable","name":"ideas","nameLocation":"1651:5:9","nodeType":"VariableDeclaration","scope":2420,"src":"1646:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2410,"name":"bool","nodeType":"ElementaryTypeName","src":"1646:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2413,"mutability":"mutable","name":"vote","nameLocation":"1672:4:9","nodeType":"VariableDeclaration","scope":2420,"src":"1667:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2412,"name":"bool","nodeType":"ElementaryTypeName","src":"1667:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2415,"mutability":"mutable","name":"donation","nameLocation":"1692:8:9","nodeType":"VariableDeclaration","scope":2420,"src":"1687:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2414,"name":"bool","nodeType":"ElementaryTypeName","src":"1687:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2417,"mutability":"mutable","name":"comment","nameLocation":"1716:7:9","nodeType":"VariableDeclaration","scope":2420,"src":"1711:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2416,"name":"bool","nodeType":"ElementaryTypeName","src":"1711:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2419,"mutability":"mutable","name":"reply","nameLocation":"1739:5:9","nodeType":"VariableDeclaration","scope":2420,"src":"1734:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2418,"name":"bool","nodeType":"ElementaryTypeName","src":"1734:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"user_badge_struct","nameLocation":"1530:17:9","nodeType":"StructDefinition","scope":3843,"src":"1523:229:9","visibility":"public"},{"canonicalName":"PlanetDAO.feed_struct","id":2429,"members":[{"constant":false,"id":2422,"mutability":"mutable","name":"feed_id","nameLocation":"1802:7:9","nodeType":"VariableDeclaration","scope":2429,"src":"1794:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2421,"name":"uint256","nodeType":"ElementaryTypeName","src":"1794:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2424,"mutability":"mutable","name":"date","nameLocation":"1828:4:9","nodeType":"VariableDeclaration","scope":2429,"src":"1820:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2423,"name":"uint256","nodeType":"ElementaryTypeName","src":"1820:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2426,"mutability":"mutable","name":"Type","nameLocation":"1850:4:9","nodeType":"VariableDeclaration","scope":2429,"src":"1843:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2425,"name":"string","nodeType":"ElementaryTypeName","src":"1843:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"data","nameLocation":"1872:4:9","nodeType":"VariableDeclaration","scope":2429,"src":"1865:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2427,"name":"string","nodeType":"ElementaryTypeName","src":"1865:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"feed_struct","nameLocation":"1771:11:9","nodeType":"StructDefinition","scope":3843,"src":"1764:120:9","visibility":"public"},{"constant":false,"functionSelector":"7bbd582d","id":2431,"mutability":"mutable","name":"_dao_ids","nameLocation":"1905:8:9","nodeType":"VariableDeclaration","scope":3843,"src":"1890:23:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2430,"name":"uint256","nodeType":"ElementaryTypeName","src":"1890:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ec245802","id":2433,"mutability":"mutable","name":"_donations_ids","nameLocation":"1935:14:9","nodeType":"VariableDeclaration","scope":3843,"src":"1920:29:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"1920:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"13bf4cea","id":2435,"mutability":"mutable","name":"_goal_ids","nameLocation":"1971:9:9","nodeType":"VariableDeclaration","scope":3843,"src":"1956:24:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"1956:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d3791b20","id":2437,"mutability":"mutable","name":"_ideas_ids","nameLocation":"2002:10:9","nodeType":"VariableDeclaration","scope":3843,"src":"1987:25:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"1987:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1171b621","id":2439,"mutability":"mutable","name":"_join_ids","nameLocation":"2034:9:9","nodeType":"VariableDeclaration","scope":3843,"src":"2019:24:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2438,"name":"uint256","nodeType":"ElementaryTypeName","src":"2019:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1b592aeb","id":2441,"mutability":"mutable","name":"_smart_contract_ids","nameLocation":"2065:19:9","nodeType":"VariableDeclaration","scope":3843,"src":"2050:34:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2440,"name":"uint256","nodeType":"ElementaryTypeName","src":"2050:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"4a797bd7","id":2443,"mutability":"mutable","name":"_ideas_vote_ids","nameLocation":"2106:15:9","nodeType":"VariableDeclaration","scope":3843,"src":"2091:30:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2442,"name":"uint256","nodeType":"ElementaryTypeName","src":"2091:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"9077007d","id":2445,"mutability":"mutable","name":"_message_ids","nameLocation":"2143:12:9","nodeType":"VariableDeclaration","scope":3843,"src":"2128:27:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2444,"name":"uint256","nodeType":"ElementaryTypeName","src":"2128:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ca013f17","id":2447,"mutability":"mutable","name":"_message_read_ids","nameLocation":"2177:17:9","nodeType":"VariableDeclaration","scope":3843,"src":"2162:32:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"aa2bf5d3","id":2449,"mutability":"mutable","name":"_reply_ids","nameLocation":"2216:10:9","nodeType":"VariableDeclaration","scope":3843,"src":"2201:25:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2448,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8ac4110c","id":2451,"mutability":"mutable","name":"_feed_ids","nameLocation":"2248:9:9","nodeType":"VariableDeclaration","scope":3843,"src":"2233:24:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2450,"name":"uint256","nodeType":"ElementaryTypeName","src":"2233:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"27a568b9","id":2456,"mutability":"mutable","name":"_dao_uris","nameLocation":"2306:9:9","nodeType":"VariableDeclaration","scope":3843,"src":"2264:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$2331_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct)"},"typeName":{"id":2455,"keyType":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"2272:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2264:34:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$2331_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct)"},"valueType":{"id":2454,"nodeType":"UserDefinedTypeName","pathNode":{"id":2453,"name":"dao_uri_struct","nameLocations":["2283:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":2331,"src":"2283:14:9"},"referencedDeclaration":2331,"src":"2283:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$2331_storage_ptr","typeString":"struct PlanetDAO.dao_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"6ecda4ee","id":2460,"mutability":"mutable","name":"_template_uris","nameLocation":"2442:14:9","nodeType":"VariableDeclaration","scope":3843,"src":"2408:48:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":2459,"keyType":{"id":2457,"name":"uint256","nodeType":"ElementaryTypeName","src":"2416:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2408:26:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":2458,"name":"string","nodeType":"ElementaryTypeName","src":"2427:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":false,"functionSelector":"330b8f26","id":2465,"mutability":"mutable","name":"_joined_person","nameLocation":"2572:14:9","nodeType":"VariableDeclaration","scope":3843,"src":"2533:53:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2401_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct)"},"typeName":{"id":2464,"keyType":{"id":2461,"name":"uint256","nodeType":"ElementaryTypeName","src":"2541:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2533:31:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2401_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct)"},"valueType":{"id":2463,"nodeType":"UserDefinedTypeName","pathNode":{"id":2462,"name":"join_struct","nameLocations":["2552:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":2401,"src":"2552:11:9"},"referencedDeclaration":2401,"src":"2552:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2401_storage_ptr","typeString":"struct PlanetDAO.join_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"7f2035d4","id":2470,"mutability":"mutable","name":"_goal_uris","nameLocation":"2700:10:9","nodeType":"VariableDeclaration","scope":3843,"src":"2657:53:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$2336_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct)"},"typeName":{"id":2469,"keyType":{"id":2466,"name":"uint256","nodeType":"ElementaryTypeName","src":"2665:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2657:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$2336_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct)"},"valueType":{"id":2468,"nodeType":"UserDefinedTypeName","pathNode":{"id":2467,"name":"goal_uri_struct","nameLocations":["2676:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":2336,"src":"2676:15:9"},"referencedDeclaration":2336,"src":"2676:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2336_storage_ptr","typeString":"struct PlanetDAO.goal_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"468d0c80","id":2475,"mutability":"mutable","name":"_ideas_uris","nameLocation":"2831:11:9","nodeType":"VariableDeclaration","scope":3843,"src":"2787:55:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2343_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct)"},"typeName":{"id":2474,"keyType":{"id":2471,"name":"uint256","nodeType":"ElementaryTypeName","src":"2795:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2787:36:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2343_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct)"},"valueType":{"id":2473,"nodeType":"UserDefinedTypeName","pathNode":{"id":2472,"name":"ideas_uri_struct","nameLocations":["2806:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":2343,"src":"2806:16:9"},"referencedDeclaration":2343,"src":"2806:16:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2343_storage_ptr","typeString":"struct PlanetDAO.ideas_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"20959ed0","id":2479,"mutability":"mutable","name":"_donated","nameLocation":"2956:8:9","nodeType":"VariableDeclaration","scope":3843,"src":"2921:43:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2478,"keyType":{"id":2476,"name":"uint256","nodeType":"ElementaryTypeName","src":"2929:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2921:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":2477,"name":"uint256","nodeType":"ElementaryTypeName","src":"2940:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"54a9fb18","id":2484,"mutability":"mutable","name":"_feeds","nameLocation":"3075:6:9","nodeType":"VariableDeclaration","scope":3843,"src":"3036:45:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_feed_struct_$2429_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.feed_struct)"},"typeName":{"id":2483,"keyType":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"3044:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3036:31:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_feed_struct_$2429_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.feed_struct)"},"valueType":{"id":2482,"nodeType":"UserDefinedTypeName","pathNode":{"id":2481,"name":"feed_struct","nameLocations":["3055:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":2429,"src":"3055:11:9"},"referencedDeclaration":2429,"src":"3055:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_feed_struct_$2429_storage_ptr","typeString":"struct PlanetDAO.feed_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"7fc543ec","id":2489,"mutability":"mutable","name":"_donations","nameLocation":"3171:10:9","nodeType":"VariableDeclaration","scope":3843,"src":"3128:53:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_donation_struct_$2350_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.donation_struct)"},"typeName":{"id":2488,"keyType":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"3136:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3128:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_donation_struct_$2350_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.donation_struct)"},"valueType":{"id":2487,"nodeType":"UserDefinedTypeName","pathNode":{"id":2486,"name":"donation_struct","nameLocations":["3147:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":2350,"src":"3147:15:9"},"referencedDeclaration":2350,"src":"3147:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$2350_storage_ptr","typeString":"struct PlanetDAO.donation_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"ff4a37ef","id":2494,"mutability":"mutable","name":"_smart_contracts_uris","nameLocation":"3281:21:9","nodeType":"VariableDeclaration","scope":3843,"src":"3228:74:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$2357_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.smart_contract_uri_struct)"},"typeName":{"id":2493,"keyType":{"id":2490,"name":"uint256","nodeType":"ElementaryTypeName","src":"3236:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3228:45:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$2357_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.smart_contract_uri_struct)"},"valueType":{"id":2492,"nodeType":"UserDefinedTypeName","pathNode":{"id":2491,"name":"smart_contract_uri_struct","nameLocations":["3247:25:9"],"nodeType":"IdentifierPath","referencedDeclaration":2357,"src":"3247:25:9"},"referencedDeclaration":2357,"src":"3247:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$2357_storage_ptr","typeString":"struct PlanetDAO.smart_contract_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"1ba44c4c","id":2499,"mutability":"mutable","name":"all_goal_ideas_votes","nameLocation":"3432:20:9","nodeType":"VariableDeclaration","scope":3843,"src":"3381:71:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$2364_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct)"},"typeName":{"id":2498,"keyType":{"id":2495,"name":"uint256","nodeType":"ElementaryTypeName","src":"3389:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3381:43:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$2364_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct)"},"valueType":{"id":2497,"nodeType":"UserDefinedTypeName","pathNode":{"id":2496,"name":"goal_ideas_votes_struct","nameLocations":["3400:23:9"],"nodeType":"IdentifierPath","referencedDeclaration":2364,"src":"3400:23:9"},"referencedDeclaration":2364,"src":"3400:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$2364_storage_ptr","typeString":"struct PlanetDAO.goal_ideas_votes_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"b527d45e","id":2504,"mutability":"mutable","name":"all_messages","nameLocation":"3584:12:9","nodeType":"VariableDeclaration","scope":3843,"src":"3542:54:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$2373_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct)"},"typeName":{"id":2503,"keyType":{"id":2500,"name":"uint256","nodeType":"ElementaryTypeName","src":"3550:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3542:34:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$2373_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct)"},"valueType":{"id":2502,"nodeType":"UserDefinedTypeName","pathNode":{"id":2501,"name":"message_struct","nameLocations":["3561:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"3561:14:9"},"referencedDeclaration":2373,"src":"3561:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$2373_storage_ptr","typeString":"struct PlanetDAO.message_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"cace8d46","id":2509,"mutability":"mutable","name":"all_read_messages","nameLocation":"3708:17:9","nodeType":"VariableDeclaration","scope":3843,"src":"3661:64:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$2382_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_read_struct)"},"typeName":{"id":2508,"keyType":{"id":2505,"name":"uint256","nodeType":"ElementaryTypeName","src":"3669:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3661:39:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$2382_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_read_struct)"},"valueType":{"id":2507,"nodeType":"UserDefinedTypeName","pathNode":{"id":2506,"name":"message_read_struct","nameLocations":["3680:19:9"],"nodeType":"IdentifierPath","referencedDeclaration":2382,"src":"3680:19:9"},"referencedDeclaration":2382,"src":"3680:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$2382_storage_ptr","typeString":"struct PlanetDAO.message_read_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"3f87a2f4","id":2514,"mutability":"mutable","name":"all_replies","nameLocation":"3845:11:9","nodeType":"VariableDeclaration","scope":3843,"src":"3805:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$2391_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct)"},"typeName":{"id":2513,"keyType":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"3813:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3805:32:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$2391_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct)"},"valueType":{"id":2512,"nodeType":"UserDefinedTypeName","pathNode":{"id":2511,"name":"reply_struct","nameLocations":["3824:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":2391,"src":"3824:12:9"},"referencedDeclaration":2391,"src":"3824:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$2391_storage_ptr","typeString":"struct PlanetDAO.reply_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"a428a47f","id":2519,"mutability":"mutable","name":"_user_badges","nameLocation":"3960:12:9","nodeType":"VariableDeclaration","scope":3843,"src":"3915:57:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2420_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct)"},"typeName":{"id":2518,"keyType":{"id":2515,"name":"uint256","nodeType":"ElementaryTypeName","src":"3923:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3915:37:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2420_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct)"},"valueType":{"id":2517,"nodeType":"UserDefinedTypeName","pathNode":{"id":2516,"name":"user_badge_struct","nameLocations":["3934:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":2420,"src":"3934:17:9"},"referencedDeclaration":2420,"src":"3934:17:9","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2420_storage_ptr","typeString":"struct PlanetDAO.user_badge_struct"}}},"visibility":"public"},{"body":{"id":2560,"nodeType":"Block","src":"4172:263:9","statements":[{"expression":{"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2532,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"4220:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$2331_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":2534,"indexExpression":{"id":2533,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"4230:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4220:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$2331_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2536,"name":"_dao_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"4257:11:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2537,"name":"_dao_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"4270:8:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"46616c7365","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4280:7:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b","typeString":"literal_string \"False\""},"value":"False"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_a2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b","typeString":"literal_string \"False\""}],"id":2535,"name":"dao_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"4242:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_dao_uri_struct_$2331_storage_ptr_$","typeString":"type(struct PlanetDAO.dao_uri_struct storage pointer)"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$2331_memory_ptr","typeString":"struct PlanetDAO.dao_uri_struct memory"}},"src":"4220:68:9","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$2331_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"id":2541,"nodeType":"ExpressionStatement","src":"4220:68:9"},{"expression":{"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2542,"name":"_template_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"4299:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2544,"indexExpression":{"id":2543,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"4314:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4299:24:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2545,"name":"_template","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"4326:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4299:36:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2547,"nodeType":"ExpressionStatement","src":"4299:36:9"},{"expression":{"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2548,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"4346:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2420_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2550,"indexExpression":{"id":2549,"name":"user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"4359:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4346:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2420_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4368:3:9","memberName":"dao","nodeType":"MemberAccess","referencedDeclaration":2405,"src":"4346:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4374:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4346:32:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2554,"nodeType":"ExpressionStatement","src":"4346:32:9"},{"expression":{"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4389:10:9","subExpression":{"id":2555,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"4389:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2557,"nodeType":"ExpressionStatement","src":"4389:10:9"},{"expression":{"id":2558,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"4419:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2531,"id":2559,"nodeType":"Return","src":"4412:15:9"}]},"functionSelector":"86ffa45b","id":2561,"implemented":true,"kind":"function","modifiers":[],"name":"create_dao","nameLocation":"4044:10:9","nodeType":"FunctionDefinition","parameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"_dao_wallet","nameLocation":"4069:11:9","nodeType":"VariableDeclaration","scope":2561,"src":"4055:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2520,"name":"string","nodeType":"ElementaryTypeName","src":"4055:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2523,"mutability":"mutable","name":"_dao_uri","nameLocation":"4096:8:9","nodeType":"VariableDeclaration","scope":2561,"src":"4082:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2522,"name":"string","nodeType":"ElementaryTypeName","src":"4082:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"_template","nameLocation":"4120:9:9","nodeType":"VariableDeclaration","scope":2561,"src":"4106:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2524,"name":"string","nodeType":"ElementaryTypeName","src":"4106:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2527,"mutability":"mutable","name":"user_id","nameLocation":"4138:7:9","nodeType":"VariableDeclaration","scope":2561,"src":"4130:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2526,"name":"uint256","nodeType":"ElementaryTypeName","src":"4130:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4054:92:9"},"returnParameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2561,"src":"4163:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"4163:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4162:9:9"},"scope":3843,"src":"4035:400:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2574,"nodeType":"Block","src":"4517:54:9","statements":[{"expression":{"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2568,"name":"_template_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"4528:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2570,"indexExpression":{"id":2569,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"4543:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4528:23:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2571,"name":"_template","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"4554:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4528:35:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2573,"nodeType":"ExpressionStatement","src":"4528:35:9"}]},"functionSelector":"87633eb2","id":2575,"implemented":true,"kind":"function","modifiers":[],"name":"update_template","nameLocation":"4452:15:9","nodeType":"FunctionDefinition","parameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2563,"mutability":"mutable","name":"_dao_id","nameLocation":"4476:7:9","nodeType":"VariableDeclaration","scope":2575,"src":"4468:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2562,"name":"uint256","nodeType":"ElementaryTypeName","src":"4468:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2565,"mutability":"mutable","name":"_template","nameLocation":"4499:9:9","nodeType":"VariableDeclaration","scope":2575,"src":"4485:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2564,"name":"string","nodeType":"ElementaryTypeName","src":"4485:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4467:42:9"},"returnParameters":{"id":2567,"nodeType":"ParameterList","parameters":[],"src":"4517:0:9"},"scope":3843,"src":"4443:128:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2598,"nodeType":"Block","src":"4671:147:9","statements":[{"expression":{"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2584,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"4719:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$2331_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":2586,"indexExpression":{"id":2585,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"4729:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4719:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$2331_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"id":2587,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4738:10:9","memberName":"dao_wallet","nodeType":"MemberAccess","referencedDeclaration":2326,"src":"4719:29:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2588,"name":"_dao_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"4751:11:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4719:43:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2590,"nodeType":"ExpressionStatement","src":"4719:43:9"},{"expression":{"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2591,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"4773:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$2331_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":2593,"indexExpression":{"id":2592,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"4783:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4773:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$2331_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"id":2594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4792:7:9","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":2328,"src":"4773:26:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2595,"name":"_dao_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"4802:8:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4773:37:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2597,"nodeType":"ExpressionStatement","src":"4773:37:9"}]},"functionSelector":"881de858","id":2599,"implemented":true,"kind":"function","modifiers":[],"name":"set_dao","nameLocation":"4588:7:9","nodeType":"FunctionDefinition","parameters":{"id":2582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"mutability":"mutable","name":"_dao_id","nameLocation":"4604:7:9","nodeType":"VariableDeclaration","scope":2599,"src":"4596:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2576,"name":"uint256","nodeType":"ElementaryTypeName","src":"4596:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2579,"mutability":"mutable","name":"_dao_wallet","nameLocation":"4627:11:9","nodeType":"VariableDeclaration","scope":2599,"src":"4613:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2578,"name":"string","nodeType":"ElementaryTypeName","src":"4613:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2581,"mutability":"mutable","name":"_dao_uri","nameLocation":"4654:8:9","nodeType":"VariableDeclaration","scope":2599,"src":"4640:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2580,"name":"string","nodeType":"ElementaryTypeName","src":"4640:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4595:68:9"},"returnParameters":{"id":2583,"nodeType":"ParameterList","parameters":[],"src":"4671:0:9"},"scope":3843,"src":"4579:239:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2639,"nodeType":"Block","src":"4888:240:9","statements":[{"assignments":[2609],"declarations":[{"constant":false,"id":2609,"mutability":"mutable","name":"_StoreInfo","nameLocation":"4943:10:9","nodeType":"VariableDeclaration","scope":2639,"src":"4927:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2607,"name":"string","nodeType":"ElementaryTypeName","src":"4927:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2608,"nodeType":"ArrayTypeName","src":"4927:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2615,"initialValue":{"arguments":[{"id":2613,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"4969:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4956:12:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2610,"name":"string","nodeType":"ElementaryTypeName","src":"4960:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2611,"nodeType":"ArrayTypeName","src":"4960:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4956:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4927:51:9"},{"body":{"id":2635,"nodeType":"Block","src":"5028:63:9","statements":[{"expression":{"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2626,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"5043:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2628,"indexExpression":{"id":2627,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"5054:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5043:13:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2629,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"5059:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$2331_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":2631,"indexExpression":{"id":2630,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"5069:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5059:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$2331_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"id":2632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5072:7:9","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":2328,"src":"5059:20:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"5043:36:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2634,"nodeType":"ExpressionStatement","src":"5043:36:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2620,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"5009:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2621,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"5013:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5009:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2636,"initializationExpression":{"assignments":[2617],"declarations":[{"constant":false,"id":2617,"mutability":"mutable","name":"i","nameLocation":"5002:1:9","nodeType":"VariableDeclaration","scope":2636,"src":"4994:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2616,"name":"uint256","nodeType":"ElementaryTypeName","src":"4994:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2619,"initialValue":{"hexValue":"30","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5006:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4994:13:9"},"loopExpression":{"expression":{"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5023:3:9","subExpression":{"id":2623,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"5023:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2625,"nodeType":"ExpressionStatement","src":"5023:3:9"},"nodeType":"ForStatement","src":"4989:102:9"},{"expression":{"id":2637,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"5110:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2604,"id":2638,"nodeType":"Return","src":"5103:17:9"}]},"functionSelector":"c04fe978","id":2640,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_daos","nameLocation":"4835:12:9","nodeType":"FunctionDefinition","parameters":{"id":2600,"nodeType":"ParameterList","parameters":[],"src":"4847:2:9"},"returnParameters":{"id":2604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2640,"src":"4871:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2601,"name":"string","nodeType":"ElementaryTypeName","src":"4871:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2602,"nodeType":"ArrayTypeName","src":"4871:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"4870:17:9"},"scope":3843,"src":"4826:302:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2652,"nodeType":"Block","src":"5206:83:9","statements":[{"expression":{"expression":{"baseExpression":{"id":2647,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"5255:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$2331_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":2649,"indexExpression":{"id":2648,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"5265:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5255:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$2331_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"id":2650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5274:7:9","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":2328,"src":"5255:26:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2646,"id":2651,"nodeType":"Return","src":"5248:33:9"}]},"functionSelector":"5d907da1","id":2653,"implemented":true,"kind":"function","modifiers":[],"name":"dao_uri","nameLocation":"5145:7:9","nodeType":"FunctionDefinition","parameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"_dao_id","nameLocation":"5161:7:9","nodeType":"VariableDeclaration","scope":2653,"src":"5153:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"5153:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5152:17:9"},"returnParameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2653,"src":"5191:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2644,"name":"string","nodeType":"ElementaryTypeName","src":"5191:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5190:15:9"},"scope":3843,"src":"5136:153:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2675,"nodeType":"Block","src":"5367:117:9","statements":[{"expression":{"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2660,"name":"_feeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"5379:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_feed_struct_$2429_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.feed_struct storage ref)"}},"id":2662,"indexExpression":{"id":2661,"name":"_feed_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"5386:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5379:17:9","typeDescriptions":{"typeIdentifier":"t_struct$_feed_struct_$2429_storage","typeString":"struct PlanetDAO.feed_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2664,"name":"_feed_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"5411:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2665,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5421:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5427:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"5421:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2667,"name":"_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"5437:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2668,"name":"feed_text","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"5443:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2663,"name":"feed_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"5399:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_feed_struct_$2429_storage_ptr_$","typeString":"type(struct PlanetDAO.feed_struct storage pointer)"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5399:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_feed_struct_$2429_memory_ptr","typeString":"struct PlanetDAO.feed_struct memory"}},"src":"5379:74:9","typeDescriptions":{"typeIdentifier":"t_struct$_feed_struct_$2429_storage","typeString":"struct PlanetDAO.feed_struct storage ref"}},"id":2671,"nodeType":"ExpressionStatement","src":"5379:74:9"},{"expression":{"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5465:11:9","subExpression":{"id":2672,"name":"_feed_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"5465:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2674,"nodeType":"ExpressionStatement","src":"5465:11:9"}]},"functionSelector":"bda00335","id":2676,"implemented":true,"kind":"function","modifiers":[],"name":"add_Feed","nameLocation":"5306:8:9","nodeType":"FunctionDefinition","parameters":{"id":2658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2655,"mutability":"mutable","name":"feed_text","nameLocation":"5329:9:9","nodeType":"VariableDeclaration","scope":2676,"src":"5315:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2654,"name":"string","nodeType":"ElementaryTypeName","src":"5315:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2657,"mutability":"mutable","name":"_type","nameLocation":"5353:5:9","nodeType":"VariableDeclaration","scope":2676,"src":"5339:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2656,"name":"string","nodeType":"ElementaryTypeName","src":"5339:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5314:45:9"},"returnParameters":{"id":2659,"nodeType":"ParameterList","parameters":[],"src":"5367:0:9"},"scope":3843,"src":"5297:187:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2715,"nodeType":"Block","src":"5638:255:9","statements":[{"expression":{"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2689,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"5688:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$2336_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2691,"indexExpression":{"id":2690,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"5699:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5688:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2336_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2693,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"5728:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2694,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"5737:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2692,"name":"goal_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"5712:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_goal_uri_struct_$2336_storage_ptr_$","typeString":"type(struct PlanetDAO.goal_uri_struct storage pointer)"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5712:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2336_memory_ptr","typeString":"struct PlanetDAO.goal_uri_struct memory"}},"src":"5688:59:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2336_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2697,"nodeType":"ExpressionStatement","src":"5688:59:9"},{"expression":{"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2698,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"5767:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2420_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2700,"indexExpression":{"id":2699,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"5780:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5767:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2420_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2701,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5790:4:9","memberName":"goal","nodeType":"MemberAccess","referencedDeclaration":2409,"src":"5767:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5797:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5767:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2704,"nodeType":"ExpressionStatement","src":"5767:34:9"},{"expression":{"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5812:11:9","subExpression":{"id":2705,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"5812:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2707,"nodeType":"ExpressionStatement","src":"5812:11:9"},{"expression":{"arguments":[{"id":2709,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"5843:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"676f616c","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5849:6:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef4dbb26a297ed6dbfec0a46d7ae3a5acf736a0cb97a6b9e708aed49967b12f9","typeString":"literal_string \"goal\""},"value":"goal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_ef4dbb26a297ed6dbfec0a46d7ae3a5acf736a0cb97a6b9e708aed49967b12f9","typeString":"literal_string \"goal\""}],"id":2708,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"5834:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5834:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2712,"nodeType":"ExpressionStatement","src":"5834:22:9"},{"expression":{"id":2713,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"5876:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2688,"id":2714,"nodeType":"Return","src":"5869:16:9"}]},"functionSelector":"b39a38bd","id":2716,"implemented":true,"kind":"function","modifiers":[],"name":"create_goal","nameLocation":"5514:11:9","nodeType":"FunctionDefinition","parameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"_goal_uri","nameLocation":"5540:9:9","nodeType":"VariableDeclaration","scope":2716,"src":"5526:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2677,"name":"string","nodeType":"ElementaryTypeName","src":"5526:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"_dao_id","nameLocation":"5566:7:9","nodeType":"VariableDeclaration","scope":2716,"src":"5551:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2679,"name":"string","nodeType":"ElementaryTypeName","src":"5551:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2682,"mutability":"mutable","name":"_user_id","nameLocation":"5582:8:9","nodeType":"VariableDeclaration","scope":2716,"src":"5574:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2681,"name":"uint256","nodeType":"ElementaryTypeName","src":"5574:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2684,"mutability":"mutable","name":"_feed","nameLocation":"5606:5:9","nodeType":"VariableDeclaration","scope":2716,"src":"5592:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2683,"name":"string","nodeType":"ElementaryTypeName","src":"5592:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5525:87:9"},"returnParameters":{"id":2688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2716,"src":"5629:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2686,"name":"uint256","nodeType":"ElementaryTypeName","src":"5629:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5628:9:9"},"scope":3843,"src":"5505:388:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2730,"nodeType":"Block","src":"5969:84:9","statements":[{"expression":{"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2723,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"6004:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$2336_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2725,"indexExpression":{"id":2724,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"6015:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6004:20:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2336_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6025:8:9","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"6004:29:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2727,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"6036:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"6004:41:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2729,"nodeType":"ExpressionStatement","src":"6004:41:9"}]},"functionSelector":"c29595c5","id":2731,"implemented":true,"kind":"function","modifiers":[],"name":"set_goal","nameLocation":"5910:8:9","nodeType":"FunctionDefinition","parameters":{"id":2721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"_goal_id","nameLocation":"5927:8:9","nodeType":"VariableDeclaration","scope":2731,"src":"5919:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2717,"name":"uint256","nodeType":"ElementaryTypeName","src":"5919:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2720,"mutability":"mutable","name":"_goal_uri","nameLocation":"5951:9:9","nodeType":"VariableDeclaration","scope":2731,"src":"5937:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2719,"name":"string","nodeType":"ElementaryTypeName","src":"5937:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5918:43:9"},"returnParameters":{"id":2722,"nodeType":"ParameterList","parameters":[],"src":"5969:0:9"},"scope":3843,"src":"5901:152:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2771,"nodeType":"Block","src":"6124:245:9","statements":[{"assignments":[2741],"declarations":[{"constant":false,"id":2741,"mutability":"mutable","name":"_StoreInfo","nameLocation":"6180:10:9","nodeType":"VariableDeclaration","scope":2771,"src":"6164:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2739,"name":"string","nodeType":"ElementaryTypeName","src":"6164:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2740,"nodeType":"ArrayTypeName","src":"6164:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2747,"initialValue":{"arguments":[{"id":2745,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"6206:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6193:12:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2742,"name":"string","nodeType":"ElementaryTypeName","src":"6197:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2743,"nodeType":"ArrayTypeName","src":"6197:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6193:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6164:52:9"},{"body":{"id":2767,"nodeType":"Block","src":"6267:65:9","statements":[{"expression":{"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2758,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"6282:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2760,"indexExpression":{"id":2759,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"6293:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6282:13:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2761,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"6298:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$2336_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2763,"indexExpression":{"id":2762,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"6309:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6298:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2336_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6312:8:9","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"6298:22:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"6282:38:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2766,"nodeType":"ExpressionStatement","src":"6282:38:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2752,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"6247:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2753,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"6251:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6247:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2768,"initializationExpression":{"assignments":[2749],"declarations":[{"constant":false,"id":2749,"mutability":"mutable","name":"i","nameLocation":"6240:1:9","nodeType":"VariableDeclaration","scope":2768,"src":"6232:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2748,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2751,"initialValue":{"hexValue":"30","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6244:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6232:13:9"},"loopExpression":{"expression":{"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6262:3:9","subExpression":{"id":2755,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"6262:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2757,"nodeType":"ExpressionStatement","src":"6262:3:9"},"nodeType":"ForStatement","src":"6227:105:9"},{"expression":{"id":2769,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"6351:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2736,"id":2770,"nodeType":"Return","src":"6344:17:9"}]},"functionSelector":"29b56f60","id":2772,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_goals","nameLocation":"6070:13:9","nodeType":"FunctionDefinition","parameters":{"id":2732,"nodeType":"ParameterList","parameters":[],"src":"6083:2:9"},"returnParameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2772,"src":"6107:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2733,"name":"string","nodeType":"ElementaryTypeName","src":"6107:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2734,"nodeType":"ArrayTypeName","src":"6107:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"6106:17:9"},"scope":3843,"src":"6061:308:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2838,"nodeType":"Block","src":"6471:428:9","statements":[{"assignments":[2784],"declarations":[{"constant":false,"id":2784,"mutability":"mutable","name":"_StoreInfo","nameLocation":"6537:10:9","nodeType":"VariableDeclaration","scope":2838,"src":"6521:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2782,"name":"string","nodeType":"ElementaryTypeName","src":"6521:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2783,"nodeType":"ArrayTypeName","src":"6521:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2790,"initialValue":{"arguments":[{"id":2788,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"6563:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6550:12:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2785,"name":"string","nodeType":"ElementaryTypeName","src":"6554:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2786,"nodeType":"ArrayTypeName","src":"6554:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6521:52:9"},{"assignments":[2792],"declarations":[{"constant":false,"id":2792,"mutability":"mutable","name":"_store_id","nameLocation":"6592:9:9","nodeType":"VariableDeclaration","scope":2838,"src":"6584:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2791,"name":"uint256","nodeType":"ElementaryTypeName","src":"6584:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2793,"nodeType":"VariableDeclarationStatement","src":"6584:17:9"},{"body":{"id":2834,"nodeType":"Block","src":"6652:210:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2807,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"6687:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$2336_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2809,"indexExpression":{"id":2808,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"6698:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6687:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2336_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2810,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6701:6:9","memberName":"dao_id","nodeType":"MemberAccess","referencedDeclaration":2333,"src":"6687:20:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2805,"name":"bytes","nodeType":"ElementaryTypeName","src":"6681:5:9","typeDescriptions":{}}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2804,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6671:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6671:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2816,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"6729:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6723:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2814,"name":"bytes","nodeType":"ElementaryTypeName","src":"6723:5:9","typeDescriptions":{}}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6723:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2813,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6713:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6713:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6671:67:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2833,"nodeType":"IfStatement","src":"6667:184:9","trueBody":{"id":2832,"nodeType":"Block","src":"6740:111:9","statements":[{"expression":{"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2820,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"6759:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2822,"indexExpression":{"id":2821,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"6770:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6759:21:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2823,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"6783:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$2336_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2825,"indexExpression":{"id":2824,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"6794:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6783:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2336_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6797:8:9","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"6783:22:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"6759:46:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2828,"nodeType":"ExpressionStatement","src":"6759:46:9"},{"expression":{"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6824:11:9","subExpression":{"id":2829,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"6824:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2831,"nodeType":"ExpressionStatement","src":"6824:11:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2798,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"6632:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2799,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"6636:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6632:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2835,"initializationExpression":{"assignments":[2795],"declarations":[{"constant":false,"id":2795,"mutability":"mutable","name":"i","nameLocation":"6625:1:9","nodeType":"VariableDeclaration","scope":2835,"src":"6617:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2794,"name":"uint256","nodeType":"ElementaryTypeName","src":"6617:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2797,"initialValue":{"hexValue":"30","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6629:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6617:13:9"},"loopExpression":{"expression":{"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6647:3:9","subExpression":{"id":2801,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"6647:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2803,"nodeType":"ExpressionStatement","src":"6647:3:9"},"nodeType":"ForStatement","src":"6612:250:9"},{"expression":{"id":2836,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"6881:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2779,"id":2837,"nodeType":"Return","src":"6874:17:9"}]},"functionSelector":"0377d44a","id":2839,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_goals_by_dao_id","nameLocation":"6386:23:9","nodeType":"FunctionDefinition","parameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"mutability":"mutable","name":"_dao_id","nameLocation":"6424:7:9","nodeType":"VariableDeclaration","scope":2839,"src":"6410:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2773,"name":"string","nodeType":"ElementaryTypeName","src":"6410:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6409:23:9"},"returnParameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2839,"src":"6454:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2776,"name":"string","nodeType":"ElementaryTypeName","src":"6454:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2777,"nodeType":"ArrayTypeName","src":"6454:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"6453:17:9"},"scope":3843,"src":"6377:522:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2879,"nodeType":"Block","src":"6995:225:9","statements":[{"body":{"id":2875,"nodeType":"Block","src":"7080:112:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2859,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"7115:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$2336_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2861,"indexExpression":{"id":2860,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"7126:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7115:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2336_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2862,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7129:8:9","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"7115:22:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7109:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2857,"name":"bytes","nodeType":"ElementaryTypeName","src":"7109:5:9","typeDescriptions":{}}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7109:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2856,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7099:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7099:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2868,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"7159:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7153:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2866,"name":"bytes","nodeType":"ElementaryTypeName","src":"7153:5:9","typeDescriptions":{}}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7153:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2865,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7143:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7143:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7099:71:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2874,"nodeType":"IfStatement","src":"7095:85:9","trueBody":{"expression":{"id":2872,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"7179:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2845,"id":2873,"nodeType":"Return","src":"7172:8:9"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2850,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"7060:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2851,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"7064:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7060:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2876,"initializationExpression":{"assignments":[2847],"declarations":[{"constant":false,"id":2847,"mutability":"mutable","name":"i","nameLocation":"7053:1:9","nodeType":"VariableDeclaration","scope":2876,"src":"7045:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2846,"name":"uint256","nodeType":"ElementaryTypeName","src":"7045:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2849,"initialValue":{"hexValue":"30","id":2848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7057:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7045:13:9"},"loopExpression":{"expression":{"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7075:3:9","subExpression":{"id":2853,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"7075:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2855,"nodeType":"ExpressionStatement","src":"7075:3:9"},"nodeType":"ForStatement","src":"7040:152:9"},{"expression":{"hexValue":"30","id":2877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7211:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2845,"id":2878,"nodeType":"Return","src":"7204:8:9"}]},"functionSelector":"1e9ac9f5","id":2880,"implemented":true,"kind":"function","modifiers":[],"name":"get_goal_id_by_goal_uri","nameLocation":"6916:23:9","nodeType":"FunctionDefinition","parameters":{"id":2842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"_goal_uri","nameLocation":"6954:9:9","nodeType":"VariableDeclaration","scope":2880,"src":"6940:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2840,"name":"string","nodeType":"ElementaryTypeName","src":"6940:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6939:25:9"},"returnParameters":{"id":2845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2880,"src":"6986:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2843,"name":"uint256","nodeType":"ElementaryTypeName","src":"6986:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6985:9:9"},"scope":3843,"src":"6907:313:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2892,"nodeType":"Block","src":"7300:87:9","statements":[{"expression":{"expression":{"baseExpression":{"id":2887,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"7350:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$2336_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2889,"indexExpression":{"id":2888,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"7361:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7350:20:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2336_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7371:8:9","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"7350:29:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2886,"id":2891,"nodeType":"Return","src":"7343:36:9"}]},"functionSelector":"e32acc1a","id":2893,"implemented":true,"kind":"function","modifiers":[],"name":"goal_uri","nameLocation":"7237:8:9","nodeType":"FunctionDefinition","parameters":{"id":2883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2882,"mutability":"mutable","name":"_goal_id","nameLocation":"7254:8:9","nodeType":"VariableDeclaration","scope":2893,"src":"7246:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2881,"name":"uint256","nodeType":"ElementaryTypeName","src":"7246:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7245:18:9"},"returnParameters":{"id":2886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2893,"src":"7285:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2884,"name":"string","nodeType":"ElementaryTypeName","src":"7285:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7284:15:9"},"scope":3843,"src":"7228:159:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2960,"nodeType":"Block","src":"7571:469:9","statements":[{"expression":{"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2909,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"7623:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2343_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2911,"indexExpression":{"id":2910,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"7635:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7623:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2343_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2913,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"7666:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2914,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"7676:10:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7688:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2912,"name":"ideas_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"7649:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ideas_uri_struct_$2343_storage_ptr_$","typeString":"type(struct PlanetDAO.ideas_uri_struct storage pointer)"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7649:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2343_memory_ptr","typeString":"struct PlanetDAO.ideas_uri_struct memory"}},"src":"7623:67:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2343_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2918,"nodeType":"ExpressionStatement","src":"7623:67:9"},{"expression":{"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2919,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"7701:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2420_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2921,"indexExpression":{"id":2920,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"7714:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7701:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2420_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7724:5:9","memberName":"ideas","nodeType":"MemberAccess","referencedDeclaration":2411,"src":"7701:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7732:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7701:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2925,"nodeType":"ExpressionStatement","src":"7701:35:9"},{"expression":{"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7747:12:9","subExpression":{"id":2926,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"7747:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2928,"nodeType":"ExpressionStatement","src":"7747:12:9"},{"body":{"id":2951,"nodeType":"Block","src":"7826:144:9","statements":[{"expression":{"arguments":[{"id":2941,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"7869:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2942,"name":"_smart_contract_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"7881:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2943,"name":"_smart_contracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"7902:16:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2945,"indexExpression":{"id":2944,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"7919:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7902:19:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2940,"name":"create_ideas_smart_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"7841:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2947,"nodeType":"ExpressionStatement","src":"7841:81:9"},{"expression":{"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7937:21:9","subExpression":{"id":2948,"name":"_smart_contract_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"7937:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2950,"nodeType":"ExpressionStatement","src":"7937:21:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2933,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"7792:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2934,"name":"_smart_contracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"7796:16:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7813:6:9","memberName":"length","nodeType":"MemberAccess","src":"7796:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2952,"initializationExpression":{"assignments":[2930],"declarations":[{"constant":false,"id":2930,"mutability":"mutable","name":"i","nameLocation":"7785:1:9","nodeType":"VariableDeclaration","scope":2952,"src":"7777:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2929,"name":"uint256","nodeType":"ElementaryTypeName","src":"7777:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2932,"initialValue":{"hexValue":"30","id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7789:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7777:13:9"},"loopExpression":{"expression":{"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7821:3:9","subExpression":{"id":2937,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"7821:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2939,"nodeType":"ExpressionStatement","src":"7821:3:9"},"nodeType":"ForStatement","src":"7772:198:9"},{"expression":{"arguments":[{"id":2954,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"7989:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"69646561","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7995:6:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6a7bf0b356c2ee2abd155803d8597e311bd7062ed4dcc25d72fbfcb126eb1e3","typeString":"literal_string \"idea\""},"value":"idea"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_d6a7bf0b356c2ee2abd155803d8597e311bd7062ed4dcc25d72fbfcb126eb1e3","typeString":"literal_string \"idea\""}],"id":2953,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"7980:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7980:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2957,"nodeType":"ExpressionStatement","src":"7980:22:9"},{"expression":{"id":2958,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"8022:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2908,"id":2959,"nodeType":"Return","src":"8015:17:9"}]},"functionSelector":"e1b011a0","id":2961,"implemented":true,"kind":"function","modifiers":[],"name":"create_ideas","nameLocation":"7417:12:9","nodeType":"FunctionDefinition","parameters":{"id":2905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2895,"mutability":"mutable","name":"_ideas_uri","nameLocation":"7444:10:9","nodeType":"VariableDeclaration","scope":2961,"src":"7430:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2894,"name":"string","nodeType":"ElementaryTypeName","src":"7430:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"_goal_id","nameLocation":"7464:8:9","nodeType":"VariableDeclaration","scope":2961,"src":"7456:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"7456:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2900,"mutability":"mutable","name":"_smart_contracts","nameLocation":"7490:16:9","nodeType":"VariableDeclaration","scope":2961,"src":"7474:32:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2898,"name":"string","nodeType":"ElementaryTypeName","src":"7474:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2899,"nodeType":"ArrayTypeName","src":"7474:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2902,"mutability":"mutable","name":"_user_id","nameLocation":"7515:8:9","nodeType":"VariableDeclaration","scope":2961,"src":"7507:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2901,"name":"uint256","nodeType":"ElementaryTypeName","src":"7507:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2904,"mutability":"mutable","name":"_feed","nameLocation":"7539:5:9","nodeType":"VariableDeclaration","scope":2961,"src":"7525:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2903,"name":"string","nodeType":"ElementaryTypeName","src":"7525:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7429:116:9"},"returnParameters":{"id":2908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2961,"src":"7562:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2906,"name":"uint256","nodeType":"ElementaryTypeName","src":"7562:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7561:9:9"},"scope":3843,"src":"7408:632:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2980,"nodeType":"Block","src":"8171:136:9","statements":[{"expression":{"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2970,"name":"_smart_contracts_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"8182:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$2357_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.smart_contract_uri_struct storage ref)"}},"id":2972,"indexExpression":{"id":2971,"name":"_smart_contract_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"8204:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8182:41:9","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$2357_storage","typeString":"struct PlanetDAO.smart_contract_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2974,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"8252:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2975,"name":"_smart_contract_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"8263:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2976,"name":"_smart_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"8283:15:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2973,"name":"smart_contract_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"8226:25:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_smart_contract_uri_struct_$2357_storage_ptr_$","typeString":"type(struct PlanetDAO.smart_contract_uri_struct storage pointer)"}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8226:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$2357_memory_ptr","typeString":"struct PlanetDAO.smart_contract_uri_struct memory"}},"src":"8182:117:9","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$2357_storage","typeString":"struct PlanetDAO.smart_contract_uri_struct storage ref"}},"id":2979,"nodeType":"ExpressionStatement","src":"8182:117:9"}]},"id":2981,"implemented":true,"kind":"function","modifiers":[],"name":"create_ideas_smart_contract","nameLocation":"8057:27:9","nodeType":"FunctionDefinition","parameters":{"id":2968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"mutability":"mutable","name":"_ideas_id","nameLocation":"8093:9:9","nodeType":"VariableDeclaration","scope":2981,"src":"8085:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2962,"name":"uint256","nodeType":"ElementaryTypeName","src":"8085:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2965,"mutability":"mutable","name":"_smart_contract_id","nameLocation":"8112:18:9","nodeType":"VariableDeclaration","scope":2981,"src":"8104:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2964,"name":"uint256","nodeType":"ElementaryTypeName","src":"8104:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2967,"mutability":"mutable","name":"_smart_contract","nameLocation":"8146:15:9","nodeType":"VariableDeclaration","scope":2981,"src":"8132:29:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2966,"name":"string","nodeType":"ElementaryTypeName","src":"8132:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8084:78:9"},"returnParameters":{"id":2969,"nodeType":"ParameterList","parameters":[],"src":"8171:0:9"},"scope":3843,"src":"8048:259:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2995,"nodeType":"Block","src":"8386:64:9","statements":[{"expression":{"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2988,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"8397:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2343_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2990,"indexExpression":{"id":2989,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"8409:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8397:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2343_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2991,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8420:9:9","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":2340,"src":"8397:32:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2992,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"8432:10:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8397:45:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2994,"nodeType":"ExpressionStatement","src":"8397:45:9"}]},"functionSelector":"c04e7430","id":2996,"implemented":true,"kind":"function","modifiers":[],"name":"set_ideas","nameLocation":"8324:9:9","nodeType":"FunctionDefinition","parameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2983,"mutability":"mutable","name":"_ideas_id","nameLocation":"8342:9:9","nodeType":"VariableDeclaration","scope":2996,"src":"8334:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2982,"name":"uint256","nodeType":"ElementaryTypeName","src":"8334:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2985,"mutability":"mutable","name":"_ideas_uri","nameLocation":"8367:10:9","nodeType":"VariableDeclaration","scope":2996,"src":"8353:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2984,"name":"string","nodeType":"ElementaryTypeName","src":"8353:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8333:45:9"},"returnParameters":{"id":2987,"nodeType":"ParameterList","parameters":[],"src":"8386:0:9"},"scope":3843,"src":"8315:135:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3060,"nodeType":"Block","src":"8587:416:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3009,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"8600:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2420_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":3011,"indexExpression":{"id":3010,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"8613:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8600:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2420_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":3012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8622:8:9","memberName":"donation","nodeType":"MemberAccess","referencedDeclaration":2415,"src":"8600:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8634:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8600:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3021,"nodeType":"IfStatement","src":"8596:89:9","trueBody":{"id":3020,"nodeType":"Block","src":"8640:45:9","statements":[{"expression":{"arguments":[{"id":3016,"name":"_feed1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"8660:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"6261646765","id":3017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8667:7:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e3a9f11f2b764119ca635d6f294a573e14aa4219f3c85f80318b632e8f1f2ec","typeString":"literal_string \"badge\""},"value":"badge"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_1e3a9f11f2b764119ca635d6f294a573e14aa4219f3c85f80318b632e8f1f2ec","typeString":"literal_string \"badge\""}],"id":3015,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"8651:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8651:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3019,"nodeType":"ExpressionStatement","src":"8651:24:9"}]}},{"expression":{"arguments":[{"id":3023,"name":"_feed2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"8702:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"646f6e6174696f6e","id":3024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8709:10:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5de029d3f5be747e56a965618431f5f83612802fba356b1700f1f9974a3eb3d6","typeString":"literal_string \"donation\""},"value":"donation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_5de029d3f5be747e56a965618431f5f83612802fba356b1700f1f9974a3eb3d6","typeString":"literal_string \"donation\""}],"id":3022,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"8693:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8693:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3026,"nodeType":"ExpressionStatement","src":"8693:27:9"},{"expression":{"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3027,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"8737:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2420_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":3029,"indexExpression":{"id":3028,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"8750:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8737:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2420_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":3030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8759:8:9","memberName":"donation","nodeType":"MemberAccess","referencedDeclaration":2415,"src":"8737:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8770:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8737:37:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3033,"nodeType":"ExpressionStatement","src":"8737:37:9"},{"expression":{"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3034,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"8785:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2343_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":3036,"indexExpression":{"id":3035,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"8797:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8785:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2343_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":3037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8808:8:9","memberName":"donation","nodeType":"MemberAccess","referencedDeclaration":2342,"src":"8785:31:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3038,"name":"_doantion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"8820:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8785:44:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3040,"nodeType":"ExpressionStatement","src":"8785:44:9"},{"expression":{"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3041,"name":"_donated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"8840:8:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3043,"indexExpression":{"id":3042,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"8849:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8840:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3044,"name":"_doantion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"8861:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8840:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3046,"nodeType":"ExpressionStatement","src":"8840:30:9"},{"expression":{"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3047,"name":"_donations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"8881:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_donation_struct_$2350_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.donation_struct storage ref)"}},"id":3049,"indexExpression":{"id":3048,"name":"_donations_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"8892:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8881:26:9","typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$2350_storage","typeString":"struct PlanetDAO.donation_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3051,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"8926:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3052,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"8937:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3053,"name":"_doantion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"8946:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3050,"name":"donation_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"8910:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_donation_struct_$2350_storage_ptr_$","typeString":"type(struct PlanetDAO.donation_struct storage pointer)"}},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8910:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$2350_memory_ptr","typeString":"struct PlanetDAO.donation_struct memory"}},"src":"8881:75:9","typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$2350_storage","typeString":"struct PlanetDAO.donation_struct storage ref"}},"id":3056,"nodeType":"ExpressionStatement","src":"8881:75:9"},{"expression":{"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8967:16:9","subExpression":{"id":3057,"name":"_donations_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"8967:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3059,"nodeType":"ExpressionStatement","src":"8967:16:9"}]},"functionSelector":"5996278f","id":3061,"implemented":true,"kind":"function","modifiers":[],"name":"add_donation","nameLocation":"8467:12:9","nodeType":"FunctionDefinition","parameters":{"id":3007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2998,"mutability":"mutable","name":"_ideas_id","nameLocation":"8488:9:9","nodeType":"VariableDeclaration","scope":3061,"src":"8480:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"8480:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3000,"mutability":"mutable","name":"_doantion","nameLocation":"8507:9:9","nodeType":"VariableDeclaration","scope":3061,"src":"8499:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2999,"name":"uint256","nodeType":"ElementaryTypeName","src":"8499:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3002,"mutability":"mutable","name":"_userid","nameLocation":"8527:7:9","nodeType":"VariableDeclaration","scope":3061,"src":"8519:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint256","nodeType":"ElementaryTypeName","src":"8519:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3004,"mutability":"mutable","name":"_feed1","nameLocation":"8550:6:9","nodeType":"VariableDeclaration","scope":3061,"src":"8536:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3003,"name":"string","nodeType":"ElementaryTypeName","src":"8536:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3006,"mutability":"mutable","name":"_feed2","nameLocation":"8572:6:9","nodeType":"VariableDeclaration","scope":3061,"src":"8558:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3005,"name":"string","nodeType":"ElementaryTypeName","src":"8558:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8479:100:9"},"returnParameters":{"id":3008,"nodeType":"ParameterList","parameters":[],"src":"8587:0:9"},"scope":3843,"src":"8458:545:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3094,"nodeType":"Block","src":"9095:197:9","statements":[{"expression":{"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3070,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"9106:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2420_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":3072,"indexExpression":{"id":3071,"name":"person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"9119:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9106:20:9","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2420_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":3073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9127:6:9","memberName":"joined","nodeType":"MemberAccess","referencedDeclaration":2407,"src":"9106:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9136:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9106:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3076,"nodeType":"ExpressionStatement","src":"9106:34:9"},{"expression":{"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3077,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"9151:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2401_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct storage ref)"}},"id":3079,"indexExpression":{"id":3078,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"9166:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9151:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2401_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3081,"name":"dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"9199:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3082,"name":"person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"9216:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3080,"name":"join_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"9179:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_join_struct_$2401_storage_ptr_$","typeString":"type(struct PlanetDAO.join_struct storage pointer)"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9192:5:9","9207:7:9"],"names":["daoid","user_id"],"nodeType":"FunctionCall","src":"9179:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2401_memory_ptr","typeString":"struct PlanetDAO.join_struct memory"}},"src":"9151:73:9","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2401_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"id":3085,"nodeType":"ExpressionStatement","src":"9151:73:9"},{"expression":{"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9235:11:9","subExpression":{"id":3086,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"9235:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3088,"nodeType":"ExpressionStatement","src":"9235:11:9"},{"expression":{"arguments":[{"id":3090,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"9267:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"6a6f696e","id":3091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9273:6:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_10dece5307d9dcd771fa36385e14096af85d5982a2225c49c0f2e7039a4a141a","typeString":"literal_string \"join\""},"value":"join"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_10dece5307d9dcd771fa36385e14096af85d5982a2225c49c0f2e7039a4a141a","typeString":"literal_string \"join\""}],"id":3089,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"9258:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9258:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3093,"nodeType":"ExpressionStatement","src":"9258:22:9"}]},"functionSelector":"8c70034a","id":3095,"implemented":true,"kind":"function","modifiers":[],"name":"join_community","nameLocation":"9020:14:9","nodeType":"FunctionDefinition","parameters":{"id":3068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3063,"mutability":"mutable","name":"dao_id","nameLocation":"9043:6:9","nodeType":"VariableDeclaration","scope":3095,"src":"9035:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3062,"name":"uint256","nodeType":"ElementaryTypeName","src":"9035:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3065,"mutability":"mutable","name":"person","nameLocation":"9059:6:9","nodeType":"VariableDeclaration","scope":3095,"src":"9051:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3064,"name":"uint256","nodeType":"ElementaryTypeName","src":"9051:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3067,"mutability":"mutable","name":"_feed","nameLocation":"9081:5:9","nodeType":"VariableDeclaration","scope":3095,"src":"9067:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3066,"name":"string","nodeType":"ElementaryTypeName","src":"9067:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9034:53:9"},"returnParameters":{"id":3069,"nodeType":"ParameterList","parameters":[],"src":"9095:0:9"},"scope":3843,"src":"9011:281:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3125,"nodeType":"Block","src":"9370:165:9","statements":[{"body":{"id":3121,"nodeType":"Block","src":"9424:79:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3112,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"9443:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2401_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct storage ref)"}},"id":3114,"indexExpression":{"id":3113,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"9458:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9443:17:9","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2401_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"id":3115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9461:7:9","memberName":"user_id","nodeType":"MemberAccess","referencedDeclaration":2400,"src":"9443:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3116,"name":"person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"9472:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9443:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3120,"nodeType":"IfStatement","src":"9439:52:9","trueBody":{"expression":{"hexValue":"74727565","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9487:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3101,"id":3119,"nodeType":"Return","src":"9480:11:9"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3106,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"9404:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3107,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"9408:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9404:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3122,"initializationExpression":{"assignments":[3103],"declarations":[{"constant":false,"id":3103,"mutability":"mutable","name":"i","nameLocation":"9397:1:9","nodeType":"VariableDeclaration","scope":3122,"src":"9389:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3102,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3105,"initialValue":{"hexValue":"30","id":3104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9401:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9389:13:9"},"loopExpression":{"expression":{"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9419:3:9","subExpression":{"id":3109,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"9419:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3111,"nodeType":"ExpressionStatement","src":"9419:3:9"},"nodeType":"ForStatement","src":"9384:119:9"},{"expression":{"hexValue":"66616c7365","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9522:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3101,"id":3124,"nodeType":"Return","src":"9515:12:9"}]},"functionSelector":"c7af4ee5","id":3126,"implemented":true,"kind":"function","modifiers":[],"name":"is_person_joined","nameLocation":"9309:16:9","nodeType":"FunctionDefinition","parameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"person","nameLocation":"9335:6:9","nodeType":"VariableDeclaration","scope":3126,"src":"9327:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3096,"name":"uint256","nodeType":"ElementaryTypeName","src":"9327:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9325:17:9"},"returnParameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3126,"src":"9364:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3099,"name":"bool","nodeType":"ElementaryTypeName","src":"9364:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9363:6:9"},"scope":3843,"src":"9300:235:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3166,"nodeType":"Block","src":"9606:249:9","statements":[{"assignments":[3136],"declarations":[{"constant":false,"id":3136,"mutability":"mutable","name":"_StoreInfo","nameLocation":"9662:10:9","nodeType":"VariableDeclaration","scope":3166,"src":"9646:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3134,"name":"string","nodeType":"ElementaryTypeName","src":"9646:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3135,"nodeType":"ArrayTypeName","src":"9646:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":3142,"initialValue":{"arguments":[{"id":3140,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"9688:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9675:12:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":3137,"name":"string","nodeType":"ElementaryTypeName","src":"9679:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3138,"nodeType":"ArrayTypeName","src":"9679:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9675:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9646:53:9"},{"body":{"id":3162,"nodeType":"Block","src":"9751:67:9","statements":[{"expression":{"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3153,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"9766:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":3155,"indexExpression":{"id":3154,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"9777:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9766:13:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3156,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"9782:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2343_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":3158,"indexExpression":{"id":3157,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"9794:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9782:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2343_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":3159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9797:9:9","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":2340,"src":"9782:24:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"9766:40:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3161,"nodeType":"ExpressionStatement","src":"9766:40:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3147,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"9730:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3148,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"9734:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9730:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3163,"initializationExpression":{"assignments":[3144],"declarations":[{"constant":false,"id":3144,"mutability":"mutable","name":"i","nameLocation":"9723:1:9","nodeType":"VariableDeclaration","scope":3163,"src":"9715:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3143,"name":"uint256","nodeType":"ElementaryTypeName","src":"9715:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3146,"initialValue":{"hexValue":"30","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9727:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9715:13:9"},"loopExpression":{"expression":{"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9746:3:9","subExpression":{"id":3150,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"9746:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3152,"nodeType":"ExpressionStatement","src":"9746:3:9"},"nodeType":"ForStatement","src":"9710:108:9"},{"expression":{"id":3164,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"9837:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":3131,"id":3165,"nodeType":"Return","src":"9830:17:9"}]},"functionSelector":"97ee7606","id":3167,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_ideas","nameLocation":"9552:13:9","nodeType":"FunctionDefinition","parameters":{"id":3127,"nodeType":"ParameterList","parameters":[],"src":"9565:2:9"},"returnParameters":{"id":3131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3167,"src":"9589:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3128,"name":"string","nodeType":"ElementaryTypeName","src":"9589:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3129,"nodeType":"ArrayTypeName","src":"9589:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"9588:17:9"},"scope":3843,"src":"9543:312:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3222,"nodeType":"Block","src":"9953:362:9","statements":[{"assignments":[3179],"declarations":[{"constant":false,"id":3179,"mutability":"mutable","name":"_StoreInfo","nameLocation":"10020:10:9","nodeType":"VariableDeclaration","scope":3222,"src":"10004:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3177,"name":"string","nodeType":"ElementaryTypeName","src":"10004:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3178,"nodeType":"ArrayTypeName","src":"10004:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":3185,"initialValue":{"arguments":[{"id":3183,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"10046:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10033:12:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":3180,"name":"string","nodeType":"ElementaryTypeName","src":"10037:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3181,"nodeType":"ArrayTypeName","src":"10037:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10033:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10004:53:9"},{"assignments":[3187],"declarations":[{"constant":false,"id":3187,"mutability":"mutable","name":"_store_id","nameLocation":"10076:9:9","nodeType":"VariableDeclaration","scope":3222,"src":"10068:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3186,"name":"uint256","nodeType":"ElementaryTypeName","src":"10068:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3188,"nodeType":"VariableDeclarationStatement","src":"10068:17:9"},{"body":{"id":3218,"nodeType":"Block","src":"10137:141:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3199,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"10156:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2343_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":3201,"indexExpression":{"id":3200,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"10168:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10156:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2343_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":3202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10171:7:9","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":2338,"src":"10156:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3203,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"10182:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10156:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3214,"nodeType":"IfStatement","src":"10152:88:9","trueBody":{"expression":{"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3205,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"10192:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":3207,"indexExpression":{"id":3206,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"10203:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10192:21:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3208,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"10216:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2343_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":3210,"indexExpression":{"id":3209,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"10228:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10216:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2343_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":3211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10231:9:9","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":2340,"src":"10216:24:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"10192:48:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3213,"nodeType":"ExpressionStatement","src":"10192:48:9"}},{"expression":{"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10255:11:9","subExpression":{"id":3215,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"10255:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3217,"nodeType":"ExpressionStatement","src":"10255:11:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3193,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"10116:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3194,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"10120:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10116:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3219,"initializationExpression":{"assignments":[3190],"declarations":[{"constant":false,"id":3190,"mutability":"mutable","name":"i","nameLocation":"10109:1:9","nodeType":"VariableDeclaration","scope":3219,"src":"10101:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3189,"name":"uint256","nodeType":"ElementaryTypeName","src":"10101:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3192,"initialValue":{"hexValue":"30","id":3191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10113:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10101:13:9"},"loopExpression":{"expression":{"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10132:3:9","subExpression":{"id":3196,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"10132:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3198,"nodeType":"ExpressionStatement","src":"10132:3:9"},"nodeType":"ForStatement","src":"10096:182:9"},{"expression":{"id":3220,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"10297:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":3174,"id":3221,"nodeType":"Return","src":"10290:17:9"}]},"functionSelector":"131d44f2","id":3223,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_ideas_by_goal_id","nameLocation":"9872:24:9","nodeType":"FunctionDefinition","parameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3169,"mutability":"mutable","name":"_goal_id","nameLocation":"9905:8:9","nodeType":"VariableDeclaration","scope":3223,"src":"9897:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"9897:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9896:18:9"},"returnParameters":{"id":3174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3223,"src":"9936:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3171,"name":"string","nodeType":"ElementaryTypeName","src":"9936:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3172,"nodeType":"ArrayTypeName","src":"9936:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"9935:17:9"},"scope":3843,"src":"9863:452:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3263,"nodeType":"Block","src":"10414:230:9","statements":[{"body":{"id":3259,"nodeType":"Block","src":"10501:115:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":3243,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"10536:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2343_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":3245,"indexExpression":{"id":3244,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"10548:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10536:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2343_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":3246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10551:9:9","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":2340,"src":"10536:24:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10530:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3241,"name":"bytes","nodeType":"ElementaryTypeName","src":"10530:5:9","typeDescriptions":{}}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10530:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":3240,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10520:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10520:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3252,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"10582:10:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10576:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3250,"name":"bytes","nodeType":"ElementaryTypeName","src":"10576:5:9","typeDescriptions":{}}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10576:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3249,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10566:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10566:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10520:74:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3258,"nodeType":"IfStatement","src":"10516:88:9","trueBody":{"expression":{"id":3256,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"10603:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3229,"id":3257,"nodeType":"Return","src":"10596:8:9"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3234,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"10480:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3235,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"10484:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10480:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3260,"initializationExpression":{"assignments":[3231],"declarations":[{"constant":false,"id":3231,"mutability":"mutable","name":"i","nameLocation":"10473:1:9","nodeType":"VariableDeclaration","scope":3260,"src":"10465:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"10465:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3233,"initialValue":{"hexValue":"30","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10477:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10465:13:9"},"loopExpression":{"expression":{"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10496:3:9","subExpression":{"id":3237,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"10496:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3239,"nodeType":"ExpressionStatement","src":"10496:3:9"},"nodeType":"ForStatement","src":"10460:156:9"},{"expression":{"hexValue":"30","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10635:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3229,"id":3262,"nodeType":"Return","src":"10628:8:9"}]},"functionSelector":"a1ca9178","id":3264,"implemented":true,"kind":"function","modifiers":[],"name":"get_ideas_id_by_ideas_uri","nameLocation":"10332:25:9","nodeType":"FunctionDefinition","parameters":{"id":3226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3225,"mutability":"mutable","name":"_ideas_uri","nameLocation":"10372:10:9","nodeType":"VariableDeclaration","scope":3264,"src":"10358:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3224,"name":"string","nodeType":"ElementaryTypeName","src":"10358:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10357:26:9"},"returnParameters":{"id":3229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3264,"src":"10405:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3227,"name":"uint256","nodeType":"ElementaryTypeName","src":"10405:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10404:9:9"},"scope":3843,"src":"10323:321:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3307,"nodeType":"Block","src":"10744:251:9","statements":[{"body":{"id":3303,"nodeType":"Block","src":"10831:136:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":3284,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"10866:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2343_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":3286,"indexExpression":{"id":3285,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"10878:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10866:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2343_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":3287,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10881:9:9","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":2340,"src":"10866:24:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10860:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3282,"name":"bytes","nodeType":"ElementaryTypeName","src":"10860:5:9","typeDescriptions":{}}},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10860:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":3281,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10850:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10850:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3293,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"10912:10:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10906:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3291,"name":"bytes","nodeType":"ElementaryTypeName","src":"10906:5:9","typeDescriptions":{}}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10906:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3290,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10896:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10896:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10850:74:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3302,"nodeType":"IfStatement","src":"10846:109:9","trueBody":{"expression":{"expression":{"baseExpression":{"id":3297,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"10933:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2343_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":3299,"indexExpression":{"id":3298,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"10945:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10933:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2343_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":3300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10948:7:9","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":2338,"src":"10933:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3270,"id":3301,"nodeType":"Return","src":"10926:29:9"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3275,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"10810:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3276,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"10814:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10810:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3304,"initializationExpression":{"assignments":[3272],"declarations":[{"constant":false,"id":3272,"mutability":"mutable","name":"i","nameLocation":"10803:1:9","nodeType":"VariableDeclaration","scope":3304,"src":"10795:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"10795:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3274,"initialValue":{"hexValue":"30","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10807:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10795:13:9"},"loopExpression":{"expression":{"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10826:3:9","subExpression":{"id":3278,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"10826:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3280,"nodeType":"ExpressionStatement","src":"10826:3:9"},"nodeType":"ForStatement","src":"10790:177:9"},{"expression":{"hexValue":"30","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10986:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3270,"id":3306,"nodeType":"Return","src":"10979:8:9"}]},"functionSelector":"aa4cdf2a","id":3308,"implemented":true,"kind":"function","modifiers":[],"name":"get_goal_id_from_ideas_uri","nameLocation":"10661:26:9","nodeType":"FunctionDefinition","parameters":{"id":3267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3266,"mutability":"mutable","name":"_ideas_uri","nameLocation":"10702:10:9","nodeType":"VariableDeclaration","scope":3308,"src":"10688:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3265,"name":"string","nodeType":"ElementaryTypeName","src":"10688:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10687:26:9"},"returnParameters":{"id":3270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3308,"src":"10735:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3268,"name":"uint256","nodeType":"ElementaryTypeName","src":"10735:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10734:9:9"},"scope":3843,"src":"10652:343:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3320,"nodeType":"Block","src":"11077:91:9","statements":[{"expression":{"expression":{"baseExpression":{"id":3315,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"11128:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2343_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":3317,"indexExpression":{"id":3316,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"11140:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11128:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2343_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":3318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11151:9:9","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":2340,"src":"11128:32:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":3314,"id":3319,"nodeType":"Return","src":"11121:39:9"}]},"functionSelector":"8d3d2595","id":3321,"implemented":true,"kind":"function","modifiers":[],"name":"ideas_uri","nameLocation":"11012:9:9","nodeType":"FunctionDefinition","parameters":{"id":3311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3310,"mutability":"mutable","name":"_ideas_id","nameLocation":"11030:9:9","nodeType":"VariableDeclaration","scope":3321,"src":"11022:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3309,"name":"uint256","nodeType":"ElementaryTypeName","src":"11022:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11021:19:9"},"returnParameters":{"id":3314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3321,"src":"11062:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3312,"name":"string","nodeType":"ElementaryTypeName","src":"11062:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11061:15:9"},"scope":3843,"src":"11003:165:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3361,"nodeType":"Block","src":"11322:305:9","statements":[{"expression":{"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3334,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"11334:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2420_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":3336,"indexExpression":{"id":3335,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"11347:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11334:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2420_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":3337,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11357:4:9","memberName":"vote","nodeType":"MemberAccess","referencedDeclaration":2413,"src":"11334:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11364:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11334:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3340,"nodeType":"ExpressionStatement","src":"11334:34:9"},{"expression":{"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3341,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"11429:20:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$2364_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct storage ref)"}},"id":3343,"indexExpression":{"id":3342,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"11450:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11429:37:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$2364_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3345,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"11493:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3346,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"11503:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3347,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"11514:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3344,"name":"goal_ideas_votes_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"11469:23:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_goal_ideas_votes_struct_$2364_storage_ptr_$","typeString":"type(struct PlanetDAO.goal_ideas_votes_struct storage pointer)"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11469:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$2364_memory_ptr","typeString":"struct PlanetDAO.goal_ideas_votes_struct memory"}},"src":"11429:94:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$2364_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"id":3350,"nodeType":"ExpressionStatement","src":"11429:94:9"},{"expression":{"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11534:17:9","subExpression":{"id":3351,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"11534:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3353,"nodeType":"ExpressionStatement","src":"11534:17:9"},{"expression":{"arguments":[{"id":3355,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"11571:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"766f7465","id":3356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11577:6:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_0932bdf85fc8aa10ac3c22f02317f8f53d4b4f52235ed1eabb3a4cbbe08b5c41","typeString":"literal_string \"vote\""},"value":"vote"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_0932bdf85fc8aa10ac3c22f02317f8f53d4b4f52235ed1eabb3a4cbbe08b5c41","typeString":"literal_string \"vote\""}],"id":3354,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"11562:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11562:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3358,"nodeType":"ExpressionStatement","src":"11562:22:9"},{"expression":{"id":3359,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"11604:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3333,"id":3360,"nodeType":"Return","src":"11597:22:9"}]},"functionSelector":"8d6b30a1","id":3362,"implemented":true,"kind":"function","modifiers":[],"name":"create_goal_ideas_vote","nameLocation":"11198:22:9","nodeType":"FunctionDefinition","parameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3323,"mutability":"mutable","name":"_goal_id","nameLocation":"11229:8:9","nodeType":"VariableDeclaration","scope":3362,"src":"11221:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3322,"name":"uint256","nodeType":"ElementaryTypeName","src":"11221:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3325,"mutability":"mutable","name":"_ideas_id","nameLocation":"11247:9:9","nodeType":"VariableDeclaration","scope":3362,"src":"11239:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3324,"name":"uint256","nodeType":"ElementaryTypeName","src":"11239:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3327,"mutability":"mutable","name":"_user_id","nameLocation":"11266:8:9","nodeType":"VariableDeclaration","scope":3362,"src":"11258:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3326,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3329,"mutability":"mutable","name":"_feed","nameLocation":"11290:5:9","nodeType":"VariableDeclaration","scope":3362,"src":"11276:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3328,"name":"string","nodeType":"ElementaryTypeName","src":"11276:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11220:76:9"},"returnParameters":{"id":3333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3362,"src":"11313:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3331,"name":"uint256","nodeType":"ElementaryTypeName","src":"11313:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11312:9:9"},"scope":3843,"src":"11189:438:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3426,"nodeType":"Block","src":"11747:439:9","statements":[{"assignments":[3376],"declarations":[{"constant":false,"id":3376,"mutability":"mutable","name":"_StoreInfo","nameLocation":"11817:10:9","nodeType":"VariableDeclaration","scope":3426,"src":"11800:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3374,"name":"uint256","nodeType":"ElementaryTypeName","src":"11800:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3375,"nodeType":"ArrayTypeName","src":"11800:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3382,"initialValue":{"arguments":[{"id":3380,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"11844:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11830:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3377,"name":"uint256","nodeType":"ElementaryTypeName","src":"11834:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3378,"nodeType":"ArrayTypeName","src":"11834:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11830:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11800:60:9"},{"assignments":[3384],"declarations":[{"constant":false,"id":3384,"mutability":"mutable","name":"_store_id","nameLocation":"11879:9:9","nodeType":"VariableDeclaration","scope":3426,"src":"11871:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3383,"name":"uint256","nodeType":"ElementaryTypeName","src":"11871:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3385,"nodeType":"VariableDeclarationStatement","src":"11871:17:9"},{"body":{"id":3422,"nodeType":"Block","src":"11945:206:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3396,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"11964:20:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$2364_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct storage ref)"}},"id":3398,"indexExpression":{"id":3397,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"11985:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11964:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$2364_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"id":3399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11988:7:9","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":2359,"src":"11964:31:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3400,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"11999:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11964:43:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3402,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"12011:20:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$2364_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct storage ref)"}},"id":3404,"indexExpression":{"id":3403,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"12032:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12011:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$2364_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"id":3405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12035:8:9","memberName":"ideas_id","nodeType":"MemberAccess","referencedDeclaration":2361,"src":"12011:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3406,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"12047:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12011:45:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11964:92:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3418,"nodeType":"IfStatement","src":"11960:153:9","trueBody":{"expression":{"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3409,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"12058:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3411,"indexExpression":{"id":3410,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"12069:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12058:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3412,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"12082:20:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$2364_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct storage ref)"}},"id":3414,"indexExpression":{"id":3413,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"12103:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12082:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$2364_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"id":3415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12106:7:9","memberName":"user_id","nodeType":"MemberAccess","referencedDeclaration":2363,"src":"12082:31:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12058:55:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3417,"nodeType":"ExpressionStatement","src":"12058:55:9"}},{"expression":{"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12128:11:9","subExpression":{"id":3419,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"12128:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3421,"nodeType":"ExpressionStatement","src":"12128:11:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3390,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"11919:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3391,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"11923:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11919:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3423,"initializationExpression":{"assignments":[3387],"declarations":[{"constant":false,"id":3387,"mutability":"mutable","name":"i","nameLocation":"11912:1:9","nodeType":"VariableDeclaration","scope":3423,"src":"11904:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3386,"name":"uint256","nodeType":"ElementaryTypeName","src":"11904:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3389,"initialValue":{"hexValue":"30","id":3388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11916:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11904:13:9"},"loopExpression":{"expression":{"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11940:3:9","subExpression":{"id":3393,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"11940:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3395,"nodeType":"ExpressionStatement","src":"11940:3:9"},"nodeType":"ForStatement","src":"11899:252:9"},{"expression":{"id":3424,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"12168:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3371,"id":3425,"nodeType":"Return","src":"12161:17:9"}]},"functionSelector":"4be7adb5","id":3427,"implemented":true,"kind":"function","modifiers":[],"name":"get_ideas_votes_from_goal","nameLocation":"11644:25:9","nodeType":"FunctionDefinition","parameters":{"id":3367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"mutability":"mutable","name":"_goal_id","nameLocation":"11678:8:9","nodeType":"VariableDeclaration","scope":3427,"src":"11670:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"11670:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3366,"mutability":"mutable","name":"_ideas_id","nameLocation":"11696:9:9","nodeType":"VariableDeclaration","scope":3427,"src":"11688:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3365,"name":"uint256","nodeType":"ElementaryTypeName","src":"11688:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11669:37:9"},"returnParameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3427,"src":"11728:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3368,"name":"uint256","nodeType":"ElementaryTypeName","src":"11728:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3369,"nodeType":"ArrayTypeName","src":"11728:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11727:19:9"},"scope":3843,"src":"11635:551:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3463,"nodeType":"Block","src":"12336:260:9","statements":[{"expression":{"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3440,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"12351:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2420_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":3442,"indexExpression":{"id":3441,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"12364:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12351:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2420_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":3443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12374:7:9","memberName":"comment","nodeType":"MemberAccess","referencedDeclaration":2417,"src":"12351:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12384:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12351:37:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3446,"nodeType":"ExpressionStatement","src":"12351:37:9"},{"expression":{"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3447,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"12444:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$2373_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct storage ref)"}},"id":3449,"indexExpression":{"id":3448,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"12457:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12444:26:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$2373_storage","typeString":"struct PlanetDAO.message_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3451,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"12488:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3452,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"12502:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3453,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"12513:8:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3454,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"12523:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3450,"name":"message_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"12473:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_message_struct_$2373_storage_ptr_$","typeString":"type(struct PlanetDAO.message_struct storage pointer)"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12473:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$2373_memory_ptr","typeString":"struct PlanetDAO.message_struct memory"}},"src":"12444:87:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$2373_storage","typeString":"struct PlanetDAO.message_struct storage ref"}},"id":3457,"nodeType":"ExpressionStatement","src":"12444:87:9"},{"expression":{"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12542:14:9","subExpression":{"id":3458,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"12542:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3460,"nodeType":"ExpressionStatement","src":"12542:14:9"},{"expression":{"id":3461,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"12576:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3439,"id":3462,"nodeType":"Return","src":"12569:19:9"}]},"functionSelector":"787f19c7","id":3464,"implemented":true,"kind":"function","modifiers":[],"name":"sendMsg","nameLocation":"12219:7:9","nodeType":"FunctionDefinition","parameters":{"id":3436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3429,"mutability":"mutable","name":"_ideas_id","nameLocation":"12235:9:9","nodeType":"VariableDeclaration","scope":3464,"src":"12227:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3428,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3431,"mutability":"mutable","name":"_message","nameLocation":"12260:8:9","nodeType":"VariableDeclaration","scope":3464,"src":"12246:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3430,"name":"string","nodeType":"ElementaryTypeName","src":"12246:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3433,"mutability":"mutable","name":"_sender","nameLocation":"12284:7:9","nodeType":"VariableDeclaration","scope":3464,"src":"12270:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3432,"name":"string","nodeType":"ElementaryTypeName","src":"12270:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3435,"mutability":"mutable","name":"_user_id","nameLocation":"12301:8:9","nodeType":"VariableDeclaration","scope":3464,"src":"12293:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3434,"name":"uint256","nodeType":"ElementaryTypeName","src":"12293:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12226:84:9"},"returnParameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3464,"src":"12327:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"12327:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12326:9:9"},"scope":3843,"src":"12210:386:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3520,"nodeType":"Block","src":"12680:438:9","statements":[{"assignments":[3476],"declarations":[{"constant":false,"id":3476,"mutability":"mutable","name":"_All_Ideas_Messages","nameLocation":"12755:19:9","nodeType":"VariableDeclaration","scope":3520,"src":"12738:36:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3474,"name":"uint256","nodeType":"ElementaryTypeName","src":"12738:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3475,"nodeType":"ArrayTypeName","src":"12738:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3482,"initialValue":{"arguments":[{"id":3480,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"12791:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12777:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"12781:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3478,"nodeType":"ArrayTypeName","src":"12781:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12777:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12738:66:9"},{"assignments":[3484],"declarations":[{"constant":false,"id":3484,"mutability":"mutable","name":"_msg_id","nameLocation":"12823:7:9","nodeType":"VariableDeclaration","scope":3520,"src":"12815:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3483,"name":"uint256","nodeType":"ElementaryTypeName","src":"12815:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3485,"nodeType":"VariableDeclarationStatement","src":"12815:15:9"},{"body":{"id":3516,"nodeType":"Block","src":"12884:188:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3496,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"12903:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$2373_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct storage ref)"}},"id":3498,"indexExpression":{"id":3497,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"12916:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12903:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$2373_storage","typeString":"struct PlanetDAO.message_struct storage ref"}},"id":3499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12919:8:9","memberName":"ideas_id","nodeType":"MemberAccess","referencedDeclaration":2368,"src":"12903:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3500,"name":"ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"12931:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12903:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3515,"nodeType":"IfStatement","src":"12899:162:9","trueBody":{"id":3514,"nodeType":"Block","src":"12941:120:9","statements":[{"expression":{"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3502,"name":"_All_Ideas_Messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"12960:19:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3504,"indexExpression":{"id":3503,"name":"_msg_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"12980:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12960:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3505,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"12991:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$2373_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct storage ref)"}},"id":3507,"indexExpression":{"id":3506,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"13004:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12991:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$2373_storage","typeString":"struct PlanetDAO.message_struct storage ref"}},"id":3508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13007:10:9","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":2366,"src":"12991:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12960:57:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3510,"nodeType":"ExpressionStatement","src":"12960:57:9"},{"expression":{"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13036:9:9","subExpression":{"id":3511,"name":"_msg_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"13036:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3513,"nodeType":"ExpressionStatement","src":"13036:9:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3490,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"12861:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3491,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"12865:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12861:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3517,"initializationExpression":{"assignments":[3487],"declarations":[{"constant":false,"id":3487,"mutability":"mutable","name":"i","nameLocation":"12854:1:9","nodeType":"VariableDeclaration","scope":3517,"src":"12846:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3486,"name":"uint256","nodeType":"ElementaryTypeName","src":"12846:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3489,"initialValue":{"hexValue":"30","id":3488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12858:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12846:13:9"},"loopExpression":{"expression":{"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12879:3:9","subExpression":{"id":3493,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"12879:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3495,"nodeType":"ExpressionStatement","src":"12879:3:9"},"nodeType":"ForStatement","src":"12841:231:9"},{"expression":{"id":3518,"name":"_All_Ideas_Messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"13091:19:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3471,"id":3519,"nodeType":"Return","src":"13084:26:9"}]},"functionSelector":"803f5b9f","id":3521,"implemented":true,"kind":"function","modifiers":[],"name":"getMsgIDs","nameLocation":"12613:9:9","nodeType":"FunctionDefinition","parameters":{"id":3467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3466,"mutability":"mutable","name":"ideas_id","nameLocation":"12631:8:9","nodeType":"VariableDeclaration","scope":3521,"src":"12623:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"12623:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12622:18:9"},"returnParameters":{"id":3471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3521,"src":"12662:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3468,"name":"uint256","nodeType":"ElementaryTypeName","src":"12662:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3469,"nodeType":"ArrayTypeName","src":"12662:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12661:18:9"},"scope":3843,"src":"12604:514:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3557,"nodeType":"Block","src":"13246:240:9","statements":[{"expression":{"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3534,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"13259:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2420_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":3536,"indexExpression":{"id":3535,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"13272:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13259:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2420_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":3537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13281:5:9","memberName":"reply","nodeType":"MemberAccess","referencedDeclaration":2419,"src":"13259:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13289:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13259:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3540,"nodeType":"ExpressionStatement","src":"13259:34:9"},{"expression":{"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3541,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"13345:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$2391_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct storage ref)"}},"id":3543,"indexExpression":{"id":3542,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"13357:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13345:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$2391_storage","typeString":"struct PlanetDAO.reply_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3545,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"13384:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3546,"name":"_message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"13396:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3547,"name":"ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"13408:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3548,"name":"_reply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"13418:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3544,"name":"reply_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"13371:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_reply_struct_$2391_storage_ptr_$","typeString":"type(struct PlanetDAO.reply_struct storage pointer)"}},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13371:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$2391_memory_ptr","typeString":"struct PlanetDAO.reply_struct memory"}},"src":"13345:80:9","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$2391_storage","typeString":"struct PlanetDAO.reply_struct storage ref"}},"id":3551,"nodeType":"ExpressionStatement","src":"13345:80:9"},{"expression":{"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13436:12:9","subExpression":{"id":3552,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"13436:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3554,"nodeType":"ExpressionStatement","src":"13436:12:9"},{"expression":{"id":3555,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"13468:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3533,"id":3556,"nodeType":"Return","src":"13461:17:9"}]},"functionSelector":"d9fc52db","id":3558,"implemented":true,"kind":"function","modifiers":[],"name":"sendReply","nameLocation":"13135:9:9","nodeType":"FunctionDefinition","parameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3523,"mutability":"mutable","name":"_message_id","nameLocation":"13153:11:9","nodeType":"VariableDeclaration","scope":3558,"src":"13145:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3522,"name":"uint256","nodeType":"ElementaryTypeName","src":"13145:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3525,"mutability":"mutable","name":"_reply","nameLocation":"13180:6:9","nodeType":"VariableDeclaration","scope":3558,"src":"13166:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3524,"name":"string","nodeType":"ElementaryTypeName","src":"13166:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3527,"mutability":"mutable","name":"ideas_id","nameLocation":"13195:8:9","nodeType":"VariableDeclaration","scope":3558,"src":"13187:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3526,"name":"uint256","nodeType":"ElementaryTypeName","src":"13187:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3529,"mutability":"mutable","name":"_userid","nameLocation":"13212:7:9","nodeType":"VariableDeclaration","scope":3558,"src":"13204:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3528,"name":"uint256","nodeType":"ElementaryTypeName","src":"13204:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13144:76:9"},"returnParameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3558,"src":"13237:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3531,"name":"uint256","nodeType":"ElementaryTypeName","src":"13237:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13236:9:9"},"scope":3843,"src":"13126:360:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3614,"nodeType":"Block","src":"13574:443:9","statements":[{"assignments":[3570],"declarations":[{"constant":false,"id":3570,"mutability":"mutable","name":"_All_Messages_Replys","nameLocation":"13649:20:9","nodeType":"VariableDeclaration","scope":3614,"src":"13632:37:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3568,"name":"uint256","nodeType":"ElementaryTypeName","src":"13632:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3569,"nodeType":"ArrayTypeName","src":"13632:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3576,"initialValue":{"arguments":[{"id":3574,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"13686:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13672:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3571,"name":"uint256","nodeType":"ElementaryTypeName","src":"13676:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3572,"nodeType":"ArrayTypeName","src":"13676:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13672:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13632:65:9"},{"assignments":[3578],"declarations":[{"constant":false,"id":3578,"mutability":"mutable","name":"_reply_id","nameLocation":"13716:9:9","nodeType":"VariableDeclaration","scope":3614,"src":"13708:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3577,"name":"uint256","nodeType":"ElementaryTypeName","src":"13708:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3579,"nodeType":"VariableDeclarationStatement","src":"13708:17:9"},{"body":{"id":3610,"nodeType":"Block","src":"13777:193:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3590,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"13796:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$2391_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct storage ref)"}},"id":3592,"indexExpression":{"id":3591,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"13808:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13796:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$2391_storage","typeString":"struct PlanetDAO.reply_struct storage ref"}},"id":3593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13811:10:9","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":2386,"src":"13796:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3594,"name":"message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"13825:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13796:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3609,"nodeType":"IfStatement","src":"13792:167:9","trueBody":{"id":3608,"nodeType":"Block","src":"13837:122:9","statements":[{"expression":{"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3596,"name":"_All_Messages_Replys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"13856:20:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3598,"indexExpression":{"id":3597,"name":"_reply_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"13877:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13856:31:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3599,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"13890:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$2391_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct storage ref)"}},"id":3601,"indexExpression":{"id":3600,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"13902:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13890:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$2391_storage","typeString":"struct PlanetDAO.reply_struct storage ref"}},"id":3602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13905:8:9","memberName":"reply_id","nodeType":"MemberAccess","referencedDeclaration":2384,"src":"13890:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13856:57:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3604,"nodeType":"ExpressionStatement","src":"13856:57:9"},{"expression":{"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13932:11:9","subExpression":{"id":3605,"name":"_reply_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"13932:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3607,"nodeType":"ExpressionStatement","src":"13932:11:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3584,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"13756:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3585,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"13760:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13756:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3611,"initializationExpression":{"assignments":[3581],"declarations":[{"constant":false,"id":3581,"mutability":"mutable","name":"i","nameLocation":"13749:1:9","nodeType":"VariableDeclaration","scope":3611,"src":"13741:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3580,"name":"uint256","nodeType":"ElementaryTypeName","src":"13741:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3583,"initialValue":{"hexValue":"30","id":3582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13753:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13741:13:9"},"loopExpression":{"expression":{"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13772:3:9","subExpression":{"id":3587,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"13772:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3589,"nodeType":"ExpressionStatement","src":"13772:3:9"},"nodeType":"ForStatement","src":"13736:234:9"},{"expression":{"id":3612,"name":"_All_Messages_Replys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"13989:20:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3565,"id":3613,"nodeType":"Return","src":"13982:27:9"}]},"functionSelector":"812fae1f","id":3615,"implemented":true,"kind":"function","modifiers":[],"name":"getReplyIDs","nameLocation":"13503:11:9","nodeType":"FunctionDefinition","parameters":{"id":3561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3560,"mutability":"mutable","name":"message_id","nameLocation":"13523:10:9","nodeType":"VariableDeclaration","scope":3615,"src":"13515:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3559,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:20:9"},"returnParameters":{"id":3565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3615,"src":"13556:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3562,"name":"uint256","nodeType":"ElementaryTypeName","src":"13556:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3563,"nodeType":"ArrayTypeName","src":"13556:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13555:18:9"},"scope":3843,"src":"13494:523:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3644,"nodeType":"Block","src":"14151:231:9","statements":[{"expression":{"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3628,"name":"all_read_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"14207:17:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$2382_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_read_struct storage ref)"}},"id":3630,"indexExpression":{"id":3629,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"14225:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14207:36:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$2382_storage","typeString":"struct PlanetDAO.message_read_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3632,"name":"_message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"14266:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3633,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"14279:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3634,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"14290:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3635,"name":"msg_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"14298:8:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3631,"name":"message_read_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"14246:19:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_message_read_struct_$2382_storage_ptr_$","typeString":"type(struct PlanetDAO.message_read_struct storage pointer)"}},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14246:61:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$2382_memory_ptr","typeString":"struct PlanetDAO.message_read_struct memory"}},"src":"14207:100:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$2382_storage","typeString":"struct PlanetDAO.message_read_struct storage ref"}},"id":3638,"nodeType":"ExpressionStatement","src":"14207:100:9"},{"expression":{"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14318:19:9","subExpression":{"id":3639,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"14318:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3641,"nodeType":"ExpressionStatement","src":"14318:19:9"},{"expression":{"id":3642,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"14357:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3627,"id":3643,"nodeType":"Return","src":"14350:24:9"}]},"functionSelector":"934c5f00","id":3645,"implemented":true,"kind":"function","modifiers":[],"name":"sendReadMsg","nameLocation":"14034:11:9","nodeType":"FunctionDefinition","parameters":{"id":3624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3617,"mutability":"mutable","name":"_message_id","nameLocation":"14054:11:9","nodeType":"VariableDeclaration","scope":3645,"src":"14046:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3616,"name":"uint256","nodeType":"ElementaryTypeName","src":"14046:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3619,"mutability":"mutable","name":"_ideas_id","nameLocation":"14075:9:9","nodeType":"VariableDeclaration","scope":3645,"src":"14067:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3618,"name":"uint256","nodeType":"ElementaryTypeName","src":"14067:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3621,"mutability":"mutable","name":"_wallet","nameLocation":"14093:7:9","nodeType":"VariableDeclaration","scope":3645,"src":"14085:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3620,"name":"uint256","nodeType":"ElementaryTypeName","src":"14085:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3623,"mutability":"mutable","name":"msg_type","nameLocation":"14116:8:9","nodeType":"VariableDeclaration","scope":3645,"src":"14102:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3622,"name":"string","nodeType":"ElementaryTypeName","src":"14102:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14045:80:9"},"returnParameters":{"id":3627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3645,"src":"14142:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3625,"name":"uint256","nodeType":"ElementaryTypeName","src":"14142:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14141:9:9"},"scope":3843,"src":"14025:357:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3701,"nodeType":"Block","src":"14485:331:9","statements":[{"assignments":[3655],"declarations":[{"constant":false,"id":3655,"mutability":"mutable","name":"read","nameLocation":"14509:4:9","nodeType":"VariableDeclaration","scope":3701,"src":"14504:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3654,"name":"bool","nodeType":"ElementaryTypeName","src":"14504:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3657,"initialValue":{"hexValue":"66616c7365","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14516:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"14504:17:9"},{"body":{"id":3697,"nodeType":"Block","src":"14580:205:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3668,"name":"all_read_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"14599:17:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$2382_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_read_struct storage ref)"}},"id":3670,"indexExpression":{"id":3669,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"14617:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14599:20:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$2382_storage","typeString":"struct PlanetDAO.message_read_struct storage ref"}},"id":3671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14620:10:9","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":2375,"src":"14599:31:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3672,"name":"_message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"14634:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14599:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3677,"name":"msg_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"14665:8:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14659:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3675,"name":"bytes","nodeType":"ElementaryTypeName","src":"14659:5:9","typeDescriptions":{}}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14659:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3674,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14649:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14649:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":3683,"name":"all_read_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"14695:17:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$2382_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_read_struct storage ref)"}},"id":3685,"indexExpression":{"id":3684,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"14713:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14695:20:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$2382_storage","typeString":"struct PlanetDAO.message_read_struct storage ref"}},"id":3686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14716:8:9","memberName":"msg_type","nodeType":"MemberAccess","referencedDeclaration":2381,"src":"14695:29:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14689:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3681,"name":"bytes","nodeType":"ElementaryTypeName","src":"14689:5:9","typeDescriptions":{}}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14689:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":3680,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14679:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14679:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14649:77:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14599:127:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3696,"nodeType":"IfStatement","src":"14595:179:9","trueBody":{"id":3695,"nodeType":"Block","src":"14728:46:9","statements":[{"expression":{"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3691,"name":"read","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"14746:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14753:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"14746:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3694,"nodeType":"ExpressionStatement","src":"14746:11:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3662,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"14552:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3663,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"14556:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14552:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3698,"initializationExpression":{"assignments":[3659],"declarations":[{"constant":false,"id":3659,"mutability":"mutable","name":"i","nameLocation":"14545:1:9","nodeType":"VariableDeclaration","scope":3698,"src":"14537:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3658,"name":"uint256","nodeType":"ElementaryTypeName","src":"14537:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3661,"initialValue":{"hexValue":"30","id":3660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14549:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14537:13:9"},"loopExpression":{"expression":{"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14575:3:9","subExpression":{"id":3665,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"14575:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3667,"nodeType":"ExpressionStatement","src":"14575:3:9"},"nodeType":"ForStatement","src":"14532:253:9"},{"expression":{"id":3699,"name":"read","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"14804:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3653,"id":3700,"nodeType":"Return","src":"14797:11:9"}]},"functionSelector":"cd230809","id":3702,"implemented":true,"kind":"function","modifiers":[],"name":"getReadMsg","nameLocation":"14401:10:9","nodeType":"FunctionDefinition","parameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3647,"mutability":"mutable","name":"_message_id","nameLocation":"14420:11:9","nodeType":"VariableDeclaration","scope":3702,"src":"14412:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3646,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3649,"mutability":"mutable","name":"msg_type","nameLocation":"14447:8:9","nodeType":"VariableDeclaration","scope":3702,"src":"14433:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3648,"name":"string","nodeType":"ElementaryTypeName","src":"14433:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14411:45:9"},"returnParameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3702,"src":"14479:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3651,"name":"bool","nodeType":"ElementaryTypeName","src":"14479:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14478:6:9"},"scope":3843,"src":"14392:424:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3841,"nodeType":"Block","src":"14856:693:9","statements":[{"body":{"expression":{"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14906:19:9","subExpression":{"baseExpression":{"id":3715,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"14913:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$2331_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":3717,"indexExpression":{"id":3716,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"14923:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14913:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$2331_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3719,"nodeType":"ExpressionStatement","src":"14906:19:9"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3709,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"14887:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3710,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"14891:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14887:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3720,"initializationExpression":{"assignments":[3706],"declarations":[{"constant":false,"id":3706,"mutability":"mutable","name":"i","nameLocation":"14880:1:9","nodeType":"VariableDeclaration","scope":3720,"src":"14872:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3705,"name":"uint256","nodeType":"ElementaryTypeName","src":"14872:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3708,"initialValue":{"hexValue":"30","id":3707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14884:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14872:13:9"},"loopExpression":{"expression":{"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14901:3:9","subExpression":{"id":3712,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"14901:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3714,"nodeType":"ExpressionStatement","src":"14901:3:9"},"nodeType":"ForStatement","src":"14867:58:9"},{"body":{"expression":{"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14976:20:9","subExpression":{"baseExpression":{"id":3731,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"14983:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$2336_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":3733,"indexExpression":{"id":3732,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"14994:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14983:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$2336_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3735,"nodeType":"ExpressionStatement","src":"14976:20:9"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3725,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"14956:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3726,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"14960:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14956:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3736,"initializationExpression":{"assignments":[3722],"declarations":[{"constant":false,"id":3722,"mutability":"mutable","name":"i","nameLocation":"14949:1:9","nodeType":"VariableDeclaration","scope":3736,"src":"14941:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3721,"name":"uint256","nodeType":"ElementaryTypeName","src":"14941:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3724,"initialValue":{"hexValue":"30","id":3723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14953:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14941:13:9"},"loopExpression":{"expression":{"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14971:3:9","subExpression":{"id":3728,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"14971:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3730,"nodeType":"ExpressionStatement","src":"14971:3:9"},"nodeType":"ForStatement","src":"14936:60:9"},{"body":{"expression":{"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"15048:21:9","subExpression":{"baseExpression":{"id":3747,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"15055:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$2343_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":3749,"indexExpression":{"id":3748,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"15067:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15055:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$2343_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3751,"nodeType":"ExpressionStatement","src":"15048:21:9"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3741,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"15027:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3742,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"15031:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15027:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3752,"initializationExpression":{"assignments":[3738],"declarations":[{"constant":false,"id":3738,"mutability":"mutable","name":"i","nameLocation":"15020:1:9","nodeType":"VariableDeclaration","scope":3752,"src":"15012:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3737,"name":"uint256","nodeType":"ElementaryTypeName","src":"15012:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3740,"initialValue":{"hexValue":"30","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15024:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15012:13:9"},"loopExpression":{"expression":{"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15043:3:9","subExpression":{"id":3744,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"15043:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3746,"nodeType":"ExpressionStatement","src":"15043:3:9"},"nodeType":"ForStatement","src":"15007:62:9"},{"body":{"expression":{"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"15120:31:9","subExpression":{"baseExpression":{"id":3763,"name":"_smart_contracts_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"15127:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$2357_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.smart_contract_uri_struct storage ref)"}},"id":3765,"indexExpression":{"id":3764,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"15149:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15127:24:9","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$2357_storage","typeString":"struct PlanetDAO.smart_contract_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3767,"nodeType":"ExpressionStatement","src":"15120:31:9"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3757,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"15100:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3758,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"15104:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15100:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3768,"initializationExpression":{"assignments":[3754],"declarations":[{"constant":false,"id":3754,"mutability":"mutable","name":"i","nameLocation":"15093:1:9","nodeType":"VariableDeclaration","scope":3768,"src":"15085:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3753,"name":"uint256","nodeType":"ElementaryTypeName","src":"15085:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3756,"initialValue":{"hexValue":"30","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15097:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15085:13:9"},"loopExpression":{"expression":{"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15115:3:9","subExpression":{"id":3760,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"15115:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3762,"nodeType":"ExpressionStatement","src":"15115:3:9"},"nodeType":"ForStatement","src":"15080:71:9"},{"body":{"expression":{"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"15205:22:9","subExpression":{"baseExpression":{"id":3779,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"15212:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$2373_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct storage ref)"}},"id":3781,"indexExpression":{"id":3780,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"15225:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15212:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$2373_storage","typeString":"struct PlanetDAO.message_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3783,"nodeType":"ExpressionStatement","src":"15205:22:9"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3773,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"15182:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3774,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"15186:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15182:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3784,"initializationExpression":{"assignments":[3770],"declarations":[{"constant":false,"id":3770,"mutability":"mutable","name":"i","nameLocation":"15175:1:9","nodeType":"VariableDeclaration","scope":3784,"src":"15167:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3769,"name":"uint256","nodeType":"ElementaryTypeName","src":"15167:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3772,"initialValue":{"hexValue":"30","id":3771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15179:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15167:13:9"},"loopExpression":{"expression":{"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15200:3:9","subExpression":{"id":3776,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"15200:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3778,"nodeType":"ExpressionStatement","src":"15200:3:9"},"nodeType":"ForStatement","src":"15162:65:9"},{"body":{"expression":{"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"15279:21:9","subExpression":{"baseExpression":{"id":3795,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"15286:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$2391_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct storage ref)"}},"id":3797,"indexExpression":{"id":3796,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"15298:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15286:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$2391_storage","typeString":"struct PlanetDAO.reply_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3799,"nodeType":"ExpressionStatement","src":"15279:21:9"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3789,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"15258:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3790,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"15262:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15258:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3800,"initializationExpression":{"assignments":[3786],"declarations":[{"constant":false,"id":3786,"mutability":"mutable","name":"i","nameLocation":"15251:1:9","nodeType":"VariableDeclaration","scope":3800,"src":"15243:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3785,"name":"uint256","nodeType":"ElementaryTypeName","src":"15243:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3788,"initialValue":{"hexValue":"30","id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15255:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15243:13:9"},"loopExpression":{"expression":{"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15274:3:9","subExpression":{"id":3792,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"15274:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3794,"nodeType":"ExpressionStatement","src":"15274:3:9"},"nodeType":"ForStatement","src":"15238:62:9"},{"body":{"expression":{"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"15357:30:9","subExpression":{"baseExpression":{"id":3811,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"15364:20:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$2364_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct storage ref)"}},"id":3813,"indexExpression":{"id":3812,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"15385:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15364:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$2364_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3815,"nodeType":"ExpressionStatement","src":"15357:30:9"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3805,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"15331:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3806,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"15335:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15331:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3816,"initializationExpression":{"assignments":[3802],"declarations":[{"constant":false,"id":3802,"mutability":"mutable","name":"i","nameLocation":"15324:1:9","nodeType":"VariableDeclaration","scope":3816,"src":"15316:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3801,"name":"uint256","nodeType":"ElementaryTypeName","src":"15316:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3804,"initialValue":{"hexValue":"30","id":3803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15328:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15316:13:9"},"loopExpression":{"expression":{"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15352:3:9","subExpression":{"id":3808,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"15352:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3810,"nodeType":"ExpressionStatement","src":"15352:3:9"},"nodeType":"ForStatement","src":"15311:76:9"},{"expression":{"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3817,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"15398:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15409:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15398:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3820,"nodeType":"ExpressionStatement","src":"15398:12:9"},{"expression":{"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3821,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"15421:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15433:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15421:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3824,"nodeType":"ExpressionStatement","src":"15421:13:9"},{"expression":{"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3825,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"15445:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15458:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15445:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3828,"nodeType":"ExpressionStatement","src":"15445:14:9"},{"expression":{"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3829,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"15470:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15485:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15470:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3832,"nodeType":"ExpressionStatement","src":"15470:16:9"},{"expression":{"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3833,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"15497:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15510:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15497:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3836,"nodeType":"ExpressionStatement","src":"15497:14:9"},{"expression":{"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3837,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"15522:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15540:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15522:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3840,"nodeType":"ExpressionStatement","src":"15522:19:9"}]},"functionSelector":"b16060a6","id":3842,"implemented":true,"kind":"function","modifiers":[],"name":"reset_all","nameLocation":"14837:9:9","nodeType":"FunctionDefinition","parameters":{"id":3703,"nodeType":"ParameterList","parameters":[],"src":"14846:2:9"},"returnParameters":{"id":3704,"nodeType":"ParameterList","parameters":[],"src":"14856:0:9"},"scope":3843,"src":"14828:721:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3844,"src":"170:15389:9","usedErrors":[]}],"src":"33:15528:9"},"id":9},"contracts/precompiles/Batch.sol":{"ast":{"absolutePath":"contracts/precompiles/Batch.sol","exportedSymbols":{"BATCH_ADDRESS":[3849],"BATCH_CONTRACT":[3856],"Batch":[3916]},"id":3917,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3845,"literals":["solidity",">=","0.8",".3"],"nodeType":"PragmaDirective","src":"42:24:10"},{"constant":true,"id":3849,"mutability":"constant","name":"BATCH_ADDRESS","nameLocation":"127:13:10","nodeType":"VariableDeclaration","scope":3917,"src":"110:75:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3847,"name":"address","nodeType":"ElementaryTypeName","src":"110:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030383038","id":3848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"143:42:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0000000000000000000000000000000000000808"},"visibility":"internal"},{"constant":true,"id":3856,"mutability":"constant","name":"BATCH_CONTRACT","nameLocation":"246:14:10","nodeType":"VariableDeclaration","scope":3917,"src":"231:52:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Batch_$3916","typeString":"contract Batch"},"typeName":{"id":3852,"nodeType":"UserDefinedTypeName","pathNode":{"id":3851,"name":"Batch","nameLocations":["231:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":3916,"src":"231:5:10"},"referencedDeclaration":3916,"src":"231:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_Batch_$3916","typeString":"contract Batch"}},"value":{"arguments":[{"id":3854,"name":"BATCH_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"269:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3853,"name":"Batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"263:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Batch_$3916_$","typeString":"type(contract Batch)"}},"id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"263:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Batch_$3916","typeString":"contract Batch"}},"visibility":"internal"},{"abstract":false,"baseContracts":[],"canonicalName":"Batch","contractDependencies":[],"contractKind":"interface","documentation":{"id":3857,"nodeType":"StructuredDocumentation","src":"288:274:10","text":"@author The Moonbeam Team\n @title Batch precompile\n @dev Allows to perform multiple calls throught one call to the precompile.\n Can be used by EOA to do multiple calls in a single transaction.\n @custom:address 0x0000000000000000000000000000000000000808"},"fullyImplemented":false,"id":3916,"linearizedBaseContracts":[3916],"name":"Batch","nameLocation":"572:5:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3858,"nodeType":"StructuredDocumentation","src":"585:815:10","text":"@dev Batch multiple calls into a single transaction.\n All calls are performed from the address calling this precompile.\n In case of one subcall reverting following subcalls will still be attempted.\n @param to List of addresses to call.\n @param value List of values for each subcall. If array is shorter than \"to\" then additional\n calls will be performed with a value of 0.\n @param callData Call data for each `to` address. If array is shorter than \"to\" then\n additional calls will be performed with an empty call data.\n @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\n If array is shorter than \"to\" then the remaining gas available will be used.\n @custom:selector 79df4b9c"},"functionSelector":"79df4b9c","id":3873,"implemented":false,"kind":"function","modifiers":[],"name":"batchSome","nameLocation":"1415:9:10","nodeType":"FunctionDefinition","parameters":{"id":3871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3861,"mutability":"mutable","name":"to","nameLocation":"1452:2:10","nodeType":"VariableDeclaration","scope":3873,"src":"1435:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3859,"name":"address","nodeType":"ElementaryTypeName","src":"1435:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3860,"nodeType":"ArrayTypeName","src":"1435:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3864,"mutability":"mutable","name":"value","nameLocation":"1482:5:10","nodeType":"VariableDeclaration","scope":3873,"src":"1465:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1465:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3863,"nodeType":"ArrayTypeName","src":"1465:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3867,"mutability":"mutable","name":"callData","nameLocation":"1513:8:10","nodeType":"VariableDeclaration","scope":3873,"src":"1498:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3865,"name":"bytes","nodeType":"ElementaryTypeName","src":"1498:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3866,"nodeType":"ArrayTypeName","src":"1498:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":3870,"mutability":"mutable","name":"gasLimit","nameLocation":"1548:8:10","nodeType":"VariableDeclaration","scope":3873,"src":"1532:24:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":3868,"name":"uint64","nodeType":"ElementaryTypeName","src":"1532:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3869,"nodeType":"ArrayTypeName","src":"1532:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"1424:139:10"},"returnParameters":{"id":3872,"nodeType":"ParameterList","parameters":[],"src":"1572:0:10"},"scope":3916,"src":"1406:167:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3874,"nodeType":"StructuredDocumentation","src":"1581:901:10","text":"@dev Batch multiple calls into a single transaction.\n All calls are performed from the address calling this precompile.\n In case of one subcall reverting, no more subcalls will be executed but\n the batch transaction will succeed. Use batchAll to revert on any subcall revert.\n @param to List of addresses to call.\n @param value List of values for each subcall. If array is shorter than \"to\" then additional\n calls will be performed with a value of 0.\n @param callData Call data for each `to` address. If array is shorter than \"to\" then\n additional calls will be performed with an empty call data.\n @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\n If array is shorter than \"to\" then the remaining gas available will be used.\n @custom:selector cf0491c7"},"functionSelector":"cf0491c7","id":3889,"implemented":false,"kind":"function","modifiers":[],"name":"batchSomeUntilFailure","nameLocation":"2497:21:10","nodeType":"FunctionDefinition","parameters":{"id":3887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3877,"mutability":"mutable","name":"to","nameLocation":"2546:2:10","nodeType":"VariableDeclaration","scope":3889,"src":"2529:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3875,"name":"address","nodeType":"ElementaryTypeName","src":"2529:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3876,"nodeType":"ArrayTypeName","src":"2529:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3880,"mutability":"mutable","name":"value","nameLocation":"2576:5:10","nodeType":"VariableDeclaration","scope":3889,"src":"2559:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"2559:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3879,"nodeType":"ArrayTypeName","src":"2559:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3883,"mutability":"mutable","name":"callData","nameLocation":"2607:8:10","nodeType":"VariableDeclaration","scope":3889,"src":"2592:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3881,"name":"bytes","nodeType":"ElementaryTypeName","src":"2592:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3882,"nodeType":"ArrayTypeName","src":"2592:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":3886,"mutability":"mutable","name":"gasLimit","nameLocation":"2642:8:10","nodeType":"VariableDeclaration","scope":3889,"src":"2626:24:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":3884,"name":"uint64","nodeType":"ElementaryTypeName","src":"2626:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3885,"nodeType":"ArrayTypeName","src":"2626:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"2518:139:10"},"returnParameters":{"id":3888,"nodeType":"ParameterList","parameters":[],"src":"2666:0:10"},"scope":3916,"src":"2488:179:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3890,"nodeType":"StructuredDocumentation","src":"2675:802:10","text":"@dev Batch multiple calls into a single transaction.\n All calls are performed from the address calling this precompile.\n In case of one subcall reverting, the entire batch will revert.\n @param to List of addresses to call.\n @param value List of values for each subcall. If array is shorter than \"to\" then additional\n calls will be performed with a value of 0.\n @param callData Call data for each `to` address. If array is shorter than \"to\" then\n additional calls will be performed with an empty call data.\n @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\n If array is shorter than \"to\" then the remaining gas available will be used.\n @custom:selector 96e292b8"},"functionSelector":"96e292b8","id":3905,"implemented":false,"kind":"function","modifiers":[],"name":"batchAll","nameLocation":"3492:8:10","nodeType":"FunctionDefinition","parameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"to","nameLocation":"3528:2:10","nodeType":"VariableDeclaration","scope":3905,"src":"3511:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3891,"name":"address","nodeType":"ElementaryTypeName","src":"3511:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3892,"nodeType":"ArrayTypeName","src":"3511:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3896,"mutability":"mutable","name":"value","nameLocation":"3558:5:10","nodeType":"VariableDeclaration","scope":3905,"src":"3541:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3894,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3895,"nodeType":"ArrayTypeName","src":"3541:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3899,"mutability":"mutable","name":"callData","nameLocation":"3589:8:10","nodeType":"VariableDeclaration","scope":3905,"src":"3574:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3897,"name":"bytes","nodeType":"ElementaryTypeName","src":"3574:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3898,"nodeType":"ArrayTypeName","src":"3574:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":3902,"mutability":"mutable","name":"gasLimit","nameLocation":"3624:8:10","nodeType":"VariableDeclaration","scope":3905,"src":"3608:24:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":3900,"name":"uint64","nodeType":"ElementaryTypeName","src":"3608:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3901,"nodeType":"ArrayTypeName","src":"3608:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"3500:139:10"},"returnParameters":{"id":3904,"nodeType":"ParameterList","parameters":[],"src":"3648:0:10"},"scope":3916,"src":"3483:166:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":3906,"nodeType":"StructuredDocumentation","src":"3657:36:10","text":"Emitted when a subcall succeeds."},"eventSelector":"bf855484633929c3d6688eb3caf8eff910fb4bef030a8d7dbc9390d26759714d","id":3910,"name":"SubcallSucceeded","nameLocation":"3705:16:10","nodeType":"EventDefinition","parameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"3730:5:10","nodeType":"VariableDeclaration","scope":3910,"src":"3722:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3907,"name":"uint256","nodeType":"ElementaryTypeName","src":"3722:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3721:15:10"},"src":"3699:38:10"},{"anonymous":false,"documentation":{"id":3911,"nodeType":"StructuredDocumentation","src":"3745:33:10","text":"Emitted when a subcall fails."},"eventSelector":"dbc5d06f4f877f959b1ff12d2161cdd693fa8e442ee53f1790b2804b24881f05","id":3915,"name":"SubcallFailed","nameLocation":"3790:13:10","nodeType":"EventDefinition","parameters":{"id":3914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3913,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"3812:5:10","nodeType":"VariableDeclaration","scope":3915,"src":"3804:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3912,"name":"uint256","nodeType":"ElementaryTypeName","src":"3804:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3803:15:10"},"src":"3784:35:10"}],"scope":3917,"src":"562:3260:10","usedErrors":[]}],"src":"42:3780:10"},"id":10},"contracts/precompiles/InterchainAccountRouter.sol":{"ast":{"absolutePath":"contracts/precompiles/InterchainAccountRouter.sol","exportedSymbols":{"CallLib":[4333],"IInterchainAccountRouter":[3943]},"id":3944,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3918,"literals":["solidity",">=","0.6",".11"],"nodeType":"PragmaDirective","src":"47:25:11"},{"absolutePath":"contracts/precompiles/libs/Call.sol","file":"./libs/Call.sol","id":3920,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3944,"sourceUnit":4334,"src":"76:40:11","symbolAliases":[{"foreign":{"id":3919,"name":"CallLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"84:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IInterchainAccountRouter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3943,"linearizedBaseContracts":[3943],"name":"IInterchainAccountRouter","nameLocation":"130:24:11","nodeType":"ContractDefinition","nodes":[{"functionSelector":"1ddce514","id":3933,"implemented":false,"kind":"function","modifiers":[],"name":"callRemote","nameLocation":"171:10:11","nodeType":"FunctionDefinition","parameters":{"id":3929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"mutability":"mutable","name":"_destinationDomain","nameLocation":"199:18:11","nodeType":"VariableDeclaration","scope":3933,"src":"192:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3921,"name":"uint32","nodeType":"ElementaryTypeName","src":"192:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3924,"mutability":"mutable","name":"to","nameLocation":"237:2:11","nodeType":"VariableDeclaration","scope":3933,"src":"229:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3923,"name":"address","nodeType":"ElementaryTypeName","src":"229:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3926,"mutability":"mutable","name":"value","nameLocation":"258:5:11","nodeType":"VariableDeclaration","scope":3933,"src":"250:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"250:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3928,"mutability":"mutable","name":"data","nameLocation":"287:4:11","nodeType":"VariableDeclaration","scope":3933,"src":"274:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3927,"name":"bytes","nodeType":"ElementaryTypeName","src":"274:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"181:117:11"},"returnParameters":{"id":3932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3933,"src":"317:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"317:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"316:9:11"},"scope":3943,"src":"162:164:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0e258285","id":3942,"implemented":false,"kind":"function","modifiers":[],"name":"getRemoteInterchainAccount","nameLocation":"343:26:11","nodeType":"FunctionDefinition","parameters":{"id":3938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3935,"mutability":"mutable","name":"_destination","nameLocation":"377:12:11","nodeType":"VariableDeclaration","scope":3942,"src":"370:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3934,"name":"uint32","nodeType":"ElementaryTypeName","src":"370:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3937,"mutability":"mutable","name":"_owner","nameLocation":"399:6:11","nodeType":"VariableDeclaration","scope":3942,"src":"391:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3936,"name":"address","nodeType":"ElementaryTypeName","src":"391:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"369:37:11"},"returnParameters":{"id":3941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3942,"src":"457:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3939,"name":"address","nodeType":"ElementaryTypeName","src":"457:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"456:9:11"},"scope":3943,"src":"334:132:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3944,"src":"120:349:11","usedErrors":[]}],"src":"47:424:11"},"id":11},"contracts/precompiles/InterchainGasPaymaster.sol":{"ast":{"absolutePath":"contracts/precompiles/InterchainGasPaymaster.sol","exportedSymbols":{"IInterchainGasPaymaster":[3957]},"id":3958,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3945,"literals":["solidity",">=","0.6",".11"],"nodeType":"PragmaDirective","src":"47:25:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IInterchainGasPaymaster","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3957,"linearizedBaseContracts":[3957],"name":"IInterchainGasPaymaster","nameLocation":"86:23:12","nodeType":"ContractDefinition","nodes":[{"functionSelector":"11bf2c18","id":3956,"implemented":false,"kind":"function","modifiers":[],"name":"payForGas","nameLocation":"126:9:12","nodeType":"FunctionDefinition","parameters":{"id":3954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3947,"mutability":"mutable","name":"_messageId","nameLocation":"154:10:12","nodeType":"VariableDeclaration","scope":3956,"src":"146:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"146:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3949,"mutability":"mutable","name":"_destinationDomain","nameLocation":"183:18:12","nodeType":"VariableDeclaration","scope":3956,"src":"176:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3948,"name":"uint32","nodeType":"ElementaryTypeName","src":"176:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3951,"mutability":"mutable","name":"_gasAmount","nameLocation":"220:10:12","nodeType":"VariableDeclaration","scope":3956,"src":"212:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3950,"name":"uint256","nodeType":"ElementaryTypeName","src":"212:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3953,"mutability":"mutable","name":"_refundAddress","nameLocation":"249:14:12","nodeType":"VariableDeclaration","scope":3956,"src":"241:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3952,"name":"address","nodeType":"ElementaryTypeName","src":"241:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"135:135:12"},"returnParameters":{"id":3955,"nodeType":"ParameterList","parameters":[],"src":"287:0:12"},"scope":3957,"src":"117:171:12","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":3958,"src":"76:215:12","usedErrors":[]}],"src":"47:246:12"},"id":12},"contracts/precompiles/PriceFeed.sol":{"ast":{"absolutePath":"contracts/precompiles/PriceFeed.sol","exportedSymbols":{"AggregatorV3Interface":[4008]},"id":4009,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3959,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"42:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"AggregatorV3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4008,"linearizedBaseContracts":[4008],"name":"AggregatorV3Interface","nameLocation":"79:21:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3960,"nodeType":"StructuredDocumentation","src":"108:78:13","text":" Returns the decimals to offset on the getLatestPrice call"},"functionSelector":"313ce567","id":3965,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"201:8:13","nodeType":"FunctionDefinition","parameters":{"id":3961,"nodeType":"ParameterList","parameters":[],"src":"209:2:13"},"returnParameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3965,"src":"235:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3962,"name":"uint8","nodeType":"ElementaryTypeName","src":"235:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"234:7:13"},"scope":4008,"src":"192:50:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3966,"nodeType":"StructuredDocumentation","src":"250:84:13","text":" Returns the description of the underlying price feed aggregator"},"functionSelector":"7284e416","id":3971,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"349:11:13","nodeType":"FunctionDefinition","parameters":{"id":3967,"nodeType":"ParameterList","parameters":[],"src":"360:2:13"},"returnParameters":{"id":3970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3971,"src":"386:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3968,"name":"string","nodeType":"ElementaryTypeName","src":"386:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"385:15:13"},"scope":4008,"src":"340:61:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3972,"nodeType":"StructuredDocumentation","src":"409:103:13","text":" Returns the version number representing the type of aggregator the proxy points to"},"functionSelector":"54fd4d50","id":3977,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"527:7:13","nodeType":"FunctionDefinition","parameters":{"id":3973,"nodeType":"ParameterList","parameters":[],"src":"534:2:13"},"returnParameters":{"id":3976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3977,"src":"560:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3974,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"559:9:13"},"scope":4008,"src":"518:51:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3978,"nodeType":"StructuredDocumentation","src":"577:62:13","text":" Returns price data about a specific round"},"functionSelector":"9a6fc8f5","id":3993,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"654:12:13","nodeType":"FunctionDefinition","parameters":{"id":3981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"_roundId","nameLocation":"674:8:13","nodeType":"VariableDeclaration","scope":3993,"src":"667:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3979,"name":"uint80","nodeType":"ElementaryTypeName","src":"667:6:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"666:17:13"},"returnParameters":{"id":3992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3983,"mutability":"mutable","name":"roundId","nameLocation":"714:7:13","nodeType":"VariableDeclaration","scope":3993,"src":"707:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3982,"name":"uint80","nodeType":"ElementaryTypeName","src":"707:6:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":3985,"mutability":"mutable","name":"answer","nameLocation":"730:6:13","nodeType":"VariableDeclaration","scope":3993,"src":"723:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3984,"name":"int256","nodeType":"ElementaryTypeName","src":"723:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3987,"mutability":"mutable","name":"startedAt","nameLocation":"746:9:13","nodeType":"VariableDeclaration","scope":3993,"src":"738:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3986,"name":"uint256","nodeType":"ElementaryTypeName","src":"738:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3989,"mutability":"mutable","name":"updatedAt","nameLocation":"765:9:13","nodeType":"VariableDeclaration","scope":3993,"src":"757:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3988,"name":"uint256","nodeType":"ElementaryTypeName","src":"757:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3991,"mutability":"mutable","name":"answeredInRound","nameLocation":"783:15:13","nodeType":"VariableDeclaration","scope":3993,"src":"776:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3990,"name":"uint80","nodeType":"ElementaryTypeName","src":"776:6:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"706:93:13"},"scope":4008,"src":"645:155:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3994,"nodeType":"StructuredDocumentation","src":"808:61:13","text":" Returns price data from the latest round"},"functionSelector":"feaf968c","id":4007,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"884:15:13","nodeType":"FunctionDefinition","parameters":{"id":3995,"nodeType":"ParameterList","parameters":[],"src":"899:2:13"},"returnParameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3997,"mutability":"mutable","name":"roundId","nameLocation":"932:7:13","nodeType":"VariableDeclaration","scope":4007,"src":"925:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3996,"name":"uint80","nodeType":"ElementaryTypeName","src":"925:6:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":3999,"mutability":"mutable","name":"answer","nameLocation":"948:6:13","nodeType":"VariableDeclaration","scope":4007,"src":"941:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3998,"name":"int256","nodeType":"ElementaryTypeName","src":"941:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4001,"mutability":"mutable","name":"startedAt","nameLocation":"964:9:13","nodeType":"VariableDeclaration","scope":4007,"src":"956:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4000,"name":"uint256","nodeType":"ElementaryTypeName","src":"956:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4003,"mutability":"mutable","name":"updatedAt","nameLocation":"983:9:13","nodeType":"VariableDeclaration","scope":4007,"src":"975:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4002,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4005,"mutability":"mutable","name":"answeredInRound","nameLocation":"1001:15:13","nodeType":"VariableDeclaration","scope":4007,"src":"994:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4004,"name":"uint80","nodeType":"ElementaryTypeName","src":"994:6:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"924:93:13"},"scope":4008,"src":"875:143:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4009,"src":"69:952:13","usedErrors":[]}],"src":"42:981:13"},"id":13},"contracts/precompiles/libs/Call.sol":{"ast":{"absolutePath":"contracts/precompiles/libs/Call.sol","exportedSymbols":{"Address":[1019],"CallLib":[4333],"TypeCasts":[4374]},"id":4334,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":4010,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"40:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":4012,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4334,"sourceUnit":1020,"src":"68:66:14","symbolAliases":[{"foreign":{"id":4011,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"76:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/precompiles/libs/TypeCasts.sol","file":"./TypeCasts.sol","id":4014,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4334,"sourceUnit":4375,"src":"138:42:14","symbolAliases":[{"foreign":{"id":4013,"name":"TypeCasts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"146:9:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"CallLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":4333,"linearizedBaseContracts":[4333],"name":"CallLib","nameLocation":"192:7:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CallLib.StaticCall","id":4019,"members":[{"constant":false,"id":4016,"mutability":"mutable","name":"to","nameLocation":"283:2:14","nodeType":"VariableDeclaration","scope":4019,"src":"275:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"275:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4018,"mutability":"mutable","name":"data","nameLocation":"302:4:14","nodeType":"VariableDeclaration","scope":4019,"src":"296:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4017,"name":"bytes","nodeType":"ElementaryTypeName","src":"296:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"StaticCall","nameLocation":"214:10:14","nodeType":"StructDefinition","scope":4333,"src":"207:107:14","visibility":"public"},{"canonicalName":"CallLib.Call","id":4026,"members":[{"constant":false,"id":4021,"mutability":"mutable","name":"to","nameLocation":"392:2:14","nodeType":"VariableDeclaration","scope":4026,"src":"384:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"384:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4023,"mutability":"mutable","name":"value","nameLocation":"413:5:14","nodeType":"VariableDeclaration","scope":4026,"src":"405:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4022,"name":"uint256","nodeType":"ElementaryTypeName","src":"405:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4025,"mutability":"mutable","name":"data","nameLocation":"435:4:14","nodeType":"VariableDeclaration","scope":4026,"src":"429:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4024,"name":"bytes","nodeType":"ElementaryTypeName","src":"429:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Call","nameLocation":"329:4:14","nodeType":"StructDefinition","scope":4333,"src":"322:125:14","visibility":"public"},{"canonicalName":"CallLib.StaticCallWithCallback","id":4032,"members":[{"constant":false,"id":4029,"mutability":"mutable","name":"_call","nameLocation":"507:5:14","nodeType":"VariableDeclaration","scope":4032,"src":"496:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$4019_storage_ptr","typeString":"struct CallLib.StaticCall"},"typeName":{"id":4028,"nodeType":"UserDefinedTypeName","pathNode":{"id":4027,"name":"StaticCall","nameLocations":["496:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":4019,"src":"496:10:14"},"referencedDeclaration":4019,"src":"496:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$4019_storage_ptr","typeString":"struct CallLib.StaticCall"}},"visibility":"internal"},{"constant":false,"id":4031,"mutability":"mutable","name":"callback","nameLocation":"529:8:14","nodeType":"VariableDeclaration","scope":4032,"src":"523:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4030,"name":"bytes","nodeType":"ElementaryTypeName","src":"523:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"StaticCallWithCallback","nameLocation":"462:22:14","nodeType":"StructDefinition","scope":4333,"src":"455:90:14","visibility":"public"},{"body":{"id":4053,"nodeType":"Block","src":"652:197:14","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4044,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"758:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4026_memory_ptr","typeString":"struct CallLib.Call memory"}},"id":4045,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"764:2:14","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":4021,"src":"758:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4042,"name":"TypeCasts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"731:9:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TypeCasts_$4374_$","typeString":"type(library TypeCasts)"}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"741:16:14","memberName":"bytes32ToAddress","nodeType":"MemberAccess","referencedDeclaration":4373,"src":"731:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) pure returns (address)"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"731:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4047,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"786:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4026_memory_ptr","typeString":"struct CallLib.Call memory"}},"id":4048,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"792:4:14","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":4025,"src":"786:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":4049,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"815:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4026_memory_ptr","typeString":"struct CallLib.Call memory"}},"id":4050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"821:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4023,"src":"815:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4040,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"683:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1019_$","typeString":"type(library Address)"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"691:21:14","memberName":"functionCallWithValue","nodeType":"MemberAccess","referencedDeclaration":799,"src":"683:29:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"683:158:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4039,"id":4052,"nodeType":"Return","src":"663:178:14"}]},"id":4054,"implemented":true,"kind":"function","modifiers":[],"name":"call","nameLocation":"562:4:14","nodeType":"FunctionDefinition","parameters":{"id":4036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4035,"mutability":"mutable","name":"_call","nameLocation":"579:5:14","nodeType":"VariableDeclaration","scope":4054,"src":"567:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4026_memory_ptr","typeString":"struct CallLib.Call"},"typeName":{"id":4034,"nodeType":"UserDefinedTypeName","pathNode":{"id":4033,"name":"Call","nameLocations":["567:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":4026,"src":"567:4:14"},"referencedDeclaration":4026,"src":"567:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4026_storage_ptr","typeString":"struct CallLib.Call"}},"visibility":"internal"}],"src":"566:19:14"},"returnParameters":{"id":4039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4038,"mutability":"mutable","name":"returnData","nameLocation":"635:10:14","nodeType":"VariableDeclaration","scope":4054,"src":"622:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4037,"name":"bytes","nodeType":"ElementaryTypeName","src":"622:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"621:25:14"},"scope":4333,"src":"553:296:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4073,"nodeType":"Block","src":"970:164:14","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4066,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"1073:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$4019_memory_ptr","typeString":"struct CallLib.StaticCall memory"}},"id":4067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1079:2:14","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":4016,"src":"1073:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4064,"name":"TypeCasts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"1046:9:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TypeCasts_$4374_$","typeString":"type(library TypeCasts)"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1056:16:14","memberName":"bytes32ToAddress","nodeType":"MemberAccess","referencedDeclaration":4373,"src":"1046:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) pure returns (address)"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1046:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4069,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"1101:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$4019_memory_ptr","typeString":"struct CallLib.StaticCall memory"}},"id":4070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1107:4:14","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":4018,"src":"1101:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4062,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"1001:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1019_$","typeString":"type(library Address)"}},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1009:18:14","memberName":"functionStaticCall","nodeType":"MemberAccess","referencedDeclaration":860,"src":"1001:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) view returns (bytes memory)"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1001:125:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4061,"id":4072,"nodeType":"Return","src":"981:145:14"}]},"id":4074,"implemented":true,"kind":"function","modifiers":[],"name":"staticcall","nameLocation":"866:10:14","nodeType":"FunctionDefinition","parameters":{"id":4058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4057,"mutability":"mutable","name":"_call","nameLocation":"895:5:14","nodeType":"VariableDeclaration","scope":4074,"src":"877:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$4019_memory_ptr","typeString":"struct CallLib.StaticCall"},"typeName":{"id":4056,"nodeType":"UserDefinedTypeName","pathNode":{"id":4055,"name":"StaticCall","nameLocations":["877:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":4019,"src":"877:10:14"},"referencedDeclaration":4019,"src":"877:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$4019_storage_ptr","typeString":"struct CallLib.StaticCall"}},"visibility":"internal"}],"src":"876:25:14"},"returnParameters":{"id":4061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4074,"src":"951:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4059,"name":"bytes","nodeType":"ElementaryTypeName","src":"951:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"950:14:14"},"scope":4333,"src":"857:277:14","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4093,"nodeType":"Block","src":"1277:79:14","statements":[{"expression":{"arguments":[{"expression":{"id":4085,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"1308:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$4032_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback memory"}},"id":4086,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1314:8:14","memberName":"callback","nodeType":"MemberAccess","referencedDeclaration":4031,"src":"1308:14:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"expression":{"id":4088,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"1335:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$4032_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback memory"}},"id":4089,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1341:5:14","memberName":"_call","nodeType":"MemberAccess","referencedDeclaration":4029,"src":"1335:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$4019_memory_ptr","typeString":"struct CallLib.StaticCall memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_StaticCall_$4019_memory_ptr","typeString":"struct CallLib.StaticCall memory"}],"id":4087,"name":"staticcall","nodeType":"Identifier","overloadedDeclarations":[4074,4094],"referencedDeclaration":4074,"src":"1324:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_StaticCall_$4019_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct CallLib.StaticCall memory) view returns (bytes memory)"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1324:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1295:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4082,"name":"bytes","nodeType":"ElementaryTypeName","src":"1295:5:14","typeDescriptions":{}}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1301:6:14","memberName":"concat","nodeType":"MemberAccess","src":"1295:12:14","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1295:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4081,"id":4092,"nodeType":"Return","src":"1288:60:14"}]},"id":4094,"implemented":true,"kind":"function","modifiers":[],"name":"staticcall","nameLocation":"1151:10:14","nodeType":"FunctionDefinition","parameters":{"id":4078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4077,"mutability":"mutable","name":"_call","nameLocation":"1192:5:14","nodeType":"VariableDeclaration","scope":4094,"src":"1162:35:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$4032_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback"},"typeName":{"id":4076,"nodeType":"UserDefinedTypeName","pathNode":{"id":4075,"name":"StaticCallWithCallback","nameLocations":["1162:22:14"],"nodeType":"IdentifierPath","referencedDeclaration":4032,"src":"1162:22:14"},"referencedDeclaration":4032,"src":"1162:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$4032_storage_ptr","typeString":"struct CallLib.StaticCallWithCallback"}},"visibility":"internal"}],"src":"1161:37:14"},"returnParameters":{"id":4081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4080,"mutability":"mutable","name":"callback","nameLocation":"1262:8:14","nodeType":"VariableDeclaration","scope":4094,"src":"1249:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4079,"name":"bytes","nodeType":"ElementaryTypeName","src":"1249:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1248:23:14"},"scope":4333,"src":"1142:214:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4125,"nodeType":"Block","src":"1413:198:14","statements":[{"assignments":[4102],"declarations":[{"constant":false,"id":4102,"mutability":"mutable","name":"i","nameLocation":"1432:1:14","nodeType":"VariableDeclaration","scope":4125,"src":"1424:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1424:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4104,"initialValue":{"hexValue":"30","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1436:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1424:13:14"},{"assignments":[4106],"declarations":[{"constant":false,"id":4106,"mutability":"mutable","name":"len","nameLocation":"1456:3:14","nodeType":"VariableDeclaration","scope":4125,"src":"1448:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4105,"name":"uint256","nodeType":"ElementaryTypeName","src":"1448:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4109,"initialValue":{"expression":{"id":4107,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"1462:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4026_memory_ptr_$dyn_memory_ptr","typeString":"struct CallLib.Call memory[] memory"}},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1468:6:14","memberName":"length","nodeType":"MemberAccess","src":"1462:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1448:26:14"},{"body":{"id":4123,"nodeType":"Block","src":"1501:103:14","statements":[{"expression":{"arguments":[{"baseExpression":{"id":4114,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"1521:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4026_memory_ptr_$dyn_memory_ptr","typeString":"struct CallLib.Call memory[] memory"}},"id":4116,"indexExpression":{"id":4115,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"1527:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1521:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4026_memory_ptr","typeString":"struct CallLib.Call memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Call_$4026_memory_ptr","typeString":"struct CallLib.Call memory"}],"id":4113,"name":"call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"1516:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Call_$4026_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct CallLib.Call memory) returns (bytes memory)"}},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1516:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4118,"nodeType":"ExpressionStatement","src":"1516:14:14"},{"id":4122,"nodeType":"UncheckedBlock","src":"1545:48:14","statements":[{"expression":{"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1574:3:14","subExpression":{"id":4119,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"1576:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4121,"nodeType":"ExpressionStatement","src":"1574:3:14"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4110,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"1492:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4111,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"1496:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1492:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4124,"nodeType":"WhileStatement","src":"1485:119:14"}]},"id":4126,"implemented":true,"kind":"function","modifiers":[],"name":"multicall","nameLocation":"1373:9:14","nodeType":"FunctionDefinition","parameters":{"id":4099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4098,"mutability":"mutable","name":"calls","nameLocation":"1397:5:14","nodeType":"VariableDeclaration","scope":4126,"src":"1383:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4026_memory_ptr_$dyn_memory_ptr","typeString":"struct CallLib.Call[]"},"typeName":{"baseType":{"id":4096,"nodeType":"UserDefinedTypeName","pathNode":{"id":4095,"name":"Call","nameLocations":["1383:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":4026,"src":"1383:4:14"},"referencedDeclaration":4026,"src":"1383:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4026_storage_ptr","typeString":"struct CallLib.Call"}},"id":4097,"nodeType":"ArrayTypeName","src":"1383:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4026_storage_$dyn_storage_ptr","typeString":"struct CallLib.Call[]"}},"visibility":"internal"}],"src":"1382:21:14"},"returnParameters":{"id":4100,"nodeType":"ParameterList","parameters":[],"src":"1413:0:14"},"scope":4333,"src":"1364:247:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4177,"nodeType":"Block","src":"1755:302:14","statements":[{"assignments":[4137],"declarations":[{"constant":false,"id":4137,"mutability":"mutable","name":"i","nameLocation":"1774:1:14","nodeType":"VariableDeclaration","scope":4177,"src":"1766:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4136,"name":"uint256","nodeType":"ElementaryTypeName","src":"1766:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4139,"initialValue":{"hexValue":"30","id":4138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1778:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1766:13:14"},{"assignments":[4141],"declarations":[{"constant":false,"id":4141,"mutability":"mutable","name":"len","nameLocation":"1798:3:14","nodeType":"VariableDeclaration","scope":4177,"src":"1790:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4140,"name":"uint256","nodeType":"ElementaryTypeName","src":"1790:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4144,"initialValue":{"expression":{"id":4142,"name":"_calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"1804:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StaticCallWithCallback_$4032_memory_ptr_$dyn_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback memory[] memory"}},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1811:6:14","memberName":"length","nodeType":"MemberAccess","src":"1804:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1790:27:14"},{"assignments":[4149],"declarations":[{"constant":false,"id":4149,"mutability":"mutable","name":"callbacks","nameLocation":"1843:9:14","nodeType":"VariableDeclaration","scope":4177,"src":"1828:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4147,"name":"bytes","nodeType":"ElementaryTypeName","src":"1828:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4148,"nodeType":"ArrayTypeName","src":"1828:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"id":4155,"initialValue":{"arguments":[{"id":4153,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"1867:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1855:11:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":4150,"name":"bytes","nodeType":"ElementaryTypeName","src":"1859:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4151,"nodeType":"ArrayTypeName","src":"1859:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1828:43:14"},{"body":{"id":4173,"nodeType":"Block","src":"1898:125:14","statements":[{"expression":{"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4159,"name":"callbacks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"1913:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":4161,"indexExpression":{"id":4160,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"1923:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1913:12:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":4163,"name":"_calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"1939:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StaticCallWithCallback_$4032_memory_ptr_$dyn_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback memory[] memory"}},"id":4165,"indexExpression":{"id":4164,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"1946:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1939:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$4032_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_StaticCallWithCallback_$4032_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback memory"}],"id":4162,"name":"staticcall","nodeType":"Identifier","overloadedDeclarations":[4074,4094],"referencedDeclaration":4094,"src":"1928:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_StaticCallWithCallback_$4032_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct CallLib.StaticCallWithCallback memory) view returns (bytes memory)"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1913:36:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4168,"nodeType":"ExpressionStatement","src":"1913:36:14"},{"id":4172,"nodeType":"UncheckedBlock","src":"1964:48:14","statements":[{"expression":{"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1993:3:14","subExpression":{"id":4169,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"1995:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4171,"nodeType":"ExpressionStatement","src":"1993:3:14"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4156,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"1889:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4157,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"1893:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1889:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4174,"nodeType":"WhileStatement","src":"1882:141:14"},{"expression":{"id":4175,"name":"callbacks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"2040:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":4135,"id":4176,"nodeType":"Return","src":"2033:16:14"}]},"id":4178,"implemented":true,"kind":"function","modifiers":[],"name":"multistaticcall","nameLocation":"1628:15:14","nodeType":"FunctionDefinition","parameters":{"id":4131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4130,"mutability":"mutable","name":"_calls","nameLocation":"1676:6:14","nodeType":"VariableDeclaration","scope":4178,"src":"1644:38:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StaticCallWithCallback_$4032_memory_ptr_$dyn_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback[]"},"typeName":{"baseType":{"id":4128,"nodeType":"UserDefinedTypeName","pathNode":{"id":4127,"name":"StaticCallWithCallback","nameLocations":["1644:22:14"],"nodeType":"IdentifierPath","referencedDeclaration":4032,"src":"1644:22:14"},"referencedDeclaration":4032,"src":"1644:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$4032_storage_ptr","typeString":"struct CallLib.StaticCallWithCallback"}},"id":4129,"nodeType":"ArrayTypeName","src":"1644:24:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StaticCallWithCallback_$4032_storage_$dyn_storage_ptr","typeString":"struct CallLib.StaticCallWithCallback[]"}},"visibility":"internal"}],"src":"1643:40:14"},"returnParameters":{"id":4135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4178,"src":"1734:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4132,"name":"bytes","nodeType":"ElementaryTypeName","src":"1734:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4133,"nodeType":"ArrayTypeName","src":"1734:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1733:16:14"},"scope":4333,"src":"1619:438:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4213,"nodeType":"Block","src":"2129:218:14","statements":[{"assignments":[4187],"declarations":[{"constant":false,"id":4187,"mutability":"mutable","name":"i","nameLocation":"2148:1:14","nodeType":"VariableDeclaration","scope":4213,"src":"2140:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2140:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4189,"initialValue":{"hexValue":"30","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2140:13:14"},{"assignments":[4191],"declarations":[{"constant":false,"id":4191,"mutability":"mutable","name":"len","nameLocation":"2172:3:14","nodeType":"VariableDeclaration","scope":4213,"src":"2164:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4190,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4194,"initialValue":{"expression":{"id":4192,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"2178:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2184:6:14","memberName":"length","nodeType":"MemberAccess","src":"2178:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2164:26:14"},{"body":{"id":4211,"nodeType":"Block","src":"2217:123:14","statements":[{"expression":{"arguments":[{"id":4201,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"2253:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":4202,"name":"calls","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"2257:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":4204,"indexExpression":{"id":4203,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"2263:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2257:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4198,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"2232:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1019_$","typeString":"type(library Address)"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2240:12:14","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":759,"src":"2232:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2232:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4206,"nodeType":"ExpressionStatement","src":"2232:34:14"},{"id":4210,"nodeType":"UncheckedBlock","src":"2281:48:14","statements":[{"expression":{"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2310:3:14","subExpression":{"id":4207,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"2312:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4209,"nodeType":"ExpressionStatement","src":"2310:3:14"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4195,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"2208:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4196,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"2212:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2208:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4212,"nodeType":"WhileStatement","src":"2201:139:14"}]},"id":4214,"implemented":true,"kind":"function","modifiers":[],"name":"multicallto","nameLocation":"2074:11:14","nodeType":"FunctionDefinition","parameters":{"id":4184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4180,"mutability":"mutable","name":"to","nameLocation":"2094:2:14","nodeType":"VariableDeclaration","scope":4214,"src":"2086:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4179,"name":"address","nodeType":"ElementaryTypeName","src":"2086:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4183,"mutability":"mutable","name":"calls","nameLocation":"2113:5:14","nodeType":"VariableDeclaration","scope":4214,"src":"2098:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4181,"name":"bytes","nodeType":"ElementaryTypeName","src":"2098:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4182,"nodeType":"ArrayTypeName","src":"2098:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"2085:34:14"},"returnParameters":{"id":4185,"nodeType":"ParameterList","parameters":[],"src":"2129:0:14"},"scope":4333,"src":"2065:282:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4229,"nodeType":"Block","src":"2475:46:14","statements":[{"expression":{"arguments":[{"id":4225,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"2504:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4226,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"2508:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4224,"name":"StaticCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"2493:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StaticCall_$4019_storage_ptr_$","typeString":"type(struct CallLib.StaticCall storage pointer)"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$4019_memory_ptr","typeString":"struct CallLib.StaticCall memory"}},"functionReturnParameters":4223,"id":4228,"nodeType":"Return","src":"2486:27:14"}]},"id":4230,"implemented":true,"kind":"function","modifiers":[],"name":"build","nameLocation":"2364:5:14","nodeType":"FunctionDefinition","parameters":{"id":4219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4216,"mutability":"mutable","name":"to","nameLocation":"2378:2:14","nodeType":"VariableDeclaration","scope":4230,"src":"2370:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2370:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4218,"mutability":"mutable","name":"data","nameLocation":"2395:4:14","nodeType":"VariableDeclaration","scope":4230,"src":"2382:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4217,"name":"bytes","nodeType":"ElementaryTypeName","src":"2382:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2369:31:14"},"returnParameters":{"id":4223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4230,"src":"2451:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$4019_memory_ptr","typeString":"struct CallLib.StaticCall"},"typeName":{"id":4221,"nodeType":"UserDefinedTypeName","pathNode":{"id":4220,"name":"StaticCall","nameLocations":["2451:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":4019,"src":"2451:10:14"},"referencedDeclaration":4019,"src":"2451:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$4019_storage_ptr","typeString":"struct CallLib.StaticCall"}},"visibility":"internal"}],"src":"2450:19:14"},"scope":4333,"src":"2355:166:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4248,"nodeType":"Block","src":"2649:69:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":4243,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"2700:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4241,"name":"TypeCasts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"2673:9:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TypeCasts_$4374_$","typeString":"type(library TypeCasts)"}},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2683:16:14","memberName":"addressToBytes32","nodeType":"MemberAccess","referencedDeclaration":4354,"src":"2673:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes32_$","typeString":"function (address) pure returns (bytes32)"}},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2673:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4245,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"2705:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4240,"name":"build","nodeType":"Identifier","overloadedDeclarations":[4230,4249,4268,4290,4311,4332],"referencedDeclaration":4230,"src":"2667:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_struct$_StaticCall_$4019_memory_ptr_$","typeString":"function (bytes32,bytes memory) pure returns (struct CallLib.StaticCall memory)"}},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2667:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$4019_memory_ptr","typeString":"struct CallLib.StaticCall memory"}},"functionReturnParameters":4239,"id":4247,"nodeType":"Return","src":"2660:50:14"}]},"id":4249,"implemented":true,"kind":"function","modifiers":[],"name":"build","nameLocation":"2538:5:14","nodeType":"FunctionDefinition","parameters":{"id":4235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4232,"mutability":"mutable","name":"to","nameLocation":"2552:2:14","nodeType":"VariableDeclaration","scope":4249,"src":"2544:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4231,"name":"address","nodeType":"ElementaryTypeName","src":"2544:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4234,"mutability":"mutable","name":"data","nameLocation":"2569:4:14","nodeType":"VariableDeclaration","scope":4249,"src":"2556:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4233,"name":"bytes","nodeType":"ElementaryTypeName","src":"2556:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2543:31:14"},"returnParameters":{"id":4239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4249,"src":"2625:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$4019_memory_ptr","typeString":"struct CallLib.StaticCall"},"typeName":{"id":4237,"nodeType":"UserDefinedTypeName","pathNode":{"id":4236,"name":"StaticCall","nameLocations":["2625:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":4019,"src":"2625:10:14"},"referencedDeclaration":4019,"src":"2625:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$4019_storage_ptr","typeString":"struct CallLib.StaticCall"}},"visibility":"internal"}],"src":"2624:19:14"},"scope":4333,"src":"2529:189:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4267,"nodeType":"Block","src":"2857:47:14","statements":[{"expression":{"arguments":[{"id":4262,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"2880:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"2884:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4264,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"2891:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4261,"name":"Call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"2875:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Call_$4026_storage_ptr_$","typeString":"type(struct CallLib.Call storage pointer)"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2875:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4026_memory_ptr","typeString":"struct CallLib.Call memory"}},"functionReturnParameters":4260,"id":4266,"nodeType":"Return","src":"2868:28:14"}]},"id":4268,"implemented":true,"kind":"function","modifiers":[],"name":"build","nameLocation":"2735:5:14","nodeType":"FunctionDefinition","parameters":{"id":4256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4251,"mutability":"mutable","name":"to","nameLocation":"2759:2:14","nodeType":"VariableDeclaration","scope":4268,"src":"2751:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2751:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4253,"mutability":"mutable","name":"value","nameLocation":"2780:5:14","nodeType":"VariableDeclaration","scope":4268,"src":"2772:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4252,"name":"uint256","nodeType":"ElementaryTypeName","src":"2772:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4255,"mutability":"mutable","name":"data","nameLocation":"2809:4:14","nodeType":"VariableDeclaration","scope":4268,"src":"2796:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4254,"name":"bytes","nodeType":"ElementaryTypeName","src":"2796:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2740:80:14"},"returnParameters":{"id":4260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4268,"src":"2844:11:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4026_memory_ptr","typeString":"struct CallLib.Call"},"typeName":{"id":4258,"nodeType":"UserDefinedTypeName","pathNode":{"id":4257,"name":"Call","nameLocations":["2844:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":4026,"src":"2844:4:14"},"referencedDeclaration":4026,"src":"2844:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4026_storage_ptr","typeString":"struct CallLib.Call"}},"visibility":"internal"}],"src":"2843:13:14"},"scope":4333,"src":"2726:178:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4289,"nodeType":"Block","src":"3043:75:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":4283,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"3093:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4281,"name":"TypeCasts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"3066:9:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TypeCasts_$4374_$","typeString":"type(library TypeCasts)"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3076:16:14","memberName":"addressToBytes32","nodeType":"MemberAccess","referencedDeclaration":4354,"src":"3066:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes32_$","typeString":"function (address) pure returns (bytes32)"}},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"3098:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4286,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"3105:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4280,"name":"Call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"3061:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Call_$4026_storage_ptr_$","typeString":"type(struct CallLib.Call storage pointer)"}},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3061:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4026_memory_ptr","typeString":"struct CallLib.Call memory"}},"functionReturnParameters":4279,"id":4288,"nodeType":"Return","src":"3054:56:14"}]},"id":4290,"implemented":true,"kind":"function","modifiers":[],"name":"build","nameLocation":"2921:5:14","nodeType":"FunctionDefinition","parameters":{"id":4275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"mutability":"mutable","name":"to","nameLocation":"2945:2:14","nodeType":"VariableDeclaration","scope":4290,"src":"2937:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4269,"name":"address","nodeType":"ElementaryTypeName","src":"2937:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4272,"mutability":"mutable","name":"value","nameLocation":"2966:5:14","nodeType":"VariableDeclaration","scope":4290,"src":"2958:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4271,"name":"uint256","nodeType":"ElementaryTypeName","src":"2958:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4274,"mutability":"mutable","name":"data","nameLocation":"2995:4:14","nodeType":"VariableDeclaration","scope":4290,"src":"2982:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4273,"name":"bytes","nodeType":"ElementaryTypeName","src":"2982:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2926:80:14"},"returnParameters":{"id":4279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4290,"src":"3030:11:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4026_memory_ptr","typeString":"struct CallLib.Call"},"typeName":{"id":4277,"nodeType":"UserDefinedTypeName","pathNode":{"id":4276,"name":"Call","nameLocations":["3030:4:14"],"nodeType":"IdentifierPath","referencedDeclaration":4026,"src":"3030:4:14"},"referencedDeclaration":4026,"src":"3030:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4026_storage_ptr","typeString":"struct CallLib.Call"}},"visibility":"internal"}],"src":"3029:13:14"},"scope":4333,"src":"2912:206:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4310,"nodeType":"Block","src":"3283:75:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":4304,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"3330:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4305,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"3334:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4303,"name":"build","nodeType":"Identifier","overloadedDeclarations":[4230,4249,4268,4290,4311,4332],"referencedDeclaration":4230,"src":"3324:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_struct$_StaticCall_$4019_memory_ptr_$","typeString":"function (bytes32,bytes memory) pure returns (struct CallLib.StaticCall memory)"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3324:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$4019_memory_ptr","typeString":"struct CallLib.StaticCall memory"}},{"id":4307,"name":"callback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"3341:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_StaticCall_$4019_memory_ptr","typeString":"struct CallLib.StaticCall memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4302,"name":"StaticCallWithCallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"3301:22:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StaticCallWithCallback_$4032_storage_ptr_$","typeString":"type(struct CallLib.StaticCallWithCallback storage pointer)"}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3301:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$4032_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback memory"}},"functionReturnParameters":4301,"id":4309,"nodeType":"Return","src":"3294:56:14"}]},"id":4311,"implemented":true,"kind":"function","modifiers":[],"name":"build","nameLocation":"3135:5:14","nodeType":"FunctionDefinition","parameters":{"id":4297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4292,"mutability":"mutable","name":"to","nameLocation":"3159:2:14","nodeType":"VariableDeclaration","scope":4311,"src":"3151:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4294,"mutability":"mutable","name":"data","nameLocation":"3185:4:14","nodeType":"VariableDeclaration","scope":4311,"src":"3172:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4293,"name":"bytes","nodeType":"ElementaryTypeName","src":"3172:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4296,"mutability":"mutable","name":"callback","nameLocation":"3213:8:14","nodeType":"VariableDeclaration","scope":4311,"src":"3200:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4295,"name":"bytes","nodeType":"ElementaryTypeName","src":"3200:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3140:88:14"},"returnParameters":{"id":4301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4311,"src":"3252:29:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$4032_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback"},"typeName":{"id":4299,"nodeType":"UserDefinedTypeName","pathNode":{"id":4298,"name":"StaticCallWithCallback","nameLocations":["3252:22:14"],"nodeType":"IdentifierPath","referencedDeclaration":4032,"src":"3252:22:14"},"referencedDeclaration":4032,"src":"3252:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$4032_storage_ptr","typeString":"struct CallLib.StaticCallWithCallback"}},"visibility":"internal"}],"src":"3251:31:14"},"scope":4333,"src":"3126:232:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4331,"nodeType":"Block","src":"3523:75:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":4325,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"3570:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4326,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"3574:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4324,"name":"build","nodeType":"Identifier","overloadedDeclarations":[4230,4249,4268,4290,4311,4332],"referencedDeclaration":4249,"src":"3564:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_struct$_StaticCall_$4019_memory_ptr_$","typeString":"function (address,bytes memory) pure returns (struct CallLib.StaticCall memory)"}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3564:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StaticCall_$4019_memory_ptr","typeString":"struct CallLib.StaticCall memory"}},{"id":4328,"name":"callback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"3581:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_StaticCall_$4019_memory_ptr","typeString":"struct CallLib.StaticCall memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4323,"name":"StaticCallWithCallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"3541:22:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StaticCallWithCallback_$4032_storage_ptr_$","typeString":"type(struct CallLib.StaticCallWithCallback storage pointer)"}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$4032_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback memory"}},"functionReturnParameters":4322,"id":4330,"nodeType":"Return","src":"3534:56:14"}]},"id":4332,"implemented":true,"kind":"function","modifiers":[],"name":"build","nameLocation":"3375:5:14","nodeType":"FunctionDefinition","parameters":{"id":4318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4313,"mutability":"mutable","name":"to","nameLocation":"3399:2:14","nodeType":"VariableDeclaration","scope":4332,"src":"3391:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4312,"name":"address","nodeType":"ElementaryTypeName","src":"3391:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4315,"mutability":"mutable","name":"data","nameLocation":"3425:4:14","nodeType":"VariableDeclaration","scope":4332,"src":"3412:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4314,"name":"bytes","nodeType":"ElementaryTypeName","src":"3412:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4317,"mutability":"mutable","name":"callback","nameLocation":"3453:8:14","nodeType":"VariableDeclaration","scope":4332,"src":"3440:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4316,"name":"bytes","nodeType":"ElementaryTypeName","src":"3440:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3380:88:14"},"returnParameters":{"id":4322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4332,"src":"3492:29:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$4032_memory_ptr","typeString":"struct CallLib.StaticCallWithCallback"},"typeName":{"id":4320,"nodeType":"UserDefinedTypeName","pathNode":{"id":4319,"name":"StaticCallWithCallback","nameLocations":["3492:22:14"],"nodeType":"IdentifierPath","referencedDeclaration":4032,"src":"3492:22:14"},"referencedDeclaration":4032,"src":"3492:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_StaticCallWithCallback_$4032_storage_ptr","typeString":"struct CallLib.StaticCallWithCallback"}},"visibility":"internal"}],"src":"3491:31:14"},"scope":4333,"src":"3366:232:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4334,"src":"184:3417:14","usedErrors":[]}],"src":"40:3561:14"},"id":14},"contracts/precompiles/libs/TypeCasts.sol":{"ast":{"absolutePath":"contracts/precompiles/libs/TypeCasts.sol","exportedSymbols":{"TypeCasts":[4374]},"id":4375,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":4335,"literals":["solidity",">=","0.6",".11"],"nodeType":"PragmaDirective","src":"47:25:15"},{"abstract":false,"baseContracts":[],"canonicalName":"TypeCasts","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":4374,"linearizedBaseContracts":[4374],"name":"TypeCasts","nameLocation":"84:9:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":4353,"nodeType":"Block","src":"208:58:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4348,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"250:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"242:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4346,"name":"uint160","nodeType":"ElementaryTypeName","src":"242:7:15","typeDescriptions":{}}},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"242:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"234:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4344,"name":"uint256","nodeType":"ElementaryTypeName","src":"234:7:15","typeDescriptions":{}}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"234:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"226:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"226:7:15","typeDescriptions":{}}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"226:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4341,"id":4352,"nodeType":"Return","src":"219:39:15"}]},"id":4354,"implemented":true,"kind":"function","modifiers":[],"name":"addressToBytes32","nameLocation":"144:16:15","nodeType":"FunctionDefinition","parameters":{"id":4338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4337,"mutability":"mutable","name":"_addr","nameLocation":"169:5:15","nodeType":"VariableDeclaration","scope":4354,"src":"161:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4336,"name":"address","nodeType":"ElementaryTypeName","src":"161:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"160:15:15"},"returnParameters":{"id":4341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4354,"src":"199:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4339,"name":"bytes32","nodeType":"ElementaryTypeName","src":"199:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"198:9:15"},"scope":4374,"src":"135:131:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4372,"nodeType":"Block","src":"380:57:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4367,"name":"_buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"422:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"414:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4365,"name":"uint256","nodeType":"ElementaryTypeName","src":"414:7:15","typeDescriptions":{}}},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"414:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"406:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4363,"name":"uint160","nodeType":"ElementaryTypeName","src":"406:7:15","typeDescriptions":{}}},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"406:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"398:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4361,"name":"address","nodeType":"ElementaryTypeName","src":"398:7:15","typeDescriptions":{}}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"398:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4360,"id":4371,"nodeType":"Return","src":"391:38:15"}]},"id":4373,"implemented":true,"kind":"function","modifiers":[],"name":"bytes32ToAddress","nameLocation":"317:16:15","nodeType":"FunctionDefinition","parameters":{"id":4357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4356,"mutability":"mutable","name":"_buf","nameLocation":"342:4:15","nodeType":"VariableDeclaration","scope":4373,"src":"334:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"334:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"333:14:15"},"returnParameters":{"id":4360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4373,"src":"371:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4358,"name":"address","nodeType":"ElementaryTypeName","src":"371:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"370:9:15"},"scope":4374,"src":"308:129:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4375,"src":"76:364:15","usedErrors":[]}],"src":"47:393:15"},"id":15}},"contracts":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_44":{"entryPoint":null,"id":44,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":376,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":502,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":99,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1067,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":332,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":193,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1160,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":646,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":146,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":109,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":796,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":952,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":995,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"423:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:16"},"nodeType":"YulFunctionCall","src":"433:12:16"},"nodeType":"YulExpressionStatement","src":"433:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:16"},{"body":{"nodeType":"YulBlock","src":"546:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:16"},"nodeType":"YulFunctionCall","src":"556:12:16"},"nodeType":"YulExpressionStatement","src":"556:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:16"},{"body":{"nodeType":"YulBlock","src":"628:54:16","statements":[{"nodeType":"YulAssignment","src":"638:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:16"},"nodeType":"YulFunctionCall","src":"652:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:16"},"nodeType":"YulFunctionCall","src":"668:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:16"},"nodeType":"YulFunctionCall","src":"648:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:16","type":""}],"src":"580:102:16"},{"body":{"nodeType":"YulBlock","src":"716:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:16"},"nodeType":"YulFunctionCall","src":"726:88:16"},"nodeType":"YulExpressionStatement","src":"726:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:16"},"nodeType":"YulFunctionCall","src":"823:15:16"},"nodeType":"YulExpressionStatement","src":"823:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:16"},"nodeType":"YulFunctionCall","src":"847:15:16"},"nodeType":"YulExpressionStatement","src":"847:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:16"},{"body":{"nodeType":"YulBlock","src":"917:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:16"},"nodeType":"YulFunctionCall","src":"957:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:16"},"nodeType":"YulFunctionCall","src":"945:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:16"},"nodeType":"YulFunctionCall","src":"1098:18:16"},"nodeType":"YulExpressionStatement","src":"1098:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:16"},"nodeType":"YulFunctionCall","src":"1036:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:16"},"nodeType":"YulFunctionCall","src":"1072:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:16"},"nodeType":"YulFunctionCall","src":"1033:62:16"},"nodeType":"YulIf","src":"1030:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:16"},"nodeType":"YulFunctionCall","src":"1127:22:16"},"nodeType":"YulExpressionStatement","src":"1127:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:16","type":""}],"src":"874:281:16"},{"body":{"nodeType":"YulBlock","src":"1202:88:16","statements":[{"nodeType":"YulAssignment","src":"1212:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:16"},"nodeType":"YulFunctionCall","src":"1222:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:16"},"nodeType":"YulFunctionCall","src":"1251:33:16"},"nodeType":"YulExpressionStatement","src":"1251:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:16","type":""}],"src":"1161:129:16"},{"body":{"nodeType":"YulBlock","src":"1363:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:16"},"nodeType":"YulFunctionCall","src":"1470:18:16"},"nodeType":"YulExpressionStatement","src":"1470:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:16"},"nodeType":"YulFunctionCall","src":"1437:30:16"},"nodeType":"YulIf","src":"1434:56:16"},{"nodeType":"YulAssignment","src":"1500:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:16"},"nodeType":"YulFunctionCall","src":"1508:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:16"}]},{"nodeType":"YulAssignment","src":"1574:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:16"},"nodeType":"YulFunctionCall","src":"1582:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:16"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:16","type":""}],"src":"1296:308:16"},{"body":{"nodeType":"YulBlock","src":"1672:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:16"},"nodeType":"YulFunctionCall","src":"1772:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:16"},"nodeType":"YulFunctionCall","src":"1791:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:16"},"nodeType":"YulFunctionCall","src":"1785:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:16"},"nodeType":"YulFunctionCall","src":"1765:39:16"},"nodeType":"YulExpressionStatement","src":"1765:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:16"},"nodeType":"YulFunctionCall","src":"1709:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:16","statements":[{"nodeType":"YulAssignment","src":"1725:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:16"},"nodeType":"YulFunctionCall","src":"1730:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:16","statements":[]},"src":"1701:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:16"},"nodeType":"YulFunctionCall","src":"1830:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:16"},"nodeType":"YulFunctionCall","src":"1823:27:16"},"nodeType":"YulExpressionStatement","src":"1823:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:16","type":""}],"src":"1610:246:16"},{"body":{"nodeType":"YulBlock","src":"1957:339:16","statements":[{"nodeType":"YulAssignment","src":"1967:75:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:16"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:16"},"nodeType":"YulFunctionCall","src":"1992:49:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:16"},"nodeType":"YulFunctionCall","src":"1976:66:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:16"},"nodeType":"YulFunctionCall","src":"2051:21:16"},"nodeType":"YulExpressionStatement","src":"2051:21:16"},{"nodeType":"YulVariableDeclaration","src":"2081:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:16"},"nodeType":"YulFunctionCall","src":"2092:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:16"},"nodeType":"YulFunctionCall","src":"2148:79:16"},"nodeType":"YulExpressionStatement","src":"2148:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:16"},"nodeType":"YulFunctionCall","src":"2123:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:16"},"nodeType":"YulFunctionCall","src":"2120:25:16"},"nodeType":"YulIf","src":"2117:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:16"},"nodeType":"YulFunctionCall","src":"2238:52:16"},"nodeType":"YulExpressionStatement","src":"2238:52:16"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:16","type":""}],"src":"1862:434:16"},{"body":{"nodeType":"YulBlock","src":"2389:282:16","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:16"},"nodeType":"YulFunctionCall","src":"2440:79:16"},"nodeType":"YulExpressionStatement","src":"2440:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:16"},"nodeType":"YulFunctionCall","src":"2413:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:16"},"nodeType":"YulFunctionCall","src":"2409:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:16"},"nodeType":"YulFunctionCall","src":"2402:35:16"},"nodeType":"YulIf","src":"2399:122:16"},{"nodeType":"YulVariableDeclaration","src":"2530:27:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:16"},"nodeType":"YulFunctionCall","src":"2544:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:16"},"nodeType":"YulFunctionCall","src":"2634:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:16"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:16"},"nodeType":"YulFunctionCall","src":"2575:90:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:16"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:16","type":""}],"src":"2316:355:16"},{"body":{"nodeType":"YulBlock","src":"2791:739:16","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:16"},"nodeType":"YulFunctionCall","src":"2839:79:16"},"nodeType":"YulExpressionStatement","src":"2839:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:16"},"nodeType":"YulFunctionCall","src":"2808:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:16"},"nodeType":"YulFunctionCall","src":"2804:32:16"},"nodeType":"YulIf","src":"2801:119:16"},{"nodeType":"YulBlock","src":"2930:291:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:16"},"nodeType":"YulFunctionCall","src":"2965:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:16"},"nodeType":"YulFunctionCall","src":"2959:24:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:16"},"nodeType":"YulFunctionCall","src":"3032:79:16"},"nodeType":"YulExpressionStatement","src":"3032:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:16"},"nodeType":"YulFunctionCall","src":"2999:30:16"},"nodeType":"YulIf","src":"2996:117:16"},{"nodeType":"YulAssignment","src":"3127:84:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:16"},"nodeType":"YulFunctionCall","src":"3179:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:16"},"nodeType":"YulFunctionCall","src":"3137:74:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:16"}]}]},{"nodeType":"YulBlock","src":"3231:292:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:16"},"nodeType":"YulFunctionCall","src":"3266:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:16"},"nodeType":"YulFunctionCall","src":"3260:25:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:16"},"nodeType":"YulFunctionCall","src":"3334:79:16"},"nodeType":"YulExpressionStatement","src":"3334:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:16"},"nodeType":"YulFunctionCall","src":"3301:30:16"},"nodeType":"YulIf","src":"3298:117:16"},{"nodeType":"YulAssignment","src":"3429:84:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:16"},"nodeType":"YulFunctionCall","src":"3481:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:16"},"nodeType":"YulFunctionCall","src":"3439:74:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:16"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:16","type":""}],"src":"2677:853:16"},{"body":{"nodeType":"YulBlock","src":"3595:40:16","statements":[{"nodeType":"YulAssignment","src":"3606:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:16"},"nodeType":"YulFunctionCall","src":"3616:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:16","type":""}],"src":"3536:99:16"},{"body":{"nodeType":"YulBlock","src":"3669:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:16"},"nodeType":"YulFunctionCall","src":"3679:88:16"},"nodeType":"YulExpressionStatement","src":"3679:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:16"},"nodeType":"YulFunctionCall","src":"3776:15:16"},"nodeType":"YulExpressionStatement","src":"3776:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:16"},"nodeType":"YulFunctionCall","src":"3800:15:16"},"nodeType":"YulExpressionStatement","src":"3800:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:16"},{"body":{"nodeType":"YulBlock","src":"3878:269:16","statements":[{"nodeType":"YulAssignment","src":"3888:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:16"},"nodeType":"YulFunctionCall","src":"3898:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:16"},"nodeType":"YulFunctionCall","src":"3945:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:16","statements":[{"nodeType":"YulAssignment","src":"4010:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:16"},"nodeType":"YulFunctionCall","src":"4020:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:16"},"nodeType":"YulFunctionCall","src":"3969:26:16"},"nodeType":"YulIf","src":"3966:81:16"},{"body":{"nodeType":"YulBlock","src":"4099:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:16"},"nodeType":"YulFunctionCall","src":"4113:18:16"},"nodeType":"YulExpressionStatement","src":"4113:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:16"},"nodeType":"YulFunctionCall","src":"4083:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:16"},"nodeType":"YulFunctionCall","src":"4060:38:16"},"nodeType":"YulIf","src":"4057:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:16","type":""}],"src":"3827:320:16"},{"body":{"nodeType":"YulBlock","src":"4207:87:16","statements":[{"nodeType":"YulAssignment","src":"4217:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:16"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:16"},"nodeType":"YulFunctionCall","src":"4238:14:16"},"nodeType":"YulExpressionStatement","src":"4238:14:16"},{"nodeType":"YulAssignment","src":"4261:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:16"},"nodeType":"YulFunctionCall","src":"4269:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:16"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:16","type":""}],"src":"4153:141:16"},{"body":{"nodeType":"YulBlock","src":"4344:49:16","statements":[{"nodeType":"YulAssignment","src":"4354:33:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:16"},"nodeType":"YulFunctionCall","src":"4368:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:16","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:16"},"nodeType":"YulFunctionCall","src":"4364:23:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:16"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:16","type":""}],"src":"4300:93:16"},{"body":{"nodeType":"YulBlock","src":"4452:54:16","statements":[{"nodeType":"YulAssignment","src":"4462:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:16"},"nodeType":"YulFunctionCall","src":"4483:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:16"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:16","type":""}],"src":"4399:107:16"},{"body":{"nodeType":"YulBlock","src":"4588:317:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:16","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:16","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:16"},"nodeType":"YulFunctionCall","src":"4615:18:16"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:16"},"nodeType":"YulFunctionCall","src":"4654:97:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:16","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:16"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:16"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:16"},"nodeType":"YulFunctionCall","src":"4772:39:16"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:16"}]},{"nodeType":"YulAssignment","src":"4820:30:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:16"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:16"},"nodeType":"YulFunctionCall","src":"4840:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:16"},"nodeType":"YulFunctionCall","src":"4829:21:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:16"}]},{"nodeType":"YulAssignment","src":"4859:40:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:16"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:16"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:16"},"nodeType":"YulFunctionCall","src":"4879:19:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:16"},"nodeType":"YulFunctionCall","src":"4869:30:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:16"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:16","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:16","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:16","type":""}],"src":"4512:393:16"},{"body":{"nodeType":"YulBlock","src":"4956:32:16","statements":[{"nodeType":"YulAssignment","src":"4966:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:16","type":""}],"src":"4911:77:16"},{"body":{"nodeType":"YulBlock","src":"5026:28:16","statements":[{"nodeType":"YulAssignment","src":"5036:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:16"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:16","type":""}],"src":"4994:60:16"},{"body":{"nodeType":"YulBlock","src":"5120:82:16","statements":[{"nodeType":"YulAssignment","src":"5130:66:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:16"},"nodeType":"YulFunctionCall","src":"5170:24:16"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:16"},"nodeType":"YulFunctionCall","src":"5161:34:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:16"},"nodeType":"YulFunctionCall","src":"5143:53:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:16"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:16","type":""}],"src":"5060:142:16"},{"body":{"nodeType":"YulBlock","src":"5255:28:16","statements":[{"nodeType":"YulAssignment","src":"5265:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:16"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:16","type":""}],"src":"5208:75:16"},{"body":{"nodeType":"YulBlock","src":"5365:193:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:16","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:16"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:16"},"nodeType":"YulFunctionCall","src":"5399:39:16"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:16"},"nodeType":"YulFunctionCall","src":"5488:11:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:16"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:16"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:16"},"nodeType":"YulFunctionCall","src":"5509:41:16"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:16"},"nodeType":"YulFunctionCall","src":"5460:91:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:16"},"nodeType":"YulFunctionCall","src":"5447:105:16"},"nodeType":"YulExpressionStatement","src":"5447:105:16"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:16","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:16","type":""}],"src":"5289:269:16"},{"body":{"nodeType":"YulBlock","src":"5613:24:16","statements":[{"nodeType":"YulAssignment","src":"5623:8:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:16","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:16"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:16","type":""}],"src":"5564:73:16"},{"body":{"nodeType":"YulBlock","src":"5696:136:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:16","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:16"},"nodeType":"YulFunctionCall","src":"5720:32:16"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:16"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:16"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:16"},"nodeType":"YulFunctionCall","src":"5761:65:16"},"nodeType":"YulExpressionStatement","src":"5761:65:16"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:16","type":""}],"src":"5643:189:16"},{"body":{"nodeType":"YulBlock","src":"5888:136:16","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:16","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:16"},"nodeType":"YulFunctionCall","src":"5969:39:16"},"nodeType":"YulExpressionStatement","src":"5969:39:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:16"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:16"},"nodeType":"YulFunctionCall","src":"5905:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:16","statements":[{"nodeType":"YulAssignment","src":"5922:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:16"},"nodeType":"YulFunctionCall","src":"5931:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:16","statements":[]},"src":"5898:120:16"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:16","type":""}],"src":"5838:186:16"},{"body":{"nodeType":"YulBlock","src":"6109:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:16"},"nodeType":"YulFunctionCall","src":"6165:38:16"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:16","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:16"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:16"},"nodeType":"YulFunctionCall","src":"6249:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:16"},"nodeType":"YulFunctionCall","src":"6235:44:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:16","statements":[{"nodeType":"YulAssignment","src":"6438:23:16","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:16"},"nodeType":"YulFunctionCall","src":"6417:18:16"},"nodeType":"YulIf","src":"6414:49:16"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:16"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:16"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:16"},"nodeType":"YulFunctionCall","src":"6532:22:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:16"},"nodeType":"YulFunctionCall","src":"6518:37:16"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:16"},"nodeType":"YulFunctionCall","src":"6476:80:16"},"nodeType":"YulExpressionStatement","src":"6476:80:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:16"},"nodeType":"YulFunctionCall","src":"6123:11:16"},"nodeType":"YulIf","src":"6120:446:16"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:16","type":""}],"src":"6030:543:16"},{"body":{"nodeType":"YulBlock","src":"6642:54:16","statements":[{"nodeType":"YulAssignment","src":"6652:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:16"},"nodeType":"YulFunctionCall","src":"6673:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:16"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:16","type":""}],"src":"6579:117:16"},{"body":{"nodeType":"YulBlock","src":"6753:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:16","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:16"},"nodeType":"YulFunctionCall","src":"6808:13:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:16"},"nodeType":"YulFunctionCall","src":"6823:6:16"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:16"},"nodeType":"YulFunctionCall","src":"6779:51:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:16"},"nodeType":"YulFunctionCall","src":"6775:56:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:16","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:16"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:16"},"nodeType":"YulFunctionCall","src":"6850:15:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:16"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:16","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:16","type":""}],"src":"6702:169:16"},{"body":{"nodeType":"YulBlock","src":"6957:214:16","statements":[{"nodeType":"YulAssignment","src":"7090:37:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:16"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:16"},"nodeType":"YulFunctionCall","src":"7098:29:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:16"}]},{"nodeType":"YulAssignment","src":"7136:29:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:16","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:16"},"nodeType":"YulFunctionCall","src":"7153:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:16"},"nodeType":"YulFunctionCall","src":"7144:21:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:16","type":""}],"src":"6876:295:16"},{"body":{"nodeType":"YulBlock","src":"7268:1303:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:16"},"nodeType":"YulFunctionCall","src":"7293:37:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:16"},"nodeType":"YulFunctionCall","src":"7417:18:16"},"nodeType":"YulExpressionStatement","src":"7417:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:16"},"nodeType":"YulFunctionCall","src":"7384:30:16"},"nodeType":"YulIf","src":"7381:56:16"},{"nodeType":"YulVariableDeclaration","src":"7447:52:16","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:16"},"nodeType":"YulFunctionCall","src":"7487:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:16"},"nodeType":"YulFunctionCall","src":"7461:38:16"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:16"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:16"},"nodeType":"YulFunctionCall","src":"7546:67:16"},"nodeType":"YulExpressionStatement","src":"7546:67:16"},{"nodeType":"YulVariableDeclaration","src":"7623:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:16","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:16","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:16","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:16"},"nodeType":"YulFunctionCall","src":"7756:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:16"},"nodeType":"YulFunctionCall","src":"7744:22:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:16"},"nodeType":"YulFunctionCall","src":"7794:37:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:16"},"nodeType":"YulFunctionCall","src":"7951:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:16"},"nodeType":"YulFunctionCall","src":"7945:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:16"},"nodeType":"YulFunctionCall","src":"7930:42:16"},"nodeType":"YulExpressionStatement","src":"7930:42:16"},{"nodeType":"YulAssignment","src":"7989:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:16"},"nodeType":"YulFunctionCall","src":"7999:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:16"}]},{"nodeType":"YulAssignment","src":"8030:31:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:16"},"nodeType":"YulFunctionCall","src":"8043:18:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:16"},"nodeType":"YulFunctionCall","src":"7875:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:16","statements":[{"nodeType":"YulAssignment","src":"7892:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:16"},"nodeType":"YulFunctionCall","src":"7897:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:16","statements":[]},"src":"7867:208:16"},{"body":{"nodeType":"YulBlock","src":"8111:156:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:16"},"nodeType":"YulFunctionCall","src":"8152:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:16"},"nodeType":"YulFunctionCall","src":"8146:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:16"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:16","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:16"},"nodeType":"YulFunctionCall","src":"8234:17:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:16"},"nodeType":"YulFunctionCall","src":"8204:48:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:16"},"nodeType":"YulFunctionCall","src":"8189:64:16"},"nodeType":"YulExpressionStatement","src":"8189:64:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:16"},"nodeType":"YulFunctionCall","src":"8091:19:16"},"nodeType":"YulIf","src":"8088:179:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:16"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:16","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:16"},"nodeType":"YulFunctionCall","src":"8297:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:16"},"nodeType":"YulFunctionCall","src":"8293:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:16"},"nodeType":"YulFunctionCall","src":"8280:36:16"},"nodeType":"YulExpressionStatement","src":"8280:36:16"}]},"nodeType":"YulCase","src":"7708:618:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:16","statements":[{"nodeType":"YulAssignment","src":"8412:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:16"},"nodeType":"YulFunctionCall","src":"8427:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:16"},"nodeType":"YulFunctionCall","src":"8421:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:16"},"nodeType":"YulIf","src":"8384:77:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:16"},"nodeType":"YulFunctionCall","src":"8487:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:16"},"nodeType":"YulFunctionCall","src":"8474:81:16"},"nodeType":"YulExpressionStatement","src":"8474:81:16"}]},"nodeType":"YulCase","src":"8335:230:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:16"},"nodeType":"YulFunctionCall","src":"7685:14:16"},"nodeType":"YulSwitch","src":"7678:887:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:16","type":""}],"src":"7176:1395:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620017ec380380620017ec8339818101604052810190620000379190620001f6565b8160039081620000489190620004c6565b5080600490816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61122f80620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea2646970667358221220183d5a0e2248a04947293bb80feb25e4832139060ff57231762d688e3687bc0064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17EC CODESIZE SUB DUP1 PUSH3 0x17EC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x122F DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR RETURNDATASIZE GAS 0xE 0x22 BASEFEE LOG0 0x49 SELFBALANCE 0x29 EXTCODESIZE 0xB8 0xF 0xEB 0x25 0xE4 DUP4 0x21 CODECOPY MOD 0xF CREATE2 PUSH19 0x31762D688E3687BC0064736F6C634300081100 CALLER ","sourceMap":"1532:11312:0:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2054:5;2046;:13;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;:::i;:::-;;1980:113;;1532:11312;;7:75:16;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1532:11312:0:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_585":{"entryPoint":2679,"id":585,"parameterSlots":3,"returnSlots":0},"@_approve_520":{"entryPoint":1447,"id":520,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_574":{"entryPoint":2674,"id":574,"parameterSlots":3,"returnSlots":0},"@_msgSender_1031":{"entryPoint":1439,"id":1031,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_563":{"entryPoint":1904,"id":563,"parameterSlots":3,"returnSlots":0},"@_transfer_346":{"entryPoint":2044,"id":346,"parameterSlots":3,"returnSlots":0},"@allowance_141":{"entryPoint":1304,"id":141,"parameterSlots":2,"returnSlots":1},"@approve_166":{"entryPoint":776,"id":166,"parameterSlots":2,"returnSlots":1},"@balanceOf_98":{"entryPoint":932,"id":98,"parameterSlots":1,"returnSlots":1},"@decimals_74":{"entryPoint":868,"id":74,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_269":{"entryPoint":1150,"id":269,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_228":{"entryPoint":877,"id":228,"parameterSlots":2,"returnSlots":1},"@name_54":{"entryPoint":630,"id":54,"parameterSlots":0,"returnSlots":1},"@symbol_64":{"entryPoint":1004,"id":64,"parameterSlots":0,"returnSlots":1},"@totalSupply_84":{"entryPoint":811,"id":84,"parameterSlots":0,"returnSlots":1},"@transferFrom_199":{"entryPoint":821,"id":199,"parameterSlots":3,"returnSlots":1},"@transfer_123":{"entryPoint":1269,"id":123,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3358,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3175,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3015,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3091,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4096,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4534,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3271,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2828,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4569,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4277,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3286,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2684,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2695,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3565,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2899,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3079,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2867,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2961,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3258,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2712,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3469,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3518,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3422,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2862,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2754,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4309,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3909,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4055,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4455,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4163,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3763,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3617,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2917,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2971,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13699:16","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:16","statements":[{"nodeType":"YulAssignment","src":"77:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:16"},"nodeType":"YulFunctionCall","src":"87:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:16","type":""}],"src":"7:99:16"},{"body":{"nodeType":"YulBlock","src":"208:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:16"},"nodeType":"YulFunctionCall","src":"218:19:16"},"nodeType":"YulExpressionStatement","src":"218:19:16"},{"nodeType":"YulAssignment","src":"246:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:16"},"nodeType":"YulFunctionCall","src":"261:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:16","type":""}],"src":"112:169:16"},{"body":{"nodeType":"YulBlock","src":"349:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:16"},"nodeType":"YulFunctionCall","src":"449:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:16"},"nodeType":"YulFunctionCall","src":"468:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:16"},"nodeType":"YulFunctionCall","src":"462:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:16"},"nodeType":"YulFunctionCall","src":"442:39:16"},"nodeType":"YulExpressionStatement","src":"442:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:16"},"nodeType":"YulFunctionCall","src":"386:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:16","statements":[{"nodeType":"YulAssignment","src":"402:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:16"},"nodeType":"YulFunctionCall","src":"407:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:16","statements":[]},"src":"378:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:16"},"nodeType":"YulFunctionCall","src":"507:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:16"},"nodeType":"YulFunctionCall","src":"500:27:16"},"nodeType":"YulExpressionStatement","src":"500:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:16","type":""}],"src":"287:246:16"},{"body":{"nodeType":"YulBlock","src":"587:54:16","statements":[{"nodeType":"YulAssignment","src":"597:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:16"},"nodeType":"YulFunctionCall","src":"611:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:16"},"nodeType":"YulFunctionCall","src":"627:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:16"},"nodeType":"YulFunctionCall","src":"607:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:16","type":""}],"src":"539:102:16"},{"body":{"nodeType":"YulBlock","src":"739:285:16","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:16"},"nodeType":"YulFunctionCall","src":"763:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:16","type":""}]},{"nodeType":"YulAssignment","src":"811:78:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:16"},"nodeType":"YulFunctionCall","src":"818:71:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:16"},"nodeType":"YulFunctionCall","src":"933:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:16"},"nodeType":"YulFunctionCall","src":"898:65:16"},"nodeType":"YulExpressionStatement","src":"898:65:16"},{"nodeType":"YulAssignment","src":"972:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:16"},"nodeType":"YulFunctionCall","src":"988:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:16"},"nodeType":"YulFunctionCall","src":"979:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:16","type":""}],"src":"647:377:16"},{"body":{"nodeType":"YulBlock","src":"1148:195:16","statements":[{"nodeType":"YulAssignment","src":"1158:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:16"},"nodeType":"YulFunctionCall","src":"1166:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:16"},"nodeType":"YulFunctionCall","src":"1201:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:16"},"nodeType":"YulFunctionCall","src":"1220:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:16"},"nodeType":"YulFunctionCall","src":"1194:47:16"},"nodeType":"YulExpressionStatement","src":"1194:47:16"},{"nodeType":"YulAssignment","src":"1250:86:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:16"},"nodeType":"YulFunctionCall","src":"1258:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:16","type":""}],"src":"1030:313:16"},{"body":{"nodeType":"YulBlock","src":"1389:35:16","statements":[{"nodeType":"YulAssignment","src":"1399:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:16"},"nodeType":"YulFunctionCall","src":"1409:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:16","type":""}],"src":"1349:75:16"},{"body":{"nodeType":"YulBlock","src":"1519:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:16"},"nodeType":"YulFunctionCall","src":"1529:12:16"},"nodeType":"YulExpressionStatement","src":"1529:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:16"},{"body":{"nodeType":"YulBlock","src":"1642:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:16"},"nodeType":"YulFunctionCall","src":"1652:12:16"},"nodeType":"YulExpressionStatement","src":"1652:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:16"},{"body":{"nodeType":"YulBlock","src":"1721:81:16","statements":[{"nodeType":"YulAssignment","src":"1731:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:16"},"nodeType":"YulFunctionCall","src":"1742:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:16","type":""}],"src":"1676:126:16"},{"body":{"nodeType":"YulBlock","src":"1853:51:16","statements":[{"nodeType":"YulAssignment","src":"1863:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:16"},"nodeType":"YulFunctionCall","src":"1874:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:16","type":""}],"src":"1808:96:16"},{"body":{"nodeType":"YulBlock","src":"1953:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:16"},"nodeType":"YulFunctionCall","src":"2012:12:16"},"nodeType":"YulExpressionStatement","src":"2012:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:16"},"nodeType":"YulFunctionCall","src":"1983:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:16"},"nodeType":"YulFunctionCall","src":"1973:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:16"},"nodeType":"YulFunctionCall","src":"1966:43:16"},"nodeType":"YulIf","src":"1963:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:16","type":""}],"src":"1910:122:16"},{"body":{"nodeType":"YulBlock","src":"2090:87:16","statements":[{"nodeType":"YulAssignment","src":"2100:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:16"},"nodeType":"YulFunctionCall","src":"2109:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:16"},"nodeType":"YulFunctionCall","src":"2138:33:16"},"nodeType":"YulExpressionStatement","src":"2138:33:16"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:16","type":""}],"src":"2038:139:16"},{"body":{"nodeType":"YulBlock","src":"2228:32:16","statements":[{"nodeType":"YulAssignment","src":"2238:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:16","type":""}],"src":"2183:77:16"},{"body":{"nodeType":"YulBlock","src":"2309:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:16"},"nodeType":"YulFunctionCall","src":"2368:12:16"},"nodeType":"YulExpressionStatement","src":"2368:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:16"},"nodeType":"YulFunctionCall","src":"2339:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:16"},"nodeType":"YulFunctionCall","src":"2329:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:16"},"nodeType":"YulFunctionCall","src":"2322:43:16"},"nodeType":"YulIf","src":"2319:63:16"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:16","type":""}],"src":"2266:122:16"},{"body":{"nodeType":"YulBlock","src":"2446:87:16","statements":[{"nodeType":"YulAssignment","src":"2456:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:16"},"nodeType":"YulFunctionCall","src":"2465:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:16"},"nodeType":"YulFunctionCall","src":"2494:33:16"},"nodeType":"YulExpressionStatement","src":"2494:33:16"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:16","type":""}],"src":"2394:139:16"},{"body":{"nodeType":"YulBlock","src":"2622:391:16","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:16"},"nodeType":"YulFunctionCall","src":"2670:79:16"},"nodeType":"YulExpressionStatement","src":"2670:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:16"},"nodeType":"YulFunctionCall","src":"2639:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:16"},"nodeType":"YulFunctionCall","src":"2635:32:16"},"nodeType":"YulIf","src":"2632:119:16"},{"nodeType":"YulBlock","src":"2761:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:16"},"nodeType":"YulFunctionCall","src":"2836:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:16"},"nodeType":"YulFunctionCall","src":"2815:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:16"}]}]},{"nodeType":"YulBlock","src":"2888:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:16"},"nodeType":"YulFunctionCall","src":"2964:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:16"},"nodeType":"YulFunctionCall","src":"2943:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:16","type":""}],"src":"2539:474:16"},{"body":{"nodeType":"YulBlock","src":"3061:48:16","statements":[{"nodeType":"YulAssignment","src":"3071:32:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:16"},"nodeType":"YulFunctionCall","src":"3089:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:16"},"nodeType":"YulFunctionCall","src":"3082:21:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:16"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:16","type":""}],"src":"3019:90:16"},{"body":{"nodeType":"YulBlock","src":"3174:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:16"},"nodeType":"YulFunctionCall","src":"3196:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:16"},"nodeType":"YulFunctionCall","src":"3184:34:16"},"nodeType":"YulExpressionStatement","src":"3184:34:16"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:16","type":""}],"src":"3115:109:16"},{"body":{"nodeType":"YulBlock","src":"3322:118:16","statements":[{"nodeType":"YulAssignment","src":"3332:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:16"},"nodeType":"YulFunctionCall","src":"3340:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:16"},"nodeType":"YulFunctionCall","src":"3415:17:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:16"},"nodeType":"YulFunctionCall","src":"3368:65:16"},"nodeType":"YulExpressionStatement","src":"3368:65:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:16","type":""}],"src":"3230:210:16"},{"body":{"nodeType":"YulBlock","src":"3511:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:16"},"nodeType":"YulFunctionCall","src":"3533:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:16"},"nodeType":"YulFunctionCall","src":"3521:37:16"},"nodeType":"YulExpressionStatement","src":"3521:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:16","type":""}],"src":"3446:118:16"},{"body":{"nodeType":"YulBlock","src":"3668:124:16","statements":[{"nodeType":"YulAssignment","src":"3678:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:16"},"nodeType":"YulFunctionCall","src":"3686:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:16"},"nodeType":"YulFunctionCall","src":"3767:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:16"},"nodeType":"YulFunctionCall","src":"3714:71:16"},"nodeType":"YulExpressionStatement","src":"3714:71:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:16","type":""}],"src":"3570:222:16"},{"body":{"nodeType":"YulBlock","src":"3898:519:16","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:16"},"nodeType":"YulFunctionCall","src":"3946:79:16"},"nodeType":"YulExpressionStatement","src":"3946:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:16"},"nodeType":"YulFunctionCall","src":"3915:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:16"},"nodeType":"YulFunctionCall","src":"3911:32:16"},"nodeType":"YulIf","src":"3908:119:16"},{"nodeType":"YulBlock","src":"4037:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:16"},"nodeType":"YulFunctionCall","src":"4112:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:16"},"nodeType":"YulFunctionCall","src":"4091:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:16"}]}]},{"nodeType":"YulBlock","src":"4164:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:16"},"nodeType":"YulFunctionCall","src":"4240:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:16"},"nodeType":"YulFunctionCall","src":"4219:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:16"}]}]},{"nodeType":"YulBlock","src":"4292:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:16"},"nodeType":"YulFunctionCall","src":"4368:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:16"},"nodeType":"YulFunctionCall","src":"4347:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:16","type":""}],"src":"3798:619:16"},{"body":{"nodeType":"YulBlock","src":"4466:43:16","statements":[{"nodeType":"YulAssignment","src":"4476:27:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:16"},"nodeType":"YulFunctionCall","src":"4487:16:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:16"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:16","type":""}],"src":"4423:86:16"},{"body":{"nodeType":"YulBlock","src":"4576:51:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:16"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:16"},"nodeType":"YulFunctionCall","src":"4598:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:16"},"nodeType":"YulFunctionCall","src":"4586:35:16"},"nodeType":"YulExpressionStatement","src":"4586:35:16"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:16","type":""}],"src":"4515:112:16"},{"body":{"nodeType":"YulBlock","src":"4727:120:16","statements":[{"nodeType":"YulAssignment","src":"4737:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:16"},"nodeType":"YulFunctionCall","src":"4745:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:16"},"nodeType":"YulFunctionCall","src":"4822:17:16"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:16"},"nodeType":"YulFunctionCall","src":"4773:67:16"},"nodeType":"YulExpressionStatement","src":"4773:67:16"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:16","type":""}],"src":"4633:214:16"},{"body":{"nodeType":"YulBlock","src":"4919:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:16"},"nodeType":"YulFunctionCall","src":"4967:79:16"},"nodeType":"YulExpressionStatement","src":"4967:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:16"},"nodeType":"YulFunctionCall","src":"4936:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:16"},"nodeType":"YulFunctionCall","src":"4932:32:16"},"nodeType":"YulIf","src":"4929:119:16"},{"nodeType":"YulBlock","src":"5058:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:16"},"nodeType":"YulFunctionCall","src":"5133:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:16"},"nodeType":"YulFunctionCall","src":"5112:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:16"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:16","type":""}],"src":"4853:329:16"},{"body":{"nodeType":"YulBlock","src":"5271:391:16","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:16"},"nodeType":"YulFunctionCall","src":"5319:79:16"},"nodeType":"YulExpressionStatement","src":"5319:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:16"},"nodeType":"YulFunctionCall","src":"5288:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:16"},"nodeType":"YulFunctionCall","src":"5284:32:16"},"nodeType":"YulIf","src":"5281:119:16"},{"nodeType":"YulBlock","src":"5410:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:16"},"nodeType":"YulFunctionCall","src":"5485:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:16"},"nodeType":"YulFunctionCall","src":"5464:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:16"}]}]},{"nodeType":"YulBlock","src":"5537:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:16"},"nodeType":"YulFunctionCall","src":"5613:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:16"},"nodeType":"YulFunctionCall","src":"5592:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:16","type":""}],"src":"5188:474:16"},{"body":{"nodeType":"YulBlock","src":"5696:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:16"},"nodeType":"YulFunctionCall","src":"5706:88:16"},"nodeType":"YulExpressionStatement","src":"5706:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:16"},"nodeType":"YulFunctionCall","src":"5803:15:16"},"nodeType":"YulExpressionStatement","src":"5803:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:16"},"nodeType":"YulFunctionCall","src":"5827:15:16"},"nodeType":"YulExpressionStatement","src":"5827:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:16"},{"body":{"nodeType":"YulBlock","src":"5905:269:16","statements":[{"nodeType":"YulAssignment","src":"5915:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:16"},"nodeType":"YulFunctionCall","src":"5925:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:16"},"nodeType":"YulFunctionCall","src":"5972:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:16","statements":[{"nodeType":"YulAssignment","src":"6037:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:16"},"nodeType":"YulFunctionCall","src":"6047:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:16"},"nodeType":"YulFunctionCall","src":"5996:26:16"},"nodeType":"YulIf","src":"5993:81:16"},{"body":{"nodeType":"YulBlock","src":"6126:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:16"},"nodeType":"YulFunctionCall","src":"6140:18:16"},"nodeType":"YulExpressionStatement","src":"6140:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:16"},"nodeType":"YulFunctionCall","src":"6110:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:16"},"nodeType":"YulFunctionCall","src":"6087:38:16"},"nodeType":"YulIf","src":"6084:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:16","type":""}],"src":"5854:320:16"},{"body":{"nodeType":"YulBlock","src":"6208:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:16"},"nodeType":"YulFunctionCall","src":"6218:88:16"},"nodeType":"YulExpressionStatement","src":"6218:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:16"},"nodeType":"YulFunctionCall","src":"6315:15:16"},"nodeType":"YulExpressionStatement","src":"6315:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:16"},"nodeType":"YulFunctionCall","src":"6339:15:16"},"nodeType":"YulExpressionStatement","src":"6339:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:16"},{"body":{"nodeType":"YulBlock","src":"6410:147:16","statements":[{"nodeType":"YulAssignment","src":"6420:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:16"},"nodeType":"YulFunctionCall","src":"6425:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:16"}]},{"nodeType":"YulAssignment","src":"6454:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:16"},"nodeType":"YulFunctionCall","src":"6459:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:16"}]},{"nodeType":"YulAssignment","src":"6488:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:16"},"nodeType":"YulFunctionCall","src":"6495:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:16"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:16"},"nodeType":"YulFunctionCall","src":"6530:18:16"},"nodeType":"YulExpressionStatement","src":"6530:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:16"},"nodeType":"YulFunctionCall","src":"6517:10:16"},"nodeType":"YulIf","src":"6514:36:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:16","type":""}],"src":"6366:191:16"},{"body":{"nodeType":"YulBlock","src":"6669:118:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:16"},"nodeType":"YulFunctionCall","src":"6687:14:16"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:16","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:16"},"nodeType":"YulFunctionCall","src":"6680:58:16"},"nodeType":"YulExpressionStatement","src":"6680:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:16"},"nodeType":"YulFunctionCall","src":"6755:15:16"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:16","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:16"},"nodeType":"YulFunctionCall","src":"6748:32:16"},"nodeType":"YulExpressionStatement","src":"6748:32:16"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:16","type":""}],"src":"6563:224:16"},{"body":{"nodeType":"YulBlock","src":"6939:220:16","statements":[{"nodeType":"YulAssignment","src":"6949:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:16","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:16"},"nodeType":"YulFunctionCall","src":"6956:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:16"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:16"},"nodeType":"YulFunctionCall","src":"7032:93:16"},"nodeType":"YulExpressionStatement","src":"7032:93:16"},{"nodeType":"YulAssignment","src":"7134:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:16"},"nodeType":"YulFunctionCall","src":"7141:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:16"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:16","type":""}],"src":"6793:366:16"},{"body":{"nodeType":"YulBlock","src":"7336:248:16","statements":[{"nodeType":"YulAssignment","src":"7346:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:16"},"nodeType":"YulFunctionCall","src":"7354:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:16"},"nodeType":"YulFunctionCall","src":"7389:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:16"},"nodeType":"YulFunctionCall","src":"7408:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:16"},"nodeType":"YulFunctionCall","src":"7382:47:16"},"nodeType":"YulExpressionStatement","src":"7382:47:16"},{"nodeType":"YulAssignment","src":"7438:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:16"},"nodeType":"YulFunctionCall","src":"7446:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:16","type":""}],"src":"7165:419:16"},{"body":{"nodeType":"YulBlock","src":"7696:117:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:16"},"nodeType":"YulFunctionCall","src":"7714:14:16"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:16","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:16"},"nodeType":"YulFunctionCall","src":"7707:58:16"},"nodeType":"YulExpressionStatement","src":"7707:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:16"},"nodeType":"YulFunctionCall","src":"7782:15:16"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:16","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:16"},"nodeType":"YulFunctionCall","src":"7775:31:16"},"nodeType":"YulExpressionStatement","src":"7775:31:16"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:16","type":""}],"src":"7590:223:16"},{"body":{"nodeType":"YulBlock","src":"7965:220:16","statements":[{"nodeType":"YulAssignment","src":"7975:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:16","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:16"},"nodeType":"YulFunctionCall","src":"7982:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:16"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:16"},"nodeType":"YulFunctionCall","src":"8058:93:16"},"nodeType":"YulExpressionStatement","src":"8058:93:16"},{"nodeType":"YulAssignment","src":"8160:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:16"},"nodeType":"YulFunctionCall","src":"8167:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:16"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:16","type":""}],"src":"7819:366:16"},{"body":{"nodeType":"YulBlock","src":"8362:248:16","statements":[{"nodeType":"YulAssignment","src":"8372:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:16"},"nodeType":"YulFunctionCall","src":"8380:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:16"},"nodeType":"YulFunctionCall","src":"8415:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:16"},"nodeType":"YulFunctionCall","src":"8434:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:16"},"nodeType":"YulFunctionCall","src":"8408:47:16"},"nodeType":"YulExpressionStatement","src":"8408:47:16"},{"nodeType":"YulAssignment","src":"8464:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:16"},"nodeType":"YulFunctionCall","src":"8472:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:16","type":""}],"src":"8191:419:16"},{"body":{"nodeType":"YulBlock","src":"8722:115:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:16"},"nodeType":"YulFunctionCall","src":"8740:14:16"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:16","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:16"},"nodeType":"YulFunctionCall","src":"8733:58:16"},"nodeType":"YulExpressionStatement","src":"8733:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:16"},"nodeType":"YulFunctionCall","src":"8808:15:16"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:16","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:16"},"nodeType":"YulFunctionCall","src":"8801:29:16"},"nodeType":"YulExpressionStatement","src":"8801:29:16"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:16","type":""}],"src":"8616:221:16"},{"body":{"nodeType":"YulBlock","src":"8989:220:16","statements":[{"nodeType":"YulAssignment","src":"8999:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:16","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:16"},"nodeType":"YulFunctionCall","src":"9006:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:16"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:16"},"nodeType":"YulFunctionCall","src":"9082:93:16"},"nodeType":"YulExpressionStatement","src":"9082:93:16"},{"nodeType":"YulAssignment","src":"9184:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:16"},"nodeType":"YulFunctionCall","src":"9191:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:16"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:16","type":""}],"src":"8843:366:16"},{"body":{"nodeType":"YulBlock","src":"9386:248:16","statements":[{"nodeType":"YulAssignment","src":"9396:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:16"},"nodeType":"YulFunctionCall","src":"9404:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:16"},"nodeType":"YulFunctionCall","src":"9439:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:16"},"nodeType":"YulFunctionCall","src":"9458:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:16"},"nodeType":"YulFunctionCall","src":"9432:47:16"},"nodeType":"YulExpressionStatement","src":"9432:47:16"},{"nodeType":"YulAssignment","src":"9488:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:16"},"nodeType":"YulFunctionCall","src":"9496:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:16","type":""}],"src":"9215:419:16"},{"body":{"nodeType":"YulBlock","src":"9746:73:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:16"},"nodeType":"YulFunctionCall","src":"9764:14:16"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:16","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:16"},"nodeType":"YulFunctionCall","src":"9757:55:16"},"nodeType":"YulExpressionStatement","src":"9757:55:16"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:16","type":""}],"src":"9640:179:16"},{"body":{"nodeType":"YulBlock","src":"9971:220:16","statements":[{"nodeType":"YulAssignment","src":"9981:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:16","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:16"},"nodeType":"YulFunctionCall","src":"9988:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:16"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:16"},"nodeType":"YulFunctionCall","src":"10064:93:16"},"nodeType":"YulExpressionStatement","src":"10064:93:16"},{"nodeType":"YulAssignment","src":"10166:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:16"},"nodeType":"YulFunctionCall","src":"10173:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:16"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:16","type":""}],"src":"9825:366:16"},{"body":{"nodeType":"YulBlock","src":"10368:248:16","statements":[{"nodeType":"YulAssignment","src":"10378:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:16"},"nodeType":"YulFunctionCall","src":"10386:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:16"},"nodeType":"YulFunctionCall","src":"10421:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:16"},"nodeType":"YulFunctionCall","src":"10440:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:16"},"nodeType":"YulFunctionCall","src":"10414:47:16"},"nodeType":"YulExpressionStatement","src":"10414:47:16"},{"nodeType":"YulAssignment","src":"10470:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:16"},"nodeType":"YulFunctionCall","src":"10478:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:16","type":""}],"src":"10197:419:16"},{"body":{"nodeType":"YulBlock","src":"10728:118:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:16"},"nodeType":"YulFunctionCall","src":"10746:14:16"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:16","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:16"},"nodeType":"YulFunctionCall","src":"10739:58:16"},"nodeType":"YulExpressionStatement","src":"10739:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:16"},"nodeType":"YulFunctionCall","src":"10814:15:16"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:16","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:16"},"nodeType":"YulFunctionCall","src":"10807:32:16"},"nodeType":"YulExpressionStatement","src":"10807:32:16"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:16","type":""}],"src":"10622:224:16"},{"body":{"nodeType":"YulBlock","src":"10998:220:16","statements":[{"nodeType":"YulAssignment","src":"11008:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:16","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:16"},"nodeType":"YulFunctionCall","src":"11015:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:16"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:16"},"nodeType":"YulFunctionCall","src":"11091:93:16"},"nodeType":"YulExpressionStatement","src":"11091:93:16"},{"nodeType":"YulAssignment","src":"11193:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:16"},"nodeType":"YulFunctionCall","src":"11200:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:16"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:16","type":""}],"src":"10852:366:16"},{"body":{"nodeType":"YulBlock","src":"11395:248:16","statements":[{"nodeType":"YulAssignment","src":"11405:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:16"},"nodeType":"YulFunctionCall","src":"11413:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:16"},"nodeType":"YulFunctionCall","src":"11448:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:16"},"nodeType":"YulFunctionCall","src":"11467:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:16"},"nodeType":"YulFunctionCall","src":"11441:47:16"},"nodeType":"YulExpressionStatement","src":"11441:47:16"},{"nodeType":"YulAssignment","src":"11497:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:16"},"nodeType":"YulFunctionCall","src":"11505:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:16","type":""}],"src":"11224:419:16"},{"body":{"nodeType":"YulBlock","src":"11755:116:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:16"},"nodeType":"YulFunctionCall","src":"11773:14:16"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:16","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:16"},"nodeType":"YulFunctionCall","src":"11766:58:16"},"nodeType":"YulExpressionStatement","src":"11766:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:16"},"nodeType":"YulFunctionCall","src":"11841:15:16"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:16","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:16"},"nodeType":"YulFunctionCall","src":"11834:30:16"},"nodeType":"YulExpressionStatement","src":"11834:30:16"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:16","type":""}],"src":"11649:222:16"},{"body":{"nodeType":"YulBlock","src":"12023:220:16","statements":[{"nodeType":"YulAssignment","src":"12033:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:16","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:16"},"nodeType":"YulFunctionCall","src":"12040:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:16"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:16"},"nodeType":"YulFunctionCall","src":"12116:93:16"},"nodeType":"YulExpressionStatement","src":"12116:93:16"},{"nodeType":"YulAssignment","src":"12218:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:16"},"nodeType":"YulFunctionCall","src":"12225:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:16"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:16","type":""}],"src":"11877:366:16"},{"body":{"nodeType":"YulBlock","src":"12420:248:16","statements":[{"nodeType":"YulAssignment","src":"12430:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:16"},"nodeType":"YulFunctionCall","src":"12438:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:16"},"nodeType":"YulFunctionCall","src":"12473:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:16"},"nodeType":"YulFunctionCall","src":"12492:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:16"},"nodeType":"YulFunctionCall","src":"12466:47:16"},"nodeType":"YulExpressionStatement","src":"12466:47:16"},{"nodeType":"YulAssignment","src":"12522:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:16"},"nodeType":"YulFunctionCall","src":"12530:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:16","type":""}],"src":"12249:419:16"},{"body":{"nodeType":"YulBlock","src":"12780:119:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:16"},"nodeType":"YulFunctionCall","src":"12798:14:16"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:16","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:16"},"nodeType":"YulFunctionCall","src":"12791:58:16"},"nodeType":"YulExpressionStatement","src":"12791:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:16"},"nodeType":"YulFunctionCall","src":"12866:15:16"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:16","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:16"},"nodeType":"YulFunctionCall","src":"12859:33:16"},"nodeType":"YulExpressionStatement","src":"12859:33:16"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:16","type":""}],"src":"12674:225:16"},{"body":{"nodeType":"YulBlock","src":"13051:220:16","statements":[{"nodeType":"YulAssignment","src":"13061:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:16","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:16"},"nodeType":"YulFunctionCall","src":"13068:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:16"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:16"},"nodeType":"YulFunctionCall","src":"13144:93:16"},"nodeType":"YulExpressionStatement","src":"13144:93:16"},{"nodeType":"YulAssignment","src":"13246:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:16"},"nodeType":"YulFunctionCall","src":"13253:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:16"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:16","type":""}],"src":"12905:366:16"},{"body":{"nodeType":"YulBlock","src":"13448:248:16","statements":[{"nodeType":"YulAssignment","src":"13458:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:16"},"nodeType":"YulFunctionCall","src":"13466:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:16"},"nodeType":"YulFunctionCall","src":"13501:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:16"},"nodeType":"YulFunctionCall","src":"13520:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:16"},"nodeType":"YulFunctionCall","src":"13494:47:16"},"nodeType":"YulExpressionStatement","src":"13494:47:16"},{"nodeType":"YulAssignment","src":"13550:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:16"},"nodeType":"YulFunctionCall","src":"13558:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:16","type":""}],"src":"13277:419:16"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea2646970667358221220183d5a0e2248a04947293bb80feb25e4832139060ff57231762d688e3687bc0064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR RETURNDATASIZE GAS 0xE 0x22 BASEFEE LOG0 0x49 SELFBALANCE 0x29 EXTCODESIZE 0xB8 0xF 0xEB 0x25 0xE4 DUP4 0x21 CODECOPY MOD 0xF CREATE2 PUSH19 0x31762D688E3687BC0064736F6C634300081100 CALLER ","sourceMap":"1532:11312:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3419:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3987:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;3104:91::-;3162:5;3186:2;3179:9;;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;3419:125::-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;3987:149::-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;655:96:4:-;708:7;734:10;727:17;;655:96;:::o;10457:340:0:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;12073:91::-;;;;:::o;12752:90::-;;;;:::o;7:99:16:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"931000","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"432","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":15,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":21,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":23,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":25,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":27,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a371a0024febf5a667fed16c680abfdcdc3342faad0550392932423ce1a4ceba64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH18 0xA0024FEBF5A667FED16C680ABFDCDC3342FA 0xAD SDIV POP CODECOPY 0x29 ORIGIN TIMESTAMP EXTCODECOPY 0xE1 LOG4 0xCE 0xBA PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"194:9169:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a371a0024febf5a667fed16c680abfdcdc3342faad0550392932423ce1a4ceba64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH18 0xA0024FEBF5A667FED16C680ABFDCDC3342FA 0xAD SDIV POP CODECOPY 0x29 ORIGIN TIMESTAMP EXTCODECOPY 0xE1 LOG4 0xCE 0xBA PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"194:9169:3:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c29294e9a7945ee1c17aea97a4c738ac270bec445d37cd6cae443fc0caddb41264736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP3 SWAP5 0xE9 0xA7 SWAP5 0x5E 0xE1 0xC1 PUSH27 0xEA97A4C738AC270BEC445D37CD6CAE443FC0CADDB41264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"220:2559:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c29294e9a7945ee1c17aea97a4c738ac270bec445d37cd6cae443fc0caddb41264736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP3 SWAP5 0xE9 0xA7 SWAP5 0x5E 0xE1 0xC1 PUSH27 0xEA97A4C738AC270BEC445D37CD6CAE443FC0CADDB41264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"220:2559:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(int256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d49866380d66d8d35d4a9114da523643ad70362ac2115bf943870317c5f76df964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SWAP9 PUSH7 0x380D66D8D35D4A SWAP2 EQ 0xDA MSTORE CALLDATASIZE NUMBER 0xAD PUSH17 0x362AC2115BF943870317C5F76DF964736F PUSH13 0x63430008110033000000000000 ","sourceMap":"202:12582:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d49866380d66d8d35d4a9114da523643ad70362ac2115bf943870317c5f76df964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SWAP9 PUSH7 0x380D66D8D35D4A SWAP2 EQ 0xDA MSTORE CALLDATASIZE NUMBER 0xAD PUSH17 0x362AC2115BF943870317C5F76DF964736F PUSH13 0x63430008110033000000000000 ","sourceMap":"202:12582:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f629ff033a0960039f8fa55117e2507e2e6b7ce094b0faef9e4566377b8c5c964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x629FF033A0960039F8FA55117E2507E2 0xE6 0xB7 0xCE MULMOD 0x4B 0xF 0xAE 0xF9 0xE4 JUMP PUSH4 0x77B8C5C9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1047:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f629ff033a0960039f8fa55117e2507e2e6b7ce094b0faef9e4566377b8c5c964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x629FF033A0960039F8FA55117E2507E2 0xE6 0xB7 0xCE MULMOD 0x4B 0xF 0xAE 0xF9 0xE4 JUMP PUSH4 0x77B8C5C9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1047:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/HyperContract.sol":{"HyperContract":{"abi":[{"inputs":[],"name":"lastMessageID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"ethereumDomain","type":"uint32"},{"internalType":"address","name":"igpAddress","type":"address"},{"internalType":"uint256","name":"gasAmount","type":"uint256"}],"name":"processMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint32","name":"ethereumDomain","type":"uint32"},{"internalType":"address","name":"routerAddress","type":"address"},{"internalType":"address","name":"toAddress","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"sendTransaction","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506106d7806100206000396000f3fe6080604052600436106100345760003560e01c80633dd3728714610039578063621fbd5914610055578063cef5ddf014610080575b600080fd5b610053600480360381019061004e91906102a7565b6100a9565b005b34801561006157600080fd5b5061006a610128565b6040516100779190610313565b60405180910390f35b34801561008c57600080fd5b506100a760048036038101906100a29190610474565b61012e565b005b60008290508073ffffffffffffffffffffffffffffffffffffffff166311bf2c18346000548786336040518663ffffffff1660e01b81526004016100f09493929190610538565b6000604051808303818588803b15801561010957600080fd5b505af115801561011d573d6000803e3d6000fd5b505050505050505050565b60005481565b60008490508073ffffffffffffffffffffffffffffffffffffffff16631ddce514878686866040518563ffffffff1660e01b815260040161017294939291906105fc565b6020604051808303816000875af1158015610191573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b59190610674565b600081905550505050505050565b6000604051905090565b600080fd5b600080fd5b600063ffffffff82169050919050565b6101f0816101d7565b81146101fb57600080fd5b50565b60008135905061020d816101e7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061023e82610213565b9050919050565b61024e81610233565b811461025957600080fd5b50565b60008135905061026b81610245565b92915050565b6000819050919050565b61028481610271565b811461028f57600080fd5b50565b6000813590506102a18161027b565b92915050565b6000806000606084860312156102c0576102bf6101cd565b5b60006102ce868287016101fe565b93505060206102df8682870161025c565b92505060406102f086828701610292565b9150509250925092565b6000819050919050565b61030d816102fa565b82525050565b60006020820190506103286000830184610304565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61038182610338565b810181811067ffffffffffffffff821117156103a05761039f610349565b5b80604052505050565b60006103b36101c3565b90506103bf8282610378565b919050565b600067ffffffffffffffff8211156103df576103de610349565b5b6103e882610338565b9050602081019050919050565b82818337600083830152505050565b6000610417610412846103c4565b6103a9565b90508281526020810184848401111561043357610432610333565b5b61043e8482856103f5565b509392505050565b600082601f83011261045b5761045a61032e565b5b813561046b848260208601610404565b91505092915050565b600080600080600060a086880312156104905761048f6101cd565b5b600061049e888289016101fe565b95505060206104af8882890161025c565b94505060406104c08882890161025c565b93505060606104d188828901610292565b925050608086013567ffffffffffffffff8111156104f2576104f16101d2565b5b6104fe88828901610446565b9150509295509295909350565b610514816101d7565b82525050565b61052381610271565b82525050565b61053281610233565b82525050565b600060808201905061054d6000830187610304565b61055a602083018661050b565b610567604083018561051a565b6105746060830184610529565b95945050505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105b757808201518184015260208101905061059c565b60008484015250505050565b60006105ce8261057d565b6105d88185610588565b93506105e8818560208601610599565b6105f181610338565b840191505092915050565b6000608082019050610611600083018761050b565b61061e6020830186610529565b61062b604083018561051a565b818103606083015261063d81846105c3565b905095945050505050565b610651816102fa565b811461065c57600080fd5b50565b60008151905061066e81610648565b92915050565b60006020828403121561068a576106896101cd565b5b60006106988482850161065f565b9150509291505056fea2646970667358221220a1318e42fad1a2c9704fcaca8e8379a548054e2b0eaa4f27c1a86a727cd566ff64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D7 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3DD37287 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x621FBD59 EQ PUSH2 0x55 JUMPI DUP1 PUSH4 0xCEF5DDF0 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x53 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E SWAP2 SWAP1 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0xA9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A PUSH2 0x128 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x474 JUMP JUMPDEST PUSH2 0x12E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x11BF2C18 CALLVALUE PUSH1 0x0 SLOAD DUP8 DUP7 CALLER PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x538 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP5 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1DDCE514 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x191 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x674 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0 DUP2 PUSH2 0x1D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20D DUP2 PUSH2 0x1E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E DUP3 PUSH2 0x213 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH2 0x233 JUMP JUMPDEST DUP2 EQ PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26B DUP2 PUSH2 0x245 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x284 DUP2 PUSH2 0x271 JUMP JUMPDEST DUP2 EQ PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A1 DUP2 PUSH2 0x27B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C0 JUMPI PUSH2 0x2BF PUSH2 0x1CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CE DUP7 DUP3 DUP8 ADD PUSH2 0x1FE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2DF DUP7 DUP3 DUP8 ADD PUSH2 0x25C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2F0 DUP7 DUP3 DUP8 ADD PUSH2 0x292 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30D DUP2 PUSH2 0x2FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x328 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x304 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x381 DUP3 PUSH2 0x338 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3A0 JUMPI PUSH2 0x39F PUSH2 0x349 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3 PUSH2 0x1C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x3BF DUP3 DUP3 PUSH2 0x378 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3DF JUMPI PUSH2 0x3DE PUSH2 0x349 JUMP JUMPDEST JUMPDEST PUSH2 0x3E8 DUP3 PUSH2 0x338 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x417 PUSH2 0x412 DUP5 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x433 JUMPI PUSH2 0x432 PUSH2 0x333 JUMP JUMPDEST JUMPDEST PUSH2 0x43E DUP5 DUP3 DUP6 PUSH2 0x3F5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x45B JUMPI PUSH2 0x45A PUSH2 0x32E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x46B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x404 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x490 JUMPI PUSH2 0x48F PUSH2 0x1CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x49E DUP9 DUP3 DUP10 ADD PUSH2 0x1FE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4AF DUP9 DUP3 DUP10 ADD PUSH2 0x25C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4C0 DUP9 DUP3 DUP10 ADD PUSH2 0x25C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4D1 DUP9 DUP3 DUP10 ADD PUSH2 0x292 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4F2 JUMPI PUSH2 0x4F1 PUSH2 0x1D2 JUMP JUMPDEST JUMPDEST PUSH2 0x4FE DUP9 DUP3 DUP10 ADD PUSH2 0x446 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x514 DUP2 PUSH2 0x1D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x523 DUP2 PUSH2 0x271 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x532 DUP2 PUSH2 0x233 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x54D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x304 JUMP JUMPDEST PUSH2 0x55A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x50B JUMP JUMPDEST PUSH2 0x567 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x51A JUMP JUMPDEST PUSH2 0x574 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x529 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5B7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x59C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CE DUP3 PUSH2 0x57D JUMP JUMPDEST PUSH2 0x5D8 DUP2 DUP6 PUSH2 0x588 JUMP JUMPDEST SWAP4 POP PUSH2 0x5E8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x599 JUMP JUMPDEST PUSH2 0x5F1 DUP2 PUSH2 0x338 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x611 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x50B JUMP JUMPDEST PUSH2 0x61E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x529 JUMP JUMPDEST PUSH2 0x62B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x51A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x63D DUP2 DUP5 PUSH2 0x5C3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x651 DUP2 PUSH2 0x2FA JUMP JUMPDEST DUP2 EQ PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x66E DUP2 PUSH2 0x648 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x68A JUMPI PUSH2 0x689 PUSH2 0x1CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x698 DUP5 DUP3 DUP6 ADD PUSH2 0x65F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 BALANCE DUP15 TIMESTAMP STATICCALL 0xD1 LOG2 0xC9 PUSH17 0x4FCACA8E8379A548054E2B0EAA4F27C1A8 PUSH11 0x727CD566FF64736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"235:1211:8:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@lastMessageID_2257":{"entryPoint":296,"id":2257,"parameterSlots":0,"returnSlots":0},"@processMessage_2319":{"entryPoint":169,"id":2319,"parameterSlots":3,"returnSlots":0},"@sendTransaction_2289":{"entryPoint":302,"id":2289,"parameterSlots":5,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":1028,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":604,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":1631,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":1094,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":658,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":510,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":1652,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":1140,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint32t_addresst_uint256":{"entryPoint":679,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1321,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":772,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":1475,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1306,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":1291,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":787,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint32_t_uint256_t_address__to_t_bytes32_t_uint32_t_uint256_t_address__fromStack_reversed":{"entryPoint":1336,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint32_t_address_t_uint256_t_bytes_memory_ptr__to_t_uint32_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":1532,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_memory":{"entryPoint":937,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":451,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":964,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":1405,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":1416,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":563,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":762,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":531,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":625,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":471,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":1013,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1433,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":888,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":841,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":814,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":819,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":466,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":461,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":824,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":581,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":1608,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":487,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9035:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"378:49:16","statements":[{"nodeType":"YulAssignment","src":"388:33:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"410:10:16","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:16"},"nodeType":"YulFunctionCall","src":"399:22:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:16"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:16","type":""}],"src":"334:93:16"},{"body":{"nodeType":"YulBlock","src":"475:78:16","statements":[{"body":{"nodeType":"YulBlock","src":"531:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"540:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"543:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"533:6:16"},"nodeType":"YulFunctionCall","src":"533:12:16"},"nodeType":"YulExpressionStatement","src":"533:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"498:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"522:5:16"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"505:16:16"},"nodeType":"YulFunctionCall","src":"505:23:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"495:2:16"},"nodeType":"YulFunctionCall","src":"495:34:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"488:6:16"},"nodeType":"YulFunctionCall","src":"488:42:16"},"nodeType":"YulIf","src":"485:62:16"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"468:5:16","type":""}],"src":"433:120:16"},{"body":{"nodeType":"YulBlock","src":"610:86:16","statements":[{"nodeType":"YulAssignment","src":"620:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"642:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"629:12:16"},"nodeType":"YulFunctionCall","src":"629:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"620:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"684:5:16"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"658:25:16"},"nodeType":"YulFunctionCall","src":"658:32:16"},"nodeType":"YulExpressionStatement","src":"658:32:16"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"588:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"596:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"604:5:16","type":""}],"src":"559:137:16"},{"body":{"nodeType":"YulBlock","src":"747:81:16","statements":[{"nodeType":"YulAssignment","src":"757:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"772:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"779:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"768:3:16"},"nodeType":"YulFunctionCall","src":"768:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"757:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"729:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"739:7:16","type":""}],"src":"702:126:16"},{"body":{"nodeType":"YulBlock","src":"879:51:16","statements":[{"nodeType":"YulAssignment","src":"889:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"918:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"900:17:16"},"nodeType":"YulFunctionCall","src":"900:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"889:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"861:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"871:7:16","type":""}],"src":"834:96:16"},{"body":{"nodeType":"YulBlock","src":"979:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"1036:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1045:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1048:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1038:6:16"},"nodeType":"YulFunctionCall","src":"1038:12:16"},"nodeType":"YulExpressionStatement","src":"1038:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1002:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1027:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1009:17:16"},"nodeType":"YulFunctionCall","src":"1009:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"999:2:16"},"nodeType":"YulFunctionCall","src":"999:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"992:6:16"},"nodeType":"YulFunctionCall","src":"992:43:16"},"nodeType":"YulIf","src":"989:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"972:5:16","type":""}],"src":"936:122:16"},{"body":{"nodeType":"YulBlock","src":"1116:87:16","statements":[{"nodeType":"YulAssignment","src":"1126:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1148:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1135:12:16"},"nodeType":"YulFunctionCall","src":"1135:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1126:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1191:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1164:26:16"},"nodeType":"YulFunctionCall","src":"1164:33:16"},"nodeType":"YulExpressionStatement","src":"1164:33:16"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1094:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1102:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1110:5:16","type":""}],"src":"1064:139:16"},{"body":{"nodeType":"YulBlock","src":"1254:32:16","statements":[{"nodeType":"YulAssignment","src":"1264:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"1275:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1264:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1236:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1246:7:16","type":""}],"src":"1209:77:16"},{"body":{"nodeType":"YulBlock","src":"1335:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"1392:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1401:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1404:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1394:6:16"},"nodeType":"YulFunctionCall","src":"1394:12:16"},"nodeType":"YulExpressionStatement","src":"1394:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1358:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1383:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1365:17:16"},"nodeType":"YulFunctionCall","src":"1365:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1355:2:16"},"nodeType":"YulFunctionCall","src":"1355:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1348:6:16"},"nodeType":"YulFunctionCall","src":"1348:43:16"},"nodeType":"YulIf","src":"1345:63:16"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1328:5:16","type":""}],"src":"1292:122:16"},{"body":{"nodeType":"YulBlock","src":"1472:87:16","statements":[{"nodeType":"YulAssignment","src":"1482:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1504:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1491:12:16"},"nodeType":"YulFunctionCall","src":"1491:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1482:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1547:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1520:26:16"},"nodeType":"YulFunctionCall","src":"1520:33:16"},"nodeType":"YulExpressionStatement","src":"1520:33:16"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1450:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1458:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1466:5:16","type":""}],"src":"1420:139:16"},{"body":{"nodeType":"YulBlock","src":"1664:518:16","statements":[{"body":{"nodeType":"YulBlock","src":"1710:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1712:77:16"},"nodeType":"YulFunctionCall","src":"1712:79:16"},"nodeType":"YulExpressionStatement","src":"1712:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1685:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1694:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1681:3:16"},"nodeType":"YulFunctionCall","src":"1681:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1706:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1677:3:16"},"nodeType":"YulFunctionCall","src":"1677:32:16"},"nodeType":"YulIf","src":"1674:119:16"},{"nodeType":"YulBlock","src":"1803:116:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1818:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1832:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1822:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1847:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1881:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1892:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1877:3:16"},"nodeType":"YulFunctionCall","src":"1877:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1901:7:16"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"1857:19:16"},"nodeType":"YulFunctionCall","src":"1857:52:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1847:6:16"}]}]},{"nodeType":"YulBlock","src":"1929:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1944:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1958:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1948:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1974:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2009:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"2020:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2005:3:16"},"nodeType":"YulFunctionCall","src":"2005:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2029:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1984:20:16"},"nodeType":"YulFunctionCall","src":"1984:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1974:6:16"}]}]},{"nodeType":"YulBlock","src":"2057:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2072:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2086:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2076:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2102:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2137:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"2148:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2133:3:16"},"nodeType":"YulFunctionCall","src":"2133:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2157:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2112:20:16"},"nodeType":"YulFunctionCall","src":"2112:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2102:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint32t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1618:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1629:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1641:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1649:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1657:6:16","type":""}],"src":"1565:617:16"},{"body":{"nodeType":"YulBlock","src":"2233:32:16","statements":[{"nodeType":"YulAssignment","src":"2243:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2254:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2243:7:16"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2215:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2225:7:16","type":""}],"src":"2188:77:16"},{"body":{"nodeType":"YulBlock","src":"2336:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2353:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2376:5:16"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2358:17:16"},"nodeType":"YulFunctionCall","src":"2358:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2346:6:16"},"nodeType":"YulFunctionCall","src":"2346:37:16"},"nodeType":"YulExpressionStatement","src":"2346:37:16"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2324:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2331:3:16","type":""}],"src":"2271:118:16"},{"body":{"nodeType":"YulBlock","src":"2493:124:16","statements":[{"nodeType":"YulAssignment","src":"2503:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2515:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2526:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2511:3:16"},"nodeType":"YulFunctionCall","src":"2511:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2503:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2583:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2596:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2607:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2592:3:16"},"nodeType":"YulFunctionCall","src":"2592:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"2539:43:16"},"nodeType":"YulFunctionCall","src":"2539:71:16"},"nodeType":"YulExpressionStatement","src":"2539:71:16"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2465:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2477:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2488:4:16","type":""}],"src":"2395:222:16"},{"body":{"nodeType":"YulBlock","src":"2712:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2729:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2732:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2722:6:16"},"nodeType":"YulFunctionCall","src":"2722:12:16"},"nodeType":"YulExpressionStatement","src":"2722:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2623:117:16"},{"body":{"nodeType":"YulBlock","src":"2835:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2852:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2855:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2845:6:16"},"nodeType":"YulFunctionCall","src":"2845:12:16"},"nodeType":"YulExpressionStatement","src":"2845:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"2746:117:16"},{"body":{"nodeType":"YulBlock","src":"2917:54:16","statements":[{"nodeType":"YulAssignment","src":"2927:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2945:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2952:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2941:3:16"},"nodeType":"YulFunctionCall","src":"2941:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2961:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2957:3:16"},"nodeType":"YulFunctionCall","src":"2957:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2937:3:16"},"nodeType":"YulFunctionCall","src":"2937:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2927:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2900:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2910:6:16","type":""}],"src":"2869:102:16"},{"body":{"nodeType":"YulBlock","src":"3005:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3022:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3025:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3015:6:16"},"nodeType":"YulFunctionCall","src":"3015:88:16"},"nodeType":"YulExpressionStatement","src":"3015:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3119:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3122:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3112:6:16"},"nodeType":"YulFunctionCall","src":"3112:15:16"},"nodeType":"YulExpressionStatement","src":"3112:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3143:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3146:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3136:6:16"},"nodeType":"YulFunctionCall","src":"3136:15:16"},"nodeType":"YulExpressionStatement","src":"3136:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2977:180:16"},{"body":{"nodeType":"YulBlock","src":"3206:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3216:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3238:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3268:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3246:21:16"},"nodeType":"YulFunctionCall","src":"3246:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3234:3:16"},"nodeType":"YulFunctionCall","src":"3234:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3220:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3385:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3387:16:16"},"nodeType":"YulFunctionCall","src":"3387:18:16"},"nodeType":"YulExpressionStatement","src":"3387:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3328:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"3340:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3325:2:16"},"nodeType":"YulFunctionCall","src":"3325:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3364:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3376:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3361:2:16"},"nodeType":"YulFunctionCall","src":"3361:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3322:2:16"},"nodeType":"YulFunctionCall","src":"3322:62:16"},"nodeType":"YulIf","src":"3319:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3423:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3427:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3416:6:16"},"nodeType":"YulFunctionCall","src":"3416:22:16"},"nodeType":"YulExpressionStatement","src":"3416:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3192:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"3200:4:16","type":""}],"src":"3163:281:16"},{"body":{"nodeType":"YulBlock","src":"3491:88:16","statements":[{"nodeType":"YulAssignment","src":"3501:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3511:18:16"},"nodeType":"YulFunctionCall","src":"3511:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3501:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3560:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"3568:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3540:19:16"},"nodeType":"YulFunctionCall","src":"3540:33:16"},"nodeType":"YulExpressionStatement","src":"3540:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3475:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3484:6:16","type":""}],"src":"3450:129:16"},{"body":{"nodeType":"YulBlock","src":"3651:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"3756:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3758:16:16"},"nodeType":"YulFunctionCall","src":"3758:18:16"},"nodeType":"YulExpressionStatement","src":"3758:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3728:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3736:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3725:2:16"},"nodeType":"YulFunctionCall","src":"3725:30:16"},"nodeType":"YulIf","src":"3722:56:16"},{"nodeType":"YulAssignment","src":"3788:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3818:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3796:21:16"},"nodeType":"YulFunctionCall","src":"3796:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3788:4:16"}]},{"nodeType":"YulAssignment","src":"3862:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3874:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"3880:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3870:3:16"},"nodeType":"YulFunctionCall","src":"3870:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3862:4:16"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3635:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3646:4:16","type":""}],"src":"3585:307:16"},{"body":{"nodeType":"YulBlock","src":"3962:82:16","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3985:3:16"},{"name":"src","nodeType":"YulIdentifier","src":"3990:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"3995:6:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3972:12:16"},"nodeType":"YulFunctionCall","src":"3972:30:16"},"nodeType":"YulExpressionStatement","src":"3972:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4022:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4027:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4018:3:16"},"nodeType":"YulFunctionCall","src":"4018:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"4036:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4011:6:16"},"nodeType":"YulFunctionCall","src":"4011:27:16"},"nodeType":"YulExpressionStatement","src":"4011:27:16"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3944:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3949:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"3954:6:16","type":""}],"src":"3898:146:16"},{"body":{"nodeType":"YulBlock","src":"4133:340:16","statements":[{"nodeType":"YulAssignment","src":"4143:74:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4209:6:16"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4168:40:16"},"nodeType":"YulFunctionCall","src":"4168:48:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4152:15:16"},"nodeType":"YulFunctionCall","src":"4152:65:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4143:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4233:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"4240:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4226:6:16"},"nodeType":"YulFunctionCall","src":"4226:21:16"},"nodeType":"YulExpressionStatement","src":"4226:21:16"},{"nodeType":"YulVariableDeclaration","src":"4256:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4271:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4278:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4267:3:16"},"nodeType":"YulFunctionCall","src":"4267:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4260:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4321:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4323:77:16"},"nodeType":"YulFunctionCall","src":"4323:79:16"},"nodeType":"YulExpressionStatement","src":"4323:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4302:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4307:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4298:3:16"},"nodeType":"YulFunctionCall","src":"4298:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"4316:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4295:2:16"},"nodeType":"YulFunctionCall","src":"4295:25:16"},"nodeType":"YulIf","src":"4292:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4450:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"4455:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4460:6:16"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4413:36:16"},"nodeType":"YulFunctionCall","src":"4413:54:16"},"nodeType":"YulExpressionStatement","src":"4413:54:16"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4106:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"4111:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"4119:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4127:5:16","type":""}],"src":"4050:423:16"},{"body":{"nodeType":"YulBlock","src":"4553:277:16","statements":[{"body":{"nodeType":"YulBlock","src":"4602:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4604:77:16"},"nodeType":"YulFunctionCall","src":"4604:79:16"},"nodeType":"YulExpressionStatement","src":"4604:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4581:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4589:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4577:3:16"},"nodeType":"YulFunctionCall","src":"4577:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"4596:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4573:3:16"},"nodeType":"YulFunctionCall","src":"4573:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4566:6:16"},"nodeType":"YulFunctionCall","src":"4566:35:16"},"nodeType":"YulIf","src":"4563:122:16"},{"nodeType":"YulVariableDeclaration","src":"4694:34:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4721:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4708:12:16"},"nodeType":"YulFunctionCall","src":"4708:20:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4698:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4737:87:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4797:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4805:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:16"},"nodeType":"YulFunctionCall","src":"4793:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"4812:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"4820:3:16"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4746:46:16"},"nodeType":"YulFunctionCall","src":"4746:78:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4737:5:16"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4531:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"4539:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4547:5:16","type":""}],"src":"4492:338:16"},{"body":{"nodeType":"YulBlock","src":"4978:945:16","statements":[{"body":{"nodeType":"YulBlock","src":"5025:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5027:77:16"},"nodeType":"YulFunctionCall","src":"5027:79:16"},"nodeType":"YulExpressionStatement","src":"5027:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4999:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"5008:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4995:3:16"},"nodeType":"YulFunctionCall","src":"4995:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"5020:3:16","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4991:3:16"},"nodeType":"YulFunctionCall","src":"4991:33:16"},"nodeType":"YulIf","src":"4988:120:16"},{"nodeType":"YulBlock","src":"5118:116:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5133:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5147:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5137:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5162:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5196:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5207:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5192:3:16"},"nodeType":"YulFunctionCall","src":"5192:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5216:7:16"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"5172:19:16"},"nodeType":"YulFunctionCall","src":"5172:52:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5162:6:16"}]}]},{"nodeType":"YulBlock","src":"5244:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5259:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5273:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5263:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5289:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5324:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5335:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5320:3:16"},"nodeType":"YulFunctionCall","src":"5320:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5344:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5299:20:16"},"nodeType":"YulFunctionCall","src":"5299:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5289:6:16"}]}]},{"nodeType":"YulBlock","src":"5372:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5387:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5401:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5391:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5417:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5452:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5463:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5448:3:16"},"nodeType":"YulFunctionCall","src":"5448:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5472:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5427:20:16"},"nodeType":"YulFunctionCall","src":"5427:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5417:6:16"}]}]},{"nodeType":"YulBlock","src":"5500:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5515:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5529:2:16","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5519:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5545:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5580:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5591:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5576:3:16"},"nodeType":"YulFunctionCall","src":"5576:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5600:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5555:20:16"},"nodeType":"YulFunctionCall","src":"5555:53:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5545:6:16"}]}]},{"nodeType":"YulBlock","src":"5628:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5643:47:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5674:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5685:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5670:3:16"},"nodeType":"YulFunctionCall","src":"5670:19:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5657:12:16"},"nodeType":"YulFunctionCall","src":"5657:33:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5647:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5737:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5739:77:16"},"nodeType":"YulFunctionCall","src":"5739:79:16"},"nodeType":"YulExpressionStatement","src":"5739:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5709:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"5717:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5706:2:16"},"nodeType":"YulFunctionCall","src":"5706:30:16"},"nodeType":"YulIf","src":"5703:117:16"},{"nodeType":"YulAssignment","src":"5834:72:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5878:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5889:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5874:3:16"},"nodeType":"YulFunctionCall","src":"5874:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5898:7:16"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5844:29:16"},"nodeType":"YulFunctionCall","src":"5844:62:16"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5834:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint32t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4916:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4927:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4939:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4947:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4955:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4963:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4971:6:16","type":""}],"src":"4836:1087:16"},{"body":{"nodeType":"YulBlock","src":"5992:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6009:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6031:5:16"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"6014:16:16"},"nodeType":"YulFunctionCall","src":"6014:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6002:6:16"},"nodeType":"YulFunctionCall","src":"6002:36:16"},"nodeType":"YulExpressionStatement","src":"6002:36:16"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5980:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5987:3:16","type":""}],"src":"5929:115:16"},{"body":{"nodeType":"YulBlock","src":"6115:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6132:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6155:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6137:17:16"},"nodeType":"YulFunctionCall","src":"6137:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6125:6:16"},"nodeType":"YulFunctionCall","src":"6125:37:16"},"nodeType":"YulExpressionStatement","src":"6125:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6103:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6110:3:16","type":""}],"src":"6050:118:16"},{"body":{"nodeType":"YulBlock","src":"6239:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6256:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6279:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6261:17:16"},"nodeType":"YulFunctionCall","src":"6261:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6249:6:16"},"nodeType":"YulFunctionCall","src":"6249:37:16"},"nodeType":"YulExpressionStatement","src":"6249:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6227:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6234:3:16","type":""}],"src":"6174:118:16"},{"body":{"nodeType":"YulBlock","src":"6478:369:16","statements":[{"nodeType":"YulAssignment","src":"6488:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6500:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6511:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6496:3:16"},"nodeType":"YulFunctionCall","src":"6496:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6488:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6569:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6582:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6593:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6578:3:16"},"nodeType":"YulFunctionCall","src":"6578:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6525:43:16"},"nodeType":"YulFunctionCall","src":"6525:71:16"},"nodeType":"YulExpressionStatement","src":"6525:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6648:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6661:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6672:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6657:3:16"},"nodeType":"YulFunctionCall","src":"6657:18:16"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"6606:41:16"},"nodeType":"YulFunctionCall","src":"6606:70:16"},"nodeType":"YulExpressionStatement","src":"6606:70:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6730:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6743:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6754:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6739:3:16"},"nodeType":"YulFunctionCall","src":"6739:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6686:43:16"},"nodeType":"YulFunctionCall","src":"6686:72:16"},"nodeType":"YulExpressionStatement","src":"6686:72:16"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"6812:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6825:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6836:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6821:3:16"},"nodeType":"YulFunctionCall","src":"6821:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6768:43:16"},"nodeType":"YulFunctionCall","src":"6768:72:16"},"nodeType":"YulExpressionStatement","src":"6768:72:16"}]},"name":"abi_encode_tuple_t_bytes32_t_uint32_t_uint256_t_address__to_t_bytes32_t_uint32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6426:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6438:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6446:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6454:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6462:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6473:4:16","type":""}],"src":"6298:549:16"},{"body":{"nodeType":"YulBlock","src":"6911:40:16","statements":[{"nodeType":"YulAssignment","src":"6922:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6938:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6932:5:16"},"nodeType":"YulFunctionCall","src":"6932:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6922:6:16"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6894:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6904:6:16","type":""}],"src":"6853:98:16"},{"body":{"nodeType":"YulBlock","src":"7052:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7069:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"7074:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7062:6:16"},"nodeType":"YulFunctionCall","src":"7062:19:16"},"nodeType":"YulExpressionStatement","src":"7062:19:16"},{"nodeType":"YulAssignment","src":"7090:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7109:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"7114:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7105:3:16"},"nodeType":"YulFunctionCall","src":"7105:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7090:11:16"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7024:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"7029:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7040:11:16","type":""}],"src":"6957:168:16"},{"body":{"nodeType":"YulBlock","src":"7193:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7203:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7212:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7207:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7272:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7297:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"7302:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7293:3:16"},"nodeType":"YulFunctionCall","src":"7293:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7316:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"7321:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7312:3:16"},"nodeType":"YulFunctionCall","src":"7312:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7306:5:16"},"nodeType":"YulFunctionCall","src":"7306:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7286:6:16"},"nodeType":"YulFunctionCall","src":"7286:39:16"},"nodeType":"YulExpressionStatement","src":"7286:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7233:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"7236:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7230:2:16"},"nodeType":"YulFunctionCall","src":"7230:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7244:19:16","statements":[{"nodeType":"YulAssignment","src":"7246:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7255:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"7258:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7251:3:16"},"nodeType":"YulFunctionCall","src":"7251:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7246:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"7226:3:16","statements":[]},"src":"7222:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7355:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"7360:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7351:3:16"},"nodeType":"YulFunctionCall","src":"7351:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"7369:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7344:6:16"},"nodeType":"YulFunctionCall","src":"7344:27:16"},"nodeType":"YulExpressionStatement","src":"7344:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7175:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7180:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"7185:6:16","type":""}],"src":"7131:246:16"},{"body":{"nodeType":"YulBlock","src":"7473:283:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7483:52:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7529:5:16"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7497:31:16"},"nodeType":"YulFunctionCall","src":"7497:38:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7487:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7544:77:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7609:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"7614:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7551:57:16"},"nodeType":"YulFunctionCall","src":"7551:70:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7544:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7669:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"7676:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7665:3:16"},"nodeType":"YulFunctionCall","src":"7665:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"7683:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"7688:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7630:34:16"},"nodeType":"YulFunctionCall","src":"7630:65:16"},"nodeType":"YulExpressionStatement","src":"7630:65:16"},{"nodeType":"YulAssignment","src":"7704:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7715:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7742:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7720:21:16"},"nodeType":"YulFunctionCall","src":"7720:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7711:3:16"},"nodeType":"YulFunctionCall","src":"7711:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7704:3:16"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7454:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7461:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7469:3:16","type":""}],"src":"7383:373:16"},{"body":{"nodeType":"YulBlock","src":"7960:438:16","statements":[{"nodeType":"YulAssignment","src":"7970:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7982:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7993:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7978:3:16"},"nodeType":"YulFunctionCall","src":"7978:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7970:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8049:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8062:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8073:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8058:3:16"},"nodeType":"YulFunctionCall","src":"8058:17:16"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"8007:41:16"},"nodeType":"YulFunctionCall","src":"8007:69:16"},"nodeType":"YulExpressionStatement","src":"8007:69:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8130:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8143:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8154:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8139:3:16"},"nodeType":"YulFunctionCall","src":"8139:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8086:43:16"},"nodeType":"YulFunctionCall","src":"8086:72:16"},"nodeType":"YulExpressionStatement","src":"8086:72:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8212:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8225:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8236:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8221:3:16"},"nodeType":"YulFunctionCall","src":"8221:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8168:43:16"},"nodeType":"YulFunctionCall","src":"8168:72:16"},"nodeType":"YulExpressionStatement","src":"8168:72:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8261:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8272:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8257:3:16"},"nodeType":"YulFunctionCall","src":"8257:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8281:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"8287:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8277:3:16"},"nodeType":"YulFunctionCall","src":"8277:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8250:6:16"},"nodeType":"YulFunctionCall","src":"8250:48:16"},"nodeType":"YulExpressionStatement","src":"8250:48:16"},{"nodeType":"YulAssignment","src":"8307:84:16","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"8377:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"8386:4:16"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8315:61:16"},"nodeType":"YulFunctionCall","src":"8315:76:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8307:4:16"}]}]},"name":"abi_encode_tuple_t_uint32_t_address_t_uint256_t_bytes_memory_ptr__to_t_uint32_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7908:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7920:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7928:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7936:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7944:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7955:4:16","type":""}],"src":"7762:636:16"},{"body":{"nodeType":"YulBlock","src":"8447:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"8504:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8513:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8516:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8506:6:16"},"nodeType":"YulFunctionCall","src":"8506:12:16"},"nodeType":"YulExpressionStatement","src":"8506:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8470:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8495:5:16"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"8477:17:16"},"nodeType":"YulFunctionCall","src":"8477:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8467:2:16"},"nodeType":"YulFunctionCall","src":"8467:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8460:6:16"},"nodeType":"YulFunctionCall","src":"8460:43:16"},"nodeType":"YulIf","src":"8457:63:16"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8440:5:16","type":""}],"src":"8404:122:16"},{"body":{"nodeType":"YulBlock","src":"8595:80:16","statements":[{"nodeType":"YulAssignment","src":"8605:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8620:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8614:5:16"},"nodeType":"YulFunctionCall","src":"8614:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8605:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8663:5:16"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"8636:26:16"},"nodeType":"YulFunctionCall","src":"8636:33:16"},"nodeType":"YulExpressionStatement","src":"8636:33:16"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8573:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"8581:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8589:5:16","type":""}],"src":"8532:143:16"},{"body":{"nodeType":"YulBlock","src":"8758:274:16","statements":[{"body":{"nodeType":"YulBlock","src":"8804:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8806:77:16"},"nodeType":"YulFunctionCall","src":"8806:79:16"},"nodeType":"YulExpressionStatement","src":"8806:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8779:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"8788:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8775:3:16"},"nodeType":"YulFunctionCall","src":"8775:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"8800:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8771:3:16"},"nodeType":"YulFunctionCall","src":"8771:32:16"},"nodeType":"YulIf","src":"8768:119:16"},{"nodeType":"YulBlock","src":"8897:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8912:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8926:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8916:6:16","type":""}]},{"nodeType":"YulAssignment","src":"8941:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8987:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"8998:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8983:3:16"},"nodeType":"YulFunctionCall","src":"8983:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9007:7:16"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"8951:31:16"},"nodeType":"YulFunctionCall","src":"8951:64:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8941:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8728:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8739:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8751:6:16","type":""}],"src":"8681:351:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint32t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint32t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint32_t_uint256_t_address__to_t_bytes32_t_uint32_t_uint256_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint32_t_address_t_uint256_t_bytes_memory_ptr__to_t_uint32_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100345760003560e01c80633dd3728714610039578063621fbd5914610055578063cef5ddf014610080575b600080fd5b610053600480360381019061004e91906102a7565b6100a9565b005b34801561006157600080fd5b5061006a610128565b6040516100779190610313565b60405180910390f35b34801561008c57600080fd5b506100a760048036038101906100a29190610474565b61012e565b005b60008290508073ffffffffffffffffffffffffffffffffffffffff166311bf2c18346000548786336040518663ffffffff1660e01b81526004016100f09493929190610538565b6000604051808303818588803b15801561010957600080fd5b505af115801561011d573d6000803e3d6000fd5b505050505050505050565b60005481565b60008490508073ffffffffffffffffffffffffffffffffffffffff16631ddce514878686866040518563ffffffff1660e01b815260040161017294939291906105fc565b6020604051808303816000875af1158015610191573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b59190610674565b600081905550505050505050565b6000604051905090565b600080fd5b600080fd5b600063ffffffff82169050919050565b6101f0816101d7565b81146101fb57600080fd5b50565b60008135905061020d816101e7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061023e82610213565b9050919050565b61024e81610233565b811461025957600080fd5b50565b60008135905061026b81610245565b92915050565b6000819050919050565b61028481610271565b811461028f57600080fd5b50565b6000813590506102a18161027b565b92915050565b6000806000606084860312156102c0576102bf6101cd565b5b60006102ce868287016101fe565b93505060206102df8682870161025c565b92505060406102f086828701610292565b9150509250925092565b6000819050919050565b61030d816102fa565b82525050565b60006020820190506103286000830184610304565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61038182610338565b810181811067ffffffffffffffff821117156103a05761039f610349565b5b80604052505050565b60006103b36101c3565b90506103bf8282610378565b919050565b600067ffffffffffffffff8211156103df576103de610349565b5b6103e882610338565b9050602081019050919050565b82818337600083830152505050565b6000610417610412846103c4565b6103a9565b90508281526020810184848401111561043357610432610333565b5b61043e8482856103f5565b509392505050565b600082601f83011261045b5761045a61032e565b5b813561046b848260208601610404565b91505092915050565b600080600080600060a086880312156104905761048f6101cd565b5b600061049e888289016101fe565b95505060206104af8882890161025c565b94505060406104c08882890161025c565b93505060606104d188828901610292565b925050608086013567ffffffffffffffff8111156104f2576104f16101d2565b5b6104fe88828901610446565b9150509295509295909350565b610514816101d7565b82525050565b61052381610271565b82525050565b61053281610233565b82525050565b600060808201905061054d6000830187610304565b61055a602083018661050b565b610567604083018561051a565b6105746060830184610529565b95945050505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105b757808201518184015260208101905061059c565b60008484015250505050565b60006105ce8261057d565b6105d88185610588565b93506105e8818560208601610599565b6105f181610338565b840191505092915050565b6000608082019050610611600083018761050b565b61061e6020830186610529565b61062b604083018561051a565b818103606083015261063d81846105c3565b905095945050505050565b610651816102fa565b811461065c57600080fd5b50565b60008151905061066e81610648565b92915050565b60006020828403121561068a576106896101cd565b5b60006106988482850161065f565b9150509291505056fea2646970667358221220a1318e42fad1a2c9704fcaca8e8379a548054e2b0eaa4f27c1a86a727cd566ff64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3DD37287 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x621FBD59 EQ PUSH2 0x55 JUMPI DUP1 PUSH4 0xCEF5DDF0 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x53 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E SWAP2 SWAP1 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0xA9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A PUSH2 0x128 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x474 JUMP JUMPDEST PUSH2 0x12E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x11BF2C18 CALLVALUE PUSH1 0x0 SLOAD DUP8 DUP7 CALLER PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x538 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP5 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1DDCE514 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x191 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x674 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0 DUP2 PUSH2 0x1D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20D DUP2 PUSH2 0x1E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E DUP3 PUSH2 0x213 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH2 0x233 JUMP JUMPDEST DUP2 EQ PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26B DUP2 PUSH2 0x245 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x284 DUP2 PUSH2 0x271 JUMP JUMPDEST DUP2 EQ PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A1 DUP2 PUSH2 0x27B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C0 JUMPI PUSH2 0x2BF PUSH2 0x1CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CE DUP7 DUP3 DUP8 ADD PUSH2 0x1FE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2DF DUP7 DUP3 DUP8 ADD PUSH2 0x25C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2F0 DUP7 DUP3 DUP8 ADD PUSH2 0x292 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30D DUP2 PUSH2 0x2FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x328 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x304 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x381 DUP3 PUSH2 0x338 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3A0 JUMPI PUSH2 0x39F PUSH2 0x349 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3 PUSH2 0x1C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x3BF DUP3 DUP3 PUSH2 0x378 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3DF JUMPI PUSH2 0x3DE PUSH2 0x349 JUMP JUMPDEST JUMPDEST PUSH2 0x3E8 DUP3 PUSH2 0x338 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x417 PUSH2 0x412 DUP5 PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x433 JUMPI PUSH2 0x432 PUSH2 0x333 JUMP JUMPDEST JUMPDEST PUSH2 0x43E DUP5 DUP3 DUP6 PUSH2 0x3F5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x45B JUMPI PUSH2 0x45A PUSH2 0x32E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x46B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x404 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x490 JUMPI PUSH2 0x48F PUSH2 0x1CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x49E DUP9 DUP3 DUP10 ADD PUSH2 0x1FE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4AF DUP9 DUP3 DUP10 ADD PUSH2 0x25C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4C0 DUP9 DUP3 DUP10 ADD PUSH2 0x25C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4D1 DUP9 DUP3 DUP10 ADD PUSH2 0x292 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4F2 JUMPI PUSH2 0x4F1 PUSH2 0x1D2 JUMP JUMPDEST JUMPDEST PUSH2 0x4FE DUP9 DUP3 DUP10 ADD PUSH2 0x446 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x514 DUP2 PUSH2 0x1D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x523 DUP2 PUSH2 0x271 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x532 DUP2 PUSH2 0x233 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x54D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x304 JUMP JUMPDEST PUSH2 0x55A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x50B JUMP JUMPDEST PUSH2 0x567 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x51A JUMP JUMPDEST PUSH2 0x574 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x529 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5B7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x59C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CE DUP3 PUSH2 0x57D JUMP JUMPDEST PUSH2 0x5D8 DUP2 DUP6 PUSH2 0x588 JUMP JUMPDEST SWAP4 POP PUSH2 0x5E8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x599 JUMP JUMPDEST PUSH2 0x5F1 DUP2 PUSH2 0x338 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x611 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x50B JUMP JUMPDEST PUSH2 0x61E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x529 JUMP JUMPDEST PUSH2 0x62B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x51A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x63D DUP2 DUP5 PUSH2 0x5C3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x651 DUP2 PUSH2 0x2FA JUMP JUMPDEST DUP2 EQ PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x66E DUP2 PUSH2 0x648 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x68A JUMPI PUSH2 0x689 PUSH2 0x1CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x698 DUP5 DUP3 DUP6 ADD PUSH2 0x65F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 BALANCE DUP15 TIMESTAMP STATICCALL 0xD1 LOG2 0xC9 PUSH17 0x4FCACA8E8379A548054E2B0EAA4F27C1A8 PUSH11 0x727CD566FF64736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"235:1211:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;754:681;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;265:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;301:448;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;754:681;965:27;1019:10;965:65;;1041:3;:13;;;1062:9;1125:13;;1188:14;1344:9;1406:10;1041:386;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;889:546;754:681;;;:::o;265:28::-;;;;:::o;301:448::-;495:31;568:13;495:97;;619:6;:17;;;651:14;681:9;706:5;726:4;619:122;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;603:13;:138;;;;484:265;301:448;;;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:93;370:7;410:10;403:5;399:22;388:33;;334:93;;;:::o;433:120::-;505:23;522:5;505:23;:::i;:::-;498:5;495:34;485:62;;543:1;540;533:12;485:62;433:120;:::o;559:137::-;604:5;642:6;629:20;620:29;;658:32;684:5;658:32;:::i;:::-;559:137;;;;:::o;702:126::-;739:7;779:42;772:5;768:54;757:65;;702:126;;;:::o;834:96::-;871:7;900:24;918:5;900:24;:::i;:::-;889:35;;834:96;;;:::o;936:122::-;1009:24;1027:5;1009:24;:::i;:::-;1002:5;999:35;989:63;;1048:1;1045;1038:12;989:63;936:122;:::o;1064:139::-;1110:5;1148:6;1135:20;1126:29;;1164:33;1191:5;1164:33;:::i;:::-;1064:139;;;;:::o;1209:77::-;1246:7;1275:5;1264:16;;1209:77;;;:::o;1292:122::-;1365:24;1383:5;1365:24;:::i;:::-;1358:5;1355:35;1345:63;;1404:1;1401;1394:12;1345:63;1292:122;:::o;1420:139::-;1466:5;1504:6;1491:20;1482:29;;1520:33;1547:5;1520:33;:::i;:::-;1420:139;;;;:::o;1565:617::-;1641:6;1649;1657;1706:2;1694:9;1685:7;1681:23;1677:32;1674:119;;;1712:79;;:::i;:::-;1674:119;1832:1;1857:52;1901:7;1892:6;1881:9;1877:22;1857:52;:::i;:::-;1847:62;;1803:116;1958:2;1984:53;2029:7;2020:6;2009:9;2005:22;1984:53;:::i;:::-;1974:63;;1929:118;2086:2;2112:53;2157:7;2148:6;2137:9;2133:22;2112:53;:::i;:::-;2102:63;;2057:118;1565:617;;;;;:::o;2188:77::-;2225:7;2254:5;2243:16;;2188:77;;;:::o;2271:118::-;2358:24;2376:5;2358:24;:::i;:::-;2353:3;2346:37;2271:118;;:::o;2395:222::-;2488:4;2526:2;2515:9;2511:18;2503:26;;2539:71;2607:1;2596:9;2592:17;2583:6;2539:71;:::i;:::-;2395:222;;;;:::o;2623:117::-;2732:1;2729;2722:12;2746:117;2855:1;2852;2845:12;2869:102;2910:6;2961:2;2957:7;2952:2;2945:5;2941:14;2937:28;2927:38;;2869:102;;;:::o;2977:180::-;3025:77;3022:1;3015:88;3122:4;3119:1;3112:15;3146:4;3143:1;3136:15;3163:281;3246:27;3268:4;3246:27;:::i;:::-;3238:6;3234:40;3376:6;3364:10;3361:22;3340:18;3328:10;3325:34;3322:62;3319:88;;;3387:18;;:::i;:::-;3319:88;3427:10;3423:2;3416:22;3206:238;3163:281;;:::o;3450:129::-;3484:6;3511:20;;:::i;:::-;3501:30;;3540:33;3568:4;3560:6;3540:33;:::i;:::-;3450:129;;;:::o;3585:307::-;3646:4;3736:18;3728:6;3725:30;3722:56;;;3758:18;;:::i;:::-;3722:56;3796:29;3818:6;3796:29;:::i;:::-;3788:37;;3880:4;3874;3870:15;3862:23;;3585:307;;;:::o;3898:146::-;3995:6;3990:3;3985;3972:30;4036:1;4027:6;4022:3;4018:16;4011:27;3898:146;;;:::o;4050:423::-;4127:5;4152:65;4168:48;4209:6;4168:48;:::i;:::-;4152:65;:::i;:::-;4143:74;;4240:6;4233:5;4226:21;4278:4;4271:5;4267:16;4316:3;4307:6;4302:3;4298:16;4295:25;4292:112;;;4323:79;;:::i;:::-;4292:112;4413:54;4460:6;4455:3;4450;4413:54;:::i;:::-;4133:340;4050:423;;;;;:::o;4492:338::-;4547:5;4596:3;4589:4;4581:6;4577:17;4573:27;4563:122;;4604:79;;:::i;:::-;4563:122;4721:6;4708:20;4746:78;4820:3;4812:6;4805:4;4797:6;4793:17;4746:78;:::i;:::-;4737:87;;4553:277;4492:338;;;;:::o;4836:1087::-;4939:6;4947;4955;4963;4971;5020:3;5008:9;4999:7;4995:23;4991:33;4988:120;;;5027:79;;:::i;:::-;4988:120;5147:1;5172:52;5216:7;5207:6;5196:9;5192:22;5172:52;:::i;:::-;5162:62;;5118:116;5273:2;5299:53;5344:7;5335:6;5324:9;5320:22;5299:53;:::i;:::-;5289:63;;5244:118;5401:2;5427:53;5472:7;5463:6;5452:9;5448:22;5427:53;:::i;:::-;5417:63;;5372:118;5529:2;5555:53;5600:7;5591:6;5580:9;5576:22;5555:53;:::i;:::-;5545:63;;5500:118;5685:3;5674:9;5670:19;5657:33;5717:18;5709:6;5706:30;5703:117;;;5739:79;;:::i;:::-;5703:117;5844:62;5898:7;5889:6;5878:9;5874:22;5844:62;:::i;:::-;5834:72;;5628:288;4836:1087;;;;;;;;:::o;5929:115::-;6014:23;6031:5;6014:23;:::i;:::-;6009:3;6002:36;5929:115;;:::o;6050:118::-;6137:24;6155:5;6137:24;:::i;:::-;6132:3;6125:37;6050:118;;:::o;6174:::-;6261:24;6279:5;6261:24;:::i;:::-;6256:3;6249:37;6174:118;;:::o;6298:549::-;6473:4;6511:3;6500:9;6496:19;6488:27;;6525:71;6593:1;6582:9;6578:17;6569:6;6525:71;:::i;:::-;6606:70;6672:2;6661:9;6657:18;6648:6;6606:70;:::i;:::-;6686:72;6754:2;6743:9;6739:18;6730:6;6686:72;:::i;:::-;6768;6836:2;6825:9;6821:18;6812:6;6768:72;:::i;:::-;6298:549;;;;;;;:::o;6853:98::-;6904:6;6938:5;6932:12;6922:22;;6853:98;;;:::o;6957:168::-;7040:11;7074:6;7069:3;7062:19;7114:4;7109:3;7105:14;7090:29;;6957:168;;;;:::o;7131:246::-;7212:1;7222:113;7236:6;7233:1;7230:13;7222:113;;;7321:1;7316:3;7312:11;7306:18;7302:1;7297:3;7293:11;7286:39;7258:2;7255:1;7251:10;7246:15;;7222:113;;;7369:1;7360:6;7355:3;7351:16;7344:27;7193:184;7131:246;;;:::o;7383:373::-;7469:3;7497:38;7529:5;7497:38;:::i;:::-;7551:70;7614:6;7609:3;7551:70;:::i;:::-;7544:77;;7630:65;7688:6;7683:3;7676:4;7669:5;7665:16;7630:65;:::i;:::-;7720:29;7742:6;7720:29;:::i;:::-;7715:3;7711:39;7704:46;;7473:283;7383:373;;;;:::o;7762:636::-;7955:4;7993:3;7982:9;7978:19;7970:27;;8007:69;8073:1;8062:9;8058:17;8049:6;8007:69;:::i;:::-;8086:72;8154:2;8143:9;8139:18;8130:6;8086:72;:::i;:::-;8168;8236:2;8225:9;8221:18;8212:6;8168:72;:::i;:::-;8287:9;8281:4;8277:20;8272:2;8261:9;8257:18;8250:48;8315:76;8386:4;8377:6;8315:76;:::i;:::-;8307:84;;7762:636;;;;;;;:::o;8404:122::-;8477:24;8495:5;8477:24;:::i;:::-;8470:5;8467:35;8457:63;;8516:1;8513;8506:12;8457:63;8404:122;:::o;8532:143::-;8589:5;8620:6;8614:13;8605:22;;8636:33;8663:5;8636:33;:::i;:::-;8532:143;;;;:::o;8681:351::-;8751:6;8800:2;8788:9;8779:7;8775:23;8771:32;8768:119;;;8806:79;;:::i;:::-;8768:119;8926:1;8951:64;9007:7;8998:6;8987:9;8983:22;8951:64;:::i;:::-;8941:74;;8897:128;8681:351;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"350200","executionCost":"386","totalCost":"350586"},"external":{"lastMessageID()":"2429","processMessage(uint32,address,uint256)":"infinite","sendTransaction(uint32,address,address,uint256,bytes)":"infinite"}},"methodIdentifiers":{"lastMessageID()":"621fbd59","processMessage(uint32,address,uint256)":"3dd37287","sendTransaction(uint32,address,address,uint256,bytes)":"cef5ddf0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"lastMessageID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"ethereumDomain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"igpAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gasAmount\",\"type\":\"uint256\"}],\"name\":\"processMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"ethereumDomain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"sendTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HyperContract.sol\":\"HyperContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"contracts/HyperContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\r\\npragma solidity >=0.6.11;\\r\\nimport \\\"./precompiles/InterchainAccountRouter.sol\\\";\\r\\nimport \\\"./precompiles/InterchainGasPaymaster.sol\\\";\\r\\nimport {CallLib} from \\\"./precompiles/libs/Call.sol\\\";\\r\\n\\r\\ncontract HyperContract {\\r\\n    bytes32 public lastMessageID ;\\r\\n    function sendTransaction(\\r\\n        uint32 ethereumDomain,\\r\\n        address routerAddress,\\r\\n        address toAddress,\\r\\n        uint256 value,\\r\\n        bytes memory data\\r\\n    ) public {\\r\\n        IInterchainAccountRouter router = IInterchainAccountRouter(\\r\\n            routerAddress\\r\\n        );\\r\\n        lastMessageID = router.callRemote(\\r\\n            ethereumDomain,\\r\\n            (toAddress),\\r\\n            value,\\r\\n            data\\r\\n        );\\r\\n    }\\r\\n\\r\\n function processMessage(\\r\\n        uint32 ethereumDomain,\\r\\n        address igpAddress,\\r\\n        uint256 gasAmount\\r\\n    ) public payable {\\r\\n      \\r\\n        // The testnet DefaultIsmInterchainGasPaymaster\\r\\n        IInterchainGasPaymaster igp = IInterchainGasPaymaster(igpAddress);\\r\\n        igp.payForGas{value: msg.value}(\\r\\n            // The ID of the message\\r\\n            lastMessageID,\\r\\n            // Destination domain\\r\\n            ethereumDomain,\\r\\n            // The total gas amount. This should be the\\r\\n            // overhead gas amount + gas used by the call being made\\r\\n            gasAmount,\\r\\n            // Refund the msg.sender\\r\\n            msg.sender\\r\\n        );\\r\\n    }\\r\\n\\r\\n    \\r\\n}\\r\\n\",\"keccak256\":\"0xd661f1ccbf7cb1ca7383ffb08a570d3131ebb28bf0b231047f60a6f8c2063b7e\",\"license\":\"MIT OR Apache-2.0\"},\"contracts/precompiles/InterchainAccountRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\r\\npragma solidity >=0.6.11;\\r\\n\\r\\nimport {CallLib} from \\\"./libs/Call.sol\\\";\\r\\n\\r\\ninterface IInterchainAccountRouter {\\r\\n    function callRemote(\\r\\n        uint32 _destinationDomain,\\r\\n         address to,\\r\\n        uint256 value,\\r\\n        bytes memory data\\r\\n    ) external returns (bytes32);\\r\\n\\r\\n    function getRemoteInterchainAccount(uint32 _destination, address _owner)\\r\\n        external\\r\\n        view\\r\\n        returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x9b222046a86ee642a1b88cdf9406143ecf27e62e0c08d4b477e61f69cf5ef3c8\",\"license\":\"MIT OR Apache-2.0\"},\"contracts/precompiles/InterchainGasPaymaster.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\r\\npragma solidity >=0.6.11;\\r\\n\\r\\ninterface IInterchainGasPaymaster {\\r\\n    function payForGas(\\r\\n        bytes32 _messageId,\\r\\n         uint32 _destinationDomain,\\r\\n        uint256 _gasAmount,\\r\\n        address _refundAddress\\r\\n    ) external payable;\\r\\n}\\r\\n\",\"keccak256\":\"0xaf58aa240b9701d1ae5d7498b8214f8301dda90a95636f4dd78f8ea01cf1c84b\",\"license\":\"MIT OR Apache-2.0\"},\"contracts/precompiles/libs/Call.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\r\\npragma solidity ^0.8.13;\\r\\n\\r\\nimport {Address} from \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\r\\n\\r\\nimport {TypeCasts} from \\\"./TypeCasts.sol\\\";\\r\\n\\r\\nlibrary CallLib {\\r\\n    struct StaticCall {\\r\\n        // supporting non EVM targets\\r\\n        bytes32 to;\\r\\n        bytes data;\\r\\n    }\\r\\n\\r\\n    struct Call {\\r\\n        // supporting non EVM targets\\r\\n        bytes32 to;\\r\\n        uint256 value;\\r\\n        bytes data;\\r\\n    }\\r\\n\\r\\n    struct StaticCallWithCallback {\\r\\n        StaticCall _call;\\r\\n        bytes callback;\\r\\n    }\\r\\n\\r\\n    function call(Call memory _call)\\r\\n        internal\\r\\n        returns (bytes memory returnData)\\r\\n    {\\r\\n        return\\r\\n            Address.functionCallWithValue(\\r\\n                TypeCasts.bytes32ToAddress(_call.to),\\r\\n                _call.data,\\r\\n                _call.value\\r\\n            );\\r\\n    }\\r\\n\\r\\n    function staticcall(StaticCall memory _call)\\r\\n        private\\r\\n        view\\r\\n        returns (bytes memory)\\r\\n    {\\r\\n        return\\r\\n            Address.functionStaticCall(\\r\\n                TypeCasts.bytes32ToAddress(_call.to),\\r\\n                _call.data\\r\\n            );\\r\\n    }\\r\\n\\r\\n    function staticcall(StaticCallWithCallback memory _call)\\r\\n        internal\\r\\n        view\\r\\n        returns (bytes memory callback)\\r\\n    {\\r\\n        return bytes.concat(_call.callback, staticcall(_call._call));\\r\\n    }\\r\\n\\r\\n    function multicall(Call[] memory calls) internal {\\r\\n        uint256 i = 0;\\r\\n        uint256 len = calls.length;\\r\\n        while (i < len) {\\r\\n            call(calls[i]);\\r\\n            unchecked {\\r\\n                ++i;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function multistaticcall(StaticCallWithCallback[] memory _calls)\\r\\n        internal\\r\\n        view\\r\\n        returns (bytes[] memory)\\r\\n    {\\r\\n        uint256 i = 0;\\r\\n        uint256 len = _calls.length;\\r\\n        bytes[] memory callbacks = new bytes[](len);\\r\\n        while (i < len) {\\r\\n            callbacks[i] = staticcall(_calls[i]);\\r\\n            unchecked {\\r\\n                ++i;\\r\\n            }\\r\\n        }\\r\\n        return callbacks;\\r\\n    }\\r\\n\\r\\n    function multicallto(address to, bytes[] memory calls) internal {\\r\\n        uint256 i = 0;\\r\\n        uint256 len = calls.length;\\r\\n        while (i < len) {\\r\\n            Address.functionCall(to, calls[i]);\\r\\n            unchecked {\\r\\n                ++i;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function build(bytes32 to, bytes memory data)\\r\\n        internal\\r\\n        pure\\r\\n        returns (StaticCall memory)\\r\\n    {\\r\\n        return StaticCall(to, data);\\r\\n    }\\r\\n\\r\\n    function build(address to, bytes memory data)\\r\\n        internal\\r\\n        pure\\r\\n        returns (StaticCall memory)\\r\\n    {\\r\\n        return build(TypeCasts.addressToBytes32(to), data);\\r\\n    }\\r\\n\\r\\n    function build(\\r\\n        bytes32 to,\\r\\n        uint256 value,\\r\\n        bytes memory data\\r\\n    ) internal pure returns (Call memory) {\\r\\n        return Call(to, value, data);\\r\\n    }\\r\\n\\r\\n    function build(\\r\\n        address to,\\r\\n        uint256 value,\\r\\n        bytes memory data\\r\\n    ) internal pure returns (Call memory) {\\r\\n        return Call(TypeCasts.addressToBytes32(to), value, data);\\r\\n    }\\r\\n\\r\\n    function build(\\r\\n        bytes32 to,\\r\\n        bytes memory data,\\r\\n        bytes memory callback\\r\\n    ) internal pure returns (StaticCallWithCallback memory) {\\r\\n        return StaticCallWithCallback(build(to, data), callback);\\r\\n    }\\r\\n\\r\\n    function build(\\r\\n        address to,\\r\\n        bytes memory data,\\r\\n        bytes memory callback\\r\\n    ) internal pure returns (StaticCallWithCallback memory) {\\r\\n        return StaticCallWithCallback(build(to, data), callback);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xd81d486e87fc6872068ff8454dd3e626ef5c012f4fb51ed871f1082d462ad2f7\",\"license\":\"Apache-2.0\"},\"contracts/precompiles/libs/TypeCasts.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\r\\npragma solidity >=0.6.11;\\r\\n\\r\\nlibrary TypeCasts {\\r\\n    // alignment preserving cast\\r\\n    function addressToBytes32(address _addr) internal pure returns (bytes32) {\\r\\n        return bytes32(uint256(uint160(_addr)));\\r\\n    }\\r\\n\\r\\n    // alignment preserving cast\\r\\n    function bytes32ToAddress(bytes32 _buf) internal pure returns (address) {\\r\\n        return address(uint160(uint256(_buf)));\\r\\n    }\\r\\n}\",\"keccak256\":\"0x2b223c8b1cd9ff5d73208abe2f0ef563631810881922fb14c276d5a8fe08e811\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2257,"contract":"contracts/HyperContract.sol:HyperContract","label":"lastMessageID","offset":0,"slot":"0","type":"t_bytes32"}],"types":{"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/PlanetDAO.sol":{"PlanetDAO":{"abi":[{"inputs":[],"name":"_dao_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_dao_uris","outputs":[{"internalType":"string","name":"dao_wallet","type":"string"},{"internalType":"string","name":"dao_uri","type":"string"},{"internalType":"string","name":"finished","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_donated","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_donations","outputs":[{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"uint256","name":"userid","type":"uint256"},{"internalType":"uint256","name":"donation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_donations_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_feed_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_feeds","outputs":[{"internalType":"uint256","name":"feed_id","type":"uint256"},{"internalType":"uint256","name":"date","type":"uint256"},{"internalType":"string","name":"Type","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_goal_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_goal_uris","outputs":[{"internalType":"string","name":"dao_id","type":"string"},{"internalType":"string","name":"goal_uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_ideas_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_ideas_uris","outputs":[{"internalType":"uint256","name":"goal_id","type":"uint256"},{"internalType":"string","name":"ideas_uri","type":"string"},{"internalType":"uint256","name":"donation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_ideas_vote_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_join_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_joined_person","outputs":[{"internalType":"uint256","name":"daoid","type":"uint256"},{"internalType":"uint256","name":"user_id","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_message_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_message_read_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_reply_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_smart_contract_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_smart_contracts_uris","outputs":[{"internalType":"uint256","name":"smart_contract_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"smart_contract_uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_template_uris","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_user_badges","outputs":[{"internalType":"uint256","name":"user_id","type":"uint256"},{"internalType":"bool","name":"dao","type":"bool"},{"internalType":"bool","name":"joined","type":"bool"},{"internalType":"bool","name":"goal","type":"bool"},{"internalType":"bool","name":"ideas","type":"bool"},{"internalType":"bool","name":"vote","type":"bool"},{"internalType":"bool","name":"donation","type":"bool"},{"internalType":"bool","name":"comment","type":"bool"},{"internalType":"bool","name":"reply","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"feed_text","type":"string"},{"internalType":"string","name":"_type","type":"string"}],"name":"add_Feed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"uint256","name":"_doantion","type":"uint256"},{"internalType":"uint256","name":"_userid","type":"uint256"},{"internalType":"string","name":"_feed1","type":"string"},{"internalType":"string","name":"_feed2","type":"string"}],"name":"add_donation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_goal_ideas_votes","outputs":[{"internalType":"uint256","name":"goal_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"uint256","name":"user_id","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_messages","outputs":[{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"message","type":"string"},{"internalType":"string","name":"sender","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_read_messages","outputs":[{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"uint256","name":"user_id","type":"uint256"},{"internalType":"string","name":"msg_type","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_replies","outputs":[{"internalType":"uint256","name":"reply_id","type":"uint256"},{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_dao_wallet","type":"string"},{"internalType":"string","name":"_dao_uri","type":"string"},{"internalType":"string","name":"_template","type":"string"},{"internalType":"uint256","name":"user_id","type":"uint256"}],"name":"create_dao","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_uri","type":"string"},{"internalType":"string","name":"_dao_id","type":"string"},{"internalType":"uint256","name":"_user_id","type":"uint256"},{"internalType":"string","name":"_feed","type":"string"}],"name":"create_goal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"uint256","name":"_user_id","type":"uint256"},{"internalType":"string","name":"_feed","type":"string"}],"name":"create_goal_ideas_vote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"},{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"string[]","name":"_smart_contracts","type":"string[]"},{"internalType":"uint256","name":"_user_id","type":"uint256"},{"internalType":"string","name":"_feed","type":"string"}],"name":"create_ideas","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"}],"name":"dao_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"ideas_id","type":"uint256"}],"name":"getMsgIDs","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_message_id","type":"uint256"},{"internalType":"string","name":"msg_type","type":"string"}],"name":"getReadMsg","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"message_id","type":"uint256"}],"name":"getReplyIDs","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_daos","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_goals","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_dao_id","type":"string"}],"name":"get_all_goals_by_dao_id","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_ideas","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"}],"name":"get_all_ideas_by_goal_id","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_uri","type":"string"}],"name":"get_goal_id_by_goal_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"get_goal_id_from_ideas_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"get_ideas_id_by_ideas_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"}],"name":"get_ideas_votes_from_goal","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"}],"name":"goal_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"}],"name":"ideas_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"person","type":"uint256"}],"name":"is_person_joined","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"dao_id","type":"uint256"},{"internalType":"uint256","name":"person","type":"uint256"},{"internalType":"string","name":"_feed","type":"string"}],"name":"join_community","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reset_all","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_message","type":"string"},{"internalType":"string","name":"_sender","type":"string"},{"internalType":"uint256","name":"_user_id","type":"uint256"}],"name":"sendMsg","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_message_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"uint256","name":"_wallet","type":"uint256"},{"internalType":"string","name":"msg_type","type":"string"}],"name":"sendReadMsg","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_message_id","type":"uint256"},{"internalType":"string","name":"_reply","type":"string"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"uint256","name":"_userid","type":"uint256"}],"name":"sendReply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"},{"internalType":"string","name":"_dao_wallet","type":"string"},{"internalType":"string","name":"_dao_uri","type":"string"}],"name":"set_dao","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"string","name":"_goal_uri","type":"string"}],"name":"set_goal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"set_ideas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"},{"internalType":"string","name":"_template","type":"string"}],"name":"update_template","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50614623806100206000396000f3fe608060405234801561001057600080fd5b50600436106103785760003560e01c80638ac4110c116101d3578063bda0033511610104578063cd230809116100a2578063e1b011a01161007c578063e1b011a014610bbf578063e32acc1a14610bef578063ec24580214610c1f578063ff4a37ef14610c3d57610378565b8063cd23080914610b41578063d3791b2014610b71578063d9fc52db14610b8f57610378565b8063c29595c5116100de578063c29595c514610aa4578063c7af4ee514610ac0578063ca013f1714610af0578063cace8d4614610b0e57610378565b8063bda0033514610a4e578063c04e743014610a6a578063c04fe97814610a8657610378565b8063a1ca917811610171578063aa4cdf2a1161014b578063aa4cdf2a146109b1578063b16060a6146109e1578063b39a38bd146109eb578063b527d45e14610a1b57610378565b8063a1ca91781461092b578063a428a47f1461095b578063aa2bf5d31461099357610378565b80638d6b30a1116101ad5780638d6b30a11461088f5780639077007d146108bf578063934c5f00146108dd57806397ee76061461090d57610378565b80638ac4110c146108255780638c70034a146108435780638d3d25951461085f57610378565b80634be7adb5116102ad5780637f2035d41161024b578063812fae1f11610225578063812fae1f1461078d57806386ffa45b146107bd57806387633eb2146107ed578063881de8581461080957610378565b80637f2035d4146106fa5780637fc543ec1461072b578063803f5b9f1461075d57610378565b80635d907da1116102875780635d907da11461064c5780636ecda4ee1461067c578063787f19c7146106ac5780637bbd582d146106dc57610378565b80634be7adb5146105cd57806354a9fb18146105fd5780635996278f1461063057610378565b806320959ed01161031a578063330b8f26116102f4578063330b8f26146105195780633f87a2f41461054a578063468d0c801461057d5780634a797bd7146105af57610378565b806320959ed01461049957806327a568b9146104c957806329b56f60146104fb57610378565b806313bf4cea1161035657806313bf4cea146103fb5780631b592aeb146104195780631ba44c4c146104375780631e9ac9f51461046957610378565b80630377d44a1461037d5780631171b621146103ad578063131d44f2146103cb575b600080fd5b610397600480360381019061039291906133a4565b610c6f565b6040516103a4919061352e565b60405180910390f35b6103b5610df9565b6040516103c29190613569565b60405180910390f35b6103e560048036038101906103e091906135b0565b610dff565b6040516103f2919061352e565b60405180910390f35b610403610f6e565b6040516104109190613569565b60405180910390f35b610421610f74565b60405161042e9190613569565b60405180910390f35b610451600480360381019061044c91906135b0565b610f7a565b604051610460939291906135dd565b60405180910390f35b610483600480360381019061047e91906133a4565b610fa4565b6040516104909190613569565b60405180910390f35b6104b360048036038101906104ae91906135b0565b611015565b6040516104c09190613569565b60405180910390f35b6104e360048036038101906104de91906135b0565b61102d565b6040516104f29392919061365e565b60405180910390f35b6105036111ef565b604051610510919061352e565b60405180910390f35b610533600480360381019061052e91906135b0565b61132a565b6040516105419291906136aa565b60405180910390f35b610564600480360381019061055f91906135b0565b61134e565b60405161057494939291906136d3565b60405180910390f35b610597600480360381019061059291906135b0565b611406565b6040516105a69392919061371f565b60405180910390f35b6105b76114b8565b6040516105c49190613569565b60405180910390f35b6105e760048036038101906105e2919061375d565b6114be565b6040516105f4919061385b565b60405180910390f35b610617600480360381019061061291906135b0565b6115c4565b604051610627949392919061387d565b60405180910390f35b61064a600480360381019061064591906138d0565b611704565b005b610666600480360381019061066191906135b0565b6118a8565b6040516106739190613983565b60405180910390f35b610696600480360381019061069191906135b0565b611950565b6040516106a39190613983565b60405180910390f35b6106c660048036038101906106c191906139a5565b6119f0565b6040516106d39190613569565b60405180910390f35b6106e4611ac1565b6040516106f19190613569565b60405180910390f35b610714600480360381019061070f91906135b0565b611ac7565b604051610722929190613a44565b60405180910390f35b610745600480360381019061074091906135b0565b611bfb565b604051610754939291906135dd565b60405180910390f35b610777600480360381019061077291906135b0565b611c25565b604051610784919061385b565b60405180910390f35b6107a760048036038101906107a291906135b0565b611d08565b6040516107b4919061385b565b60405180910390f35b6107d760048036038101906107d29190613a7b565b611deb565b6040516107e49190613569565b60405180910390f35b61080760048036038101906108029190613b36565b611f0b565b005b610823600480360381019061081e9190613b92565b611f30565b005b61082d611f7d565b60405161083a9190613569565b60405180910390f35b61085d60048036038101906108589190613c1d565b611f83565b005b610879600480360381019061087491906135b0565b61204f565b6040516108869190613983565b60405180910390f35b6108a960048036038101906108a49190613c8c565b6120f7565b6040516108b69190613569565b60405180910390f35b6108c76121dd565b6040516108d49190613569565b60405180910390f35b6108f760048036038101906108f29190613c8c565b6121e3565b6040516109049190613569565b60405180910390f35b610915612277565b604051610922919061352e565b60405180910390f35b610945600480360381019061094091906133a4565b6123b2565b6040516109529190613569565b60405180910390f35b610975600480360381019061097091906135b0565b612423565b60405161098a99989796959493929190613d2a565b60405180910390f35b61099b6124d9565b6040516109a89190613569565b60405180910390f35b6109cb60048036038101906109c691906133a4565b6124df565b6040516109d89190613569565b60405180910390f35b6109e9612566565b005b610a056004803603810190610a009190613db7565b612818565b604051610a129190613569565b60405180910390f35b610a356004803603810190610a3091906135b0565b612906565b604051610a45949392919061387d565b60405180910390f35b610a686004803603810190610a639190613e72565b612a46565b005b610a846004803603810190610a7f9190613b36565b612add565b005b610a8e612b05565b604051610a9b919061352e565b60405180910390f35b610abe6004803603810190610ab99190613b36565b612c3f565b005b610ada6004803603810190610ad591906135b0565b612c67565b604051610ae79190613eea565b60405180910390f35b610af8612cbe565b604051610b059190613569565b60405180910390f35b610b286004803603810190610b2391906135b0565b612cc4565b604051610b3894939291906136d3565b60405180910390f35b610b5b6004803603810190610b569190613b36565b612d7c565b604051610b689190613eea565b60405180910390f35b610b79612e0d565b604051610b869190613569565b60405180910390f35b610ba96004803603810190610ba49190613f05565b612e13565b604051610bb69190613569565b60405180910390f35b610bd96004803603810190610bd4919061406e565b612ed8565b604051610be69190613569565b60405180910390f35b610c096004803603810190610c0491906135b0565b61302d565b604051610c169190613983565b60405180910390f35b610c276130d5565b604051610c349190613569565b60405180910390f35b610c576004803603810190610c5291906135b0565b6130db565b604051610c669392919061413d565b60405180910390f35b6060600060025467ffffffffffffffff811115610c8f57610c8e613279565b5b604051908082528060200260200182016040528015610cc257816020015b6060815260200190600190039081610cad5790505b509050600080600090505b600254811015610dee578480519060200120600e6000838152602001908152602001600020600001604051610d02919061427e565b604051809103902003610ddb57600e60008281526020019081526020016000206001018054610d30906141aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610d5c906141aa565b8015610da95780601f10610d7e57610100808354040283529160200191610da9565b820191906000526020600020905b815481529060010190602001808311610d8c57829003601f168201915b5050505050838381518110610dc157610dc0614295565b5b60200260200101819052508180610dd7906142f3565b9250505b8080610de6906142f3565b915050610ccd565b508192505050919050565b60045481565b6060600060035467ffffffffffffffff811115610e1f57610e1e613279565b5b604051908082528060200260200182016040528015610e5257816020015b6060815260200190600190039081610e3d5790505b509050600080600090505b600354811015610f635784600f60008381526020019081526020016000206000015403610f4257600f60008281526020019081526020016000206001018054610ea5906141aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610ed1906141aa565b8015610f1e5780601f10610ef357610100808354040283529160200191610f1e565b820191906000526020600020905b815481529060010190602001808311610f0157829003601f168201915b5050505050838381518110610f3657610f35614295565b5b60200260200101819052505b8180610f4d906142f3565b9250508080610f5b906142f3565b915050610e5d565b508192505050919050565b60025481565b60055481565b60146020528060005260406000206000915090508060000154908060010154908060020154905083565b600080600090505b60025481101561100a578280519060200120600e6000838152602001908152602001600020600101604051610fe1919061427e565b604051809103902003610ff75780915050611010565b8080611002906142f3565b915050610fac565b50600090505b919050565b60106020528060005260406000206000915090505481565b600b602052806000526040600020600091509050806000018054611050906141aa565b80601f016020809104026020016040519081016040528092919081815260200182805461107c906141aa565b80156110c95780601f1061109e576101008083540402835291602001916110c9565b820191906000526020600020905b8154815290600101906020018083116110ac57829003601f168201915b5050505050908060010180546110de906141aa565b80601f016020809104026020016040519081016040528092919081815260200182805461110a906141aa565b80156111575780601f1061112c57610100808354040283529160200191611157565b820191906000526020600020905b81548152906001019060200180831161113a57829003601f168201915b50505050509080600201805461116c906141aa565b80601f0160208091040260200160405190810160405280929190818152602001828054611198906141aa565b80156111e55780601f106111ba576101008083540402835291602001916111e5565b820191906000526020600020905b8154815290600101906020018083116111c857829003601f168201915b5050505050905083565b6060600060025467ffffffffffffffff81111561120f5761120e613279565b5b60405190808252806020026020018201604052801561124257816020015b606081526020019060019003908161122d5790505b50905060005b60025481101561132257600e60008281526020019081526020016000206001018054611273906141aa565b80601f016020809104026020016040519081016040528092919081815260200182805461129f906141aa565b80156112ec5780601f106112c1576101008083540402835291602001916112ec565b820191906000526020600020905b8154815290600101906020018083116112cf57829003601f168201915b505050505082828151811061130457611303614295565b5b6020026020010181905250808061131a906142f3565b915050611248565b508091505090565b600d6020528060005260406000206000915090508060000154908060010154905082565b6017602052806000526040600020600091509050806000015490806001015490806002015490806003018054611383906141aa565b80601f01602080910402602001604051908101604052809291908181526020018280546113af906141aa565b80156113fc5780601f106113d1576101008083540402835291602001916113fc565b820191906000526020600020905b8154815290600101906020018083116113df57829003601f168201915b5050505050905084565b600f60205280600052604060002060009150905080600001549080600101805461142f906141aa565b80601f016020809104026020016040519081016040528092919081815260200182805461145b906141aa565b80156114a85780601f1061147d576101008083540402835291602001916114a8565b820191906000526020600020905b81548152906001019060200180831161148b57829003601f168201915b5050505050908060020154905083565b60065481565b6060600060065467ffffffffffffffff8111156114de576114dd613279565b5b60405190808252806020026020018201604052801561150c5781602001602082028036833780820191505090505b509050600080600090505b6006548110156115b85785601460008381526020019081526020016000206000015414801561155b5750846014600083815260200190815260200160002060010154145b1561159757601460008281526020019081526020016000206002015483838151811061158a57611589614295565b5b6020026020010181815250505b81806115a2906142f3565b92505080806115b0906142f3565b915050611517565b50819250505092915050565b60116020528060005260406000206000915090508060000154908060010154908060020180546115f3906141aa565b80601f016020809104026020016040519081016040528092919081815260200182805461161f906141aa565b801561166c5780601f106116415761010080835404028352916020019161166c565b820191906000526020600020905b81548152906001019060200180831161164f57829003601f168201915b505050505090806003018054611681906141aa565b80601f01602080910402602001604051908101604052809291908181526020018280546116ad906141aa565b80156116fa5780601f106116cf576101008083540402835291602001916116fa565b820191906000526020600020905b8154815290600101906020018083116116dd57829003601f168201915b5050505050905084565b600015156018600085815260200190815260200160002060010160059054906101000a900460ff1615150361177357611772826040518060400160405280600581526020017f6261646765000000000000000000000000000000000000000000000000000000815250612a46565b5b6117b2816040518060400160405280600881526020017f646f6e6174696f6e000000000000000000000000000000000000000000000000815250612a46565b60016018600085815260200190815260200160002060010160056101000a81548160ff02191690831515021790555083600f60008781526020019081526020016000206002016000828254611807919061433b565b9250508190555083601060008581526020019081526020016000206000828254611831919061433b565b925050819055506040518060600160405280868152602001848152602001858152506012600060015481526020019081526020016000206000820151816000015560208201518160010155604082015181600201559050506001600081548092919061189c906142f3565b91905055505050505050565b6060600b600083815260200190815260200160002060010180546118cb906141aa565b80601f01602080910402602001604051908101604052809291908181526020018280546118f7906141aa565b80156119445780601f1061191957610100808354040283529160200191611944565b820191906000526020600020905b81548152906001019060200180831161192757829003601f168201915b50505050509050919050565b600c602052806000526040600020600091509050805461196f906141aa565b80601f016020809104026020016040519081016040528092919081815260200182805461199b906141aa565b80156119e85780601f106119bd576101008083540402835291602001916119e8565b820191906000526020600020905b8154815290600101906020018083116119cb57829003601f168201915b505050505081565b600060016018600084815260200190815260200160002060010160066101000a81548160ff021916908315150217905550604051806080016040528060075481526020018681526020018581526020018481525060156000600754815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081611a82919061451b565b506060820151816003019081611a98919061451b565b5090505060076000815480929190611aaf906142f3565b91905055506007549050949350505050565b60005481565b600e602052806000526040600020600091509050806000018054611aea906141aa565b80601f0160208091040260200160405190810160405280929190818152602001828054611b16906141aa565b8015611b635780601f10611b3857610100808354040283529160200191611b63565b820191906000526020600020905b815481529060010190602001808311611b4657829003601f168201915b505050505090806001018054611b78906141aa565b80601f0160208091040260200160405190810160405280929190818152602001828054611ba4906141aa565b8015611bf15780601f10611bc657610100808354040283529160200191611bf1565b820191906000526020600020905b815481529060010190602001808311611bd457829003601f168201915b5050505050905082565b60126020528060005260406000206000915090508060000154908060010154908060020154905083565b6060600060075467ffffffffffffffff811115611c4557611c44613279565b5b604051908082528060200260200182016040528015611c735781602001602082028036833780820191505090505b509050600080600090505b600754811015611cfd5784601560008381526020019081526020016000206001015403611cea576015600082815260200190815260200160002060000154838381518110611ccf57611cce614295565b5b6020026020010181815250508180611ce6906142f3565b9250505b8080611cf5906142f3565b915050611c7e565b508192505050919050565b6060600060095467ffffffffffffffff811115611d2857611d27613279565b5b604051908082528060200260200182016040528015611d565781602001602082028036833780820191505090505b509050600080600090505b600954811015611de05784601760008381526020019081526020016000206001015403611dcd576017600082815260200190815260200160002060000154838381518110611db257611db1614295565b5b6020026020010181815250508180611dc9906142f3565b9250505b8080611dd8906142f3565b915050611d61565b508192505050919050565b600060405180606001604052808681526020018581526020016040518060400160405280600581526020017f46616c7365000000000000000000000000000000000000000000000000000000815250815250600b6000805481526020019081526020016000206000820151816000019081611e66919061451b565b506020820151816001019081611e7c919061451b565b506040820151816002019081611e92919061451b565b5090505082600c6000805481526020019081526020016000209081611eb7919061451b565b5060016018600084815260200190815260200160002060010160006101000a81548160ff021916908315150217905550600080815480929190611ef9906142f3565b91905055506000549050949350505050565b80600c60008481526020019081526020016000209081611f2b919061451b565b505050565b81600b60008581526020019081526020016000206000019081611f53919061451b565b5080600b60008581526020019081526020016000206001019081611f77919061451b565b50505050565b600a5481565b60016018600084815260200190815260200160002060010160016101000a81548160ff021916908315150217905550604051806040016040528084815260200183815250600d60006004548152602001908152602001600020600082015181600001556020820151816001015590505060046000815480929190612006906142f3565b919050555061204a816040518060400160405280600481526020017f6a6f696e00000000000000000000000000000000000000000000000000000000815250612a46565b505050565b6060600f60008381526020019081526020016000206001018054612072906141aa565b80601f016020809104026020016040519081016040528092919081815260200182805461209e906141aa565b80156120eb5780601f106120c0576101008083540402835291602001916120eb565b820191906000526020600020905b8154815290600101906020018083116120ce57829003601f168201915b50505050509050919050565b600060016018600085815260200190815260200160002060010160046101000a81548160ff0219169083151502179055506040518060600160405280868152602001858152602001848152506014600060065481526020019081526020016000206000820151816000015560208201518160010155604082015181600201559050506006600081548092919061218c906142f3565b91905055506121d0826040518060400160405280600481526020017f766f746500000000000000000000000000000000000000000000000000000000815250612a46565b6006549050949350505050565b60075481565b6000604051806080016040528086815260200185815260200184815260200183815250601660006008548152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301908161224e919061451b565b5090505060086000815480929190612265906142f3565b91905055506008549050949350505050565b6060600060035467ffffffffffffffff81111561229757612296613279565b5b6040519080825280602002602001820160405280156122ca57816020015b60608152602001906001900390816122b55790505b50905060005b6003548110156123aa57600f600082815260200190815260200160002060010180546122fb906141aa565b80601f0160208091040260200160405190810160405280929190818152602001828054612327906141aa565b80156123745780601f1061234957610100808354040283529160200191612374565b820191906000526020600020905b81548152906001019060200180831161235757829003601f168201915b505050505082828151811061238c5761238b614295565b5b602002602001018190525080806123a2906142f3565b9150506122d0565b508091505090565b600080600090505b600354811015612418578280519060200120600f60008381526020019081526020016000206001016040516123ef919061427e565b604051809103902003612405578091505061241e565b8080612410906142f3565b9150506123ba565b50600090505b919050565b60186020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16908060010160029054906101000a900460ff16908060010160039054906101000a900460ff16908060010160049054906101000a900460ff16908060010160059054906101000a900460ff16908060010160069054906101000a900460ff16908060010160079054906101000a900460ff16905089565b60095481565b600080600090505b60035481101561255b578280519060200120600f600083815260200190815260200160002060010160405161251c919061427e565b60405180910390200361254857600f600082815260200190815260200160002060000154915050612561565b8080612553906142f3565b9150506124e7565b50600090505b919050565b60005b6000548110156125cc57600b60008281526020019081526020016000206000808201600061259791906131ed565b6001820160006125a791906131ed565b6002820160006125b791906131ed565b505080806125c4906142f3565b915050612569565b5060005b60025481101561262357600e6000828152602001908152602001600020600080820160006125fe91906131ed565b60018201600061260e91906131ed565b5050808061261b906142f3565b9150506125d0565b5060005b60035481101561267a57600f600082815260200190815260200160002060008082016000905560018201600061265d91906131ed565b600282016000905550508080612672906142f3565b915050612627565b5060005b6002548110156126d1576013600082815260200190815260200160002060008082016000905560018201600090556002820160006126bc91906131ed565b505080806126c9906142f3565b91505061267e565b5060005b6007548110156127385760156000828152602001908152602001600020600080820160009055600182016000905560028201600061271391906131ed565b60038201600061272391906131ed565b50508080612730906142f3565b9150506126d5565b5060005b60095481101561279757601760008281526020019081526020016000206000808201600090556001820160009055600282016000905560038201600061278291906131ed565b5050808061278f906142f3565b91505061273c565b5060005b6006548110156127e6576014600082815260200190815260200160002060008082016000905560018201600090556002820160009055505080806127de906142f3565b91505061279b565b506000808190555060006002819055506000600381905550600060078190555060006009819055506000600681905550565b6000604051806040016040528085815260200186815250600e600060025481526020019081526020016000206000820151816000019081612859919061451b565b50602082015181600101908161286f919061451b565b5090505060016018600085815260200190815260200160002060010160026101000a81548160ff021916908315150217905550600260008154809291906128b5906142f3565b91905055506128f9826040518060400160405280600481526020017f676f616c00000000000000000000000000000000000000000000000000000000815250612a46565b6002549050949350505050565b6015602052806000526040600020600091509050806000015490806001015490806002018054612935906141aa565b80601f0160208091040260200160405190810160405280929190818152602001828054612961906141aa565b80156129ae5780601f10612983576101008083540402835291602001916129ae565b820191906000526020600020905b81548152906001019060200180831161299157829003601f168201915b5050505050908060030180546129c3906141aa565b80601f01602080910402602001604051908101604052809291908181526020018280546129ef906141aa565b8015612a3c5780601f10612a1157610100808354040283529160200191612a3c565b820191906000526020600020905b815481529060010190602001808311612a1f57829003601f168201915b5050505050905084565b6040518060800160405280600a5481526020014281526020018281526020018381525060116000600a54815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081612aa7919061451b565b506060820151816003019081612abd919061451b565b50905050600a6000815480929190612ad4906142f3565b91905055505050565b80600f60008481526020019081526020016000206001019081612b00919061451b565b505050565b60606000805467ffffffffffffffff811115612b2457612b23613279565b5b604051908082528060200260200182016040528015612b5757816020015b6060815260200190600190039081612b425790505b50905060005b600054811015612c3757600b60008281526020019081526020016000206001018054612b88906141aa565b80601f0160208091040260200160405190810160405280929190818152602001828054612bb4906141aa565b8015612c015780601f10612bd657610100808354040283529160200191612c01565b820191906000526020600020905b815481529060010190602001808311612be457829003601f168201915b5050505050828281518110612c1957612c18614295565b5b60200260200101819052508080612c2f906142f3565b915050612b5d565b508091505090565b80600e60008481526020019081526020016000206001019081612c62919061451b565b505050565b600080600090505b600454811015612cb35782600d60008381526020019081526020016000206001015403612ca0576001915050612cb9565b8080612cab906142f3565b915050612c6f565b50600090505b919050565b60085481565b6016602052806000526040600020600091509050806000015490806001015490806002015490806003018054612cf9906141aa565b80601f0160208091040260200160405190810160405280929190818152602001828054612d25906141aa565b8015612d725780601f10612d4757610100808354040283529160200191612d72565b820191906000526020600020905b815481529060010190602001808311612d5557829003601f168201915b5050505050905084565b6000806000905060005b600854811015612e0257846016600083815260200190815260200160002060000154148015612de5575060166000828152602001908152602001600020600301604051612dd3919061427e565b60405180910390208480519060200120145b15612def57600191505b8080612dfa906142f3565b915050612d86565b508091505092915050565b60035481565b600060016018600084815260200190815260200160002060010160076101000a81548160ff02191690831515021790555060405180608001604052806009548152602001868152602001848152602001858152506017600060095481526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003019081612eaf919061451b565b5090505060096000815480929190612ec6906142f3565b91905055506009549050949350505050565b600060405180606001604052808681526020018781526020016000815250600f60006003548152602001908152602001600020600082015181600001556020820151816001019081612f2a919061451b565b506040820151816002015590505060016018600085815260200190815260200160002060010160036101000a81548160ff02191690831515021790555060036000815480929190612f7a906142f3565b919050555060005b8451811015612fdf57612fb4600354600554878481518110612fa757612fa6614295565b5b602002602001015161318d565b60056000815480929190612fc7906142f3565b91905055508080612fd7906142f3565b915050612f82565b5061301f826040518060400160405280600481526020017f6964656100000000000000000000000000000000000000000000000000000000815250612a46565b600354905095945050505050565b6060600e60008381526020019081526020016000206001018054613050906141aa565b80601f016020809104026020016040519081016040528092919081815260200182805461307c906141aa565b80156130c95780601f1061309e576101008083540402835291602001916130c9565b820191906000526020600020905b8154815290600101906020018083116130ac57829003601f168201915b50505050509050919050565b60015481565b601360205280600052604060002060009150905080600001549080600101549080600201805461310a906141aa565b80601f0160208091040260200160405190810160405280929190818152602001828054613136906141aa565b80156131835780601f1061315857610100808354040283529160200191613183565b820191906000526020600020905b81548152906001019060200180831161316657829003601f168201915b5050505050905083565b60405180606001604052808481526020018381526020018281525060136000848152602001908152602001600020600082015181600001556020820151816001015560408201518160020190816131e4919061451b565b50905050505050565b5080546131f9906141aa565b6000825580601f1061320b575061322a565b601f016020900490600052602060002090810190613229919061322d565b5b50565b5b8082111561324657600081600090555060010161322e565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6132b182613268565b810181811067ffffffffffffffff821117156132d0576132cf613279565b5b80604052505050565b60006132e361324a565b90506132ef82826132a8565b919050565b600067ffffffffffffffff82111561330f5761330e613279565b5b61331882613268565b9050602081019050919050565b82818337600083830152505050565b6000613347613342846132f4565b6132d9565b90508281526020810184848401111561336357613362613263565b5b61336e848285613325565b509392505050565b600082601f83011261338b5761338a61325e565b5b813561339b848260208601613334565b91505092915050565b6000602082840312156133ba576133b9613254565b5b600082013567ffffffffffffffff8111156133d8576133d7613259565b5b6133e484828501613376565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613453578082015181840152602081019050613438565b60008484015250505050565b600061346a82613419565b6134748185613424565b9350613484818560208601613435565b61348d81613268565b840191505092915050565b60006134a4838361345f565b905092915050565b6000602082019050919050565b60006134c4826133ed565b6134ce81856133f8565b9350836020820285016134e085613409565b8060005b8581101561351c57848403895281516134fd8582613498565b9450613508836134ac565b925060208a019950506001810190506134e4565b50829750879550505050505092915050565b6000602082019050818103600083015261354881846134b9565b905092915050565b6000819050919050565b61356381613550565b82525050565b600060208201905061357e600083018461355a565b92915050565b61358d81613550565b811461359857600080fd5b50565b6000813590506135aa81613584565b92915050565b6000602082840312156135c6576135c5613254565b5b60006135d48482850161359b565b91505092915050565b60006060820190506135f2600083018661355a565b6135ff602083018561355a565b61360c604083018461355a565b949350505050565b600082825260208201905092915050565b600061363082613419565b61363a8185613614565b935061364a818560208601613435565b61365381613268565b840191505092915050565b600060608201905081810360008301526136788186613625565b9050818103602083015261368c8185613625565b905081810360408301526136a08184613625565b9050949350505050565b60006040820190506136bf600083018561355a565b6136cc602083018461355a565b9392505050565b60006080820190506136e8600083018761355a565b6136f5602083018661355a565b613702604083018561355a565b81810360608301526137148184613625565b905095945050505050565b6000606082019050613734600083018661355a565b81810360208301526137468185613625565b9050613755604083018461355a565b949350505050565b6000806040838503121561377457613773613254565b5b60006137828582860161359b565b92505060206137938582860161359b565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6137d281613550565b82525050565b60006137e483836137c9565b60208301905092915050565b6000602082019050919050565b60006138088261379d565b61381281856137a8565b935061381d836137b9565b8060005b8381101561384e57815161383588826137d8565b9750613840836137f0565b925050600181019050613821565b5085935050505092915050565b6000602082019050818103600083015261387581846137fd565b905092915050565b6000608082019050613892600083018761355a565b61389f602083018661355a565b81810360408301526138b18185613625565b905081810360608301526138c58184613625565b905095945050505050565b600080600080600060a086880312156138ec576138eb613254565b5b60006138fa8882890161359b565b955050602061390b8882890161359b565b945050604061391c8882890161359b565b935050606086013567ffffffffffffffff81111561393d5761393c613259565b5b61394988828901613376565b925050608086013567ffffffffffffffff81111561396a57613969613259565b5b61397688828901613376565b9150509295509295909350565b6000602082019050818103600083015261399d8184613625565b905092915050565b600080600080608085870312156139bf576139be613254565b5b60006139cd8782880161359b565b945050602085013567ffffffffffffffff8111156139ee576139ed613259565b5b6139fa87828801613376565b935050604085013567ffffffffffffffff811115613a1b57613a1a613259565b5b613a2787828801613376565b9250506060613a388782880161359b565b91505092959194509250565b60006040820190508181036000830152613a5e8185613625565b90508181036020830152613a728184613625565b90509392505050565b60008060008060808587031215613a9557613a94613254565b5b600085013567ffffffffffffffff811115613ab357613ab2613259565b5b613abf87828801613376565b945050602085013567ffffffffffffffff811115613ae057613adf613259565b5b613aec87828801613376565b935050604085013567ffffffffffffffff811115613b0d57613b0c613259565b5b613b1987828801613376565b9250506060613b2a8782880161359b565b91505092959194509250565b60008060408385031215613b4d57613b4c613254565b5b6000613b5b8582860161359b565b925050602083013567ffffffffffffffff811115613b7c57613b7b613259565b5b613b8885828601613376565b9150509250929050565b600080600060608486031215613bab57613baa613254565b5b6000613bb98682870161359b565b935050602084013567ffffffffffffffff811115613bda57613bd9613259565b5b613be686828701613376565b925050604084013567ffffffffffffffff811115613c0757613c06613259565b5b613c1386828701613376565b9150509250925092565b600080600060608486031215613c3657613c35613254565b5b6000613c448682870161359b565b9350506020613c558682870161359b565b925050604084013567ffffffffffffffff811115613c7657613c75613259565b5b613c8286828701613376565b9150509250925092565b60008060008060808587031215613ca657613ca5613254565b5b6000613cb48782880161359b565b9450506020613cc58782880161359b565b9350506040613cd68782880161359b565b925050606085013567ffffffffffffffff811115613cf757613cf6613259565b5b613d0387828801613376565b91505092959194509250565b60008115159050919050565b613d2481613d0f565b82525050565b600061012082019050613d40600083018c61355a565b613d4d602083018b613d1b565b613d5a604083018a613d1b565b613d676060830189613d1b565b613d746080830188613d1b565b613d8160a0830187613d1b565b613d8e60c0830186613d1b565b613d9b60e0830185613d1b565b613da9610100830184613d1b565b9a9950505050505050505050565b60008060008060808587031215613dd157613dd0613254565b5b600085013567ffffffffffffffff811115613def57613dee613259565b5b613dfb87828801613376565b945050602085013567ffffffffffffffff811115613e1c57613e1b613259565b5b613e2887828801613376565b9350506040613e398782880161359b565b925050606085013567ffffffffffffffff811115613e5a57613e59613259565b5b613e6687828801613376565b91505092959194509250565b60008060408385031215613e8957613e88613254565b5b600083013567ffffffffffffffff811115613ea757613ea6613259565b5b613eb385828601613376565b925050602083013567ffffffffffffffff811115613ed457613ed3613259565b5b613ee085828601613376565b9150509250929050565b6000602082019050613eff6000830184613d1b565b92915050565b60008060008060808587031215613f1f57613f1e613254565b5b6000613f2d8782880161359b565b945050602085013567ffffffffffffffff811115613f4e57613f4d613259565b5b613f5a87828801613376565b9350506040613f6b8782880161359b565b9250506060613f7c8782880161359b565b91505092959194509250565b600067ffffffffffffffff821115613fa357613fa2613279565b5b602082029050602081019050919050565b600080fd5b6000613fcc613fc784613f88565b6132d9565b90508083825260208201905060208402830185811115613fef57613fee613fb4565b5b835b8181101561403657803567ffffffffffffffff8111156140145761401361325e565b5b8086016140218982613376565b85526020850194505050602081019050613ff1565b5050509392505050565b600082601f8301126140555761405461325e565b5b8135614065848260208601613fb9565b91505092915050565b600080600080600060a0868803121561408a57614089613254565b5b600086013567ffffffffffffffff8111156140a8576140a7613259565b5b6140b488828901613376565b95505060206140c58882890161359b565b945050604086013567ffffffffffffffff8111156140e6576140e5613259565b5b6140f288828901614040565b93505060606141038882890161359b565b925050608086013567ffffffffffffffff81111561412457614123613259565b5b61413088828901613376565b9150509295509295909350565b6000606082019050614152600083018661355a565b61415f602083018561355a565b81810360408301526141718184613625565b9050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806141c257607f821691505b6020821081036141d5576141d461417b565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154614208816141aa565b61421281866141db565b9450600182166000811461422d576001811461424257614275565b60ff1983168652811515820286019350614275565b61424b856141e6565b60005b8381101561426d5781548189015260018201915060208101905061424e565b838801955050505b50505092915050565b600061428a82846141fb565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006142fe82613550565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036143305761432f6142c4565b5b600182019050919050565b600061434682613550565b915061435183613550565b9250828201905080821115614369576143686142c4565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026143d17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614394565b6143db8683614394565b95508019841693508086168417925050509392505050565b6000819050919050565b600061441861441361440e84613550565b6143f3565b613550565b9050919050565b6000819050919050565b614432836143fd565b61444661443e8261441f565b8484546143a1565b825550505050565b600090565b61445b61444e565b614466818484614429565b505050565b5b8181101561448a5761447f600082614453565b60018101905061446c565b5050565b601f8211156144cf576144a08161436f565b6144a984614384565b810160208510156144b8578190505b6144cc6144c485614384565b83018261446b565b50505b505050565b600082821c905092915050565b60006144f2600019846008026144d4565b1980831691505092915050565b600061450b83836144e1565b9150826002028217905092915050565b61452482613419565b67ffffffffffffffff81111561453d5761453c613279565b5b61454782546141aa565b61455282828561448e565b600060209050601f8311600181146145855760008415614573578287015190505b61457d85826144ff565b8655506145e5565b601f1984166145938661436f565b60005b828110156145bb57848901518255600182019150602085019450602081019050614596565b868310156145d857848901516145d4601f8916826144e1565b8355505b6001600288020188555050505b50505050505056fea26469706673582212203680ed0812a95bf9a7b8060236a28e1be932c53d90c22a796288dac85ba55dc664736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4623 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x378 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AC4110C GT PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xBDA00335 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xCD230809 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE1B011A0 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE1B011A0 EQ PUSH2 0xBBF JUMPI DUP1 PUSH4 0xE32ACC1A EQ PUSH2 0xBEF JUMPI DUP1 PUSH4 0xEC245802 EQ PUSH2 0xC1F JUMPI DUP1 PUSH4 0xFF4A37EF EQ PUSH2 0xC3D JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0xCD230809 EQ PUSH2 0xB41 JUMPI DUP1 PUSH4 0xD3791B20 EQ PUSH2 0xB71 JUMPI DUP1 PUSH4 0xD9FC52DB EQ PUSH2 0xB8F JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0xC29595C5 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xC29595C5 EQ PUSH2 0xAA4 JUMPI DUP1 PUSH4 0xC7AF4EE5 EQ PUSH2 0xAC0 JUMPI DUP1 PUSH4 0xCA013F17 EQ PUSH2 0xAF0 JUMPI DUP1 PUSH4 0xCACE8D46 EQ PUSH2 0xB0E JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0xBDA00335 EQ PUSH2 0xA4E JUMPI DUP1 PUSH4 0xC04E7430 EQ PUSH2 0xA6A JUMPI DUP1 PUSH4 0xC04FE978 EQ PUSH2 0xA86 JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0xA1CA9178 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0xAA4CDF2A GT PUSH2 0x14B JUMPI DUP1 PUSH4 0xAA4CDF2A EQ PUSH2 0x9B1 JUMPI DUP1 PUSH4 0xB16060A6 EQ PUSH2 0x9E1 JUMPI DUP1 PUSH4 0xB39A38BD EQ PUSH2 0x9EB JUMPI DUP1 PUSH4 0xB527D45E EQ PUSH2 0xA1B JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0xA1CA9178 EQ PUSH2 0x92B JUMPI DUP1 PUSH4 0xA428A47F EQ PUSH2 0x95B JUMPI DUP1 PUSH4 0xAA2BF5D3 EQ PUSH2 0x993 JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0x8D6B30A1 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x8D6B30A1 EQ PUSH2 0x88F JUMPI DUP1 PUSH4 0x9077007D EQ PUSH2 0x8BF JUMPI DUP1 PUSH4 0x934C5F00 EQ PUSH2 0x8DD JUMPI DUP1 PUSH4 0x97EE7606 EQ PUSH2 0x90D JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0x8AC4110C EQ PUSH2 0x825 JUMPI DUP1 PUSH4 0x8C70034A EQ PUSH2 0x843 JUMPI DUP1 PUSH4 0x8D3D2595 EQ PUSH2 0x85F JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0x4BE7ADB5 GT PUSH2 0x2AD JUMPI DUP1 PUSH4 0x7F2035D4 GT PUSH2 0x24B JUMPI DUP1 PUSH4 0x812FAE1F GT PUSH2 0x225 JUMPI DUP1 PUSH4 0x812FAE1F EQ PUSH2 0x78D JUMPI DUP1 PUSH4 0x86FFA45B EQ PUSH2 0x7BD JUMPI DUP1 PUSH4 0x87633EB2 EQ PUSH2 0x7ED JUMPI DUP1 PUSH4 0x881DE858 EQ PUSH2 0x809 JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0x7F2035D4 EQ PUSH2 0x6FA JUMPI DUP1 PUSH4 0x7FC543EC EQ PUSH2 0x72B JUMPI DUP1 PUSH4 0x803F5B9F EQ PUSH2 0x75D JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0x5D907DA1 GT PUSH2 0x287 JUMPI DUP1 PUSH4 0x5D907DA1 EQ PUSH2 0x64C JUMPI DUP1 PUSH4 0x6ECDA4EE EQ PUSH2 0x67C JUMPI DUP1 PUSH4 0x787F19C7 EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0x7BBD582D EQ PUSH2 0x6DC JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0x4BE7ADB5 EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0x54A9FB18 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x5996278F EQ PUSH2 0x630 JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0x20959ED0 GT PUSH2 0x31A JUMPI DUP1 PUSH4 0x330B8F26 GT PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x330B8F26 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0x3F87A2F4 EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0x468D0C80 EQ PUSH2 0x57D JUMPI DUP1 PUSH4 0x4A797BD7 EQ PUSH2 0x5AF JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0x20959ED0 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x27A568B9 EQ PUSH2 0x4C9 JUMPI DUP1 PUSH4 0x29B56F60 EQ PUSH2 0x4FB JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0x13BF4CEA GT PUSH2 0x356 JUMPI DUP1 PUSH4 0x13BF4CEA EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x1B592AEB EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0x1BA44C4C EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x1E9AC9F5 EQ PUSH2 0x469 JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0x377D44A EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x1171B621 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x131D44F2 EQ PUSH2 0x3CB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x397 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x33A4 JUMP JUMPDEST PUSH2 0xC6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x352E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x352E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x403 PUSH2 0xF6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x421 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x451 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x460 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x33A4 JUMP JUMPDEST PUSH2 0xFA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x1015 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x365E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x503 PUSH2 0x11EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x352E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x533 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x132A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x541 SWAP3 SWAP2 SWAP1 PUSH2 0x36AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x564 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x134E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x574 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x597 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x371F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B7 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0x375D JUMP JUMPDEST PUSH2 0x14BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x385B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x617 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x627 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x387D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x645 SWAP2 SWAP1 PUSH2 0x38D0 JUMP JUMPDEST PUSH2 0x1704 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x666 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x661 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x673 SWAP2 SWAP1 PUSH2 0x3983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x696 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x691 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A3 SWAP2 SWAP1 PUSH2 0x3983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C1 SWAP2 SWAP1 PUSH2 0x39A5 JUMP JUMPDEST PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E4 PUSH2 0x1AC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F1 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x714 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70F SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x1AC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x722 SWAP3 SWAP2 SWAP1 PUSH2 0x3A44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x745 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x740 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x754 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x777 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x772 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x784 SWAP2 SWAP1 PUSH2 0x385B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x1D08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x385B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D2 SWAP2 SWAP1 PUSH2 0x3A7B JUMP JUMPDEST PUSH2 0x1DEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E4 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x807 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x802 SWAP2 SWAP1 PUSH2 0x3B36 JUMP JUMPDEST PUSH2 0x1F0B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x823 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81E SWAP2 SWAP1 PUSH2 0x3B92 JUMP JUMPDEST PUSH2 0x1F30 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x82D PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83A SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x858 SWAP2 SWAP1 PUSH2 0x3C1D JUMP JUMPDEST PUSH2 0x1F83 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x879 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x874 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x204F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x886 SWAP2 SWAP1 PUSH2 0x3983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A4 SWAP2 SWAP1 PUSH2 0x3C8C JUMP JUMPDEST PUSH2 0x20F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B6 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C7 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D4 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8F2 SWAP2 SWAP1 PUSH2 0x3C8C JUMP JUMPDEST PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x904 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x915 PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x922 SWAP2 SWAP1 PUSH2 0x352E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x945 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x940 SWAP2 SWAP1 PUSH2 0x33A4 JUMP JUMPDEST PUSH2 0x23B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x952 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x975 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x970 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x2423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x98A SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99B PUSH2 0x24D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A8 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9C6 SWAP2 SWAP1 PUSH2 0x33A4 JUMP JUMPDEST PUSH2 0x24DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D8 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E9 PUSH2 0x2566 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA05 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA00 SWAP2 SWAP1 PUSH2 0x3DB7 JUMP JUMPDEST PUSH2 0x2818 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA12 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA35 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x2906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA45 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x387D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA63 SWAP2 SWAP1 PUSH2 0x3E72 JUMP JUMPDEST PUSH2 0x2A46 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA84 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA7F SWAP2 SWAP1 PUSH2 0x3B36 JUMP JUMPDEST PUSH2 0x2ADD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA8E PUSH2 0x2B05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x352E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xABE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB9 SWAP2 SWAP1 PUSH2 0x3B36 JUMP JUMPDEST PUSH2 0x2C3F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xADA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x2C67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAE7 SWAP2 SWAP1 PUSH2 0x3EEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF8 PUSH2 0x2CBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB05 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB28 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB23 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x2CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB38 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB56 SWAP2 SWAP1 PUSH2 0x3B36 JUMP JUMPDEST PUSH2 0x2D7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB68 SWAP2 SWAP1 PUSH2 0x3EEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB79 PUSH2 0x2E0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB86 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBA4 SWAP2 SWAP1 PUSH2 0x3F05 JUMP JUMPDEST PUSH2 0x2E13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB6 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBD4 SWAP2 SWAP1 PUSH2 0x406E JUMP JUMPDEST PUSH2 0x2ED8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE6 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC09 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC04 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x302D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC16 SWAP2 SWAP1 PUSH2 0x3983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC27 PUSH2 0x30D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC34 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC57 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC52 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x30DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC66 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x413D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC8F JUMPI PUSH2 0xC8E PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCC2 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xCAD JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xDEE JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0xD02 SWAP2 SWAP1 PUSH2 0x427E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xDDB JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xD30 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD5C SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDA9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD7E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDA9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD8C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xDC1 JUMPI PUSH2 0xDC0 PUSH2 0x4295 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xDD7 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xDE6 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCCD JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE1F JUMPI PUSH2 0xE1E PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE52 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE3D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xF63 JUMPI DUP5 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0xF42 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xEA5 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xED1 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF1E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEF3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF1E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF01 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF36 JUMPI PUSH2 0xF35 PUSH2 0x4295 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0xF4D SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0xF5B SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE5D JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x100A JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0xFE1 SWAP2 SWAP1 PUSH2 0x427E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xFF7 JUMPI DUP1 SWAP2 POP POP PUSH2 0x1010 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1002 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFAC JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1050 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x107C SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x109E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x10DE SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x110A SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1157 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x112C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1157 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x113A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x116C SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1198 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11E5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11BA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11E5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11C8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x120F JUMPI PUSH2 0x120E PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1242 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x122D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1322 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1273 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x129F SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1304 JUMPI PUSH2 0x1303 PUSH2 0x4295 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x131A SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1248 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1383 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13AF SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x142F SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x145B SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14A8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x147D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14A8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x148B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14DE JUMPI PUSH2 0x14DD PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x150C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x15B8 JUMPI DUP6 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x155B JUMPI POP DUP5 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1597 JUMPI PUSH1 0x14 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x158A JUMPI PUSH2 0x1589 PUSH2 0x4295 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP2 DUP1 PUSH2 0x15A2 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x15B0 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1517 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x15F3 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x161F SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x166C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1641 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x166C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x164F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1681 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16AD SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16CF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x1773 JUMPI PUSH2 0x1772 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261646765000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2A46 JUMP JUMPDEST JUMPDEST PUSH2 0x17B2 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646F6E6174696F6E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2A46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0xF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1807 SWAP2 SWAP1 PUSH2 0x433B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x10 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1831 SWAP2 SWAP1 PUSH2 0x433B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x12 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x189C SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x18CB SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18F7 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1944 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1919 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1944 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1927 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x196F SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x199B SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x15 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1A82 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1A98 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1AAF SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x7 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1AEA SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B16 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B63 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B38 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B63 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B46 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1B78 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BA4 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1BF1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BC6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BF1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1BD4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C45 JUMPI PUSH2 0x1C44 PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C73 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1CFD JUMPI DUP5 PUSH1 0x15 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1CEA JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1CCF JUMPI PUSH2 0x1CCE PUSH2 0x4295 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1CE6 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1CF5 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C7E JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x9 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D28 JUMPI PUSH2 0x1D27 PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D56 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1DE0 JUMPI DUP5 PUSH1 0x17 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1DCD JUMPI PUSH1 0x17 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1DB2 JUMPI PUSH2 0x1DB1 PUSH2 0x4295 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1DC9 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1DD8 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D61 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46616C7365000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1E66 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1E7C SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1E92 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP SWAP1 POP POP DUP3 PUSH1 0xC PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x1EB7 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1EF9 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x1F2B SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1F53 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP DUP1 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1F77 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2006 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x204A DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6A6F696E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2A46 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2072 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x209E SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x14 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x218C SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x21D0 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x766F746500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2A46 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x16 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x224E SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2265 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x8 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2297 JUMPI PUSH2 0x2296 PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x22CA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x22B5 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x23AA JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x22FB SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2327 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2374 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2349 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2374 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2357 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x238C JUMPI PUSH2 0x238B PUSH2 0x4295 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x23A2 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x22D0 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2418 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x23EF SWAP2 SWAP1 PUSH2 0x427E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x2405 JUMPI DUP1 SWAP2 POP POP PUSH2 0x241E JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2410 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x23BA JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x255B JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x251C SWAP2 SWAP1 PUSH2 0x427E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x2548 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP POP PUSH2 0x2561 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2553 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x24E7 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x25CC JUMPI PUSH1 0xB PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x2597 SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x25A7 SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x25B7 SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x25C4 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2569 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2623 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x25FE SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x260E SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x261B SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x25D0 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x267A JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x265D SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x2672 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2627 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x26D1 JUMPI PUSH1 0x13 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x26BC SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x26C9 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x267E JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2738 JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2713 SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x2723 SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2730 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26D5 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x2797 JUMPI PUSH1 0x17 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x2782 SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x278F SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x273C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x27E6 JUMPI PUSH1 0x14 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x27DE SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x279B JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2859 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x286F SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x28B5 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x28F9 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x676F616C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2A46 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2935 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2961 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x29AE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2983 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x29AE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2991 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x29C3 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29EF SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2A3C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2A3C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A1F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x11 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2AA7 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2ABD SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2AD4 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2B00 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B24 JUMPI PUSH2 0x2B23 PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2B57 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2B42 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x2C37 JUMPI PUSH1 0xB PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2B88 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BB4 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C01 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2BD6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C01 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BE4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2C19 JUMPI PUSH2 0x2C18 PUSH2 0x4295 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2C2F SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B5D JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2C62 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x2CB3 JUMPI DUP3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x2CA0 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x2CB9 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2CAB SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2C6F JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x2CF9 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D25 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D72 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D47 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D72 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D55 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2E02 JUMPI DUP5 PUSH1 0x16 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x2DE5 JUMPI POP PUSH1 0x16 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x40 MLOAD PUSH2 0x2DD3 SWAP2 SWAP1 PUSH2 0x427E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST ISZERO PUSH2 0x2DEF JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x2DFA SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2D86 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x17 PUSH1 0x0 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2EAF SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x9 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2EC6 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x9 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xF PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2F2A SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2F7A SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2FDF JUMPI PUSH2 0x2FB4 PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2FA7 JUMPI PUSH2 0x2FA6 PUSH2 0x4295 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x318D JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2FC7 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0x2FD7 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2F82 JUMP JUMPDEST POP PUSH2 0x301F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6964656100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2A46 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x3050 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x307C SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x309E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x310A SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3136 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3183 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3158 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3183 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3166 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x13 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x31E4 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x31F9 SWAP1 PUSH2 0x41AA JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x320B JUMPI POP PUSH2 0x322A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3229 SWAP2 SWAP1 PUSH2 0x322D JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3246 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x322E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x32B1 DUP3 PUSH2 0x3268 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x32D0 JUMPI PUSH2 0x32CF PUSH2 0x3279 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E3 PUSH2 0x324A JUMP JUMPDEST SWAP1 POP PUSH2 0x32EF DUP3 DUP3 PUSH2 0x32A8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x330F JUMPI PUSH2 0x330E PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH2 0x3318 DUP3 PUSH2 0x3268 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3347 PUSH2 0x3342 DUP5 PUSH2 0x32F4 JUMP JUMPDEST PUSH2 0x32D9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3363 JUMPI PUSH2 0x3362 PUSH2 0x3263 JUMP JUMPDEST JUMPDEST PUSH2 0x336E DUP5 DUP3 DUP6 PUSH2 0x3325 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x338B JUMPI PUSH2 0x338A PUSH2 0x325E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x339B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3334 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33BA JUMPI PUSH2 0x33B9 PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33D8 JUMPI PUSH2 0x33D7 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x33E4 DUP5 DUP3 DUP6 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3453 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3438 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346A DUP3 PUSH2 0x3419 JUMP JUMPDEST PUSH2 0x3474 DUP2 DUP6 PUSH2 0x3424 JUMP JUMPDEST SWAP4 POP PUSH2 0x3484 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3435 JUMP JUMPDEST PUSH2 0x348D DUP2 PUSH2 0x3268 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A4 DUP4 DUP4 PUSH2 0x345F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34C4 DUP3 PUSH2 0x33ED JUMP JUMPDEST PUSH2 0x34CE DUP2 DUP6 PUSH2 0x33F8 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x34E0 DUP6 PUSH2 0x3409 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x351C JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x34FD DUP6 DUP3 PUSH2 0x3498 JUMP JUMPDEST SWAP5 POP PUSH2 0x3508 DUP4 PUSH2 0x34AC JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x34E4 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3548 DUP2 DUP5 PUSH2 0x34B9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3563 DUP2 PUSH2 0x3550 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x357E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x355A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x358D DUP2 PUSH2 0x3550 JUMP JUMPDEST DUP2 EQ PUSH2 0x3598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x35AA DUP2 PUSH2 0x3584 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35C6 JUMPI PUSH2 0x35C5 PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35D4 DUP5 DUP3 DUP6 ADD PUSH2 0x359B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x35F2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x355A JUMP JUMPDEST PUSH2 0x35FF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x355A JUMP JUMPDEST PUSH2 0x360C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x355A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3630 DUP3 PUSH2 0x3419 JUMP JUMPDEST PUSH2 0x363A DUP2 DUP6 PUSH2 0x3614 JUMP JUMPDEST SWAP4 POP PUSH2 0x364A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3435 JUMP JUMPDEST PUSH2 0x3653 DUP2 PUSH2 0x3268 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3678 DUP2 DUP7 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x368C DUP2 DUP6 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x36A0 DUP2 DUP5 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x36BF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x355A JUMP JUMPDEST PUSH2 0x36CC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x355A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x36E8 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x355A JUMP JUMPDEST PUSH2 0x36F5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x355A JUMP JUMPDEST PUSH2 0x3702 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x355A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3714 DUP2 DUP5 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3734 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x355A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3746 DUP2 DUP6 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP PUSH2 0x3755 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x355A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3774 JUMPI PUSH2 0x3773 PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3782 DUP6 DUP3 DUP7 ADD PUSH2 0x359B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3793 DUP6 DUP3 DUP7 ADD PUSH2 0x359B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37D2 DUP2 PUSH2 0x3550 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E4 DUP4 DUP4 PUSH2 0x37C9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3808 DUP3 PUSH2 0x379D JUMP JUMPDEST PUSH2 0x3812 DUP2 DUP6 PUSH2 0x37A8 JUMP JUMPDEST SWAP4 POP PUSH2 0x381D DUP4 PUSH2 0x37B9 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x384E JUMPI DUP2 MLOAD PUSH2 0x3835 DUP9 DUP3 PUSH2 0x37D8 JUMP JUMPDEST SWAP8 POP PUSH2 0x3840 DUP4 PUSH2 0x37F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3821 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3875 DUP2 DUP5 PUSH2 0x37FD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3892 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x355A JUMP JUMPDEST PUSH2 0x389F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x355A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x38B1 DUP2 DUP6 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x38C5 DUP2 DUP5 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x38EC JUMPI PUSH2 0x38EB PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38FA DUP9 DUP3 DUP10 ADD PUSH2 0x359B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x390B DUP9 DUP3 DUP10 ADD PUSH2 0x359B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x391C DUP9 DUP3 DUP10 ADD PUSH2 0x359B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x393D JUMPI PUSH2 0x393C PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3949 DUP9 DUP3 DUP10 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x396A JUMPI PUSH2 0x3969 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3976 DUP9 DUP3 DUP10 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x399D DUP2 DUP5 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x39BF JUMPI PUSH2 0x39BE PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39CD DUP8 DUP3 DUP9 ADD PUSH2 0x359B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39EE JUMPI PUSH2 0x39ED PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x39FA DUP8 DUP3 DUP9 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A1B JUMPI PUSH2 0x3A1A PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3A27 DUP8 DUP3 DUP9 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3A38 DUP8 DUP3 DUP9 ADD PUSH2 0x359B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A5E DUP2 DUP6 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3A72 DUP2 DUP5 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3A95 JUMPI PUSH2 0x3A94 PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AB3 JUMPI PUSH2 0x3AB2 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3ABF DUP8 DUP3 DUP9 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AE0 JUMPI PUSH2 0x3ADF PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3AEC DUP8 DUP3 DUP9 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B0D JUMPI PUSH2 0x3B0C PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3B19 DUP8 DUP3 DUP9 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3B2A DUP8 DUP3 DUP9 ADD PUSH2 0x359B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B4D JUMPI PUSH2 0x3B4C PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B5B DUP6 DUP3 DUP7 ADD PUSH2 0x359B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B7C JUMPI PUSH2 0x3B7B PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3B88 DUP6 DUP3 DUP7 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3BAB JUMPI PUSH2 0x3BAA PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BB9 DUP7 DUP3 DUP8 ADD PUSH2 0x359B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BDA JUMPI PUSH2 0x3BD9 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3BE6 DUP7 DUP3 DUP8 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C07 JUMPI PUSH2 0x3C06 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3C13 DUP7 DUP3 DUP8 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3C36 JUMPI PUSH2 0x3C35 PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C44 DUP7 DUP3 DUP8 ADD PUSH2 0x359B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3C55 DUP7 DUP3 DUP8 ADD PUSH2 0x359B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C76 JUMPI PUSH2 0x3C75 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3C82 DUP7 DUP3 DUP8 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3CA6 JUMPI PUSH2 0x3CA5 PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3CB4 DUP8 DUP3 DUP9 ADD PUSH2 0x359B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3CC5 DUP8 DUP3 DUP9 ADD PUSH2 0x359B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3CD6 DUP8 DUP3 DUP9 ADD PUSH2 0x359B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CF7 JUMPI PUSH2 0x3CF6 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3D03 DUP8 DUP3 DUP9 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D24 DUP2 PUSH2 0x3D0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x3D40 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x355A JUMP JUMPDEST PUSH2 0x3D4D PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x3D1B JUMP JUMPDEST PUSH2 0x3D5A PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x3D1B JUMP JUMPDEST PUSH2 0x3D67 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x3D1B JUMP JUMPDEST PUSH2 0x3D74 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x3D1B JUMP JUMPDEST PUSH2 0x3D81 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x3D1B JUMP JUMPDEST PUSH2 0x3D8E PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x3D1B JUMP JUMPDEST PUSH2 0x3D9B PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x3D1B JUMP JUMPDEST PUSH2 0x3DA9 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x3D1B JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3DD1 JUMPI PUSH2 0x3DD0 PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3DEF JUMPI PUSH2 0x3DEE PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3DFB DUP8 DUP3 DUP9 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E1C JUMPI PUSH2 0x3E1B PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3E28 DUP8 DUP3 DUP9 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3E39 DUP8 DUP3 DUP9 ADD PUSH2 0x359B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E5A JUMPI PUSH2 0x3E59 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3E66 DUP8 DUP3 DUP9 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E89 JUMPI PUSH2 0x3E88 PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3EA7 JUMPI PUSH2 0x3EA6 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3EB3 DUP6 DUP3 DUP7 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3ED4 JUMPI PUSH2 0x3ED3 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3EE0 DUP6 DUP3 DUP7 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3EFF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3D1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3F1F JUMPI PUSH2 0x3F1E PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F2D DUP8 DUP3 DUP9 ADD PUSH2 0x359B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F4E JUMPI PUSH2 0x3F4D PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3F5A DUP8 DUP3 DUP9 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3F6B DUP8 DUP3 DUP9 ADD PUSH2 0x359B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3F7C DUP8 DUP3 DUP9 ADD PUSH2 0x359B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3FA3 JUMPI PUSH2 0x3FA2 PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3FCC PUSH2 0x3FC7 DUP5 PUSH2 0x3F88 JUMP JUMPDEST PUSH2 0x32D9 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3FEF JUMPI PUSH2 0x3FEE PUSH2 0x3FB4 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4036 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4014 JUMPI PUSH2 0x4013 PUSH2 0x325E JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x4021 DUP10 DUP3 PUSH2 0x3376 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3FF1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4055 JUMPI PUSH2 0x4054 PUSH2 0x325E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4065 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3FB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x408A JUMPI PUSH2 0x4089 PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40A8 JUMPI PUSH2 0x40A7 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x40B4 DUP9 DUP3 DUP10 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x40C5 DUP9 DUP3 DUP10 ADD PUSH2 0x359B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40E6 JUMPI PUSH2 0x40E5 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x40F2 DUP9 DUP3 DUP10 ADD PUSH2 0x4040 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4103 DUP9 DUP3 DUP10 ADD PUSH2 0x359B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4124 JUMPI PUSH2 0x4123 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x4130 DUP9 DUP3 DUP10 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4152 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x355A JUMP JUMPDEST PUSH2 0x415F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x355A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4171 DUP2 DUP5 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x41C2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x41D5 JUMPI PUSH2 0x41D4 PUSH2 0x417B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x4208 DUP2 PUSH2 0x41AA JUMP JUMPDEST PUSH2 0x4212 DUP2 DUP7 PUSH2 0x41DB JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x422D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x4242 JUMPI PUSH2 0x4275 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x4275 JUMP JUMPDEST PUSH2 0x424B DUP6 PUSH2 0x41E6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x426D JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x424E JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x428A DUP3 DUP5 PUSH2 0x41FB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x42FE DUP3 PUSH2 0x3550 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4330 JUMPI PUSH2 0x432F PUSH2 0x42C4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4346 DUP3 PUSH2 0x3550 JUMP JUMPDEST SWAP2 POP PUSH2 0x4351 DUP4 PUSH2 0x3550 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4369 JUMPI PUSH2 0x4368 PUSH2 0x42C4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x43D1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4394 JUMP JUMPDEST PUSH2 0x43DB DUP7 DUP4 PUSH2 0x4394 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4418 PUSH2 0x4413 PUSH2 0x440E DUP5 PUSH2 0x3550 JUMP JUMPDEST PUSH2 0x43F3 JUMP JUMPDEST PUSH2 0x3550 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4432 DUP4 PUSH2 0x43FD JUMP JUMPDEST PUSH2 0x4446 PUSH2 0x443E DUP3 PUSH2 0x441F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x43A1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x445B PUSH2 0x444E JUMP JUMPDEST PUSH2 0x4466 DUP2 DUP5 DUP5 PUSH2 0x4429 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x448A JUMPI PUSH2 0x447F PUSH1 0x0 DUP3 PUSH2 0x4453 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x446C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x44CF JUMPI PUSH2 0x44A0 DUP2 PUSH2 0x436F JUMP JUMPDEST PUSH2 0x44A9 DUP5 PUSH2 0x4384 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x44B8 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x44CC PUSH2 0x44C4 DUP6 PUSH2 0x4384 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x446B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44F2 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x44D4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x450B DUP4 DUP4 PUSH2 0x44E1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4524 DUP3 PUSH2 0x3419 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x453D JUMPI PUSH2 0x453C PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH2 0x4547 DUP3 SLOAD PUSH2 0x41AA JUMP JUMPDEST PUSH2 0x4552 DUP3 DUP3 DUP6 PUSH2 0x448E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4585 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4573 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x457D DUP6 DUP3 PUSH2 0x44FF JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x45E5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4593 DUP7 PUSH2 0x436F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x45BB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4596 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x45D8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x45D4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x44E1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE DUP1 0xED ADDMOD SLT 0xA9 JUMPDEST 0xF9 0xA7 0xB8 MOD MUL CALLDATASIZE LOG2 DUP15 SHL 0xE9 ORIGIN 0xC5 RETURNDATASIZE SWAP1 0xC2 0x2A PUSH26 0x6288DAC85BA55DC664736F6C6343000811003300000000000000 ","sourceMap":"170:15389:9:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_dao_ids_2431":{"entryPoint":6849,"id":2431,"parameterSlots":0,"returnSlots":0},"@_dao_uris_2456":{"entryPoint":4141,"id":2456,"parameterSlots":0,"returnSlots":0},"@_donated_2479":{"entryPoint":4117,"id":2479,"parameterSlots":0,"returnSlots":0},"@_donations_2489":{"entryPoint":7163,"id":2489,"parameterSlots":0,"returnSlots":0},"@_donations_ids_2433":{"entryPoint":12501,"id":2433,"parameterSlots":0,"returnSlots":0},"@_feed_ids_2451":{"entryPoint":8061,"id":2451,"parameterSlots":0,"returnSlots":0},"@_feeds_2484":{"entryPoint":5572,"id":2484,"parameterSlots":0,"returnSlots":0},"@_goal_ids_2435":{"entryPoint":3950,"id":2435,"parameterSlots":0,"returnSlots":0},"@_goal_uris_2470":{"entryPoint":6855,"id":2470,"parameterSlots":0,"returnSlots":0},"@_ideas_ids_2437":{"entryPoint":11789,"id":2437,"parameterSlots":0,"returnSlots":0},"@_ideas_uris_2475":{"entryPoint":5126,"id":2475,"parameterSlots":0,"returnSlots":0},"@_ideas_vote_ids_2443":{"entryPoint":5304,"id":2443,"parameterSlots":0,"returnSlots":0},"@_join_ids_2439":{"entryPoint":3577,"id":2439,"parameterSlots":0,"returnSlots":0},"@_joined_person_2465":{"entryPoint":4906,"id":2465,"parameterSlots":0,"returnSlots":0},"@_message_ids_2445":{"entryPoint":8669,"id":2445,"parameterSlots":0,"returnSlots":0},"@_message_read_ids_2447":{"entryPoint":11454,"id":2447,"parameterSlots":0,"returnSlots":0},"@_reply_ids_2449":{"entryPoint":9433,"id":2449,"parameterSlots":0,"returnSlots":0},"@_smart_contract_ids_2441":{"entryPoint":3956,"id":2441,"parameterSlots":0,"returnSlots":0},"@_smart_contracts_uris_2494":{"entryPoint":12507,"id":2494,"parameterSlots":0,"returnSlots":0},"@_template_uris_2460":{"entryPoint":6480,"id":2460,"parameterSlots":0,"returnSlots":0},"@_user_badges_2519":{"entryPoint":9251,"id":2519,"parameterSlots":0,"returnSlots":0},"@add_Feed_2676":{"entryPoint":10822,"id":2676,"parameterSlots":2,"returnSlots":0},"@add_donation_3061":{"entryPoint":5892,"id":3061,"parameterSlots":5,"returnSlots":0},"@all_goal_ideas_votes_2499":{"entryPoint":3962,"id":2499,"parameterSlots":0,"returnSlots":0},"@all_messages_2504":{"entryPoint":10502,"id":2504,"parameterSlots":0,"returnSlots":0},"@all_read_messages_2509":{"entryPoint":11460,"id":2509,"parameterSlots":0,"returnSlots":0},"@all_replies_2514":{"entryPoint":4942,"id":2514,"parameterSlots":0,"returnSlots":0},"@create_dao_2561":{"entryPoint":7659,"id":2561,"parameterSlots":4,"returnSlots":1},"@create_goal_2716":{"entryPoint":10264,"id":2716,"parameterSlots":4,"returnSlots":1},"@create_goal_ideas_vote_3362":{"entryPoint":8439,"id":3362,"parameterSlots":4,"returnSlots":1},"@create_ideas_2961":{"entryPoint":11992,"id":2961,"parameterSlots":5,"returnSlots":1},"@create_ideas_smart_contract_2981":{"entryPoint":12685,"id":2981,"parameterSlots":3,"returnSlots":0},"@dao_uri_2653":{"entryPoint":6312,"id":2653,"parameterSlots":1,"returnSlots":1},"@getMsgIDs_3521":{"entryPoint":7205,"id":3521,"parameterSlots":1,"returnSlots":1},"@getReadMsg_3702":{"entryPoint":11644,"id":3702,"parameterSlots":2,"returnSlots":1},"@getReplyIDs_3615":{"entryPoint":7432,"id":3615,"parameterSlots":1,"returnSlots":1},"@get_all_daos_2640":{"entryPoint":11013,"id":2640,"parameterSlots":0,"returnSlots":1},"@get_all_goals_2772":{"entryPoint":4591,"id":2772,"parameterSlots":0,"returnSlots":1},"@get_all_goals_by_dao_id_2839":{"entryPoint":3183,"id":2839,"parameterSlots":1,"returnSlots":1},"@get_all_ideas_3167":{"entryPoint":8823,"id":3167,"parameterSlots":0,"returnSlots":1},"@get_all_ideas_by_goal_id_3223":{"entryPoint":3583,"id":3223,"parameterSlots":1,"returnSlots":1},"@get_goal_id_by_goal_uri_2880":{"entryPoint":4004,"id":2880,"parameterSlots":1,"returnSlots":1},"@get_goal_id_from_ideas_uri_3308":{"entryPoint":9439,"id":3308,"parameterSlots":1,"returnSlots":1},"@get_ideas_id_by_ideas_uri_3264":{"entryPoint":9138,"id":3264,"parameterSlots":1,"returnSlots":1},"@get_ideas_votes_from_goal_3427":{"entryPoint":5310,"id":3427,"parameterSlots":2,"returnSlots":1},"@goal_uri_2893":{"entryPoint":12333,"id":2893,"parameterSlots":1,"returnSlots":1},"@ideas_uri_3321":{"entryPoint":8271,"id":3321,"parameterSlots":1,"returnSlots":1},"@is_person_joined_3126":{"entryPoint":11367,"id":3126,"parameterSlots":1,"returnSlots":1},"@join_community_3095":{"entryPoint":8067,"id":3095,"parameterSlots":3,"returnSlots":0},"@reset_all_3842":{"entryPoint":9574,"id":3842,"parameterSlots":0,"returnSlots":0},"@sendMsg_3464":{"entryPoint":6640,"id":3464,"parameterSlots":4,"returnSlots":1},"@sendReadMsg_3645":{"entryPoint":8675,"id":3645,"parameterSlots":4,"returnSlots":1},"@sendReply_3558":{"entryPoint":11795,"id":3558,"parameterSlots":4,"returnSlots":1},"@set_dao_2599":{"entryPoint":7984,"id":2599,"parameterSlots":3,"returnSlots":0},"@set_goal_2731":{"entryPoint":11327,"id":2731,"parameterSlots":2,"returnSlots":0},"@set_ideas_2996":{"entryPoint":10973,"id":2996,"parameterSlots":2,"returnSlots":0},"@update_template_2575":{"entryPoint":7947,"id":2575,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":16313,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":13108,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":16448,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":13174,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":13723,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":13220,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr":{"entryPoint":15986,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256":{"entryPoint":14971,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_string_memory_ptr":{"entryPoint":15799,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptrt_uint256t_string_memory_ptr":{"entryPoint":16494,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256":{"entryPoint":13744,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":15158,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":15250,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256":{"entryPoint":14757,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_uint256":{"entryPoint":16133,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":14173,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr":{"entryPoint":15389,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptr":{"entryPoint":15500,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":14544,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":13464,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":14296,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":13497,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":14333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":15643,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16891,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":13407,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":13861,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":14281,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":13658,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":17022,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13614,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":14427,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":16106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14723,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14916,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13918,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":13673,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__to_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__fromStack_reversed":{"entryPoint":15658,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":14111,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":13994,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16701,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14461,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":13789,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14035,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_memory":{"entryPoint":13017,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":12874,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":16264,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":13044,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":13321,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":14265,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage_ptr":{"entryPoint":16870,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":17263,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":13293,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":14237,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":13337,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":13484,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":14320,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":13304,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":14248,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16859,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":13348,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":13844,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":17211,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":17550,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_bool":{"entryPoint":15631,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":13648,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":17515,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":17405,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":17691,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":13093,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":13365,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":17284,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":16810,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":17663,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":12968,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":17395,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":17139,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":17633,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":17092,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":16763,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":17045,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":12921,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":17439,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":12894,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":16308,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":12899,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":12889,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":12884,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":12904,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":17300,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":17620,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":17491,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":17313,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":17449,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":13700,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":17486,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:37264:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"423:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:16"},"nodeType":"YulFunctionCall","src":"433:12:16"},"nodeType":"YulExpressionStatement","src":"433:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:16"},{"body":{"nodeType":"YulBlock","src":"546:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:16"},"nodeType":"YulFunctionCall","src":"556:12:16"},"nodeType":"YulExpressionStatement","src":"556:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:16"},{"body":{"nodeType":"YulBlock","src":"628:54:16","statements":[{"nodeType":"YulAssignment","src":"638:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:16"},"nodeType":"YulFunctionCall","src":"652:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:16"},"nodeType":"YulFunctionCall","src":"668:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:16"},"nodeType":"YulFunctionCall","src":"648:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:16","type":""}],"src":"580:102:16"},{"body":{"nodeType":"YulBlock","src":"716:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:16"},"nodeType":"YulFunctionCall","src":"726:88:16"},"nodeType":"YulExpressionStatement","src":"726:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:16"},"nodeType":"YulFunctionCall","src":"823:15:16"},"nodeType":"YulExpressionStatement","src":"823:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:16"},"nodeType":"YulFunctionCall","src":"847:15:16"},"nodeType":"YulExpressionStatement","src":"847:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:16"},{"body":{"nodeType":"YulBlock","src":"917:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:16"},"nodeType":"YulFunctionCall","src":"957:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:16"},"nodeType":"YulFunctionCall","src":"945:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:16"},"nodeType":"YulFunctionCall","src":"1098:18:16"},"nodeType":"YulExpressionStatement","src":"1098:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:16"},"nodeType":"YulFunctionCall","src":"1036:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:16"},"nodeType":"YulFunctionCall","src":"1072:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:16"},"nodeType":"YulFunctionCall","src":"1033:62:16"},"nodeType":"YulIf","src":"1030:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:16"},"nodeType":"YulFunctionCall","src":"1127:22:16"},"nodeType":"YulExpressionStatement","src":"1127:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:16","type":""}],"src":"874:281:16"},{"body":{"nodeType":"YulBlock","src":"1202:88:16","statements":[{"nodeType":"YulAssignment","src":"1212:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:16"},"nodeType":"YulFunctionCall","src":"1222:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:16"},"nodeType":"YulFunctionCall","src":"1251:33:16"},"nodeType":"YulExpressionStatement","src":"1251:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:16","type":""}],"src":"1161:129:16"},{"body":{"nodeType":"YulBlock","src":"1363:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:16"},"nodeType":"YulFunctionCall","src":"1470:18:16"},"nodeType":"YulExpressionStatement","src":"1470:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:16"},"nodeType":"YulFunctionCall","src":"1437:30:16"},"nodeType":"YulIf","src":"1434:56:16"},{"nodeType":"YulAssignment","src":"1500:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:16"},"nodeType":"YulFunctionCall","src":"1508:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:16"}]},{"nodeType":"YulAssignment","src":"1574:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:16"},"nodeType":"YulFunctionCall","src":"1582:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:16"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:16","type":""}],"src":"1296:308:16"},{"body":{"nodeType":"YulBlock","src":"1674:82:16","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1697:3:16"},{"name":"src","nodeType":"YulIdentifier","src":"1702:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1707:6:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1684:12:16"},"nodeType":"YulFunctionCall","src":"1684:30:16"},"nodeType":"YulExpressionStatement","src":"1684:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1734:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1739:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:16"},"nodeType":"YulFunctionCall","src":"1730:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"1748:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1723:6:16"},"nodeType":"YulFunctionCall","src":"1723:27:16"},"nodeType":"YulExpressionStatement","src":"1723:27:16"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1656:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1661:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1666:6:16","type":""}],"src":"1610:146:16"},{"body":{"nodeType":"YulBlock","src":"1846:341:16","statements":[{"nodeType":"YulAssignment","src":"1856:75:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1923:6:16"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1881:41:16"},"nodeType":"YulFunctionCall","src":"1881:49:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1865:15:16"},"nodeType":"YulFunctionCall","src":"1865:66:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1856:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1947:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"1954:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:16"},"nodeType":"YulFunctionCall","src":"1940:21:16"},"nodeType":"YulExpressionStatement","src":"1940:21:16"},{"nodeType":"YulVariableDeclaration","src":"1970:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1985:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1992:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1981:3:16"},"nodeType":"YulFunctionCall","src":"1981:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1974:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2035:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2037:77:16"},"nodeType":"YulFunctionCall","src":"2037:79:16"},"nodeType":"YulExpressionStatement","src":"2037:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2016:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2021:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2012:3:16"},"nodeType":"YulFunctionCall","src":"2012:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"2030:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2009:2:16"},"nodeType":"YulFunctionCall","src":"2009:25:16"},"nodeType":"YulIf","src":"2006:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2164:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"2169:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2174:6:16"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2127:36:16"},"nodeType":"YulFunctionCall","src":"2127:54:16"},"nodeType":"YulExpressionStatement","src":"2127:54:16"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1819:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1824:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1832:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1840:5:16","type":""}],"src":"1762:425:16"},{"body":{"nodeType":"YulBlock","src":"2269:278:16","statements":[{"body":{"nodeType":"YulBlock","src":"2318:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2320:77:16"},"nodeType":"YulFunctionCall","src":"2320:79:16"},"nodeType":"YulExpressionStatement","src":"2320:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2297:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2305:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2293:3:16"},"nodeType":"YulFunctionCall","src":"2293:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"2312:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2289:3:16"},"nodeType":"YulFunctionCall","src":"2289:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2282:6:16"},"nodeType":"YulFunctionCall","src":"2282:35:16"},"nodeType":"YulIf","src":"2279:122:16"},{"nodeType":"YulVariableDeclaration","src":"2410:34:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2437:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2424:12:16"},"nodeType":"YulFunctionCall","src":"2424:20:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2414:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2453:88:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2514:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2522:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2510:3:16"},"nodeType":"YulFunctionCall","src":"2510:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"2529:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"2537:3:16"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2462:47:16"},"nodeType":"YulFunctionCall","src":"2462:79:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2453:5:16"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2247:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2255:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2263:5:16","type":""}],"src":"2207:340:16"},{"body":{"nodeType":"YulBlock","src":"2629:433:16","statements":[{"body":{"nodeType":"YulBlock","src":"2675:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2677:77:16"},"nodeType":"YulFunctionCall","src":"2677:79:16"},"nodeType":"YulExpressionStatement","src":"2677:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2650:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2659:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2646:3:16"},"nodeType":"YulFunctionCall","src":"2646:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2671:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2642:3:16"},"nodeType":"YulFunctionCall","src":"2642:32:16"},"nodeType":"YulIf","src":"2639:119:16"},{"nodeType":"YulBlock","src":"2768:287:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2783:45:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2814:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2825:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2810:3:16"},"nodeType":"YulFunctionCall","src":"2810:17:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2797:12:16"},"nodeType":"YulFunctionCall","src":"2797:31:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2787:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2875:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2877:77:16"},"nodeType":"YulFunctionCall","src":"2877:79:16"},"nodeType":"YulExpressionStatement","src":"2877:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2847:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2855:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2844:2:16"},"nodeType":"YulFunctionCall","src":"2844:30:16"},"nodeType":"YulIf","src":"2841:117:16"},{"nodeType":"YulAssignment","src":"2972:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3028:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:16"},"nodeType":"YulFunctionCall","src":"3013:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3037:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2982:30:16"},"nodeType":"YulFunctionCall","src":"2982:63:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2972:6:16"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2599:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2610:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2622:6:16","type":""}],"src":"2553:509:16"},{"body":{"nodeType":"YulBlock","src":"3152:40:16","statements":[{"nodeType":"YulAssignment","src":"3163:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3179:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3173:5:16"},"nodeType":"YulFunctionCall","src":"3173:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3163:6:16"}]}]},"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3135:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3145:6:16","type":""}],"src":"3068:124:16"},{"body":{"nodeType":"YulBlock","src":"3319:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3336:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"3341:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3329:6:16"},"nodeType":"YulFunctionCall","src":"3329:19:16"},"nodeType":"YulExpressionStatement","src":"3329:19:16"},{"nodeType":"YulAssignment","src":"3357:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3376:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"3381:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3372:3:16"},"nodeType":"YulFunctionCall","src":"3372:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3357:11:16"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3291:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"3296:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3307:11:16","type":""}],"src":"3198:194:16"},{"body":{"nodeType":"YulBlock","src":"3480:60:16","statements":[{"nodeType":"YulAssignment","src":"3490:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"3498:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3490:4:16"}]},{"nodeType":"YulAssignment","src":"3511:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3523:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"3528:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3519:3:16"},"nodeType":"YulFunctionCall","src":"3519:14:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:16"}]}]},"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3467:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"3475:4:16","type":""}],"src":"3398:142:16"},{"body":{"nodeType":"YulBlock","src":"3605:40:16","statements":[{"nodeType":"YulAssignment","src":"3616:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3632:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3626:5:16"},"nodeType":"YulFunctionCall","src":"3626:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3616:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3588:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3598:6:16","type":""}],"src":"3546:99:16"},{"body":{"nodeType":"YulBlock","src":"3737:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3754:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"3759:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3747:6:16"},"nodeType":"YulFunctionCall","src":"3747:19:16"},"nodeType":"YulExpressionStatement","src":"3747:19:16"},{"nodeType":"YulAssignment","src":"3775:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3794:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"3799:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3790:3:16"},"nodeType":"YulFunctionCall","src":"3790:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3775:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3709:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"3714:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3725:11:16","type":""}],"src":"3651:159:16"},{"body":{"nodeType":"YulBlock","src":"3878:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3888:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3897:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3892:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3957:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3982:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"3987:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3978:3:16"},"nodeType":"YulFunctionCall","src":"3978:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4001:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"4006:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3997:3:16"},"nodeType":"YulFunctionCall","src":"3997:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3991:5:16"},"nodeType":"YulFunctionCall","src":"3991:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3971:6:16"},"nodeType":"YulFunctionCall","src":"3971:39:16"},"nodeType":"YulExpressionStatement","src":"3971:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3918:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"3921:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3915:2:16"},"nodeType":"YulFunctionCall","src":"3915:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3929:19:16","statements":[{"nodeType":"YulAssignment","src":"3931:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3940:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"3943:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3936:3:16"},"nodeType":"YulFunctionCall","src":"3936:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3931:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"3911:3:16","statements":[]},"src":"3907:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4040:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4045:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4036:3:16"},"nodeType":"YulFunctionCall","src":"4036:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"4054:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4029:6:16"},"nodeType":"YulFunctionCall","src":"4029:27:16"},"nodeType":"YulExpressionStatement","src":"4029:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3860:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3865:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"3870:6:16","type":""}],"src":"3816:246:16"},{"body":{"nodeType":"YulBlock","src":"4150:275:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4160:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4207:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4174:32:16"},"nodeType":"YulFunctionCall","src":"4174:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4164:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4222:68:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4278:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4283:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4229:48:16"},"nodeType":"YulFunctionCall","src":"4229:61:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4222:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4338:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4345:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4334:3:16"},"nodeType":"YulFunctionCall","src":"4334:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"4352:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4357:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4299:34:16"},"nodeType":"YulFunctionCall","src":"4299:65:16"},"nodeType":"YulExpressionStatement","src":"4299:65:16"},{"nodeType":"YulAssignment","src":"4373:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4384:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4411:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4389:21:16"},"nodeType":"YulFunctionCall","src":"4389:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4380:3:16"},"nodeType":"YulFunctionCall","src":"4380:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4373:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4131:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4138:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4146:3:16","type":""}],"src":"4068:357:16"},{"body":{"nodeType":"YulBlock","src":"4531:96:16","statements":[{"nodeType":"YulAssignment","src":"4541:80:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4609:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"4617:3:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4555:53:16"},"nodeType":"YulFunctionCall","src":"4555:66:16"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"4541:10:16"}]}]},"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"4504:6:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4512:3:16","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"4520:10:16","type":""}],"src":"4431:196:16"},{"body":{"nodeType":"YulBlock","src":"4718:38:16","statements":[{"nodeType":"YulAssignment","src":"4728:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4740:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"4745:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4736:3:16"},"nodeType":"YulFunctionCall","src":"4736:14:16"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"4728:4:16"}]}]},"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4705:3:16","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"4713:4:16","type":""}],"src":"4633:123:16"},{"body":{"nodeType":"YulBlock","src":"4934:847:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4944:78:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5016:5:16"}],"functionName":{"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4958:57:16"},"nodeType":"YulFunctionCall","src":"4958:64:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4948:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5031:103:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5122:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"5127:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5038:83:16"},"nodeType":"YulFunctionCall","src":"5038:96:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5031:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"5143:20:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"5160:3:16"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"5147:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5172:39:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5188:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5197:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"5205:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5193:3:16"},"nodeType":"YulFunctionCall","src":"5193:17:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5184:3:16"},"nodeType":"YulFunctionCall","src":"5184:27:16"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"5176:4:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5220:81:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5295:5:16"}],"functionName":{"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5235:59:16"},"nodeType":"YulFunctionCall","src":"5235:66:16"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"5224:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5310:21:16","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"5324:7:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5314:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5400:336:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5421:3:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5430:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"5436:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5426:3:16"},"nodeType":"YulFunctionCall","src":"5426:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5414:6:16"},"nodeType":"YulFunctionCall","src":"5414:33:16"},"nodeType":"YulExpressionStatement","src":"5414:33:16"},{"nodeType":"YulVariableDeclaration","src":"5460:34:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5487:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5481:5:16"},"nodeType":"YulFunctionCall","src":"5481:13:16"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"5464:13:16","type":""}]},{"nodeType":"YulAssignment","src":"5507:92:16","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"5579:13:16"},{"name":"tail","nodeType":"YulIdentifier","src":"5594:4:16"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5515:63:16"},"nodeType":"YulFunctionCall","src":"5515:84:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5507:4:16"}]},{"nodeType":"YulAssignment","src":"5612:80:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5685:6:16"}],"functionName":{"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5622:62:16"},"nodeType":"YulFunctionCall","src":"5622:70:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5612:6:16"}]},{"nodeType":"YulAssignment","src":"5705:21:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5716:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"5721:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5712:3:16"},"nodeType":"YulFunctionCall","src":"5712:14:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5705:3:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5362:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"5365:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5359:2:16"},"nodeType":"YulFunctionCall","src":"5359:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5373:18:16","statements":[{"nodeType":"YulAssignment","src":"5375:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5384:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"5387:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:16"},"nodeType":"YulFunctionCall","src":"5380:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5375:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"5344:14:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5346:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5355:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5350:1:16","type":""}]}]},"src":"5340:396:16"},{"nodeType":"YulAssignment","src":"5745:11:16","value":{"name":"tail","nodeType":"YulIdentifier","src":"5752:4:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5745:3:16"}]},{"nodeType":"YulAssignment","src":"5765:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"5772:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5765:3:16"}]}]},"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4913:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4920:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4929:3:16","type":""}],"src":"4790:991:16"},{"body":{"nodeType":"YulBlock","src":"5955:245:16","statements":[{"nodeType":"YulAssignment","src":"5965:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5977:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5988:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5973:3:16"},"nodeType":"YulFunctionCall","src":"5973:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5965:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6012:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6023:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6008:3:16"},"nodeType":"YulFunctionCall","src":"6008:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6031:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"6037:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6027:3:16"},"nodeType":"YulFunctionCall","src":"6027:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6001:6:16"},"nodeType":"YulFunctionCall","src":"6001:47:16"},"nodeType":"YulExpressionStatement","src":"6001:47:16"},{"nodeType":"YulAssignment","src":"6057:136:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6179:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"6188:4:16"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6065:113:16"},"nodeType":"YulFunctionCall","src":"6065:128:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6057:4:16"}]}]},"name":"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5927:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5939:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5950:4:16","type":""}],"src":"5787:413:16"},{"body":{"nodeType":"YulBlock","src":"6251:32:16","statements":[{"nodeType":"YulAssignment","src":"6261:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"6272:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6261:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6233:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6243:7:16","type":""}],"src":"6206:77:16"},{"body":{"nodeType":"YulBlock","src":"6354:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6371:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6394:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6376:17:16"},"nodeType":"YulFunctionCall","src":"6376:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6364:6:16"},"nodeType":"YulFunctionCall","src":"6364:37:16"},"nodeType":"YulExpressionStatement","src":"6364:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6342:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6349:3:16","type":""}],"src":"6289:118:16"},{"body":{"nodeType":"YulBlock","src":"6511:124:16","statements":[{"nodeType":"YulAssignment","src":"6521:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6533:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6544:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6529:3:16"},"nodeType":"YulFunctionCall","src":"6529:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6521:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6601:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6614:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6625:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6610:3:16"},"nodeType":"YulFunctionCall","src":"6610:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6557:43:16"},"nodeType":"YulFunctionCall","src":"6557:71:16"},"nodeType":"YulExpressionStatement","src":"6557:71:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6483:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6495:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6506:4:16","type":""}],"src":"6413:222:16"},{"body":{"nodeType":"YulBlock","src":"6684:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"6741:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6750:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6753:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6743:6:16"},"nodeType":"YulFunctionCall","src":"6743:12:16"},"nodeType":"YulExpressionStatement","src":"6743:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6707:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6732:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6714:17:16"},"nodeType":"YulFunctionCall","src":"6714:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6704:2:16"},"nodeType":"YulFunctionCall","src":"6704:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6697:6:16"},"nodeType":"YulFunctionCall","src":"6697:43:16"},"nodeType":"YulIf","src":"6694:63:16"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6677:5:16","type":""}],"src":"6641:122:16"},{"body":{"nodeType":"YulBlock","src":"6821:87:16","statements":[{"nodeType":"YulAssignment","src":"6831:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6853:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6840:12:16"},"nodeType":"YulFunctionCall","src":"6840:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6831:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6896:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6869:26:16"},"nodeType":"YulFunctionCall","src":"6869:33:16"},"nodeType":"YulExpressionStatement","src":"6869:33:16"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6799:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"6807:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6815:5:16","type":""}],"src":"6769:139:16"},{"body":{"nodeType":"YulBlock","src":"6980:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"7026:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7028:77:16"},"nodeType":"YulFunctionCall","src":"7028:79:16"},"nodeType":"YulExpressionStatement","src":"7028:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7001:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"7010:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6997:3:16"},"nodeType":"YulFunctionCall","src":"6997:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"7022:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6993:3:16"},"nodeType":"YulFunctionCall","src":"6993:32:16"},"nodeType":"YulIf","src":"6990:119:16"},{"nodeType":"YulBlock","src":"7119:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7134:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7148:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7138:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7163:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7198:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"7209:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7194:3:16"},"nodeType":"YulFunctionCall","src":"7194:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7218:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7173:20:16"},"nodeType":"YulFunctionCall","src":"7173:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7163:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6950:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6961:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6973:6:16","type":""}],"src":"6914:329:16"},{"body":{"nodeType":"YulBlock","src":"7403:288:16","statements":[{"nodeType":"YulAssignment","src":"7413:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7425:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7436:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7421:3:16"},"nodeType":"YulFunctionCall","src":"7421:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7413:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7493:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7506:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7517:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7502:3:16"},"nodeType":"YulFunctionCall","src":"7502:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7449:43:16"},"nodeType":"YulFunctionCall","src":"7449:71:16"},"nodeType":"YulExpressionStatement","src":"7449:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7574:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7587:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7598:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7583:3:16"},"nodeType":"YulFunctionCall","src":"7583:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7530:43:16"},"nodeType":"YulFunctionCall","src":"7530:72:16"},"nodeType":"YulExpressionStatement","src":"7530:72:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7656:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7669:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7680:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7665:3:16"},"nodeType":"YulFunctionCall","src":"7665:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7612:43:16"},"nodeType":"YulFunctionCall","src":"7612:72:16"},"nodeType":"YulExpressionStatement","src":"7612:72:16"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7359:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7371:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7379:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7387:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7398:4:16","type":""}],"src":"7249:442:16"},{"body":{"nodeType":"YulBlock","src":"7793:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7810:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"7815:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7803:6:16"},"nodeType":"YulFunctionCall","src":"7803:19:16"},"nodeType":"YulExpressionStatement","src":"7803:19:16"},{"nodeType":"YulAssignment","src":"7831:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7850:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"7855:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7846:3:16"},"nodeType":"YulFunctionCall","src":"7846:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7831:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7765:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"7770:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7781:11:16","type":""}],"src":"7697:169:16"},{"body":{"nodeType":"YulBlock","src":"7964:285:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7974:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8021:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7988:32:16"},"nodeType":"YulFunctionCall","src":"7988:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7978:6:16","type":""}]},{"nodeType":"YulAssignment","src":"8036:78:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8102:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"8107:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8043:58:16"},"nodeType":"YulFunctionCall","src":"8043:71:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8036:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8162:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"8169:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8158:3:16"},"nodeType":"YulFunctionCall","src":"8158:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"8176:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"8181:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8123:34:16"},"nodeType":"YulFunctionCall","src":"8123:65:16"},"nodeType":"YulExpressionStatement","src":"8123:65:16"},{"nodeType":"YulAssignment","src":"8197:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8208:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8235:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8213:21:16"},"nodeType":"YulFunctionCall","src":"8213:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8204:3:16"},"nodeType":"YulFunctionCall","src":"8204:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8197:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7945:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7952:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7960:3:16","type":""}],"src":"7872:377:16"},{"body":{"nodeType":"YulBlock","src":"8469:501:16","statements":[{"nodeType":"YulAssignment","src":"8479:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8491:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8502:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8487:3:16"},"nodeType":"YulFunctionCall","src":"8487:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8479:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8526:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8537:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8522:3:16"},"nodeType":"YulFunctionCall","src":"8522:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8545:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"8551:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8541:3:16"},"nodeType":"YulFunctionCall","src":"8541:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8515:6:16"},"nodeType":"YulFunctionCall","src":"8515:47:16"},"nodeType":"YulExpressionStatement","src":"8515:47:16"},{"nodeType":"YulAssignment","src":"8571:86:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8643:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"8652:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8579:63:16"},"nodeType":"YulFunctionCall","src":"8579:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8571:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8678:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8689:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8674:3:16"},"nodeType":"YulFunctionCall","src":"8674:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8698:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"8704:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8694:3:16"},"nodeType":"YulFunctionCall","src":"8694:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8667:6:16"},"nodeType":"YulFunctionCall","src":"8667:48:16"},"nodeType":"YulExpressionStatement","src":"8667:48:16"},{"nodeType":"YulAssignment","src":"8724:86:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8796:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"8805:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8732:63:16"},"nodeType":"YulFunctionCall","src":"8732:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8724:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8831:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8842:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8827:3:16"},"nodeType":"YulFunctionCall","src":"8827:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8851:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"8857:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8847:3:16"},"nodeType":"YulFunctionCall","src":"8847:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8820:6:16"},"nodeType":"YulFunctionCall","src":"8820:48:16"},"nodeType":"YulExpressionStatement","src":"8820:48:16"},{"nodeType":"YulAssignment","src":"8877:86:16","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8949:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"8958:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8885:63:16"},"nodeType":"YulFunctionCall","src":"8885:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8877:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8425:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8437:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8445:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8453:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8464:4:16","type":""}],"src":"8255:715:16"},{"body":{"nodeType":"YulBlock","src":"9102:206:16","statements":[{"nodeType":"YulAssignment","src":"9112:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9124:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9135:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9120:3:16"},"nodeType":"YulFunctionCall","src":"9120:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9112:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9192:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9205:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9216:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9201:3:16"},"nodeType":"YulFunctionCall","src":"9201:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9148:43:16"},"nodeType":"YulFunctionCall","src":"9148:71:16"},"nodeType":"YulExpressionStatement","src":"9148:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9273:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9286:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9297:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9282:3:16"},"nodeType":"YulFunctionCall","src":"9282:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9229:43:16"},"nodeType":"YulFunctionCall","src":"9229:72:16"},"nodeType":"YulExpressionStatement","src":"9229:72:16"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9066:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9078:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9086:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9097:4:16","type":""}],"src":"8976:332:16"},{"body":{"nodeType":"YulBlock","src":"9516:442:16","statements":[{"nodeType":"YulAssignment","src":"9526:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9538:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9549:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9534:3:16"},"nodeType":"YulFunctionCall","src":"9534:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9526:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9607:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9620:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9631:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9616:3:16"},"nodeType":"YulFunctionCall","src":"9616:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9563:43:16"},"nodeType":"YulFunctionCall","src":"9563:71:16"},"nodeType":"YulExpressionStatement","src":"9563:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9688:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9701:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9712:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9697:3:16"},"nodeType":"YulFunctionCall","src":"9697:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9644:43:16"},"nodeType":"YulFunctionCall","src":"9644:72:16"},"nodeType":"YulExpressionStatement","src":"9644:72:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9770:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9783:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9794:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9779:3:16"},"nodeType":"YulFunctionCall","src":"9779:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9726:43:16"},"nodeType":"YulFunctionCall","src":"9726:72:16"},"nodeType":"YulExpressionStatement","src":"9726:72:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9819:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9830:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9815:3:16"},"nodeType":"YulFunctionCall","src":"9815:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9839:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"9845:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9835:3:16"},"nodeType":"YulFunctionCall","src":"9835:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9808:6:16"},"nodeType":"YulFunctionCall","src":"9808:48:16"},"nodeType":"YulExpressionStatement","src":"9808:48:16"},{"nodeType":"YulAssignment","src":"9865:86:16","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9937:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"9946:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9873:63:16"},"nodeType":"YulFunctionCall","src":"9873:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9865:4:16"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9464:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9476:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9484:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9492:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9500:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9511:4:16","type":""}],"src":"9314:644:16"},{"body":{"nodeType":"YulBlock","src":"10138:359:16","statements":[{"nodeType":"YulAssignment","src":"10148:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10160:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10171:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10156:3:16"},"nodeType":"YulFunctionCall","src":"10156:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10148:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10228:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10241:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10252:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10237:3:16"},"nodeType":"YulFunctionCall","src":"10237:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10184:43:16"},"nodeType":"YulFunctionCall","src":"10184:71:16"},"nodeType":"YulExpressionStatement","src":"10184:71:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10276:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10287:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10272:3:16"},"nodeType":"YulFunctionCall","src":"10272:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10296:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"10302:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10292:3:16"},"nodeType":"YulFunctionCall","src":"10292:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10265:6:16"},"nodeType":"YulFunctionCall","src":"10265:48:16"},"nodeType":"YulExpressionStatement","src":"10265:48:16"},{"nodeType":"YulAssignment","src":"10322:86:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10394:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"10403:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10330:63:16"},"nodeType":"YulFunctionCall","src":"10330:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10322:4:16"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10462:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10475:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10486:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10471:3:16"},"nodeType":"YulFunctionCall","src":"10471:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10418:43:16"},"nodeType":"YulFunctionCall","src":"10418:72:16"},"nodeType":"YulExpressionStatement","src":"10418:72:16"}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10094:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10106:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10114:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10122:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10133:4:16","type":""}],"src":"9964:533:16"},{"body":{"nodeType":"YulBlock","src":"10586:391:16","statements":[{"body":{"nodeType":"YulBlock","src":"10632:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10634:77:16"},"nodeType":"YulFunctionCall","src":"10634:79:16"},"nodeType":"YulExpressionStatement","src":"10634:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10607:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"10616:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10603:3:16"},"nodeType":"YulFunctionCall","src":"10603:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"10628:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10599:3:16"},"nodeType":"YulFunctionCall","src":"10599:32:16"},"nodeType":"YulIf","src":"10596:119:16"},{"nodeType":"YulBlock","src":"10725:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10740:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10754:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10744:6:16","type":""}]},{"nodeType":"YulAssignment","src":"10769:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10804:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"10815:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10800:3:16"},"nodeType":"YulFunctionCall","src":"10800:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10824:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10779:20:16"},"nodeType":"YulFunctionCall","src":"10779:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10769:6:16"}]}]},{"nodeType":"YulBlock","src":"10852:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10867:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10881:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10871:6:16","type":""}]},{"nodeType":"YulAssignment","src":"10897:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10932:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"10943:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10928:3:16"},"nodeType":"YulFunctionCall","src":"10928:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10952:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10907:20:16"},"nodeType":"YulFunctionCall","src":"10907:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10897:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10548:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10559:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10571:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10579:6:16","type":""}],"src":"10503:474:16"},{"body":{"nodeType":"YulBlock","src":"11057:40:16","statements":[{"nodeType":"YulAssignment","src":"11068:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11084:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11078:5:16"},"nodeType":"YulFunctionCall","src":"11078:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11068:6:16"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11040:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11050:6:16","type":""}],"src":"10983:114:16"},{"body":{"nodeType":"YulBlock","src":"11214:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11231:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"11236:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11224:6:16"},"nodeType":"YulFunctionCall","src":"11224:19:16"},"nodeType":"YulExpressionStatement","src":"11224:19:16"},{"nodeType":"YulAssignment","src":"11252:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11271:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"11276:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11267:3:16"},"nodeType":"YulFunctionCall","src":"11267:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11252:11:16"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11186:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"11191:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11202:11:16","type":""}],"src":"11103:184:16"},{"body":{"nodeType":"YulBlock","src":"11365:60:16","statements":[{"nodeType":"YulAssignment","src":"11375:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"11383:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11375:4:16"}]},{"nodeType":"YulAssignment","src":"11396:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"11408:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"11413:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11404:3:16"},"nodeType":"YulFunctionCall","src":"11404:14:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11396:4:16"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11352:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"11360:4:16","type":""}],"src":"11293:132:16"},{"body":{"nodeType":"YulBlock","src":"11486:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11503:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11526:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11508:17:16"},"nodeType":"YulFunctionCall","src":"11508:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11496:6:16"},"nodeType":"YulFunctionCall","src":"11496:37:16"},"nodeType":"YulExpressionStatement","src":"11496:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11474:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11481:3:16","type":""}],"src":"11431:108:16"},{"body":{"nodeType":"YulBlock","src":"11625:99:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11669:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"11677:3:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11635:33:16"},"nodeType":"YulFunctionCall","src":"11635:46:16"},"nodeType":"YulExpressionStatement","src":"11635:46:16"},{"nodeType":"YulAssignment","src":"11690:28:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11708:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"11713:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11704:3:16"},"nodeType":"YulFunctionCall","src":"11704:14:16"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"11690:10:16"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"11598:6:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11606:3:16","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"11614:10:16","type":""}],"src":"11545:179:16"},{"body":{"nodeType":"YulBlock","src":"11805:38:16","statements":[{"nodeType":"YulAssignment","src":"11815:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"11827:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"11832:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11823:3:16"},"nodeType":"YulFunctionCall","src":"11823:14:16"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"11815:4:16"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11792:3:16","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"11800:4:16","type":""}],"src":"11730:113:16"},{"body":{"nodeType":"YulBlock","src":"12003:608:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12013:68:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12075:5:16"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12027:47:16"},"nodeType":"YulFunctionCall","src":"12027:54:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12017:6:16","type":""}]},{"nodeType":"YulAssignment","src":"12090:93:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12171:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"12176:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12097:73:16"},"nodeType":"YulFunctionCall","src":"12097:86:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12090:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"12192:71:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12257:5:16"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12207:49:16"},"nodeType":"YulFunctionCall","src":"12207:56:16"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"12196:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12272:21:16","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"12286:7:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"12276:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"12362:224:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12376:34:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12403:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12397:5:16"},"nodeType":"YulFunctionCall","src":"12397:13:16"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"12380:13:16","type":""}]},{"nodeType":"YulAssignment","src":"12423:70:16","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"12474:13:16"},{"name":"pos","nodeType":"YulIdentifier","src":"12489:3:16"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12430:43:16"},"nodeType":"YulFunctionCall","src":"12430:63:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12423:3:16"}]},{"nodeType":"YulAssignment","src":"12506:70:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12569:6:16"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12516:52:16"},"nodeType":"YulFunctionCall","src":"12516:60:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12506:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12324:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"12327:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12321:2:16"},"nodeType":"YulFunctionCall","src":"12321:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12335:18:16","statements":[{"nodeType":"YulAssignment","src":"12337:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12346:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"12349:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12342:3:16"},"nodeType":"YulFunctionCall","src":"12342:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12337:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"12306:14:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12308:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"12317:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12312:1:16","type":""}]}]},"src":"12302:284:16"},{"nodeType":"YulAssignment","src":"12595:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"12602:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12595:3:16"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11982:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11989:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11998:3:16","type":""}],"src":"11879:732:16"},{"body":{"nodeType":"YulBlock","src":"12765:225:16","statements":[{"nodeType":"YulAssignment","src":"12775:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12787:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12798:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12783:3:16"},"nodeType":"YulFunctionCall","src":"12783:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12775:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12822:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12833:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12818:3:16"},"nodeType":"YulFunctionCall","src":"12818:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12841:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"12847:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12837:3:16"},"nodeType":"YulFunctionCall","src":"12837:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12811:6:16"},"nodeType":"YulFunctionCall","src":"12811:47:16"},"nodeType":"YulExpressionStatement","src":"12811:47:16"},{"nodeType":"YulAssignment","src":"12867:116:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12969:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"12978:4:16"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12875:93:16"},"nodeType":"YulFunctionCall","src":"12875:108:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12867:4:16"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12737:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12749:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12760:4:16","type":""}],"src":"12617:373:16"},{"body":{"nodeType":"YulBlock","src":"13218:513:16","statements":[{"nodeType":"YulAssignment","src":"13228:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13240:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13251:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13236:3:16"},"nodeType":"YulFunctionCall","src":"13236:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13228:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13309:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13322:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13333:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13318:3:16"},"nodeType":"YulFunctionCall","src":"13318:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13265:43:16"},"nodeType":"YulFunctionCall","src":"13265:71:16"},"nodeType":"YulExpressionStatement","src":"13265:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13390:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13403:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13414:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13399:3:16"},"nodeType":"YulFunctionCall","src":"13399:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13346:43:16"},"nodeType":"YulFunctionCall","src":"13346:72:16"},"nodeType":"YulExpressionStatement","src":"13346:72:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13439:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13450:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13435:3:16"},"nodeType":"YulFunctionCall","src":"13435:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13459:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"13465:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13455:3:16"},"nodeType":"YulFunctionCall","src":"13455:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13428:6:16"},"nodeType":"YulFunctionCall","src":"13428:48:16"},"nodeType":"YulExpressionStatement","src":"13428:48:16"},{"nodeType":"YulAssignment","src":"13485:86:16","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13557:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"13566:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13493:63:16"},"nodeType":"YulFunctionCall","src":"13493:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13485:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13592:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13603:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13588:3:16"},"nodeType":"YulFunctionCall","src":"13588:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13612:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"13618:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13608:3:16"},"nodeType":"YulFunctionCall","src":"13608:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13581:6:16"},"nodeType":"YulFunctionCall","src":"13581:48:16"},"nodeType":"YulExpressionStatement","src":"13581:48:16"},{"nodeType":"YulAssignment","src":"13638:86:16","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13710:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"13719:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13646:63:16"},"nodeType":"YulFunctionCall","src":"13646:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13638:4:16"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13166:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13178:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13186:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13194:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13202:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13213:4:16","type":""}],"src":"12996:735:16"},{"body":{"nodeType":"YulBlock","src":"13891:1117:16","statements":[{"body":{"nodeType":"YulBlock","src":"13938:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13940:77:16"},"nodeType":"YulFunctionCall","src":"13940:79:16"},"nodeType":"YulExpressionStatement","src":"13940:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13912:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"13921:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13908:3:16"},"nodeType":"YulFunctionCall","src":"13908:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"13933:3:16","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13904:3:16"},"nodeType":"YulFunctionCall","src":"13904:33:16"},"nodeType":"YulIf","src":"13901:120:16"},{"nodeType":"YulBlock","src":"14031:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"14046:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"14060:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14050:6:16","type":""}]},{"nodeType":"YulAssignment","src":"14075:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14110:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"14121:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14106:3:16"},"nodeType":"YulFunctionCall","src":"14106:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14130:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14085:20:16"},"nodeType":"YulFunctionCall","src":"14085:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14075:6:16"}]}]},{"nodeType":"YulBlock","src":"14158:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"14173:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"14187:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14177:6:16","type":""}]},{"nodeType":"YulAssignment","src":"14203:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14238:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"14249:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14234:3:16"},"nodeType":"YulFunctionCall","src":"14234:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14258:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14213:20:16"},"nodeType":"YulFunctionCall","src":"14213:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14203:6:16"}]}]},{"nodeType":"YulBlock","src":"14286:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"14301:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"14315:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14305:6:16","type":""}]},{"nodeType":"YulAssignment","src":"14331:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14366:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"14377:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14362:3:16"},"nodeType":"YulFunctionCall","src":"14362:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14386:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14341:20:16"},"nodeType":"YulFunctionCall","src":"14341:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14331:6:16"}]}]},{"nodeType":"YulBlock","src":"14414:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"14429:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14460:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14471:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14456:3:16"},"nodeType":"YulFunctionCall","src":"14456:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14443:12:16"},"nodeType":"YulFunctionCall","src":"14443:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14433:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"14522:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14524:77:16"},"nodeType":"YulFunctionCall","src":"14524:79:16"},"nodeType":"YulExpressionStatement","src":"14524:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14494:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"14502:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14491:2:16"},"nodeType":"YulFunctionCall","src":"14491:30:16"},"nodeType":"YulIf","src":"14488:117:16"},{"nodeType":"YulAssignment","src":"14619:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14664:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"14675:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14660:3:16"},"nodeType":"YulFunctionCall","src":"14660:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14684:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14629:30:16"},"nodeType":"YulFunctionCall","src":"14629:63:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"14619:6:16"}]}]},{"nodeType":"YulBlock","src":"14712:289:16","statements":[{"nodeType":"YulVariableDeclaration","src":"14727:47:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14758:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14769:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14754:3:16"},"nodeType":"YulFunctionCall","src":"14754:19:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14741:12:16"},"nodeType":"YulFunctionCall","src":"14741:33:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14731:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"14821:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14823:77:16"},"nodeType":"YulFunctionCall","src":"14823:79:16"},"nodeType":"YulExpressionStatement","src":"14823:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14793:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"14801:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14790:2:16"},"nodeType":"YulFunctionCall","src":"14790:30:16"},"nodeType":"YulIf","src":"14787:117:16"},{"nodeType":"YulAssignment","src":"14918:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14963:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"14974:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14959:3:16"},"nodeType":"YulFunctionCall","src":"14959:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14983:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14928:30:16"},"nodeType":"YulFunctionCall","src":"14928:63:16"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"14918:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13829:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13840:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13852:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13860:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13868:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13876:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13884:6:16","type":""}],"src":"13737:1271:16"},{"body":{"nodeType":"YulBlock","src":"15132:195:16","statements":[{"nodeType":"YulAssignment","src":"15142:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15154:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15165:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15150:3:16"},"nodeType":"YulFunctionCall","src":"15150:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15142:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15189:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15200:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15185:3:16"},"nodeType":"YulFunctionCall","src":"15185:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15208:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"15214:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15204:3:16"},"nodeType":"YulFunctionCall","src":"15204:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15178:6:16"},"nodeType":"YulFunctionCall","src":"15178:47:16"},"nodeType":"YulExpressionStatement","src":"15178:47:16"},{"nodeType":"YulAssignment","src":"15234:86:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15306:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"15315:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15242:63:16"},"nodeType":"YulFunctionCall","src":"15242:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15234:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15104:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15116:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15127:4:16","type":""}],"src":"15014:313:16"},{"body":{"nodeType":"YulBlock","src":"15470:988:16","statements":[{"body":{"nodeType":"YulBlock","src":"15517:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15519:77:16"},"nodeType":"YulFunctionCall","src":"15519:79:16"},"nodeType":"YulExpressionStatement","src":"15519:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15491:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"15500:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15487:3:16"},"nodeType":"YulFunctionCall","src":"15487:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"15512:3:16","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15483:3:16"},"nodeType":"YulFunctionCall","src":"15483:33:16"},"nodeType":"YulIf","src":"15480:120:16"},{"nodeType":"YulBlock","src":"15610:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"15625:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"15639:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15629:6:16","type":""}]},{"nodeType":"YulAssignment","src":"15654:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15689:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"15700:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15685:3:16"},"nodeType":"YulFunctionCall","src":"15685:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15709:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15664:20:16"},"nodeType":"YulFunctionCall","src":"15664:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15654:6:16"}]}]},{"nodeType":"YulBlock","src":"15737:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"15752:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15783:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15794:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15779:3:16"},"nodeType":"YulFunctionCall","src":"15779:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15766:12:16"},"nodeType":"YulFunctionCall","src":"15766:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15756:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"15845:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15847:77:16"},"nodeType":"YulFunctionCall","src":"15847:79:16"},"nodeType":"YulExpressionStatement","src":"15847:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15817:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"15825:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15814:2:16"},"nodeType":"YulFunctionCall","src":"15814:30:16"},"nodeType":"YulIf","src":"15811:117:16"},{"nodeType":"YulAssignment","src":"15942:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15987:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"15998:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15983:3:16"},"nodeType":"YulFunctionCall","src":"15983:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16007:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15952:30:16"},"nodeType":"YulFunctionCall","src":"15952:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15942:6:16"}]}]},{"nodeType":"YulBlock","src":"16035:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"16050:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16081:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16092:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16077:3:16"},"nodeType":"YulFunctionCall","src":"16077:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16064:12:16"},"nodeType":"YulFunctionCall","src":"16064:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16054:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"16143:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"16145:77:16"},"nodeType":"YulFunctionCall","src":"16145:79:16"},"nodeType":"YulExpressionStatement","src":"16145:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16115:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16123:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16112:2:16"},"nodeType":"YulFunctionCall","src":"16112:30:16"},"nodeType":"YulIf","src":"16109:117:16"},{"nodeType":"YulAssignment","src":"16240:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16285:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"16296:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16281:3:16"},"nodeType":"YulFunctionCall","src":"16281:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16305:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16250:30:16"},"nodeType":"YulFunctionCall","src":"16250:63:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"16240:6:16"}]}]},{"nodeType":"YulBlock","src":"16333:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"16348:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"16362:2:16","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16352:6:16","type":""}]},{"nodeType":"YulAssignment","src":"16378:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16413:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"16424:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16409:3:16"},"nodeType":"YulFunctionCall","src":"16409:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16433:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"16388:20:16"},"nodeType":"YulFunctionCall","src":"16388:53:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"16378:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15416:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15427:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15439:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15447:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15455:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15463:6:16","type":""}],"src":"15333:1125:16"},{"body":{"nodeType":"YulBlock","src":"16630:348:16","statements":[{"nodeType":"YulAssignment","src":"16640:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16652:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16663:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16648:3:16"},"nodeType":"YulFunctionCall","src":"16648:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16640:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16687:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16698:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16683:3:16"},"nodeType":"YulFunctionCall","src":"16683:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16706:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"16712:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16702:3:16"},"nodeType":"YulFunctionCall","src":"16702:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16676:6:16"},"nodeType":"YulFunctionCall","src":"16676:47:16"},"nodeType":"YulExpressionStatement","src":"16676:47:16"},{"nodeType":"YulAssignment","src":"16732:86:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16804:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"16813:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16740:63:16"},"nodeType":"YulFunctionCall","src":"16740:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16732:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16839:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16850:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16835:3:16"},"nodeType":"YulFunctionCall","src":"16835:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16859:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"16865:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16855:3:16"},"nodeType":"YulFunctionCall","src":"16855:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16828:6:16"},"nodeType":"YulFunctionCall","src":"16828:48:16"},"nodeType":"YulExpressionStatement","src":"16828:48:16"},{"nodeType":"YulAssignment","src":"16885:86:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16957:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"16966:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16893:63:16"},"nodeType":"YulFunctionCall","src":"16893:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16885:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16594:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16606:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16614:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16625:4:16","type":""}],"src":"16464:514:16"},{"body":{"nodeType":"YulBlock","src":"17131:1158:16","statements":[{"body":{"nodeType":"YulBlock","src":"17178:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17180:77:16"},"nodeType":"YulFunctionCall","src":"17180:79:16"},"nodeType":"YulExpressionStatement","src":"17180:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17152:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"17161:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17148:3:16"},"nodeType":"YulFunctionCall","src":"17148:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"17173:3:16","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17144:3:16"},"nodeType":"YulFunctionCall","src":"17144:33:16"},"nodeType":"YulIf","src":"17141:120:16"},{"nodeType":"YulBlock","src":"17271:287:16","statements":[{"nodeType":"YulVariableDeclaration","src":"17286:45:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17317:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17328:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17313:3:16"},"nodeType":"YulFunctionCall","src":"17313:17:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17300:12:16"},"nodeType":"YulFunctionCall","src":"17300:31:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17290:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"17378:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17380:77:16"},"nodeType":"YulFunctionCall","src":"17380:79:16"},"nodeType":"YulExpressionStatement","src":"17380:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17350:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"17358:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17347:2:16"},"nodeType":"YulFunctionCall","src":"17347:30:16"},"nodeType":"YulIf","src":"17344:117:16"},{"nodeType":"YulAssignment","src":"17475:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17520:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"17531:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17516:3:16"},"nodeType":"YulFunctionCall","src":"17516:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17540:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17485:30:16"},"nodeType":"YulFunctionCall","src":"17485:63:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17475:6:16"}]}]},{"nodeType":"YulBlock","src":"17568:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"17583:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17614:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17625:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17610:3:16"},"nodeType":"YulFunctionCall","src":"17610:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17597:12:16"},"nodeType":"YulFunctionCall","src":"17597:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17587:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"17676:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17678:77:16"},"nodeType":"YulFunctionCall","src":"17678:79:16"},"nodeType":"YulExpressionStatement","src":"17678:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17648:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"17656:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17645:2:16"},"nodeType":"YulFunctionCall","src":"17645:30:16"},"nodeType":"YulIf","src":"17642:117:16"},{"nodeType":"YulAssignment","src":"17773:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17818:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"17829:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17814:3:16"},"nodeType":"YulFunctionCall","src":"17814:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17838:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17783:30:16"},"nodeType":"YulFunctionCall","src":"17783:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17773:6:16"}]}]},{"nodeType":"YulBlock","src":"17866:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"17881:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17912:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17923:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17908:3:16"},"nodeType":"YulFunctionCall","src":"17908:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17895:12:16"},"nodeType":"YulFunctionCall","src":"17895:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17885:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"17974:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17976:77:16"},"nodeType":"YulFunctionCall","src":"17976:79:16"},"nodeType":"YulExpressionStatement","src":"17976:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17946:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"17954:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17943:2:16"},"nodeType":"YulFunctionCall","src":"17943:30:16"},"nodeType":"YulIf","src":"17940:117:16"},{"nodeType":"YulAssignment","src":"18071:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18116:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"18127:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18112:3:16"},"nodeType":"YulFunctionCall","src":"18112:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18136:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18081:30:16"},"nodeType":"YulFunctionCall","src":"18081:63:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"18071:6:16"}]}]},{"nodeType":"YulBlock","src":"18164:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"18179:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"18193:2:16","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18183:6:16","type":""}]},{"nodeType":"YulAssignment","src":"18209:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18244:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"18255:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18240:3:16"},"nodeType":"YulFunctionCall","src":"18240:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18264:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18219:20:16"},"nodeType":"YulFunctionCall","src":"18219:53:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"18209:6:16"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17077:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17088:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17100:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17108:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17116:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17124:6:16","type":""}],"src":"16984:1305:16"},{"body":{"nodeType":"YulBlock","src":"18388:561:16","statements":[{"body":{"nodeType":"YulBlock","src":"18434:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18436:77:16"},"nodeType":"YulFunctionCall","src":"18436:79:16"},"nodeType":"YulExpressionStatement","src":"18436:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18409:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"18418:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18405:3:16"},"nodeType":"YulFunctionCall","src":"18405:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"18430:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18401:3:16"},"nodeType":"YulFunctionCall","src":"18401:32:16"},"nodeType":"YulIf","src":"18398:119:16"},{"nodeType":"YulBlock","src":"18527:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"18542:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"18556:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18546:6:16","type":""}]},{"nodeType":"YulAssignment","src":"18571:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18606:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"18617:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18602:3:16"},"nodeType":"YulFunctionCall","src":"18602:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18626:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18581:20:16"},"nodeType":"YulFunctionCall","src":"18581:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18571:6:16"}]}]},{"nodeType":"YulBlock","src":"18654:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"18669:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18700:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18711:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18696:3:16"},"nodeType":"YulFunctionCall","src":"18696:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18683:12:16"},"nodeType":"YulFunctionCall","src":"18683:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18673:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"18762:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18764:77:16"},"nodeType":"YulFunctionCall","src":"18764:79:16"},"nodeType":"YulExpressionStatement","src":"18764:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18734:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"18742:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18731:2:16"},"nodeType":"YulFunctionCall","src":"18731:30:16"},"nodeType":"YulIf","src":"18728:117:16"},{"nodeType":"YulAssignment","src":"18859:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18904:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"18915:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18900:3:16"},"nodeType":"YulFunctionCall","src":"18900:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18924:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18869:30:16"},"nodeType":"YulFunctionCall","src":"18869:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18859:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18350:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18361:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18373:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18381:6:16","type":""}],"src":"18295:654:16"},{"body":{"nodeType":"YulBlock","src":"19075:859:16","statements":[{"body":{"nodeType":"YulBlock","src":"19121:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19123:77:16"},"nodeType":"YulFunctionCall","src":"19123:79:16"},"nodeType":"YulExpressionStatement","src":"19123:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19096:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"19105:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19092:3:16"},"nodeType":"YulFunctionCall","src":"19092:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"19117:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19088:3:16"},"nodeType":"YulFunctionCall","src":"19088:32:16"},"nodeType":"YulIf","src":"19085:119:16"},{"nodeType":"YulBlock","src":"19214:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"19229:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"19243:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19233:6:16","type":""}]},{"nodeType":"YulAssignment","src":"19258:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19293:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"19304:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19289:3:16"},"nodeType":"YulFunctionCall","src":"19289:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19313:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"19268:20:16"},"nodeType":"YulFunctionCall","src":"19268:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19258:6:16"}]}]},{"nodeType":"YulBlock","src":"19341:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"19356:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19387:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19398:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19383:3:16"},"nodeType":"YulFunctionCall","src":"19383:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19370:12:16"},"nodeType":"YulFunctionCall","src":"19370:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19360:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"19449:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19451:77:16"},"nodeType":"YulFunctionCall","src":"19451:79:16"},"nodeType":"YulExpressionStatement","src":"19451:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19421:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"19429:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19418:2:16"},"nodeType":"YulFunctionCall","src":"19418:30:16"},"nodeType":"YulIf","src":"19415:117:16"},{"nodeType":"YulAssignment","src":"19546:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19591:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"19602:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19587:3:16"},"nodeType":"YulFunctionCall","src":"19587:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19611:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19556:30:16"},"nodeType":"YulFunctionCall","src":"19556:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19546:6:16"}]}]},{"nodeType":"YulBlock","src":"19639:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"19654:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19685:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19696:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19681:3:16"},"nodeType":"YulFunctionCall","src":"19681:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19668:12:16"},"nodeType":"YulFunctionCall","src":"19668:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19658:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"19747:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19749:77:16"},"nodeType":"YulFunctionCall","src":"19749:79:16"},"nodeType":"YulExpressionStatement","src":"19749:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19719:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"19727:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19716:2:16"},"nodeType":"YulFunctionCall","src":"19716:30:16"},"nodeType":"YulIf","src":"19713:117:16"},{"nodeType":"YulAssignment","src":"19844:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19889:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"19900:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19885:3:16"},"nodeType":"YulFunctionCall","src":"19885:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19909:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19854:30:16"},"nodeType":"YulFunctionCall","src":"19854:63:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"19844:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19029:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19040:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19052:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19060:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19068:6:16","type":""}],"src":"18955:979:16"},{"body":{"nodeType":"YulBlock","src":"20050:689:16","statements":[{"body":{"nodeType":"YulBlock","src":"20096:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20098:77:16"},"nodeType":"YulFunctionCall","src":"20098:79:16"},"nodeType":"YulExpressionStatement","src":"20098:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20071:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"20080:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20067:3:16"},"nodeType":"YulFunctionCall","src":"20067:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"20092:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20063:3:16"},"nodeType":"YulFunctionCall","src":"20063:32:16"},"nodeType":"YulIf","src":"20060:119:16"},{"nodeType":"YulBlock","src":"20189:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"20204:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"20218:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20208:6:16","type":""}]},{"nodeType":"YulAssignment","src":"20233:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20268:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"20279:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20264:3:16"},"nodeType":"YulFunctionCall","src":"20264:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20288:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"20243:20:16"},"nodeType":"YulFunctionCall","src":"20243:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20233:6:16"}]}]},{"nodeType":"YulBlock","src":"20316:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"20331:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"20345:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20335:6:16","type":""}]},{"nodeType":"YulAssignment","src":"20361:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20396:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"20407:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20392:3:16"},"nodeType":"YulFunctionCall","src":"20392:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20416:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"20371:20:16"},"nodeType":"YulFunctionCall","src":"20371:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"20361:6:16"}]}]},{"nodeType":"YulBlock","src":"20444:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"20459:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20490:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20501:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20486:3:16"},"nodeType":"YulFunctionCall","src":"20486:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20473:12:16"},"nodeType":"YulFunctionCall","src":"20473:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20463:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"20552:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"20554:77:16"},"nodeType":"YulFunctionCall","src":"20554:79:16"},"nodeType":"YulExpressionStatement","src":"20554:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20524:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"20532:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20521:2:16"},"nodeType":"YulFunctionCall","src":"20521:30:16"},"nodeType":"YulIf","src":"20518:117:16"},{"nodeType":"YulAssignment","src":"20649:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20694:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"20705:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20690:3:16"},"nodeType":"YulFunctionCall","src":"20690:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20714:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"20659:30:16"},"nodeType":"YulFunctionCall","src":"20659:63:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"20649:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20004:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20015:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20027:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20035:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20043:6:16","type":""}],"src":"19940:799:16"},{"body":{"nodeType":"YulBlock","src":"20872:818:16","statements":[{"body":{"nodeType":"YulBlock","src":"20919:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20921:77:16"},"nodeType":"YulFunctionCall","src":"20921:79:16"},"nodeType":"YulExpressionStatement","src":"20921:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20893:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"20902:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20889:3:16"},"nodeType":"YulFunctionCall","src":"20889:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"20914:3:16","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20885:3:16"},"nodeType":"YulFunctionCall","src":"20885:33:16"},"nodeType":"YulIf","src":"20882:120:16"},{"nodeType":"YulBlock","src":"21012:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"21027:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"21041:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21031:6:16","type":""}]},{"nodeType":"YulAssignment","src":"21056:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21091:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"21102:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21087:3:16"},"nodeType":"YulFunctionCall","src":"21087:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21111:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21066:20:16"},"nodeType":"YulFunctionCall","src":"21066:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21056:6:16"}]}]},{"nodeType":"YulBlock","src":"21139:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"21154:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"21168:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21158:6:16","type":""}]},{"nodeType":"YulAssignment","src":"21184:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21219:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"21230:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21215:3:16"},"nodeType":"YulFunctionCall","src":"21215:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21239:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21194:20:16"},"nodeType":"YulFunctionCall","src":"21194:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"21184:6:16"}]}]},{"nodeType":"YulBlock","src":"21267:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"21282:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"21296:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21286:6:16","type":""}]},{"nodeType":"YulAssignment","src":"21312:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21347:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"21358:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21343:3:16"},"nodeType":"YulFunctionCall","src":"21343:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21367:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21322:20:16"},"nodeType":"YulFunctionCall","src":"21322:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"21312:6:16"}]}]},{"nodeType":"YulBlock","src":"21395:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"21410:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21441:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"21452:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21437:3:16"},"nodeType":"YulFunctionCall","src":"21437:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21424:12:16"},"nodeType":"YulFunctionCall","src":"21424:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21414:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"21503:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21505:77:16"},"nodeType":"YulFunctionCall","src":"21505:79:16"},"nodeType":"YulExpressionStatement","src":"21505:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21475:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"21483:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21472:2:16"},"nodeType":"YulFunctionCall","src":"21472:30:16"},"nodeType":"YulIf","src":"21469:117:16"},{"nodeType":"YulAssignment","src":"21600:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21645:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"21656:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21641:3:16"},"nodeType":"YulFunctionCall","src":"21641:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21665:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"21610:30:16"},"nodeType":"YulFunctionCall","src":"21610:63:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"21600:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20818:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20829:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20841:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20849:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20857:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20865:6:16","type":""}],"src":"20745:945:16"},{"body":{"nodeType":"YulBlock","src":"21738:48:16","statements":[{"nodeType":"YulAssignment","src":"21748:32:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21773:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21766:6:16"},"nodeType":"YulFunctionCall","src":"21766:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21759:6:16"},"nodeType":"YulFunctionCall","src":"21759:21:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21748:7:16"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21720:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21730:7:16","type":""}],"src":"21696:90:16"},{"body":{"nodeType":"YulBlock","src":"21851:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21868:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21888:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"21873:14:16"},"nodeType":"YulFunctionCall","src":"21873:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21861:6:16"},"nodeType":"YulFunctionCall","src":"21861:34:16"},"nodeType":"YulExpressionStatement","src":"21861:34:16"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21839:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21846:3:16","type":""}],"src":"21792:109:16"},{"body":{"nodeType":"YulBlock","src":"22181:738:16","statements":[{"nodeType":"YulAssignment","src":"22191:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22203:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22214:3:16","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22199:3:16"},"nodeType":"YulFunctionCall","src":"22199:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22191:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22272:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22285:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22296:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22281:3:16"},"nodeType":"YulFunctionCall","src":"22281:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22228:43:16"},"nodeType":"YulFunctionCall","src":"22228:71:16"},"nodeType":"YulExpressionStatement","src":"22228:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22347:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22360:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22371:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22356:3:16"},"nodeType":"YulFunctionCall","src":"22356:18:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"22309:37:16"},"nodeType":"YulFunctionCall","src":"22309:66:16"},"nodeType":"YulExpressionStatement","src":"22309:66:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22423:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22436:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22447:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22432:3:16"},"nodeType":"YulFunctionCall","src":"22432:18:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"22385:37:16"},"nodeType":"YulFunctionCall","src":"22385:66:16"},"nodeType":"YulExpressionStatement","src":"22385:66:16"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22499:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22512:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22523:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22508:3:16"},"nodeType":"YulFunctionCall","src":"22508:18:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"22461:37:16"},"nodeType":"YulFunctionCall","src":"22461:66:16"},"nodeType":"YulExpressionStatement","src":"22461:66:16"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"22575:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22588:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22599:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22584:3:16"},"nodeType":"YulFunctionCall","src":"22584:19:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"22537:37:16"},"nodeType":"YulFunctionCall","src":"22537:67:16"},"nodeType":"YulExpressionStatement","src":"22537:67:16"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"22652:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22665:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22676:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22661:3:16"},"nodeType":"YulFunctionCall","src":"22661:19:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"22614:37:16"},"nodeType":"YulFunctionCall","src":"22614:67:16"},"nodeType":"YulExpressionStatement","src":"22614:67:16"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"22729:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22742:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22753:3:16","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22738:3:16"},"nodeType":"YulFunctionCall","src":"22738:19:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"22691:37:16"},"nodeType":"YulFunctionCall","src":"22691:67:16"},"nodeType":"YulExpressionStatement","src":"22691:67:16"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"22806:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22819:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22830:3:16","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22815:3:16"},"nodeType":"YulFunctionCall","src":"22815:19:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"22768:37:16"},"nodeType":"YulFunctionCall","src":"22768:67:16"},"nodeType":"YulExpressionStatement","src":"22768:67:16"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"22883:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22896:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22907:3:16","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22892:3:16"},"nodeType":"YulFunctionCall","src":"22892:19:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"22845:37:16"},"nodeType":"YulFunctionCall","src":"22845:67:16"},"nodeType":"YulExpressionStatement","src":"22845:67:16"}]},"name":"abi_encode_tuple_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__to_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22089:9:16","type":""},{"name":"value8","nodeType":"YulTypedName","src":"22101:6:16","type":""},{"name":"value7","nodeType":"YulTypedName","src":"22109:6:16","type":""},{"name":"value6","nodeType":"YulTypedName","src":"22117:6:16","type":""},{"name":"value5","nodeType":"YulTypedName","src":"22125:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22133:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22141:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22149:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22157:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22165:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22176:4:16","type":""}],"src":"21907:1012:16"},{"body":{"nodeType":"YulBlock","src":"23072:1158:16","statements":[{"body":{"nodeType":"YulBlock","src":"23119:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"23121:77:16"},"nodeType":"YulFunctionCall","src":"23121:79:16"},"nodeType":"YulExpressionStatement","src":"23121:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23093:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"23102:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23089:3:16"},"nodeType":"YulFunctionCall","src":"23089:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"23114:3:16","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23085:3:16"},"nodeType":"YulFunctionCall","src":"23085:33:16"},"nodeType":"YulIf","src":"23082:120:16"},{"nodeType":"YulBlock","src":"23212:287:16","statements":[{"nodeType":"YulVariableDeclaration","src":"23227:45:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23258:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23269:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23254:3:16"},"nodeType":"YulFunctionCall","src":"23254:17:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23241:12:16"},"nodeType":"YulFunctionCall","src":"23241:31:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23231:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"23319:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"23321:77:16"},"nodeType":"YulFunctionCall","src":"23321:79:16"},"nodeType":"YulExpressionStatement","src":"23321:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23291:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"23299:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23288:2:16"},"nodeType":"YulFunctionCall","src":"23288:30:16"},"nodeType":"YulIf","src":"23285:117:16"},{"nodeType":"YulAssignment","src":"23416:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23461:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"23472:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23457:3:16"},"nodeType":"YulFunctionCall","src":"23457:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23481:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"23426:30:16"},"nodeType":"YulFunctionCall","src":"23426:63:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23416:6:16"}]}]},{"nodeType":"YulBlock","src":"23509:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"23524:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23555:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23566:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23551:3:16"},"nodeType":"YulFunctionCall","src":"23551:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23538:12:16"},"nodeType":"YulFunctionCall","src":"23538:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23528:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"23617:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"23619:77:16"},"nodeType":"YulFunctionCall","src":"23619:79:16"},"nodeType":"YulExpressionStatement","src":"23619:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23589:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"23597:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23586:2:16"},"nodeType":"YulFunctionCall","src":"23586:30:16"},"nodeType":"YulIf","src":"23583:117:16"},{"nodeType":"YulAssignment","src":"23714:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23759:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"23770:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23755:3:16"},"nodeType":"YulFunctionCall","src":"23755:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23779:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"23724:30:16"},"nodeType":"YulFunctionCall","src":"23724:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"23714:6:16"}]}]},{"nodeType":"YulBlock","src":"23807:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"23822:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"23836:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23826:6:16","type":""}]},{"nodeType":"YulAssignment","src":"23852:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23887:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"23898:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23883:3:16"},"nodeType":"YulFunctionCall","src":"23883:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23907:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"23862:20:16"},"nodeType":"YulFunctionCall","src":"23862:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"23852:6:16"}]}]},{"nodeType":"YulBlock","src":"23935:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"23950:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23981:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23992:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23977:3:16"},"nodeType":"YulFunctionCall","src":"23977:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23964:12:16"},"nodeType":"YulFunctionCall","src":"23964:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23954:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"24043:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"24045:77:16"},"nodeType":"YulFunctionCall","src":"24045:79:16"},"nodeType":"YulExpressionStatement","src":"24045:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24015:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"24023:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24012:2:16"},"nodeType":"YulFunctionCall","src":"24012:30:16"},"nodeType":"YulIf","src":"24009:117:16"},{"nodeType":"YulAssignment","src":"24140:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24185:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"24196:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24181:3:16"},"nodeType":"YulFunctionCall","src":"24181:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24205:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"24150:30:16"},"nodeType":"YulFunctionCall","src":"24150:63:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"24140:6:16"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23018:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23029:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23041:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23049:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23057:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23065:6:16","type":""}],"src":"22925:1305:16"},{"body":{"nodeType":"YulBlock","src":"24339:731:16","statements":[{"body":{"nodeType":"YulBlock","src":"24385:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24387:77:16"},"nodeType":"YulFunctionCall","src":"24387:79:16"},"nodeType":"YulExpressionStatement","src":"24387:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24360:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"24369:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24356:3:16"},"nodeType":"YulFunctionCall","src":"24356:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"24381:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24352:3:16"},"nodeType":"YulFunctionCall","src":"24352:32:16"},"nodeType":"YulIf","src":"24349:119:16"},{"nodeType":"YulBlock","src":"24478:287:16","statements":[{"nodeType":"YulVariableDeclaration","src":"24493:45:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24524:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24535:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24520:3:16"},"nodeType":"YulFunctionCall","src":"24520:17:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24507:12:16"},"nodeType":"YulFunctionCall","src":"24507:31:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24497:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"24585:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"24587:77:16"},"nodeType":"YulFunctionCall","src":"24587:79:16"},"nodeType":"YulExpressionStatement","src":"24587:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24557:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"24565:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24554:2:16"},"nodeType":"YulFunctionCall","src":"24554:30:16"},"nodeType":"YulIf","src":"24551:117:16"},{"nodeType":"YulAssignment","src":"24682:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24727:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"24738:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24723:3:16"},"nodeType":"YulFunctionCall","src":"24723:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24747:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"24692:30:16"},"nodeType":"YulFunctionCall","src":"24692:63:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24682:6:16"}]}]},{"nodeType":"YulBlock","src":"24775:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"24790:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24821:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24832:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24817:3:16"},"nodeType":"YulFunctionCall","src":"24817:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24804:12:16"},"nodeType":"YulFunctionCall","src":"24804:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24794:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"24883:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"24885:77:16"},"nodeType":"YulFunctionCall","src":"24885:79:16"},"nodeType":"YulExpressionStatement","src":"24885:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24855:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"24863:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24852:2:16"},"nodeType":"YulFunctionCall","src":"24852:30:16"},"nodeType":"YulIf","src":"24849:117:16"},{"nodeType":"YulAssignment","src":"24980:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25025:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"25036:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25021:3:16"},"nodeType":"YulFunctionCall","src":"25021:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25045:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"24990:30:16"},"nodeType":"YulFunctionCall","src":"24990:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"24980:6:16"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24301:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24312:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24324:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24332:6:16","type":""}],"src":"24236:834:16"},{"body":{"nodeType":"YulBlock","src":"25168:118:16","statements":[{"nodeType":"YulAssignment","src":"25178:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25190:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25201:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25186:3:16"},"nodeType":"YulFunctionCall","src":"25186:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25178:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25252:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25265:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25276:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25261:3:16"},"nodeType":"YulFunctionCall","src":"25261:17:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"25214:37:16"},"nodeType":"YulFunctionCall","src":"25214:65:16"},"nodeType":"YulExpressionStatement","src":"25214:65:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25140:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25152:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25163:4:16","type":""}],"src":"25076:210:16"},{"body":{"nodeType":"YulBlock","src":"25419:818:16","statements":[{"body":{"nodeType":"YulBlock","src":"25466:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"25468:77:16"},"nodeType":"YulFunctionCall","src":"25468:79:16"},"nodeType":"YulExpressionStatement","src":"25468:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"25440:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"25449:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25436:3:16"},"nodeType":"YulFunctionCall","src":"25436:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"25461:3:16","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25432:3:16"},"nodeType":"YulFunctionCall","src":"25432:33:16"},"nodeType":"YulIf","src":"25429:120:16"},{"nodeType":"YulBlock","src":"25559:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"25574:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"25588:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25578:6:16","type":""}]},{"nodeType":"YulAssignment","src":"25603:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25638:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"25649:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25634:3:16"},"nodeType":"YulFunctionCall","src":"25634:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25658:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"25613:20:16"},"nodeType":"YulFunctionCall","src":"25613:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25603:6:16"}]}]},{"nodeType":"YulBlock","src":"25686:288:16","statements":[{"nodeType":"YulVariableDeclaration","src":"25701:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25732:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25743:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25728:3:16"},"nodeType":"YulFunctionCall","src":"25728:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25715:12:16"},"nodeType":"YulFunctionCall","src":"25715:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25705:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"25794:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25796:77:16"},"nodeType":"YulFunctionCall","src":"25796:79:16"},"nodeType":"YulExpressionStatement","src":"25796:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25766:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"25774:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25763:2:16"},"nodeType":"YulFunctionCall","src":"25763:30:16"},"nodeType":"YulIf","src":"25760:117:16"},{"nodeType":"YulAssignment","src":"25891:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25936:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"25947:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25932:3:16"},"nodeType":"YulFunctionCall","src":"25932:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25956:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"25901:30:16"},"nodeType":"YulFunctionCall","src":"25901:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"25891:6:16"}]}]},{"nodeType":"YulBlock","src":"25984:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"25999:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"26013:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26003:6:16","type":""}]},{"nodeType":"YulAssignment","src":"26029:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26064:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"26075:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26060:3:16"},"nodeType":"YulFunctionCall","src":"26060:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26084:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"26039:20:16"},"nodeType":"YulFunctionCall","src":"26039:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"26029:6:16"}]}]},{"nodeType":"YulBlock","src":"26112:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"26127:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"26141:2:16","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26131:6:16","type":""}]},{"nodeType":"YulAssignment","src":"26157:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26192:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"26203:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26188:3:16"},"nodeType":"YulFunctionCall","src":"26188:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26212:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"26167:20:16"},"nodeType":"YulFunctionCall","src":"26167:53:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"26157:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25365:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"25376:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"25388:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25396:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25404:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25412:6:16","type":""}],"src":"25292:945:16"},{"body":{"nodeType":"YulBlock","src":"26335:229:16","statements":[{"body":{"nodeType":"YulBlock","src":"26440:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"26442:16:16"},"nodeType":"YulFunctionCall","src":"26442:18:16"},"nodeType":"YulExpressionStatement","src":"26442:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"26412:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"26420:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26409:2:16"},"nodeType":"YulFunctionCall","src":"26409:30:16"},"nodeType":"YulIf","src":"26406:56:16"},{"nodeType":"YulAssignment","src":"26472:25:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"26484:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"26492:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"26480:3:16"},"nodeType":"YulFunctionCall","src":"26480:17:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"26472:4:16"}]},{"nodeType":"YulAssignment","src":"26534:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"26546:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"26552:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26542:3:16"},"nodeType":"YulFunctionCall","src":"26542:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"26534:4:16"}]}]},"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"26319:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"26330:4:16","type":""}],"src":"26243:321:16"},{"body":{"nodeType":"YulBlock","src":"26659:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26676:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26679:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26669:6:16"},"nodeType":"YulFunctionCall","src":"26669:12:16"},"nodeType":"YulExpressionStatement","src":"26669:12:16"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"26570:117:16"},{"body":{"nodeType":"YulBlock","src":"26821:833:16","statements":[{"nodeType":"YulAssignment","src":"26831:100:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"26923:6:16"}],"functionName":{"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"26856:66:16"},"nodeType":"YulFunctionCall","src":"26856:74:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"26840:15:16"},"nodeType":"YulFunctionCall","src":"26840:91:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"26831:5:16"}]},{"nodeType":"YulVariableDeclaration","src":"26940:16:16","value":{"name":"array","nodeType":"YulIdentifier","src":"26951:5:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"26944:3:16","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"26973:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"26980:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26966:6:16"},"nodeType":"YulFunctionCall","src":"26966:21:16"},"nodeType":"YulExpressionStatement","src":"26966:21:16"},{"nodeType":"YulAssignment","src":"26996:23:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"27007:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"27014:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27003:3:16"},"nodeType":"YulFunctionCall","src":"27003:16:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"26996:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"27029:44:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27047:6:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27059:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"27067:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27055:3:16"},"nodeType":"YulFunctionCall","src":"27055:17:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27043:3:16"},"nodeType":"YulFunctionCall","src":"27043:30:16"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"27033:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"27101:103:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"27115:77:16"},"nodeType":"YulFunctionCall","src":"27115:79:16"},"nodeType":"YulExpressionStatement","src":"27115:79:16"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"27088:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"27096:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27085:2:16"},"nodeType":"YulFunctionCall","src":"27085:15:16"},"nodeType":"YulIf","src":"27082:122:16"},{"body":{"nodeType":"YulBlock","src":"27289:359:16","statements":[{"nodeType":"YulVariableDeclaration","src":"27304:36:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"27336:3:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"27323:12:16"},"nodeType":"YulFunctionCall","src":"27323:17:16"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"27308:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"27392:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"27394:77:16"},"nodeType":"YulFunctionCall","src":"27394:79:16"},"nodeType":"YulExpressionStatement","src":"27394:79:16"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"27359:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"27372:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27356:2:16"},"nodeType":"YulFunctionCall","src":"27356:35:16"},"nodeType":"YulIf","src":"27353:122:16"},{"nodeType":"YulVariableDeclaration","src":"27488:42:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27510:6:16"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"27518:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27506:3:16"},"nodeType":"YulFunctionCall","src":"27506:24:16"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"27492:10:16","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"27551:3:16"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"27587:10:16"},{"name":"end","nodeType":"YulIdentifier","src":"27599:3:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"27556:30:16"},"nodeType":"YulFunctionCall","src":"27556:47:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27544:6:16"},"nodeType":"YulFunctionCall","src":"27544:60:16"},"nodeType":"YulExpressionStatement","src":"27544:60:16"},{"nodeType":"YulAssignment","src":"27617:21:16","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"27628:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"27633:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27624:3:16"},"nodeType":"YulFunctionCall","src":"27624:14:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"27617:3:16"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"27242:3:16"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"27247:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27239:2:16"},"nodeType":"YulFunctionCall","src":"27239:15:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"27255:25:16","statements":[{"nodeType":"YulAssignment","src":"27257:21:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"27268:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"27273:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27264:3:16"},"nodeType":"YulFunctionCall","src":"27264:14:16"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"27257:3:16"}]}]},"pre":{"nodeType":"YulBlock","src":"27217:21:16","statements":[{"nodeType":"YulVariableDeclaration","src":"27219:17:16","value":{"name":"offset","nodeType":"YulIdentifier","src":"27230:6:16"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"27223:3:16","type":""}]}]},"src":"27213:435:16"}]},"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"26791:6:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"26799:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"26807:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"26815:5:16","type":""}],"src":"26709:945:16"},{"body":{"nodeType":"YulBlock","src":"27763:303:16","statements":[{"body":{"nodeType":"YulBlock","src":"27812:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"27814:77:16"},"nodeType":"YulFunctionCall","src":"27814:79:16"},"nodeType":"YulExpressionStatement","src":"27814:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27791:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"27799:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27787:3:16"},"nodeType":"YulFunctionCall","src":"27787:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"27806:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"27783:3:16"},"nodeType":"YulFunctionCall","src":"27783:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27776:6:16"},"nodeType":"YulFunctionCall","src":"27776:35:16"},"nodeType":"YulIf","src":"27773:122:16"},{"nodeType":"YulVariableDeclaration","src":"27904:34:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27931:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"27918:12:16"},"nodeType":"YulFunctionCall","src":"27918:20:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"27908:6:16","type":""}]},{"nodeType":"YulAssignment","src":"27947:113:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28033:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"28041:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28029:3:16"},"nodeType":"YulFunctionCall","src":"28029:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"28048:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"28056:3:16"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"27956:72:16"},"nodeType":"YulFunctionCall","src":"27956:104:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"27947:5:16"}]}]},"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"27741:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"27749:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"27757:5:16","type":""}],"src":"27676:390:16"},{"body":{"nodeType":"YulBlock","src":"28261:1312:16","statements":[{"body":{"nodeType":"YulBlock","src":"28308:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"28310:77:16"},"nodeType":"YulFunctionCall","src":"28310:79:16"},"nodeType":"YulExpressionStatement","src":"28310:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28282:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"28291:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28278:3:16"},"nodeType":"YulFunctionCall","src":"28278:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"28303:3:16","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28274:3:16"},"nodeType":"YulFunctionCall","src":"28274:33:16"},"nodeType":"YulIf","src":"28271:120:16"},{"nodeType":"YulBlock","src":"28401:287:16","statements":[{"nodeType":"YulVariableDeclaration","src":"28416:45:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28447:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"28458:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28443:3:16"},"nodeType":"YulFunctionCall","src":"28443:17:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"28430:12:16"},"nodeType":"YulFunctionCall","src":"28430:31:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28420:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"28508:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"28510:77:16"},"nodeType":"YulFunctionCall","src":"28510:79:16"},"nodeType":"YulExpressionStatement","src":"28510:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28480:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"28488:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28477:2:16"},"nodeType":"YulFunctionCall","src":"28477:30:16"},"nodeType":"YulIf","src":"28474:117:16"},{"nodeType":"YulAssignment","src":"28605:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28650:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"28661:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28646:3:16"},"nodeType":"YulFunctionCall","src":"28646:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28670:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"28615:30:16"},"nodeType":"YulFunctionCall","src":"28615:63:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28605:6:16"}]}]},{"nodeType":"YulBlock","src":"28698:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"28713:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"28727:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28717:6:16","type":""}]},{"nodeType":"YulAssignment","src":"28743:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28778:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"28789:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28774:3:16"},"nodeType":"YulFunctionCall","src":"28774:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28798:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"28753:20:16"},"nodeType":"YulFunctionCall","src":"28753:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"28743:6:16"}]}]},{"nodeType":"YulBlock","src":"28826:313:16","statements":[{"nodeType":"YulVariableDeclaration","src":"28841:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28872:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"28883:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28868:3:16"},"nodeType":"YulFunctionCall","src":"28868:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"28855:12:16"},"nodeType":"YulFunctionCall","src":"28855:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28845:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"28934:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"28936:77:16"},"nodeType":"YulFunctionCall","src":"28936:79:16"},"nodeType":"YulExpressionStatement","src":"28936:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28906:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"28914:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28903:2:16"},"nodeType":"YulFunctionCall","src":"28903:30:16"},"nodeType":"YulIf","src":"28900:117:16"},{"nodeType":"YulAssignment","src":"29031:98:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29101:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"29112:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29097:3:16"},"nodeType":"YulFunctionCall","src":"29097:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"29121:7:16"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"29041:55:16"},"nodeType":"YulFunctionCall","src":"29041:88:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"29031:6:16"}]}]},{"nodeType":"YulBlock","src":"29149:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"29164:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"29178:2:16","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29168:6:16","type":""}]},{"nodeType":"YulAssignment","src":"29194:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29229:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"29240:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29225:3:16"},"nodeType":"YulFunctionCall","src":"29225:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"29249:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"29204:20:16"},"nodeType":"YulFunctionCall","src":"29204:53:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"29194:6:16"}]}]},{"nodeType":"YulBlock","src":"29277:289:16","statements":[{"nodeType":"YulVariableDeclaration","src":"29292:47:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29323:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"29334:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29319:3:16"},"nodeType":"YulFunctionCall","src":"29319:19:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"29306:12:16"},"nodeType":"YulFunctionCall","src":"29306:33:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29296:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"29386:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"29388:77:16"},"nodeType":"YulFunctionCall","src":"29388:79:16"},"nodeType":"YulExpressionStatement","src":"29388:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"29358:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"29366:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29355:2:16"},"nodeType":"YulFunctionCall","src":"29355:30:16"},"nodeType":"YulIf","src":"29352:117:16"},{"nodeType":"YulAssignment","src":"29483:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29528:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"29539:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29524:3:16"},"nodeType":"YulFunctionCall","src":"29524:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"29548:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"29493:30:16"},"nodeType":"YulFunctionCall","src":"29493:63:16"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"29483:6:16"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptrt_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28199:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"28210:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"28222:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28230:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28238:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"28246:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"28254:6:16","type":""}],"src":"28072:1501:16"},{"body":{"nodeType":"YulBlock","src":"29753:359:16","statements":[{"nodeType":"YulAssignment","src":"29763:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29775:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"29786:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29771:3:16"},"nodeType":"YulFunctionCall","src":"29771:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29763:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29843:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29856:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"29867:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29852:3:16"},"nodeType":"YulFunctionCall","src":"29852:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"29799:43:16"},"nodeType":"YulFunctionCall","src":"29799:71:16"},"nodeType":"YulExpressionStatement","src":"29799:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29924:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29937:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"29948:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29933:3:16"},"nodeType":"YulFunctionCall","src":"29933:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"29880:43:16"},"nodeType":"YulFunctionCall","src":"29880:72:16"},"nodeType":"YulExpressionStatement","src":"29880:72:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29973:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"29984:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29969:3:16"},"nodeType":"YulFunctionCall","src":"29969:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29993:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"29999:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29989:3:16"},"nodeType":"YulFunctionCall","src":"29989:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29962:6:16"},"nodeType":"YulFunctionCall","src":"29962:48:16"},"nodeType":"YulExpressionStatement","src":"29962:48:16"},{"nodeType":"YulAssignment","src":"30019:86:16","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"30091:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"30100:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30027:63:16"},"nodeType":"YulFunctionCall","src":"30027:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30019:4:16"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29709:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"29721:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29729:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29737:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29748:4:16","type":""}],"src":"29579:533:16"},{"body":{"nodeType":"YulBlock","src":"30146:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30163:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30166:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30156:6:16"},"nodeType":"YulFunctionCall","src":"30156:88:16"},"nodeType":"YulExpressionStatement","src":"30156:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30260:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"30263:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30253:6:16"},"nodeType":"YulFunctionCall","src":"30253:15:16"},"nodeType":"YulExpressionStatement","src":"30253:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30284:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30287:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30277:6:16"},"nodeType":"YulFunctionCall","src":"30277:15:16"},"nodeType":"YulExpressionStatement","src":"30277:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"30118:180:16"},{"body":{"nodeType":"YulBlock","src":"30355:269:16","statements":[{"nodeType":"YulAssignment","src":"30365:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"30379:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"30385:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"30375:3:16"},"nodeType":"YulFunctionCall","src":"30375:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"30365:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"30396:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"30426:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"30432:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30422:3:16"},"nodeType":"YulFunctionCall","src":"30422:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"30400:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"30473:51:16","statements":[{"nodeType":"YulAssignment","src":"30487:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"30501:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"30509:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30497:3:16"},"nodeType":"YulFunctionCall","src":"30497:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"30487:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"30453:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30446:6:16"},"nodeType":"YulFunctionCall","src":"30446:26:16"},"nodeType":"YulIf","src":"30443:81:16"},{"body":{"nodeType":"YulBlock","src":"30576:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"30590:16:16"},"nodeType":"YulFunctionCall","src":"30590:18:16"},"nodeType":"YulExpressionStatement","src":"30590:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"30540:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"30563:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"30571:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30560:2:16"},"nodeType":"YulFunctionCall","src":"30560:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"30537:2:16"},"nodeType":"YulFunctionCall","src":"30537:38:16"},"nodeType":"YulIf","src":"30534:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"30339:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"30348:6:16","type":""}],"src":"30304:320:16"},{"body":{"nodeType":"YulBlock","src":"30743:34:16","statements":[{"nodeType":"YulAssignment","src":"30753:18:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"30768:3:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"30753:11:16"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30715:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"30720:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"30731:11:16","type":""}],"src":"30630:147:16"},{"body":{"nodeType":"YulBlock","src":"30840:87:16","statements":[{"nodeType":"YulAssignment","src":"30850:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"30858:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"30850:4:16"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30878:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"30881:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30871:6:16"},"nodeType":"YulFunctionCall","src":"30871:14:16"},"nodeType":"YulExpressionStatement","src":"30871:14:16"},{"nodeType":"YulAssignment","src":"30894:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30912:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30915:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"30902:9:16"},"nodeType":"YulFunctionCall","src":"30902:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"30894:4:16"}]}]},"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"30827:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"30835:4:16","type":""}],"src":"30783:144:16"},{"body":{"nodeType":"YulBlock","src":"31064:769:16","statements":[{"nodeType":"YulVariableDeclaration","src":"31074:29:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31097:5:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"31091:5:16"},"nodeType":"YulFunctionCall","src":"31091:12:16"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"31078:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31112:50:16","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"31152:9:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"31126:25:16"},"nodeType":"YulFunctionCall","src":"31126:36:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"31116:6:16","type":""}]},{"nodeType":"YulAssignment","src":"31171:95:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31254:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"31259:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"31178:75:16"},"nodeType":"YulFunctionCall","src":"31178:88:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31171:3:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"31315:159:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31368:3:16"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"31377:9:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31392:4:16","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"31388:3:16"},"nodeType":"YulFunctionCall","src":"31388:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31373:3:16"},"nodeType":"YulFunctionCall","src":"31373:25:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31361:6:16"},"nodeType":"YulFunctionCall","src":"31361:38:16"},"nodeType":"YulExpressionStatement","src":"31361:38:16"},{"nodeType":"YulAssignment","src":"31412:52:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31423:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"31432:6:16"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"31454:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31447:6:16"},"nodeType":"YulFunctionCall","src":"31447:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31440:6:16"},"nodeType":"YulFunctionCall","src":"31440:22:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"31428:3:16"},"nodeType":"YulFunctionCall","src":"31428:35:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31419:3:16"},"nodeType":"YulFunctionCall","src":"31419:45:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"31412:3:16"}]}]},"nodeType":"YulCase","src":"31308:166:16","value":{"kind":"number","nodeType":"YulLiteral","src":"31313:1:16","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"31490:337:16","statements":[{"nodeType":"YulVariableDeclaration","src":"31535:56:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31585:5:16"}],"functionName":{"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulIdentifier","src":"31550:34:16"},"nodeType":"YulFunctionCall","src":"31550:41:16"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"31539:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31604:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"31613:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"31608:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"31671:110:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31700:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"31705:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31696:3:16"},"nodeType":"YulFunctionCall","src":"31696:11:16"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"31715:7:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"31709:5:16"},"nodeType":"YulFunctionCall","src":"31709:14:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31689:6:16"},"nodeType":"YulFunctionCall","src":"31689:35:16"},"nodeType":"YulExpressionStatement","src":"31689:35:16"},{"nodeType":"YulAssignment","src":"31741:26:16","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"31756:7:16"},{"kind":"number","nodeType":"YulLiteral","src":"31765:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31752:3:16"},"nodeType":"YulFunctionCall","src":"31752:15:16"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"31741:7:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31638:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"31641:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31635:2:16"},"nodeType":"YulFunctionCall","src":"31635:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"31649:21:16","statements":[{"nodeType":"YulAssignment","src":"31651:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31660:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"31663:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31656:3:16"},"nodeType":"YulFunctionCall","src":"31656:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"31651:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"31631:3:16","statements":[]},"src":"31627:154:16"},{"nodeType":"YulAssignment","src":"31794:23:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31805:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"31810:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31801:3:16"},"nodeType":"YulFunctionCall","src":"31801:16:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"31794:3:16"}]}]},"nodeType":"YulCase","src":"31483:344:16","value":{"kind":"number","nodeType":"YulLiteral","src":"31488:1:16","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"31286:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"31297:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31282:3:16"},"nodeType":"YulFunctionCall","src":"31282:17:16"},"nodeType":"YulSwitch","src":"31275:552:16"}]},"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31045:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"31052:3:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"31060:3:16","type":""}],"src":"30955:878:16"},{"body":{"nodeType":"YulBlock","src":"31974:138:16","statements":[{"nodeType":"YulAssignment","src":"31985:101:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32073:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"32082:3:16"}],"functionName":{"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"31992:80:16"},"nodeType":"YulFunctionCall","src":"31992:94:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31985:3:16"}]},{"nodeType":"YulAssignment","src":"32096:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"32103:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32096:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31953:3:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31959:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31970:3:16","type":""}],"src":"31839:273:16"},{"body":{"nodeType":"YulBlock","src":"32146:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32163:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32166:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32156:6:16"},"nodeType":"YulFunctionCall","src":"32156:88:16"},"nodeType":"YulExpressionStatement","src":"32156:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32260:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"32263:4:16","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32253:6:16"},"nodeType":"YulFunctionCall","src":"32253:15:16"},"nodeType":"YulExpressionStatement","src":"32253:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32284:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32287:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"32277:6:16"},"nodeType":"YulFunctionCall","src":"32277:15:16"},"nodeType":"YulExpressionStatement","src":"32277:15:16"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"32118:180:16"},{"body":{"nodeType":"YulBlock","src":"32332:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32349:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32352:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32342:6:16"},"nodeType":"YulFunctionCall","src":"32342:88:16"},"nodeType":"YulExpressionStatement","src":"32342:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32446:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"32449:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32439:6:16"},"nodeType":"YulFunctionCall","src":"32439:15:16"},"nodeType":"YulExpressionStatement","src":"32439:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32470:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32473:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"32463:6:16"},"nodeType":"YulFunctionCall","src":"32463:15:16"},"nodeType":"YulExpressionStatement","src":"32463:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"32304:180:16"},{"body":{"nodeType":"YulBlock","src":"32533:190:16","statements":[{"nodeType":"YulAssignment","src":"32543:33:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32570:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32552:17:16"},"nodeType":"YulFunctionCall","src":"32552:24:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"32543:5:16"}]},{"body":{"nodeType":"YulBlock","src":"32666:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"32668:16:16"},"nodeType":"YulFunctionCall","src":"32668:18:16"},"nodeType":"YulExpressionStatement","src":"32668:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32591:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"32598:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"32588:2:16"},"nodeType":"YulFunctionCall","src":"32588:77:16"},"nodeType":"YulIf","src":"32585:103:16"},{"nodeType":"YulAssignment","src":"32697:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32708:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"32715:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32704:3:16"},"nodeType":"YulFunctionCall","src":"32704:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32697:3:16"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32519:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"32529:3:16","type":""}],"src":"32490:233:16"},{"body":{"nodeType":"YulBlock","src":"32773:147:16","statements":[{"nodeType":"YulAssignment","src":"32783:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32806:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32788:17:16"},"nodeType":"YulFunctionCall","src":"32788:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"32783:1:16"}]},{"nodeType":"YulAssignment","src":"32817:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"32840:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32822:17:16"},"nodeType":"YulFunctionCall","src":"32822:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"32817:1:16"}]},{"nodeType":"YulAssignment","src":"32851:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32862:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"32865:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32858:3:16"},"nodeType":"YulFunctionCall","src":"32858:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"32851:3:16"}]},{"body":{"nodeType":"YulBlock","src":"32891:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"32893:16:16"},"nodeType":"YulFunctionCall","src":"32893:18:16"},"nodeType":"YulExpressionStatement","src":"32893:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32883:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"32886:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32880:2:16"},"nodeType":"YulFunctionCall","src":"32880:10:16"},"nodeType":"YulIf","src":"32877:36:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"32760:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"32763:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"32769:3:16","type":""}],"src":"32729:191:16"},{"body":{"nodeType":"YulBlock","src":"32980:87:16","statements":[{"nodeType":"YulAssignment","src":"32990:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"32998:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"32990:4:16"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33018:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"33021:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33011:6:16"},"nodeType":"YulFunctionCall","src":"33011:14:16"},"nodeType":"YulExpressionStatement","src":"33011:14:16"},{"nodeType":"YulAssignment","src":"33034:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33052:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33055:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"33042:9:16"},"nodeType":"YulFunctionCall","src":"33042:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"33034:4:16"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"32967:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"32975:4:16","type":""}],"src":"32926:141:16"},{"body":{"nodeType":"YulBlock","src":"33117:49:16","statements":[{"nodeType":"YulAssignment","src":"33127:33:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33145:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"33152:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33141:3:16"},"nodeType":"YulFunctionCall","src":"33141:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"33157:2:16","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"33137:3:16"},"nodeType":"YulFunctionCall","src":"33137:23:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"33127:6:16"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33100:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"33110:6:16","type":""}],"src":"33073:93:16"},{"body":{"nodeType":"YulBlock","src":"33225:54:16","statements":[{"nodeType":"YulAssignment","src":"33235:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"33260:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"33266:5:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"33256:3:16"},"nodeType":"YulFunctionCall","src":"33256:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"33235:8:16"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"33200:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"33206:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"33216:8:16","type":""}],"src":"33172:107:16"},{"body":{"nodeType":"YulBlock","src":"33361:317:16","statements":[{"nodeType":"YulVariableDeclaration","src":"33371:35:16","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"33392:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"33404:1:16","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"33388:3:16"},"nodeType":"YulFunctionCall","src":"33388:18:16"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"33375:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"33415:109:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"33446:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"33457:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"33427:18:16"},"nodeType":"YulFunctionCall","src":"33427:97:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"33419:4:16","type":""}]},{"nodeType":"YulAssignment","src":"33533:51:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"33564:9:16"},{"name":"toInsert","nodeType":"YulIdentifier","src":"33575:8:16"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"33545:18:16"},"nodeType":"YulFunctionCall","src":"33545:39:16"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"33533:8:16"}]},{"nodeType":"YulAssignment","src":"33593:30:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33606:5:16"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"33617:4:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"33613:3:16"},"nodeType":"YulFunctionCall","src":"33613:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33602:3:16"},"nodeType":"YulFunctionCall","src":"33602:21:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"33593:5:16"}]},{"nodeType":"YulAssignment","src":"33632:40:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33645:5:16"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"33656:8:16"},{"name":"mask","nodeType":"YulIdentifier","src":"33666:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33652:3:16"},"nodeType":"YulFunctionCall","src":"33652:19:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"33642:2:16"},"nodeType":"YulFunctionCall","src":"33642:30:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"33632:6:16"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33322:5:16","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"33329:10:16","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"33341:8:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"33354:6:16","type":""}],"src":"33285:393:16"},{"body":{"nodeType":"YulBlock","src":"33716:28:16","statements":[{"nodeType":"YulAssignment","src":"33726:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"33733:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"33726:3:16"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33702:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"33712:3:16","type":""}],"src":"33684:60:16"},{"body":{"nodeType":"YulBlock","src":"33810:82:16","statements":[{"nodeType":"YulAssignment","src":"33820:66:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33878:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33860:17:16"},"nodeType":"YulFunctionCall","src":"33860:24:16"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"33851:8:16"},"nodeType":"YulFunctionCall","src":"33851:34:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33833:17:16"},"nodeType":"YulFunctionCall","src":"33833:53:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"33820:9:16"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33790:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"33800:9:16","type":""}],"src":"33750:142:16"},{"body":{"nodeType":"YulBlock","src":"33945:28:16","statements":[{"nodeType":"YulAssignment","src":"33955:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"33962:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"33955:3:16"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33931:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"33941:3:16","type":""}],"src":"33898:75:16"},{"body":{"nodeType":"YulBlock","src":"34055:193:16","statements":[{"nodeType":"YulVariableDeclaration","src":"34065:63:16","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"34120:7:16"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"34089:30:16"},"nodeType":"YulFunctionCall","src":"34089:39:16"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"34069:16:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34144:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34184:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"34178:5:16"},"nodeType":"YulFunctionCall","src":"34178:11:16"},{"name":"offset","nodeType":"YulIdentifier","src":"34191:6:16"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"34223:16:16"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"34199:23:16"},"nodeType":"YulFunctionCall","src":"34199:41:16"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"34150:27:16"},"nodeType":"YulFunctionCall","src":"34150:91:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"34137:6:16"},"nodeType":"YulFunctionCall","src":"34137:105:16"},"nodeType":"YulExpressionStatement","src":"34137:105:16"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"34032:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"34038:6:16","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"34046:7:16","type":""}],"src":"33979:269:16"},{"body":{"nodeType":"YulBlock","src":"34303:24:16","statements":[{"nodeType":"YulAssignment","src":"34313:8:16","value":{"kind":"number","nodeType":"YulLiteral","src":"34320:1:16","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"34313:3:16"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"34299:3:16","type":""}],"src":"34254:73:16"},{"body":{"nodeType":"YulBlock","src":"34386:136:16","statements":[{"nodeType":"YulVariableDeclaration","src":"34396:46:16","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"34410:30:16"},"nodeType":"YulFunctionCall","src":"34410:32:16"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"34400:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34495:4:16"},{"name":"offset","nodeType":"YulIdentifier","src":"34501:6:16"},{"name":"zero_0","nodeType":"YulIdentifier","src":"34509:6:16"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"34451:43:16"},"nodeType":"YulFunctionCall","src":"34451:65:16"},"nodeType":"YulExpressionStatement","src":"34451:65:16"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"34372:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"34378:6:16","type":""}],"src":"34333:189:16"},{"body":{"nodeType":"YulBlock","src":"34578:136:16","statements":[{"body":{"nodeType":"YulBlock","src":"34645:63:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"34689:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"34696:1:16","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"34659:29:16"},"nodeType":"YulFunctionCall","src":"34659:39:16"},"nodeType":"YulExpressionStatement","src":"34659:39:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"34598:5:16"},{"name":"end","nodeType":"YulIdentifier","src":"34605:3:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"34595:2:16"},"nodeType":"YulFunctionCall","src":"34595:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"34610:26:16","statements":[{"nodeType":"YulAssignment","src":"34612:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"34625:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"34632:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34621:3:16"},"nodeType":"YulFunctionCall","src":"34621:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"34612:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"34592:2:16","statements":[]},"src":"34588:120:16"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"34566:5:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"34573:3:16","type":""}],"src":"34528:186:16"},{"body":{"nodeType":"YulBlock","src":"34799:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"34825:431:16","statements":[{"nodeType":"YulVariableDeclaration","src":"34839:54:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"34887:5:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"34855:31:16"},"nodeType":"YulFunctionCall","src":"34855:38:16"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"34843:8:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"34906:63:16","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"34929:8:16"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"34957:10:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"34939:17:16"},"nodeType":"YulFunctionCall","src":"34939:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34925:3:16"},"nodeType":"YulFunctionCall","src":"34925:44:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"34910:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"35126:27:16","statements":[{"nodeType":"YulAssignment","src":"35128:23:16","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"35143:8:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"35128:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"35110:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"35122:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"35107:2:16"},"nodeType":"YulFunctionCall","src":"35107:18:16"},"nodeType":"YulIf","src":"35104:49:16"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"35195:11:16"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"35212:8:16"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"35240:3:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"35222:17:16"},"nodeType":"YulFunctionCall","src":"35222:22:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35208:3:16"},"nodeType":"YulFunctionCall","src":"35208:37:16"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"35166:28:16"},"nodeType":"YulFunctionCall","src":"35166:80:16"},"nodeType":"YulExpressionStatement","src":"35166:80:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"34816:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"34821:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34813:2:16"},"nodeType":"YulFunctionCall","src":"34813:11:16"},"nodeType":"YulIf","src":"34810:446:16"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"34775:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"34782:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"34787:10:16","type":""}],"src":"34720:543:16"},{"body":{"nodeType":"YulBlock","src":"35332:54:16","statements":[{"nodeType":"YulAssignment","src":"35342:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"35367:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"35373:5:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"35363:3:16"},"nodeType":"YulFunctionCall","src":"35363:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"35342:8:16"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"35307:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"35313:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"35323:8:16","type":""}],"src":"35269:117:16"},{"body":{"nodeType":"YulBlock","src":"35443:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"35453:68:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35502:1:16","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"35505:5:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"35498:3:16"},"nodeType":"YulFunctionCall","src":"35498:13:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35517:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"35513:3:16"},"nodeType":"YulFunctionCall","src":"35513:6:16"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"35469:28:16"},"nodeType":"YulFunctionCall","src":"35469:51:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"35465:3:16"},"nodeType":"YulFunctionCall","src":"35465:56:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"35457:4:16","type":""}]},{"nodeType":"YulAssignment","src":"35530:25:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"35544:4:16"},{"name":"mask","nodeType":"YulIdentifier","src":"35550:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35540:3:16"},"nodeType":"YulFunctionCall","src":"35540:15:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"35530:6:16"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"35420:4:16","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"35426:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"35436:6:16","type":""}],"src":"35392:169:16"},{"body":{"nodeType":"YulBlock","src":"35647:214:16","statements":[{"nodeType":"YulAssignment","src":"35780:37:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"35807:4:16"},{"name":"len","nodeType":"YulIdentifier","src":"35813:3:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"35788:18:16"},"nodeType":"YulFunctionCall","src":"35788:29:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"35780:4:16"}]},{"nodeType":"YulAssignment","src":"35826:29:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"35837:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35847:1:16","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"35850:3:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"35843:3:16"},"nodeType":"YulFunctionCall","src":"35843:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"35834:2:16"},"nodeType":"YulFunctionCall","src":"35834:21:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"35826:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"35628:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"35634:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"35642:4:16","type":""}],"src":"35566:295:16"},{"body":{"nodeType":"YulBlock","src":"35958:1303:16","statements":[{"nodeType":"YulVariableDeclaration","src":"35969:51:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"36016:3:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"35983:32:16"},"nodeType":"YulFunctionCall","src":"35983:37:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"35973:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"36105:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"36107:16:16"},"nodeType":"YulFunctionCall","src":"36107:18:16"},"nodeType":"YulExpressionStatement","src":"36107:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"36077:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"36085:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36074:2:16"},"nodeType":"YulFunctionCall","src":"36074:30:16"},"nodeType":"YulIf","src":"36071:56:16"},{"nodeType":"YulVariableDeclaration","src":"36137:52:16","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36183:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"36177:5:16"},"nodeType":"YulFunctionCall","src":"36177:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"36151:25:16"},"nodeType":"YulFunctionCall","src":"36151:38:16"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"36141:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36282:4:16"},{"name":"oldLen","nodeType":"YulIdentifier","src":"36288:6:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"36296:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"36236:45:16"},"nodeType":"YulFunctionCall","src":"36236:67:16"},"nodeType":"YulExpressionStatement","src":"36236:67:16"},{"nodeType":"YulVariableDeclaration","src":"36313:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"36330:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"36317:9:16","type":""}]},{"nodeType":"YulAssignment","src":"36341:17:16","value":{"kind":"number","nodeType":"YulLiteral","src":"36354:4:16","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"36341:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"36405:611:16","statements":[{"nodeType":"YulVariableDeclaration","src":"36419:37:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"36438:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36450:4:16","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"36446:3:16"},"nodeType":"YulFunctionCall","src":"36446:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36434:3:16"},"nodeType":"YulFunctionCall","src":"36434:22:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"36423:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"36470:51:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36516:4:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"36484:31:16"},"nodeType":"YulFunctionCall","src":"36484:37:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"36474:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"36534:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"36543:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"36538:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"36602:163:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"36627:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"36645:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"36650:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36641:3:16"},"nodeType":"YulFunctionCall","src":"36641:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36635:5:16"},"nodeType":"YulFunctionCall","src":"36635:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"36620:6:16"},"nodeType":"YulFunctionCall","src":"36620:42:16"},"nodeType":"YulExpressionStatement","src":"36620:42:16"},{"nodeType":"YulAssignment","src":"36679:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"36693:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"36701:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36689:3:16"},"nodeType":"YulFunctionCall","src":"36689:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"36679:6:16"}]},{"nodeType":"YulAssignment","src":"36720:31:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"36737:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"36748:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36733:3:16"},"nodeType":"YulFunctionCall","src":"36733:18:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"36720:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"36568:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"36571:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36565:2:16"},"nodeType":"YulFunctionCall","src":"36565:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"36580:21:16","statements":[{"nodeType":"YulAssignment","src":"36582:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"36591:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"36594:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36587:3:16"},"nodeType":"YulFunctionCall","src":"36587:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"36582:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"36561:3:16","statements":[]},"src":"36557:208:16"},{"body":{"nodeType":"YulBlock","src":"36801:156:16","statements":[{"nodeType":"YulVariableDeclaration","src":"36819:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"36846:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"36851:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36842:3:16"},"nodeType":"YulFunctionCall","src":"36842:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36836:5:16"},"nodeType":"YulFunctionCall","src":"36836:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"36823:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"36886:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"36913:9:16"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"36928:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"36936:4:16","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36924:3:16"},"nodeType":"YulFunctionCall","src":"36924:17:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"36894:18:16"},"nodeType":"YulFunctionCall","src":"36894:48:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"36879:6:16"},"nodeType":"YulFunctionCall","src":"36879:64:16"},"nodeType":"YulExpressionStatement","src":"36879:64:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"36784:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"36793:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36781:2:16"},"nodeType":"YulFunctionCall","src":"36781:19:16"},"nodeType":"YulIf","src":"36778:179:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36977:4:16"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"36991:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"36999:1:16","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"36987:3:16"},"nodeType":"YulFunctionCall","src":"36987:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"37003:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36983:3:16"},"nodeType":"YulFunctionCall","src":"36983:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"36970:6:16"},"nodeType":"YulFunctionCall","src":"36970:36:16"},"nodeType":"YulExpressionStatement","src":"36970:36:16"}]},"nodeType":"YulCase","src":"36398:618:16","value":{"kind":"number","nodeType":"YulLiteral","src":"36403:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"37033:222:16","statements":[{"nodeType":"YulVariableDeclaration","src":"37047:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"37060:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"37051:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"37084:67:16","statements":[{"nodeType":"YulAssignment","src":"37102:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"37121:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"37126:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37117:3:16"},"nodeType":"YulFunctionCall","src":"37117:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37111:5:16"},"nodeType":"YulFunctionCall","src":"37111:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"37102:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"37077:6:16"},"nodeType":"YulIf","src":"37074:77:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"37171:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37230:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"37237:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"37177:52:16"},"nodeType":"YulFunctionCall","src":"37177:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"37164:6:16"},"nodeType":"YulFunctionCall","src":"37164:81:16"},"nodeType":"YulExpressionStatement","src":"37164:81:16"}]},"nodeType":"YulCase","src":"37025:230:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"36378:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"36386:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36375:2:16"},"nodeType":"YulFunctionCall","src":"36375:14:16"},"nodeType":"YulSwitch","src":"36368:887:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"35947:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"35953:3:16","type":""}],"src":"35866:1395:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__to_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string[]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[]\n    function abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptrt_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_bytes_storage_ptr(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_bytes_storage_ptr(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106103785760003560e01c80638ac4110c116101d3578063bda0033511610104578063cd230809116100a2578063e1b011a01161007c578063e1b011a014610bbf578063e32acc1a14610bef578063ec24580214610c1f578063ff4a37ef14610c3d57610378565b8063cd23080914610b41578063d3791b2014610b71578063d9fc52db14610b8f57610378565b8063c29595c5116100de578063c29595c514610aa4578063c7af4ee514610ac0578063ca013f1714610af0578063cace8d4614610b0e57610378565b8063bda0033514610a4e578063c04e743014610a6a578063c04fe97814610a8657610378565b8063a1ca917811610171578063aa4cdf2a1161014b578063aa4cdf2a146109b1578063b16060a6146109e1578063b39a38bd146109eb578063b527d45e14610a1b57610378565b8063a1ca91781461092b578063a428a47f1461095b578063aa2bf5d31461099357610378565b80638d6b30a1116101ad5780638d6b30a11461088f5780639077007d146108bf578063934c5f00146108dd57806397ee76061461090d57610378565b80638ac4110c146108255780638c70034a146108435780638d3d25951461085f57610378565b80634be7adb5116102ad5780637f2035d41161024b578063812fae1f11610225578063812fae1f1461078d57806386ffa45b146107bd57806387633eb2146107ed578063881de8581461080957610378565b80637f2035d4146106fa5780637fc543ec1461072b578063803f5b9f1461075d57610378565b80635d907da1116102875780635d907da11461064c5780636ecda4ee1461067c578063787f19c7146106ac5780637bbd582d146106dc57610378565b80634be7adb5146105cd57806354a9fb18146105fd5780635996278f1461063057610378565b806320959ed01161031a578063330b8f26116102f4578063330b8f26146105195780633f87a2f41461054a578063468d0c801461057d5780634a797bd7146105af57610378565b806320959ed01461049957806327a568b9146104c957806329b56f60146104fb57610378565b806313bf4cea1161035657806313bf4cea146103fb5780631b592aeb146104195780631ba44c4c146104375780631e9ac9f51461046957610378565b80630377d44a1461037d5780631171b621146103ad578063131d44f2146103cb575b600080fd5b610397600480360381019061039291906133a4565b610c6f565b6040516103a4919061352e565b60405180910390f35b6103b5610df9565b6040516103c29190613569565b60405180910390f35b6103e560048036038101906103e091906135b0565b610dff565b6040516103f2919061352e565b60405180910390f35b610403610f6e565b6040516104109190613569565b60405180910390f35b610421610f74565b60405161042e9190613569565b60405180910390f35b610451600480360381019061044c91906135b0565b610f7a565b604051610460939291906135dd565b60405180910390f35b610483600480360381019061047e91906133a4565b610fa4565b6040516104909190613569565b60405180910390f35b6104b360048036038101906104ae91906135b0565b611015565b6040516104c09190613569565b60405180910390f35b6104e360048036038101906104de91906135b0565b61102d565b6040516104f29392919061365e565b60405180910390f35b6105036111ef565b604051610510919061352e565b60405180910390f35b610533600480360381019061052e91906135b0565b61132a565b6040516105419291906136aa565b60405180910390f35b610564600480360381019061055f91906135b0565b61134e565b60405161057494939291906136d3565b60405180910390f35b610597600480360381019061059291906135b0565b611406565b6040516105a69392919061371f565b60405180910390f35b6105b76114b8565b6040516105c49190613569565b60405180910390f35b6105e760048036038101906105e2919061375d565b6114be565b6040516105f4919061385b565b60405180910390f35b610617600480360381019061061291906135b0565b6115c4565b604051610627949392919061387d565b60405180910390f35b61064a600480360381019061064591906138d0565b611704565b005b610666600480360381019061066191906135b0565b6118a8565b6040516106739190613983565b60405180910390f35b610696600480360381019061069191906135b0565b611950565b6040516106a39190613983565b60405180910390f35b6106c660048036038101906106c191906139a5565b6119f0565b6040516106d39190613569565b60405180910390f35b6106e4611ac1565b6040516106f19190613569565b60405180910390f35b610714600480360381019061070f91906135b0565b611ac7565b604051610722929190613a44565b60405180910390f35b610745600480360381019061074091906135b0565b611bfb565b604051610754939291906135dd565b60405180910390f35b610777600480360381019061077291906135b0565b611c25565b604051610784919061385b565b60405180910390f35b6107a760048036038101906107a291906135b0565b611d08565b6040516107b4919061385b565b60405180910390f35b6107d760048036038101906107d29190613a7b565b611deb565b6040516107e49190613569565b60405180910390f35b61080760048036038101906108029190613b36565b611f0b565b005b610823600480360381019061081e9190613b92565b611f30565b005b61082d611f7d565b60405161083a9190613569565b60405180910390f35b61085d60048036038101906108589190613c1d565b611f83565b005b610879600480360381019061087491906135b0565b61204f565b6040516108869190613983565b60405180910390f35b6108a960048036038101906108a49190613c8c565b6120f7565b6040516108b69190613569565b60405180910390f35b6108c76121dd565b6040516108d49190613569565b60405180910390f35b6108f760048036038101906108f29190613c8c565b6121e3565b6040516109049190613569565b60405180910390f35b610915612277565b604051610922919061352e565b60405180910390f35b610945600480360381019061094091906133a4565b6123b2565b6040516109529190613569565b60405180910390f35b610975600480360381019061097091906135b0565b612423565b60405161098a99989796959493929190613d2a565b60405180910390f35b61099b6124d9565b6040516109a89190613569565b60405180910390f35b6109cb60048036038101906109c691906133a4565b6124df565b6040516109d89190613569565b60405180910390f35b6109e9612566565b005b610a056004803603810190610a009190613db7565b612818565b604051610a129190613569565b60405180910390f35b610a356004803603810190610a3091906135b0565b612906565b604051610a45949392919061387d565b60405180910390f35b610a686004803603810190610a639190613e72565b612a46565b005b610a846004803603810190610a7f9190613b36565b612add565b005b610a8e612b05565b604051610a9b919061352e565b60405180910390f35b610abe6004803603810190610ab99190613b36565b612c3f565b005b610ada6004803603810190610ad591906135b0565b612c67565b604051610ae79190613eea565b60405180910390f35b610af8612cbe565b604051610b059190613569565b60405180910390f35b610b286004803603810190610b2391906135b0565b612cc4565b604051610b3894939291906136d3565b60405180910390f35b610b5b6004803603810190610b569190613b36565b612d7c565b604051610b689190613eea565b60405180910390f35b610b79612e0d565b604051610b869190613569565b60405180910390f35b610ba96004803603810190610ba49190613f05565b612e13565b604051610bb69190613569565b60405180910390f35b610bd96004803603810190610bd4919061406e565b612ed8565b604051610be69190613569565b60405180910390f35b610c096004803603810190610c0491906135b0565b61302d565b604051610c169190613983565b60405180910390f35b610c276130d5565b604051610c349190613569565b60405180910390f35b610c576004803603810190610c5291906135b0565b6130db565b604051610c669392919061413d565b60405180910390f35b6060600060025467ffffffffffffffff811115610c8f57610c8e613279565b5b604051908082528060200260200182016040528015610cc257816020015b6060815260200190600190039081610cad5790505b509050600080600090505b600254811015610dee578480519060200120600e6000838152602001908152602001600020600001604051610d02919061427e565b604051809103902003610ddb57600e60008281526020019081526020016000206001018054610d30906141aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610d5c906141aa565b8015610da95780601f10610d7e57610100808354040283529160200191610da9565b820191906000526020600020905b815481529060010190602001808311610d8c57829003601f168201915b5050505050838381518110610dc157610dc0614295565b5b60200260200101819052508180610dd7906142f3565b9250505b8080610de6906142f3565b915050610ccd565b508192505050919050565b60045481565b6060600060035467ffffffffffffffff811115610e1f57610e1e613279565b5b604051908082528060200260200182016040528015610e5257816020015b6060815260200190600190039081610e3d5790505b509050600080600090505b600354811015610f635784600f60008381526020019081526020016000206000015403610f4257600f60008281526020019081526020016000206001018054610ea5906141aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610ed1906141aa565b8015610f1e5780601f10610ef357610100808354040283529160200191610f1e565b820191906000526020600020905b815481529060010190602001808311610f0157829003601f168201915b5050505050838381518110610f3657610f35614295565b5b60200260200101819052505b8180610f4d906142f3565b9250508080610f5b906142f3565b915050610e5d565b508192505050919050565b60025481565b60055481565b60146020528060005260406000206000915090508060000154908060010154908060020154905083565b600080600090505b60025481101561100a578280519060200120600e6000838152602001908152602001600020600101604051610fe1919061427e565b604051809103902003610ff75780915050611010565b8080611002906142f3565b915050610fac565b50600090505b919050565b60106020528060005260406000206000915090505481565b600b602052806000526040600020600091509050806000018054611050906141aa565b80601f016020809104026020016040519081016040528092919081815260200182805461107c906141aa565b80156110c95780601f1061109e576101008083540402835291602001916110c9565b820191906000526020600020905b8154815290600101906020018083116110ac57829003601f168201915b5050505050908060010180546110de906141aa565b80601f016020809104026020016040519081016040528092919081815260200182805461110a906141aa565b80156111575780601f1061112c57610100808354040283529160200191611157565b820191906000526020600020905b81548152906001019060200180831161113a57829003601f168201915b50505050509080600201805461116c906141aa565b80601f0160208091040260200160405190810160405280929190818152602001828054611198906141aa565b80156111e55780601f106111ba576101008083540402835291602001916111e5565b820191906000526020600020905b8154815290600101906020018083116111c857829003601f168201915b5050505050905083565b6060600060025467ffffffffffffffff81111561120f5761120e613279565b5b60405190808252806020026020018201604052801561124257816020015b606081526020019060019003908161122d5790505b50905060005b60025481101561132257600e60008281526020019081526020016000206001018054611273906141aa565b80601f016020809104026020016040519081016040528092919081815260200182805461129f906141aa565b80156112ec5780601f106112c1576101008083540402835291602001916112ec565b820191906000526020600020905b8154815290600101906020018083116112cf57829003601f168201915b505050505082828151811061130457611303614295565b5b6020026020010181905250808061131a906142f3565b915050611248565b508091505090565b600d6020528060005260406000206000915090508060000154908060010154905082565b6017602052806000526040600020600091509050806000015490806001015490806002015490806003018054611383906141aa565b80601f01602080910402602001604051908101604052809291908181526020018280546113af906141aa565b80156113fc5780601f106113d1576101008083540402835291602001916113fc565b820191906000526020600020905b8154815290600101906020018083116113df57829003601f168201915b5050505050905084565b600f60205280600052604060002060009150905080600001549080600101805461142f906141aa565b80601f016020809104026020016040519081016040528092919081815260200182805461145b906141aa565b80156114a85780601f1061147d576101008083540402835291602001916114a8565b820191906000526020600020905b81548152906001019060200180831161148b57829003601f168201915b5050505050908060020154905083565b60065481565b6060600060065467ffffffffffffffff8111156114de576114dd613279565b5b60405190808252806020026020018201604052801561150c5781602001602082028036833780820191505090505b509050600080600090505b6006548110156115b85785601460008381526020019081526020016000206000015414801561155b5750846014600083815260200190815260200160002060010154145b1561159757601460008281526020019081526020016000206002015483838151811061158a57611589614295565b5b6020026020010181815250505b81806115a2906142f3565b92505080806115b0906142f3565b915050611517565b50819250505092915050565b60116020528060005260406000206000915090508060000154908060010154908060020180546115f3906141aa565b80601f016020809104026020016040519081016040528092919081815260200182805461161f906141aa565b801561166c5780601f106116415761010080835404028352916020019161166c565b820191906000526020600020905b81548152906001019060200180831161164f57829003601f168201915b505050505090806003018054611681906141aa565b80601f01602080910402602001604051908101604052809291908181526020018280546116ad906141aa565b80156116fa5780601f106116cf576101008083540402835291602001916116fa565b820191906000526020600020905b8154815290600101906020018083116116dd57829003601f168201915b5050505050905084565b600015156018600085815260200190815260200160002060010160059054906101000a900460ff1615150361177357611772826040518060400160405280600581526020017f6261646765000000000000000000000000000000000000000000000000000000815250612a46565b5b6117b2816040518060400160405280600881526020017f646f6e6174696f6e000000000000000000000000000000000000000000000000815250612a46565b60016018600085815260200190815260200160002060010160056101000a81548160ff02191690831515021790555083600f60008781526020019081526020016000206002016000828254611807919061433b565b9250508190555083601060008581526020019081526020016000206000828254611831919061433b565b925050819055506040518060600160405280868152602001848152602001858152506012600060015481526020019081526020016000206000820151816000015560208201518160010155604082015181600201559050506001600081548092919061189c906142f3565b91905055505050505050565b6060600b600083815260200190815260200160002060010180546118cb906141aa565b80601f01602080910402602001604051908101604052809291908181526020018280546118f7906141aa565b80156119445780601f1061191957610100808354040283529160200191611944565b820191906000526020600020905b81548152906001019060200180831161192757829003601f168201915b50505050509050919050565b600c602052806000526040600020600091509050805461196f906141aa565b80601f016020809104026020016040519081016040528092919081815260200182805461199b906141aa565b80156119e85780601f106119bd576101008083540402835291602001916119e8565b820191906000526020600020905b8154815290600101906020018083116119cb57829003601f168201915b505050505081565b600060016018600084815260200190815260200160002060010160066101000a81548160ff021916908315150217905550604051806080016040528060075481526020018681526020018581526020018481525060156000600754815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081611a82919061451b565b506060820151816003019081611a98919061451b565b5090505060076000815480929190611aaf906142f3565b91905055506007549050949350505050565b60005481565b600e602052806000526040600020600091509050806000018054611aea906141aa565b80601f0160208091040260200160405190810160405280929190818152602001828054611b16906141aa565b8015611b635780601f10611b3857610100808354040283529160200191611b63565b820191906000526020600020905b815481529060010190602001808311611b4657829003601f168201915b505050505090806001018054611b78906141aa565b80601f0160208091040260200160405190810160405280929190818152602001828054611ba4906141aa565b8015611bf15780601f10611bc657610100808354040283529160200191611bf1565b820191906000526020600020905b815481529060010190602001808311611bd457829003601f168201915b5050505050905082565b60126020528060005260406000206000915090508060000154908060010154908060020154905083565b6060600060075467ffffffffffffffff811115611c4557611c44613279565b5b604051908082528060200260200182016040528015611c735781602001602082028036833780820191505090505b509050600080600090505b600754811015611cfd5784601560008381526020019081526020016000206001015403611cea576015600082815260200190815260200160002060000154838381518110611ccf57611cce614295565b5b6020026020010181815250508180611ce6906142f3565b9250505b8080611cf5906142f3565b915050611c7e565b508192505050919050565b6060600060095467ffffffffffffffff811115611d2857611d27613279565b5b604051908082528060200260200182016040528015611d565781602001602082028036833780820191505090505b509050600080600090505b600954811015611de05784601760008381526020019081526020016000206001015403611dcd576017600082815260200190815260200160002060000154838381518110611db257611db1614295565b5b6020026020010181815250508180611dc9906142f3565b9250505b8080611dd8906142f3565b915050611d61565b508192505050919050565b600060405180606001604052808681526020018581526020016040518060400160405280600581526020017f46616c7365000000000000000000000000000000000000000000000000000000815250815250600b6000805481526020019081526020016000206000820151816000019081611e66919061451b565b506020820151816001019081611e7c919061451b565b506040820151816002019081611e92919061451b565b5090505082600c6000805481526020019081526020016000209081611eb7919061451b565b5060016018600084815260200190815260200160002060010160006101000a81548160ff021916908315150217905550600080815480929190611ef9906142f3565b91905055506000549050949350505050565b80600c60008481526020019081526020016000209081611f2b919061451b565b505050565b81600b60008581526020019081526020016000206000019081611f53919061451b565b5080600b60008581526020019081526020016000206001019081611f77919061451b565b50505050565b600a5481565b60016018600084815260200190815260200160002060010160016101000a81548160ff021916908315150217905550604051806040016040528084815260200183815250600d60006004548152602001908152602001600020600082015181600001556020820151816001015590505060046000815480929190612006906142f3565b919050555061204a816040518060400160405280600481526020017f6a6f696e00000000000000000000000000000000000000000000000000000000815250612a46565b505050565b6060600f60008381526020019081526020016000206001018054612072906141aa565b80601f016020809104026020016040519081016040528092919081815260200182805461209e906141aa565b80156120eb5780601f106120c0576101008083540402835291602001916120eb565b820191906000526020600020905b8154815290600101906020018083116120ce57829003601f168201915b50505050509050919050565b600060016018600085815260200190815260200160002060010160046101000a81548160ff0219169083151502179055506040518060600160405280868152602001858152602001848152506014600060065481526020019081526020016000206000820151816000015560208201518160010155604082015181600201559050506006600081548092919061218c906142f3565b91905055506121d0826040518060400160405280600481526020017f766f746500000000000000000000000000000000000000000000000000000000815250612a46565b6006549050949350505050565b60075481565b6000604051806080016040528086815260200185815260200184815260200183815250601660006008548152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301908161224e919061451b565b5090505060086000815480929190612265906142f3565b91905055506008549050949350505050565b6060600060035467ffffffffffffffff81111561229757612296613279565b5b6040519080825280602002602001820160405280156122ca57816020015b60608152602001906001900390816122b55790505b50905060005b6003548110156123aa57600f600082815260200190815260200160002060010180546122fb906141aa565b80601f0160208091040260200160405190810160405280929190818152602001828054612327906141aa565b80156123745780601f1061234957610100808354040283529160200191612374565b820191906000526020600020905b81548152906001019060200180831161235757829003601f168201915b505050505082828151811061238c5761238b614295565b5b602002602001018190525080806123a2906142f3565b9150506122d0565b508091505090565b600080600090505b600354811015612418578280519060200120600f60008381526020019081526020016000206001016040516123ef919061427e565b604051809103902003612405578091505061241e565b8080612410906142f3565b9150506123ba565b50600090505b919050565b60186020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16908060010160029054906101000a900460ff16908060010160039054906101000a900460ff16908060010160049054906101000a900460ff16908060010160059054906101000a900460ff16908060010160069054906101000a900460ff16908060010160079054906101000a900460ff16905089565b60095481565b600080600090505b60035481101561255b578280519060200120600f600083815260200190815260200160002060010160405161251c919061427e565b60405180910390200361254857600f600082815260200190815260200160002060000154915050612561565b8080612553906142f3565b9150506124e7565b50600090505b919050565b60005b6000548110156125cc57600b60008281526020019081526020016000206000808201600061259791906131ed565b6001820160006125a791906131ed565b6002820160006125b791906131ed565b505080806125c4906142f3565b915050612569565b5060005b60025481101561262357600e6000828152602001908152602001600020600080820160006125fe91906131ed565b60018201600061260e91906131ed565b5050808061261b906142f3565b9150506125d0565b5060005b60035481101561267a57600f600082815260200190815260200160002060008082016000905560018201600061265d91906131ed565b600282016000905550508080612672906142f3565b915050612627565b5060005b6002548110156126d1576013600082815260200190815260200160002060008082016000905560018201600090556002820160006126bc91906131ed565b505080806126c9906142f3565b91505061267e565b5060005b6007548110156127385760156000828152602001908152602001600020600080820160009055600182016000905560028201600061271391906131ed565b60038201600061272391906131ed565b50508080612730906142f3565b9150506126d5565b5060005b60095481101561279757601760008281526020019081526020016000206000808201600090556001820160009055600282016000905560038201600061278291906131ed565b5050808061278f906142f3565b91505061273c565b5060005b6006548110156127e6576014600082815260200190815260200160002060008082016000905560018201600090556002820160009055505080806127de906142f3565b91505061279b565b506000808190555060006002819055506000600381905550600060078190555060006009819055506000600681905550565b6000604051806040016040528085815260200186815250600e600060025481526020019081526020016000206000820151816000019081612859919061451b565b50602082015181600101908161286f919061451b565b5090505060016018600085815260200190815260200160002060010160026101000a81548160ff021916908315150217905550600260008154809291906128b5906142f3565b91905055506128f9826040518060400160405280600481526020017f676f616c00000000000000000000000000000000000000000000000000000000815250612a46565b6002549050949350505050565b6015602052806000526040600020600091509050806000015490806001015490806002018054612935906141aa565b80601f0160208091040260200160405190810160405280929190818152602001828054612961906141aa565b80156129ae5780601f10612983576101008083540402835291602001916129ae565b820191906000526020600020905b81548152906001019060200180831161299157829003601f168201915b5050505050908060030180546129c3906141aa565b80601f01602080910402602001604051908101604052809291908181526020018280546129ef906141aa565b8015612a3c5780601f10612a1157610100808354040283529160200191612a3c565b820191906000526020600020905b815481529060010190602001808311612a1f57829003601f168201915b5050505050905084565b6040518060800160405280600a5481526020014281526020018281526020018381525060116000600a54815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081612aa7919061451b565b506060820151816003019081612abd919061451b565b50905050600a6000815480929190612ad4906142f3565b91905055505050565b80600f60008481526020019081526020016000206001019081612b00919061451b565b505050565b60606000805467ffffffffffffffff811115612b2457612b23613279565b5b604051908082528060200260200182016040528015612b5757816020015b6060815260200190600190039081612b425790505b50905060005b600054811015612c3757600b60008281526020019081526020016000206001018054612b88906141aa565b80601f0160208091040260200160405190810160405280929190818152602001828054612bb4906141aa565b8015612c015780601f10612bd657610100808354040283529160200191612c01565b820191906000526020600020905b815481529060010190602001808311612be457829003601f168201915b5050505050828281518110612c1957612c18614295565b5b60200260200101819052508080612c2f906142f3565b915050612b5d565b508091505090565b80600e60008481526020019081526020016000206001019081612c62919061451b565b505050565b600080600090505b600454811015612cb35782600d60008381526020019081526020016000206001015403612ca0576001915050612cb9565b8080612cab906142f3565b915050612c6f565b50600090505b919050565b60085481565b6016602052806000526040600020600091509050806000015490806001015490806002015490806003018054612cf9906141aa565b80601f0160208091040260200160405190810160405280929190818152602001828054612d25906141aa565b8015612d725780601f10612d4757610100808354040283529160200191612d72565b820191906000526020600020905b815481529060010190602001808311612d5557829003601f168201915b5050505050905084565b6000806000905060005b600854811015612e0257846016600083815260200190815260200160002060000154148015612de5575060166000828152602001908152602001600020600301604051612dd3919061427e565b60405180910390208480519060200120145b15612def57600191505b8080612dfa906142f3565b915050612d86565b508091505092915050565b60035481565b600060016018600084815260200190815260200160002060010160076101000a81548160ff02191690831515021790555060405180608001604052806009548152602001868152602001848152602001858152506017600060095481526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003019081612eaf919061451b565b5090505060096000815480929190612ec6906142f3565b91905055506009549050949350505050565b600060405180606001604052808681526020018781526020016000815250600f60006003548152602001908152602001600020600082015181600001556020820151816001019081612f2a919061451b565b506040820151816002015590505060016018600085815260200190815260200160002060010160036101000a81548160ff02191690831515021790555060036000815480929190612f7a906142f3565b919050555060005b8451811015612fdf57612fb4600354600554878481518110612fa757612fa6614295565b5b602002602001015161318d565b60056000815480929190612fc7906142f3565b91905055508080612fd7906142f3565b915050612f82565b5061301f826040518060400160405280600481526020017f6964656100000000000000000000000000000000000000000000000000000000815250612a46565b600354905095945050505050565b6060600e60008381526020019081526020016000206001018054613050906141aa565b80601f016020809104026020016040519081016040528092919081815260200182805461307c906141aa565b80156130c95780601f1061309e576101008083540402835291602001916130c9565b820191906000526020600020905b8154815290600101906020018083116130ac57829003601f168201915b50505050509050919050565b60015481565b601360205280600052604060002060009150905080600001549080600101549080600201805461310a906141aa565b80601f0160208091040260200160405190810160405280929190818152602001828054613136906141aa565b80156131835780601f1061315857610100808354040283529160200191613183565b820191906000526020600020905b81548152906001019060200180831161316657829003601f168201915b5050505050905083565b60405180606001604052808481526020018381526020018281525060136000848152602001908152602001600020600082015181600001556020820151816001015560408201518160020190816131e4919061451b565b50905050505050565b5080546131f9906141aa565b6000825580601f1061320b575061322a565b601f016020900490600052602060002090810190613229919061322d565b5b50565b5b8082111561324657600081600090555060010161322e565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6132b182613268565b810181811067ffffffffffffffff821117156132d0576132cf613279565b5b80604052505050565b60006132e361324a565b90506132ef82826132a8565b919050565b600067ffffffffffffffff82111561330f5761330e613279565b5b61331882613268565b9050602081019050919050565b82818337600083830152505050565b6000613347613342846132f4565b6132d9565b90508281526020810184848401111561336357613362613263565b5b61336e848285613325565b509392505050565b600082601f83011261338b5761338a61325e565b5b813561339b848260208601613334565b91505092915050565b6000602082840312156133ba576133b9613254565b5b600082013567ffffffffffffffff8111156133d8576133d7613259565b5b6133e484828501613376565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613453578082015181840152602081019050613438565b60008484015250505050565b600061346a82613419565b6134748185613424565b9350613484818560208601613435565b61348d81613268565b840191505092915050565b60006134a4838361345f565b905092915050565b6000602082019050919050565b60006134c4826133ed565b6134ce81856133f8565b9350836020820285016134e085613409565b8060005b8581101561351c57848403895281516134fd8582613498565b9450613508836134ac565b925060208a019950506001810190506134e4565b50829750879550505050505092915050565b6000602082019050818103600083015261354881846134b9565b905092915050565b6000819050919050565b61356381613550565b82525050565b600060208201905061357e600083018461355a565b92915050565b61358d81613550565b811461359857600080fd5b50565b6000813590506135aa81613584565b92915050565b6000602082840312156135c6576135c5613254565b5b60006135d48482850161359b565b91505092915050565b60006060820190506135f2600083018661355a565b6135ff602083018561355a565b61360c604083018461355a565b949350505050565b600082825260208201905092915050565b600061363082613419565b61363a8185613614565b935061364a818560208601613435565b61365381613268565b840191505092915050565b600060608201905081810360008301526136788186613625565b9050818103602083015261368c8185613625565b905081810360408301526136a08184613625565b9050949350505050565b60006040820190506136bf600083018561355a565b6136cc602083018461355a565b9392505050565b60006080820190506136e8600083018761355a565b6136f5602083018661355a565b613702604083018561355a565b81810360608301526137148184613625565b905095945050505050565b6000606082019050613734600083018661355a565b81810360208301526137468185613625565b9050613755604083018461355a565b949350505050565b6000806040838503121561377457613773613254565b5b60006137828582860161359b565b92505060206137938582860161359b565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6137d281613550565b82525050565b60006137e483836137c9565b60208301905092915050565b6000602082019050919050565b60006138088261379d565b61381281856137a8565b935061381d836137b9565b8060005b8381101561384e57815161383588826137d8565b9750613840836137f0565b925050600181019050613821565b5085935050505092915050565b6000602082019050818103600083015261387581846137fd565b905092915050565b6000608082019050613892600083018761355a565b61389f602083018661355a565b81810360408301526138b18185613625565b905081810360608301526138c58184613625565b905095945050505050565b600080600080600060a086880312156138ec576138eb613254565b5b60006138fa8882890161359b565b955050602061390b8882890161359b565b945050604061391c8882890161359b565b935050606086013567ffffffffffffffff81111561393d5761393c613259565b5b61394988828901613376565b925050608086013567ffffffffffffffff81111561396a57613969613259565b5b61397688828901613376565b9150509295509295909350565b6000602082019050818103600083015261399d8184613625565b905092915050565b600080600080608085870312156139bf576139be613254565b5b60006139cd8782880161359b565b945050602085013567ffffffffffffffff8111156139ee576139ed613259565b5b6139fa87828801613376565b935050604085013567ffffffffffffffff811115613a1b57613a1a613259565b5b613a2787828801613376565b9250506060613a388782880161359b565b91505092959194509250565b60006040820190508181036000830152613a5e8185613625565b90508181036020830152613a728184613625565b90509392505050565b60008060008060808587031215613a9557613a94613254565b5b600085013567ffffffffffffffff811115613ab357613ab2613259565b5b613abf87828801613376565b945050602085013567ffffffffffffffff811115613ae057613adf613259565b5b613aec87828801613376565b935050604085013567ffffffffffffffff811115613b0d57613b0c613259565b5b613b1987828801613376565b9250506060613b2a8782880161359b565b91505092959194509250565b60008060408385031215613b4d57613b4c613254565b5b6000613b5b8582860161359b565b925050602083013567ffffffffffffffff811115613b7c57613b7b613259565b5b613b8885828601613376565b9150509250929050565b600080600060608486031215613bab57613baa613254565b5b6000613bb98682870161359b565b935050602084013567ffffffffffffffff811115613bda57613bd9613259565b5b613be686828701613376565b925050604084013567ffffffffffffffff811115613c0757613c06613259565b5b613c1386828701613376565b9150509250925092565b600080600060608486031215613c3657613c35613254565b5b6000613c448682870161359b565b9350506020613c558682870161359b565b925050604084013567ffffffffffffffff811115613c7657613c75613259565b5b613c8286828701613376565b9150509250925092565b60008060008060808587031215613ca657613ca5613254565b5b6000613cb48782880161359b565b9450506020613cc58782880161359b565b9350506040613cd68782880161359b565b925050606085013567ffffffffffffffff811115613cf757613cf6613259565b5b613d0387828801613376565b91505092959194509250565b60008115159050919050565b613d2481613d0f565b82525050565b600061012082019050613d40600083018c61355a565b613d4d602083018b613d1b565b613d5a604083018a613d1b565b613d676060830189613d1b565b613d746080830188613d1b565b613d8160a0830187613d1b565b613d8e60c0830186613d1b565b613d9b60e0830185613d1b565b613da9610100830184613d1b565b9a9950505050505050505050565b60008060008060808587031215613dd157613dd0613254565b5b600085013567ffffffffffffffff811115613def57613dee613259565b5b613dfb87828801613376565b945050602085013567ffffffffffffffff811115613e1c57613e1b613259565b5b613e2887828801613376565b9350506040613e398782880161359b565b925050606085013567ffffffffffffffff811115613e5a57613e59613259565b5b613e6687828801613376565b91505092959194509250565b60008060408385031215613e8957613e88613254565b5b600083013567ffffffffffffffff811115613ea757613ea6613259565b5b613eb385828601613376565b925050602083013567ffffffffffffffff811115613ed457613ed3613259565b5b613ee085828601613376565b9150509250929050565b6000602082019050613eff6000830184613d1b565b92915050565b60008060008060808587031215613f1f57613f1e613254565b5b6000613f2d8782880161359b565b945050602085013567ffffffffffffffff811115613f4e57613f4d613259565b5b613f5a87828801613376565b9350506040613f6b8782880161359b565b9250506060613f7c8782880161359b565b91505092959194509250565b600067ffffffffffffffff821115613fa357613fa2613279565b5b602082029050602081019050919050565b600080fd5b6000613fcc613fc784613f88565b6132d9565b90508083825260208201905060208402830185811115613fef57613fee613fb4565b5b835b8181101561403657803567ffffffffffffffff8111156140145761401361325e565b5b8086016140218982613376565b85526020850194505050602081019050613ff1565b5050509392505050565b600082601f8301126140555761405461325e565b5b8135614065848260208601613fb9565b91505092915050565b600080600080600060a0868803121561408a57614089613254565b5b600086013567ffffffffffffffff8111156140a8576140a7613259565b5b6140b488828901613376565b95505060206140c58882890161359b565b945050604086013567ffffffffffffffff8111156140e6576140e5613259565b5b6140f288828901614040565b93505060606141038882890161359b565b925050608086013567ffffffffffffffff81111561412457614123613259565b5b61413088828901613376565b9150509295509295909350565b6000606082019050614152600083018661355a565b61415f602083018561355a565b81810360408301526141718184613625565b9050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806141c257607f821691505b6020821081036141d5576141d461417b565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154614208816141aa565b61421281866141db565b9450600182166000811461422d576001811461424257614275565b60ff1983168652811515820286019350614275565b61424b856141e6565b60005b8381101561426d5781548189015260018201915060208101905061424e565b838801955050505b50505092915050565b600061428a82846141fb565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006142fe82613550565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036143305761432f6142c4565b5b600182019050919050565b600061434682613550565b915061435183613550565b9250828201905080821115614369576143686142c4565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026143d17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614394565b6143db8683614394565b95508019841693508086168417925050509392505050565b6000819050919050565b600061441861441361440e84613550565b6143f3565b613550565b9050919050565b6000819050919050565b614432836143fd565b61444661443e8261441f565b8484546143a1565b825550505050565b600090565b61445b61444e565b614466818484614429565b505050565b5b8181101561448a5761447f600082614453565b60018101905061446c565b5050565b601f8211156144cf576144a08161436f565b6144a984614384565b810160208510156144b8578190505b6144cc6144c485614384565b83018261446b565b50505b505050565b600082821c905092915050565b60006144f2600019846008026144d4565b1980831691505092915050565b600061450b83836144e1565b9150826002028217905092915050565b61452482613419565b67ffffffffffffffff81111561453d5761453c613279565b5b61454782546141aa565b61455282828561448e565b600060209050601f8311600181146145855760008415614573578287015190505b61457d85826144ff565b8655506145e5565b601f1984166145938661436f565b60005b828110156145bb57848901518255600182019150602085019450602081019050614596565b868310156145d857848901516145d4601f8916826144e1565b8355505b6001600288020188555050505b50505050505056fea26469706673582212203680ed0812a95bf9a7b8060236a28e1be932c53d90c22a796288dac85ba55dc664736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x378 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AC4110C GT PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xBDA00335 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xCD230809 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE1B011A0 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE1B011A0 EQ PUSH2 0xBBF JUMPI DUP1 PUSH4 0xE32ACC1A EQ PUSH2 0xBEF JUMPI DUP1 PUSH4 0xEC245802 EQ PUSH2 0xC1F JUMPI DUP1 PUSH4 0xFF4A37EF EQ PUSH2 0xC3D JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0xCD230809 EQ PUSH2 0xB41 JUMPI DUP1 PUSH4 0xD3791B20 EQ PUSH2 0xB71 JUMPI DUP1 PUSH4 0xD9FC52DB EQ PUSH2 0xB8F JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0xC29595C5 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xC29595C5 EQ PUSH2 0xAA4 JUMPI DUP1 PUSH4 0xC7AF4EE5 EQ PUSH2 0xAC0 JUMPI DUP1 PUSH4 0xCA013F17 EQ PUSH2 0xAF0 JUMPI DUP1 PUSH4 0xCACE8D46 EQ PUSH2 0xB0E JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0xBDA00335 EQ PUSH2 0xA4E JUMPI DUP1 PUSH4 0xC04E7430 EQ PUSH2 0xA6A JUMPI DUP1 PUSH4 0xC04FE978 EQ PUSH2 0xA86 JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0xA1CA9178 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0xAA4CDF2A GT PUSH2 0x14B JUMPI DUP1 PUSH4 0xAA4CDF2A EQ PUSH2 0x9B1 JUMPI DUP1 PUSH4 0xB16060A6 EQ PUSH2 0x9E1 JUMPI DUP1 PUSH4 0xB39A38BD EQ PUSH2 0x9EB JUMPI DUP1 PUSH4 0xB527D45E EQ PUSH2 0xA1B JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0xA1CA9178 EQ PUSH2 0x92B JUMPI DUP1 PUSH4 0xA428A47F EQ PUSH2 0x95B JUMPI DUP1 PUSH4 0xAA2BF5D3 EQ PUSH2 0x993 JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0x8D6B30A1 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x8D6B30A1 EQ PUSH2 0x88F JUMPI DUP1 PUSH4 0x9077007D EQ PUSH2 0x8BF JUMPI DUP1 PUSH4 0x934C5F00 EQ PUSH2 0x8DD JUMPI DUP1 PUSH4 0x97EE7606 EQ PUSH2 0x90D JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0x8AC4110C EQ PUSH2 0x825 JUMPI DUP1 PUSH4 0x8C70034A EQ PUSH2 0x843 JUMPI DUP1 PUSH4 0x8D3D2595 EQ PUSH2 0x85F JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0x4BE7ADB5 GT PUSH2 0x2AD JUMPI DUP1 PUSH4 0x7F2035D4 GT PUSH2 0x24B JUMPI DUP1 PUSH4 0x812FAE1F GT PUSH2 0x225 JUMPI DUP1 PUSH4 0x812FAE1F EQ PUSH2 0x78D JUMPI DUP1 PUSH4 0x86FFA45B EQ PUSH2 0x7BD JUMPI DUP1 PUSH4 0x87633EB2 EQ PUSH2 0x7ED JUMPI DUP1 PUSH4 0x881DE858 EQ PUSH2 0x809 JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0x7F2035D4 EQ PUSH2 0x6FA JUMPI DUP1 PUSH4 0x7FC543EC EQ PUSH2 0x72B JUMPI DUP1 PUSH4 0x803F5B9F EQ PUSH2 0x75D JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0x5D907DA1 GT PUSH2 0x287 JUMPI DUP1 PUSH4 0x5D907DA1 EQ PUSH2 0x64C JUMPI DUP1 PUSH4 0x6ECDA4EE EQ PUSH2 0x67C JUMPI DUP1 PUSH4 0x787F19C7 EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0x7BBD582D EQ PUSH2 0x6DC JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0x4BE7ADB5 EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0x54A9FB18 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x5996278F EQ PUSH2 0x630 JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0x20959ED0 GT PUSH2 0x31A JUMPI DUP1 PUSH4 0x330B8F26 GT PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x330B8F26 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0x3F87A2F4 EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0x468D0C80 EQ PUSH2 0x57D JUMPI DUP1 PUSH4 0x4A797BD7 EQ PUSH2 0x5AF JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0x20959ED0 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x27A568B9 EQ PUSH2 0x4C9 JUMPI DUP1 PUSH4 0x29B56F60 EQ PUSH2 0x4FB JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0x13BF4CEA GT PUSH2 0x356 JUMPI DUP1 PUSH4 0x13BF4CEA EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x1B592AEB EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0x1BA44C4C EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x1E9AC9F5 EQ PUSH2 0x469 JUMPI PUSH2 0x378 JUMP JUMPDEST DUP1 PUSH4 0x377D44A EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x1171B621 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x131D44F2 EQ PUSH2 0x3CB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x397 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x33A4 JUMP JUMPDEST PUSH2 0xC6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x352E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x352E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x403 PUSH2 0xF6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x421 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x451 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x460 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x33A4 JUMP JUMPDEST PUSH2 0xFA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x1015 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x365E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x503 PUSH2 0x11EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x352E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x533 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x132A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x541 SWAP3 SWAP2 SWAP1 PUSH2 0x36AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x564 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x134E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x574 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x597 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x371F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B7 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0x375D JUMP JUMPDEST PUSH2 0x14BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x385B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x617 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x627 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x387D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x645 SWAP2 SWAP1 PUSH2 0x38D0 JUMP JUMPDEST PUSH2 0x1704 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x666 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x661 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x673 SWAP2 SWAP1 PUSH2 0x3983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x696 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x691 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A3 SWAP2 SWAP1 PUSH2 0x3983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C1 SWAP2 SWAP1 PUSH2 0x39A5 JUMP JUMPDEST PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E4 PUSH2 0x1AC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F1 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x714 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70F SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x1AC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x722 SWAP3 SWAP2 SWAP1 PUSH2 0x3A44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x745 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x740 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x754 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x777 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x772 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x784 SWAP2 SWAP1 PUSH2 0x385B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x1D08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x385B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D2 SWAP2 SWAP1 PUSH2 0x3A7B JUMP JUMPDEST PUSH2 0x1DEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E4 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x807 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x802 SWAP2 SWAP1 PUSH2 0x3B36 JUMP JUMPDEST PUSH2 0x1F0B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x823 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81E SWAP2 SWAP1 PUSH2 0x3B92 JUMP JUMPDEST PUSH2 0x1F30 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x82D PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83A SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x858 SWAP2 SWAP1 PUSH2 0x3C1D JUMP JUMPDEST PUSH2 0x1F83 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x879 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x874 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x204F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x886 SWAP2 SWAP1 PUSH2 0x3983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A4 SWAP2 SWAP1 PUSH2 0x3C8C JUMP JUMPDEST PUSH2 0x20F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B6 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C7 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D4 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8F2 SWAP2 SWAP1 PUSH2 0x3C8C JUMP JUMPDEST PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x904 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x915 PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x922 SWAP2 SWAP1 PUSH2 0x352E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x945 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x940 SWAP2 SWAP1 PUSH2 0x33A4 JUMP JUMPDEST PUSH2 0x23B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x952 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x975 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x970 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x2423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x98A SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99B PUSH2 0x24D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A8 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9C6 SWAP2 SWAP1 PUSH2 0x33A4 JUMP JUMPDEST PUSH2 0x24DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D8 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E9 PUSH2 0x2566 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA05 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA00 SWAP2 SWAP1 PUSH2 0x3DB7 JUMP JUMPDEST PUSH2 0x2818 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA12 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA35 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x2906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA45 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x387D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA63 SWAP2 SWAP1 PUSH2 0x3E72 JUMP JUMPDEST PUSH2 0x2A46 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA84 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA7F SWAP2 SWAP1 PUSH2 0x3B36 JUMP JUMPDEST PUSH2 0x2ADD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA8E PUSH2 0x2B05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x352E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xABE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB9 SWAP2 SWAP1 PUSH2 0x3B36 JUMP JUMPDEST PUSH2 0x2C3F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xADA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x2C67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAE7 SWAP2 SWAP1 PUSH2 0x3EEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF8 PUSH2 0x2CBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB05 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB28 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB23 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x2CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB38 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB56 SWAP2 SWAP1 PUSH2 0x3B36 JUMP JUMPDEST PUSH2 0x2D7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB68 SWAP2 SWAP1 PUSH2 0x3EEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB79 PUSH2 0x2E0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB86 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBA4 SWAP2 SWAP1 PUSH2 0x3F05 JUMP JUMPDEST PUSH2 0x2E13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB6 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBD4 SWAP2 SWAP1 PUSH2 0x406E JUMP JUMPDEST PUSH2 0x2ED8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE6 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC09 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC04 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x302D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC16 SWAP2 SWAP1 PUSH2 0x3983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC27 PUSH2 0x30D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC34 SWAP2 SWAP1 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC57 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC52 SWAP2 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH2 0x30DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC66 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x413D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC8F JUMPI PUSH2 0xC8E PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCC2 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xCAD JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xDEE JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0xD02 SWAP2 SWAP1 PUSH2 0x427E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xDDB JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xD30 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD5C SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDA9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD7E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDA9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD8C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xDC1 JUMPI PUSH2 0xDC0 PUSH2 0x4295 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xDD7 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xDE6 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCCD JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE1F JUMPI PUSH2 0xE1E PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE52 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE3D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xF63 JUMPI DUP5 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0xF42 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xEA5 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xED1 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF1E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEF3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF1E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF01 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF36 JUMPI PUSH2 0xF35 PUSH2 0x4295 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0xF4D SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0xF5B SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE5D JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x100A JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0xFE1 SWAP2 SWAP1 PUSH2 0x427E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xFF7 JUMPI DUP1 SWAP2 POP POP PUSH2 0x1010 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1002 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFAC JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1050 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x107C SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x109E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x10DE SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x110A SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1157 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x112C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1157 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x113A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x116C SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1198 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11E5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11BA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11E5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11C8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x120F JUMPI PUSH2 0x120E PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1242 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x122D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1322 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1273 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x129F SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1304 JUMPI PUSH2 0x1303 PUSH2 0x4295 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x131A SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1248 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1383 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13AF SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x142F SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x145B SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14A8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x147D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14A8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x148B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14DE JUMPI PUSH2 0x14DD PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x150C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x15B8 JUMPI DUP6 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x155B JUMPI POP DUP5 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1597 JUMPI PUSH1 0x14 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x158A JUMPI PUSH2 0x1589 PUSH2 0x4295 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP2 DUP1 PUSH2 0x15A2 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x15B0 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1517 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x15F3 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x161F SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x166C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1641 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x166C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x164F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1681 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16AD SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16CF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x1773 JUMPI PUSH2 0x1772 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261646765000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2A46 JUMP JUMPDEST JUMPDEST PUSH2 0x17B2 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646F6E6174696F6E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2A46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0xF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1807 SWAP2 SWAP1 PUSH2 0x433B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x10 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1831 SWAP2 SWAP1 PUSH2 0x433B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x12 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x189C SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x18CB SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18F7 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1944 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1919 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1944 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1927 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x196F SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x199B SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x15 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1A82 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1A98 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1AAF SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x7 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1AEA SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B16 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B63 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B38 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B63 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B46 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1B78 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BA4 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1BF1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BC6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BF1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1BD4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C45 JUMPI PUSH2 0x1C44 PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C73 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1CFD JUMPI DUP5 PUSH1 0x15 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1CEA JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1CCF JUMPI PUSH2 0x1CCE PUSH2 0x4295 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1CE6 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1CF5 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C7E JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x9 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D28 JUMPI PUSH2 0x1D27 PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D56 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1DE0 JUMPI DUP5 PUSH1 0x17 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1DCD JUMPI PUSH1 0x17 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1DB2 JUMPI PUSH2 0x1DB1 PUSH2 0x4295 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1DC9 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1DD8 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D61 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46616C7365000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1E66 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1E7C SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1E92 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP SWAP1 POP POP DUP3 PUSH1 0xC PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x1EB7 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1EF9 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x1F2B SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1F53 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP DUP1 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1F77 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2006 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x204A DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6A6F696E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2A46 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2072 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x209E SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x14 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x218C SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x21D0 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x766F746500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2A46 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x16 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x224E SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2265 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x8 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2297 JUMPI PUSH2 0x2296 PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x22CA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x22B5 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x23AA JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x22FB SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2327 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2374 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2349 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2374 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2357 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x238C JUMPI PUSH2 0x238B PUSH2 0x4295 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x23A2 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x22D0 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2418 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x23EF SWAP2 SWAP1 PUSH2 0x427E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x2405 JUMPI DUP1 SWAP2 POP POP PUSH2 0x241E JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2410 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x23BA JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x255B JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x251C SWAP2 SWAP1 PUSH2 0x427E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x2548 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP POP PUSH2 0x2561 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2553 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x24E7 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x25CC JUMPI PUSH1 0xB PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x2597 SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x25A7 SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x25B7 SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x25C4 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2569 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2623 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x25FE SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x260E SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x261B SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x25D0 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x267A JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x265D SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x2672 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2627 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x26D1 JUMPI PUSH1 0x13 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x26BC SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x26C9 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x267E JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2738 JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2713 SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x2723 SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2730 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26D5 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x2797 JUMPI PUSH1 0x17 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x2782 SWAP2 SWAP1 PUSH2 0x31ED JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x278F SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x273C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x27E6 JUMPI PUSH1 0x14 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x27DE SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x279B JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2859 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x286F SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x28B5 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x28F9 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x676F616C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2A46 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2935 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2961 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x29AE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2983 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x29AE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2991 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x29C3 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29EF SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2A3C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2A3C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A1F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x11 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2AA7 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2ABD SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2AD4 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2B00 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B24 JUMPI PUSH2 0x2B23 PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2B57 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2B42 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x2C37 JUMPI PUSH1 0xB PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2B88 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BB4 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C01 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2BD6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C01 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BE4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2C19 JUMPI PUSH2 0x2C18 PUSH2 0x4295 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2C2F SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B5D JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2C62 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x2CB3 JUMPI DUP3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x2CA0 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x2CB9 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2CAB SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2C6F JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x2CF9 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D25 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D72 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D47 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D72 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D55 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2E02 JUMPI DUP5 PUSH1 0x16 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x2DE5 JUMPI POP PUSH1 0x16 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x40 MLOAD PUSH2 0x2DD3 SWAP2 SWAP1 PUSH2 0x427E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST ISZERO PUSH2 0x2DEF JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x2DFA SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2D86 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x17 PUSH1 0x0 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2EAF SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x9 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2EC6 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x9 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xF PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2F2A SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2F7A SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2FDF JUMPI PUSH2 0x2FB4 PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2FA7 JUMPI PUSH2 0x2FA6 PUSH2 0x4295 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x318D JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2FC7 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0x2FD7 SWAP1 PUSH2 0x42F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2F82 JUMP JUMPDEST POP PUSH2 0x301F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6964656100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2A46 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x3050 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x307C SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x309E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x310A SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3136 SWAP1 PUSH2 0x41AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3183 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3158 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3183 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3166 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x13 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x31E4 SWAP2 SWAP1 PUSH2 0x451B JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x31F9 SWAP1 PUSH2 0x41AA JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x320B JUMPI POP PUSH2 0x322A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3229 SWAP2 SWAP1 PUSH2 0x322D JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3246 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x322E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x32B1 DUP3 PUSH2 0x3268 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x32D0 JUMPI PUSH2 0x32CF PUSH2 0x3279 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E3 PUSH2 0x324A JUMP JUMPDEST SWAP1 POP PUSH2 0x32EF DUP3 DUP3 PUSH2 0x32A8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x330F JUMPI PUSH2 0x330E PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH2 0x3318 DUP3 PUSH2 0x3268 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3347 PUSH2 0x3342 DUP5 PUSH2 0x32F4 JUMP JUMPDEST PUSH2 0x32D9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3363 JUMPI PUSH2 0x3362 PUSH2 0x3263 JUMP JUMPDEST JUMPDEST PUSH2 0x336E DUP5 DUP3 DUP6 PUSH2 0x3325 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x338B JUMPI PUSH2 0x338A PUSH2 0x325E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x339B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3334 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33BA JUMPI PUSH2 0x33B9 PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33D8 JUMPI PUSH2 0x33D7 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x33E4 DUP5 DUP3 DUP6 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3453 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3438 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346A DUP3 PUSH2 0x3419 JUMP JUMPDEST PUSH2 0x3474 DUP2 DUP6 PUSH2 0x3424 JUMP JUMPDEST SWAP4 POP PUSH2 0x3484 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3435 JUMP JUMPDEST PUSH2 0x348D DUP2 PUSH2 0x3268 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A4 DUP4 DUP4 PUSH2 0x345F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34C4 DUP3 PUSH2 0x33ED JUMP JUMPDEST PUSH2 0x34CE DUP2 DUP6 PUSH2 0x33F8 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x34E0 DUP6 PUSH2 0x3409 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x351C JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x34FD DUP6 DUP3 PUSH2 0x3498 JUMP JUMPDEST SWAP5 POP PUSH2 0x3508 DUP4 PUSH2 0x34AC JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x34E4 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3548 DUP2 DUP5 PUSH2 0x34B9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3563 DUP2 PUSH2 0x3550 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x357E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x355A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x358D DUP2 PUSH2 0x3550 JUMP JUMPDEST DUP2 EQ PUSH2 0x3598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x35AA DUP2 PUSH2 0x3584 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35C6 JUMPI PUSH2 0x35C5 PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35D4 DUP5 DUP3 DUP6 ADD PUSH2 0x359B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x35F2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x355A JUMP JUMPDEST PUSH2 0x35FF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x355A JUMP JUMPDEST PUSH2 0x360C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x355A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3630 DUP3 PUSH2 0x3419 JUMP JUMPDEST PUSH2 0x363A DUP2 DUP6 PUSH2 0x3614 JUMP JUMPDEST SWAP4 POP PUSH2 0x364A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3435 JUMP JUMPDEST PUSH2 0x3653 DUP2 PUSH2 0x3268 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3678 DUP2 DUP7 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x368C DUP2 DUP6 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x36A0 DUP2 DUP5 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x36BF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x355A JUMP JUMPDEST PUSH2 0x36CC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x355A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x36E8 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x355A JUMP JUMPDEST PUSH2 0x36F5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x355A JUMP JUMPDEST PUSH2 0x3702 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x355A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3714 DUP2 DUP5 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3734 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x355A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3746 DUP2 DUP6 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP PUSH2 0x3755 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x355A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3774 JUMPI PUSH2 0x3773 PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3782 DUP6 DUP3 DUP7 ADD PUSH2 0x359B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3793 DUP6 DUP3 DUP7 ADD PUSH2 0x359B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37D2 DUP2 PUSH2 0x3550 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E4 DUP4 DUP4 PUSH2 0x37C9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3808 DUP3 PUSH2 0x379D JUMP JUMPDEST PUSH2 0x3812 DUP2 DUP6 PUSH2 0x37A8 JUMP JUMPDEST SWAP4 POP PUSH2 0x381D DUP4 PUSH2 0x37B9 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x384E JUMPI DUP2 MLOAD PUSH2 0x3835 DUP9 DUP3 PUSH2 0x37D8 JUMP JUMPDEST SWAP8 POP PUSH2 0x3840 DUP4 PUSH2 0x37F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3821 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3875 DUP2 DUP5 PUSH2 0x37FD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3892 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x355A JUMP JUMPDEST PUSH2 0x389F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x355A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x38B1 DUP2 DUP6 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x38C5 DUP2 DUP5 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x38EC JUMPI PUSH2 0x38EB PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38FA DUP9 DUP3 DUP10 ADD PUSH2 0x359B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x390B DUP9 DUP3 DUP10 ADD PUSH2 0x359B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x391C DUP9 DUP3 DUP10 ADD PUSH2 0x359B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x393D JUMPI PUSH2 0x393C PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3949 DUP9 DUP3 DUP10 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x396A JUMPI PUSH2 0x3969 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3976 DUP9 DUP3 DUP10 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x399D DUP2 DUP5 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x39BF JUMPI PUSH2 0x39BE PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39CD DUP8 DUP3 DUP9 ADD PUSH2 0x359B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39EE JUMPI PUSH2 0x39ED PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x39FA DUP8 DUP3 DUP9 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A1B JUMPI PUSH2 0x3A1A PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3A27 DUP8 DUP3 DUP9 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3A38 DUP8 DUP3 DUP9 ADD PUSH2 0x359B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A5E DUP2 DUP6 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3A72 DUP2 DUP5 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3A95 JUMPI PUSH2 0x3A94 PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AB3 JUMPI PUSH2 0x3AB2 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3ABF DUP8 DUP3 DUP9 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AE0 JUMPI PUSH2 0x3ADF PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3AEC DUP8 DUP3 DUP9 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B0D JUMPI PUSH2 0x3B0C PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3B19 DUP8 DUP3 DUP9 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3B2A DUP8 DUP3 DUP9 ADD PUSH2 0x359B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B4D JUMPI PUSH2 0x3B4C PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B5B DUP6 DUP3 DUP7 ADD PUSH2 0x359B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B7C JUMPI PUSH2 0x3B7B PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3B88 DUP6 DUP3 DUP7 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3BAB JUMPI PUSH2 0x3BAA PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BB9 DUP7 DUP3 DUP8 ADD PUSH2 0x359B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BDA JUMPI PUSH2 0x3BD9 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3BE6 DUP7 DUP3 DUP8 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C07 JUMPI PUSH2 0x3C06 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3C13 DUP7 DUP3 DUP8 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3C36 JUMPI PUSH2 0x3C35 PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C44 DUP7 DUP3 DUP8 ADD PUSH2 0x359B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3C55 DUP7 DUP3 DUP8 ADD PUSH2 0x359B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C76 JUMPI PUSH2 0x3C75 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3C82 DUP7 DUP3 DUP8 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3CA6 JUMPI PUSH2 0x3CA5 PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3CB4 DUP8 DUP3 DUP9 ADD PUSH2 0x359B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3CC5 DUP8 DUP3 DUP9 ADD PUSH2 0x359B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3CD6 DUP8 DUP3 DUP9 ADD PUSH2 0x359B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CF7 JUMPI PUSH2 0x3CF6 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3D03 DUP8 DUP3 DUP9 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D24 DUP2 PUSH2 0x3D0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x3D40 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x355A JUMP JUMPDEST PUSH2 0x3D4D PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x3D1B JUMP JUMPDEST PUSH2 0x3D5A PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x3D1B JUMP JUMPDEST PUSH2 0x3D67 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x3D1B JUMP JUMPDEST PUSH2 0x3D74 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x3D1B JUMP JUMPDEST PUSH2 0x3D81 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x3D1B JUMP JUMPDEST PUSH2 0x3D8E PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x3D1B JUMP JUMPDEST PUSH2 0x3D9B PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x3D1B JUMP JUMPDEST PUSH2 0x3DA9 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x3D1B JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3DD1 JUMPI PUSH2 0x3DD0 PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3DEF JUMPI PUSH2 0x3DEE PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3DFB DUP8 DUP3 DUP9 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E1C JUMPI PUSH2 0x3E1B PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3E28 DUP8 DUP3 DUP9 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3E39 DUP8 DUP3 DUP9 ADD PUSH2 0x359B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E5A JUMPI PUSH2 0x3E59 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3E66 DUP8 DUP3 DUP9 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E89 JUMPI PUSH2 0x3E88 PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3EA7 JUMPI PUSH2 0x3EA6 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3EB3 DUP6 DUP3 DUP7 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3ED4 JUMPI PUSH2 0x3ED3 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3EE0 DUP6 DUP3 DUP7 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3EFF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3D1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3F1F JUMPI PUSH2 0x3F1E PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F2D DUP8 DUP3 DUP9 ADD PUSH2 0x359B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F4E JUMPI PUSH2 0x3F4D PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x3F5A DUP8 DUP3 DUP9 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3F6B DUP8 DUP3 DUP9 ADD PUSH2 0x359B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3F7C DUP8 DUP3 DUP9 ADD PUSH2 0x359B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3FA3 JUMPI PUSH2 0x3FA2 PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3FCC PUSH2 0x3FC7 DUP5 PUSH2 0x3F88 JUMP JUMPDEST PUSH2 0x32D9 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3FEF JUMPI PUSH2 0x3FEE PUSH2 0x3FB4 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4036 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4014 JUMPI PUSH2 0x4013 PUSH2 0x325E JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x4021 DUP10 DUP3 PUSH2 0x3376 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3FF1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4055 JUMPI PUSH2 0x4054 PUSH2 0x325E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4065 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3FB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x408A JUMPI PUSH2 0x4089 PUSH2 0x3254 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40A8 JUMPI PUSH2 0x40A7 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x40B4 DUP9 DUP3 DUP10 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x40C5 DUP9 DUP3 DUP10 ADD PUSH2 0x359B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40E6 JUMPI PUSH2 0x40E5 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x40F2 DUP9 DUP3 DUP10 ADD PUSH2 0x4040 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4103 DUP9 DUP3 DUP10 ADD PUSH2 0x359B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4124 JUMPI PUSH2 0x4123 PUSH2 0x3259 JUMP JUMPDEST JUMPDEST PUSH2 0x4130 DUP9 DUP3 DUP10 ADD PUSH2 0x3376 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4152 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x355A JUMP JUMPDEST PUSH2 0x415F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x355A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4171 DUP2 DUP5 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x41C2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x41D5 JUMPI PUSH2 0x41D4 PUSH2 0x417B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x4208 DUP2 PUSH2 0x41AA JUMP JUMPDEST PUSH2 0x4212 DUP2 DUP7 PUSH2 0x41DB JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x422D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x4242 JUMPI PUSH2 0x4275 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x4275 JUMP JUMPDEST PUSH2 0x424B DUP6 PUSH2 0x41E6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x426D JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x424E JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x428A DUP3 DUP5 PUSH2 0x41FB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x42FE DUP3 PUSH2 0x3550 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4330 JUMPI PUSH2 0x432F PUSH2 0x42C4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4346 DUP3 PUSH2 0x3550 JUMP JUMPDEST SWAP2 POP PUSH2 0x4351 DUP4 PUSH2 0x3550 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4369 JUMPI PUSH2 0x4368 PUSH2 0x42C4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x43D1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4394 JUMP JUMPDEST PUSH2 0x43DB DUP7 DUP4 PUSH2 0x4394 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4418 PUSH2 0x4413 PUSH2 0x440E DUP5 PUSH2 0x3550 JUMP JUMPDEST PUSH2 0x43F3 JUMP JUMPDEST PUSH2 0x3550 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4432 DUP4 PUSH2 0x43FD JUMP JUMPDEST PUSH2 0x4446 PUSH2 0x443E DUP3 PUSH2 0x441F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x43A1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x445B PUSH2 0x444E JUMP JUMPDEST PUSH2 0x4466 DUP2 DUP5 DUP5 PUSH2 0x4429 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x448A JUMPI PUSH2 0x447F PUSH1 0x0 DUP3 PUSH2 0x4453 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x446C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x44CF JUMPI PUSH2 0x44A0 DUP2 PUSH2 0x436F JUMP JUMPDEST PUSH2 0x44A9 DUP5 PUSH2 0x4384 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x44B8 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x44CC PUSH2 0x44C4 DUP6 PUSH2 0x4384 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x446B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44F2 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x44D4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x450B DUP4 DUP4 PUSH2 0x44E1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4524 DUP3 PUSH2 0x3419 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x453D JUMPI PUSH2 0x453C PUSH2 0x3279 JUMP JUMPDEST JUMPDEST PUSH2 0x4547 DUP3 SLOAD PUSH2 0x41AA JUMP JUMPDEST PUSH2 0x4552 DUP3 DUP3 DUP6 PUSH2 0x448E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4585 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4573 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x457D DUP6 DUP3 PUSH2 0x44FF JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x45E5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4593 DUP7 PUSH2 0x436F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x45BB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4596 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x45D8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x45D4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x44E1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE DUP1 0xED ADDMOD SLT 0xA9 JUMPDEST 0xF9 0xA7 0xB8 MOD MUL CALLDATASIZE LOG2 DUP15 SHL 0xE9 ORIGIN 0xC5 RETURNDATASIZE SWAP1 0xC2 0x2A PUSH26 0x6288DAC85BA55DC664736F6C6343000811003300000000000000 ","sourceMap":"170:15389:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6377:522;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2019:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9863:452;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1956:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2050:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3381:71;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6907:313;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2921:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2264:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6061:308;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2533:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3805:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2787:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2091:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11635:551;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3036:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;8458:545;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5136:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2408:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12210:386;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1890:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2657:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;12604:514;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13494:523;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4035:400;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4443:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4579:239;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2233:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9011:281;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11003:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11189:438;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2128:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14025:357;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9543:312;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10323:321;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3915:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2201:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10652:343;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14828:721;;;:::i;:::-;;5505:388;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3542:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;5297:187;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8315:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4826:302;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5901:152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9300:235;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2162:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3661:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;14392:424;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1987:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13126:360;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7408:632;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7228:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3228:74;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6377:522;6454:15;6521:26;6563:9;;6550:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6521:52;;6584:17;6617:9;6629:1;6617:13;;6612:250;6636:9;;6632:1;:13;6612:250;;;6729:7;6713:25;;;;;;6687:10;:13;6698:1;6687:13;;;;;;;;;;;:20;;6671:38;;;;;;:::i;:::-;;;;;;;;:67;6667:184;;6783:10;:13;6794:1;6783:13;;;;;;;;;;;:22;;6759:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;6770:9;6759:21;;;;;;;;:::i;:::-;;;;;;;:46;;;;6824:11;;;;;:::i;:::-;;;;6667:184;6647:3;;;;;:::i;:::-;;;;6612:250;;;;6881:10;6874:17;;;;6377:522;;;:::o;2019:24::-;;;;:::o;9863:452::-;9936:15;10004:26;10046:10;;10033:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10004:53;;10068:17;10101:9;10113:1;10101:13;;10096:182;10120:10;;10116:1;:14;10096:182;;;10182:8;10156:11;:14;10168:1;10156:14;;;;;;;;;;;:22;;;:34;10152:88;;10216:11;:14;10228:1;10216:14;;;;;;;;;;;:24;;10192:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;10203:9;10192:21;;;;;;;;:::i;:::-;;;;;;;:48;;;;10152:88;10255:11;;;;;:::i;:::-;;;;10132:3;;;;;:::i;:::-;;;;10096:182;;;;10297:10;10290:17;;;;9863:452;;;:::o;1956:24::-;;;;:::o;2050:34::-;;;;:::o;3381:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6907:313::-;6986:7;7045:9;7057:1;7045:13;;7040:152;7064:9;;7060:1;:13;7040:152;;;7159:9;7143:27;;;;;;7115:10;:13;7126:1;7115:13;;;;;;;;;;;:22;;7099:40;;;;;;:::i;:::-;;;;;;;;:71;7095:85;;7179:1;7172:8;;;;;7095:85;7075:3;;;;;:::i;:::-;;;;7040:152;;;;7211:1;7204:8;;6907:313;;;;:::o;2921:43::-;;;;;;;;;;;;;;;;;:::o;2264:51::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6061:308::-;6107:15;6164:26;6206:9;;6193:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6164:52;;6232:9;6227:105;6251:9;;6247:1;:13;6227:105;;;6298:10;:13;6309:1;6298:13;;;;;;;;;;;:22;;6282:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;6293:1;6282:13;;;;;;;;:::i;:::-;;;;;;;:38;;;;6262:3;;;;;:::i;:::-;;;;6227:105;;;;6351:10;6344:17;;;6061:308;:::o;2533:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3805:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2787:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2091:30::-;;;;:::o;11635:551::-;11728:16;11800:27;11844:15;;11830:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11800:60;;11871:17;11904:9;11916:1;11904:13;;11899:252;11923:15;;11919:1;:19;11899:252;;;11999:8;11964:20;:23;11985:1;11964:23;;;;;;;;;;;:31;;;:43;:92;;;;;12047:9;12011:20;:23;12032:1;12011:23;;;;;;;;;;;:32;;;:45;11964:92;11960:153;;;12082:20;:23;12103:1;12082:23;;;;;;;;;;;:31;;;12058:10;12069:9;12058:21;;;;;;;;:::i;:::-;;;;;;;:55;;;;;11960:153;12128:11;;;;;:::i;:::-;;;;11940:3;;;;;:::i;:::-;;;;11899:252;;;;12168:10;12161:17;;;;11635:551;;;;:::o;3036:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8458:545::-;8634:5;8600:39;;:12;:21;8613:7;8600:21;;;;;;;;;;;:30;;;;;;;;;;;;:39;;;8596:89;;8651:24;8660:6;8651:24;;;;;;;;;;;;;;;;;:8;:24::i;:::-;8596:89;8693:27;8702:6;8693:27;;;;;;;;;;;;;;;;;:8;:27::i;:::-;8770:4;8737:12;:21;8750:7;8737:21;;;;;;;;;;;:30;;;:37;;;;;;;;;;;;;;;;;;8820:9;8785:11;:22;8797:9;8785:22;;;;;;;;;;;:31;;;:44;;;;;;;:::i;:::-;;;;;;;;8861:9;8840:8;:17;8849:7;8840:17;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;8910:46;;;;;;;;8926:9;8910:46;;;;8937:7;8910:46;;;;8946:9;8910:46;;;8881:10;:26;8892:14;;8881:26;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;;;;;;;;;;8967:14;;:16;;;;;;;;;:::i;:::-;;;;;;8458:545;;;;;:::o;5136:153::-;5191:13;5255:9;:18;5265:7;5255:18;;;;;;;;;;;:26;;5248:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5136:153;;;:::o;2408:48::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12210:386::-;12327:7;12384:4;12351:12;:22;12364:8;12351:22;;;;;;;;;;;:30;;;:37;;;;;;;;;;;;;;;;;;12473:58;;;;;;;;12488:12;;12473:58;;;;12502:9;12473:58;;;;12513:8;12473:58;;;;12523:7;12473:58;;;12444:12;:26;12457:12;;12444:26;;;;;;;;;;;:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;12542:12;;:14;;;;;;;;;:::i;:::-;;;;;;12576:12;;12569:19;;12210:386;;;;;;:::o;1890:23::-;;;;:::o;2657:53::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3128:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12604:514::-;12662:16;12738:36;12791:12;;12777:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12738:66;;12815:15;12846:9;12858:1;12846:13;;12841:231;12865:12;;12861:1;:16;12841:231;;;12931:8;12903:12;:15;12916:1;12903:15;;;;;;;;;;;:24;;;:36;12899:162;;12991:12;:15;13004:1;12991:15;;;;;;;;;;;:26;;;12960:19;12980:7;12960:28;;;;;;;;:::i;:::-;;;;;;;:57;;;;;13036:9;;;;;:::i;:::-;;;;12899:162;12879:3;;;;;:::i;:::-;;;;12841:231;;;;13091:19;13084:26;;;;12604:514;;;:::o;13494:523::-;13556:16;13632:37;13686:10;;13672:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13632:65;;13708:17;13741:9;13753:1;13741:13;;13736:234;13760:10;;13756:1;:14;13736:234;;;13825:10;13796:11;:14;13808:1;13796:14;;;;;;;;;;;:25;;;:39;13792:167;;13890:11;:14;13902:1;13890:14;;;;;;;;;;;:23;;;13856:20;13877:9;13856:31;;;;;;;;:::i;:::-;;;;;;;:57;;;;;13932:11;;;;;:::i;:::-;;;;13792:167;13772:3;;;;;:::i;:::-;;;;13736:234;;;;13989:20;13982:27;;;;13494:523;;;:::o;4035:400::-;4163:7;4242:46;;;;;;;;4257:11;4242:46;;;;4270:8;4242:46;;;;;;;;;;;;;;;;;;;;;;;;4220:9;:19;4230:8;;4220:19;;;;;;;;;;;:68;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;4326:9;4299:14;:24;4314:8;;4299:24;;;;;;;;;;;:36;;;;;;:::i;:::-;;4374:4;4346:12;:21;4359:7;4346:21;;;;;;;;;;;:25;;;:32;;;;;;;;;;;;;;;;;;4389:8;;:10;;;;;;;;;:::i;:::-;;;;;;4419:8;;4412:15;;4035:400;;;;;;:::o;4443:128::-;4554:9;4528:14;:23;4543:7;4528:23;;;;;;;;;;;:35;;;;;;:::i;:::-;;4443:128;;:::o;4579:239::-;4751:11;4719:9;:18;4729:7;4719:18;;;;;;;;;;;:29;;:43;;;;;;:::i;:::-;;4802:8;4773:9;:18;4783:7;4773:18;;;;;;;;;;;:26;;:37;;;;;;:::i;:::-;;4579:239;;;:::o;2233:24::-;;;;:::o;9011:281::-;9136:4;9106:12;:20;9119:6;9106:20;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;9179:45;;;;;;;;9199:6;9179:45;;;;9216:6;9179:45;;;9151:14;:25;9166:9;;9151:25;;;;;;;;;;;:73;;;;;;;;;;;;;;;;;;;9235:9;;:11;;;;;;;;;:::i;:::-;;;;;;9258:22;9267:5;9258:22;;;;;;;;;;;;;;;;;:8;:22::i;:::-;9011:281;;;:::o;11003:165::-;11062:13;11128:11;:22;11140:9;11128:22;;;;;;;;;;;:32;;11121:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11003:165;;;:::o;11189:438::-;11313:7;11364:4;11334:12;:22;11347:8;11334:22;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;11469:54;;;;;;;;11493:8;11469:54;;;;11503:9;11469:54;;;;11514:8;11469:54;;;11429:20;:37;11450:15;;11429:37;;;;;;;;;;;:94;;;;;;;;;;;;;;;;;;;;;;;;;;;11534:15;;:17;;;;;;;;;:::i;:::-;;;;;;11562:22;11571:5;11562:22;;;;;;;;;;;;;;;;;:8;:22::i;:::-;11604:15;;11597:22;;11189:438;;;;;;:::o;2128:27::-;;;;:::o;14025:357::-;14142:7;14246:61;;;;;;;;14266:11;14246:61;;;;14279:9;14246:61;;;;14290:7;14246:61;;;;14298:8;14246:61;;;14207:17;:36;14225:17;;14207:36;;;;;;;;;;;:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;14318:17;;:19;;;;;;;;;:::i;:::-;;;;;;14357:17;;14350:24;;14025:357;;;;;;:::o;9543:312::-;9589:15;9646:26;9688:10;;9675:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9646:53;;9715:9;9710:108;9734:10;;9730:1;:14;9710:108;;;9782:11;:14;9794:1;9782:14;;;;;;;;;;;:24;;9766:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;9777:1;9766:13;;;;;;;;:::i;:::-;;;;;;;:40;;;;9746:3;;;;;:::i;:::-;;;;9710:108;;;;9837:10;9830:17;;;9543:312;:::o;10323:321::-;10405:7;10465:9;10477:1;10465:13;;10460:156;10484:10;;10480:1;:14;10460:156;;;10582:10;10566:28;;;;;;10536:11;:14;10548:1;10536:14;;;;;;;;;;;:24;;10520:42;;;;;;:::i;:::-;;;;;;;;:74;10516:88;;10603:1;10596:8;;;;;10516:88;10496:3;;;;;:::i;:::-;;;;10460:156;;;;10635:1;10628:8;;10323:321;;;;:::o;3915:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2201:25::-;;;;:::o;10652:343::-;10735:7;10795:9;10807:1;10795:13;;10790:177;10814:10;;10810:1;:14;10790:177;;;10912:10;10896:28;;;;;;10866:11;:14;10878:1;10866:14;;;;;;;;;;;:24;;10850:42;;;;;;:::i;:::-;;;;;;;;:74;10846:109;;10933:11;:14;10945:1;10933:14;;;;;;;;;;;:22;;;10926:29;;;;;10846:109;10826:3;;;;;:::i;:::-;;;;10790:177;;;;10986:1;10979:8;;10652:343;;;;:::o;14828:721::-;14872:9;14867:58;14891:8;;14887:1;:12;14867:58;;;14913:9;:12;14923:1;14913:12;;;;;;;;;;;;14906:19;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;14901:3;;;;;:::i;:::-;;;;14867:58;;;;14941:9;14936:60;14960:9;;14956:1;:13;14936:60;;;14983:10;:13;14994:1;14983:13;;;;;;;;;;;;14976:20;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;14971:3;;;;;:::i;:::-;;;;14936:60;;;;15012:9;15007:62;15031:10;;15027:1;:14;15007:62;;;15055:11;:14;15067:1;15055:14;;;;;;;;;;;;15048:21;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;15043:3;;;;;:::i;:::-;;;;15007:62;;;;15085:9;15080:71;15104:9;;15100:1;:13;15080:71;;;15127:21;:24;15149:1;15127:24;;;;;;;;;;;;15120:31;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15115:3;;;;;:::i;:::-;;;;15080:71;;;;15167:9;15162:65;15186:12;;15182:1;:16;15162:65;;;15212:12;:15;15225:1;15212:15;;;;;;;;;;;;15205:22;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;15200:3;;;;;:::i;:::-;;;;15162:65;;;;15243:9;15238:62;15262:10;;15258:1;:14;15238:62;;;15286:11;:14;15298:1;15286:14;;;;;;;;;;;;15279:21;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15274:3;;;;;:::i;:::-;;;;15238:62;;;;15316:9;15311:76;15335:15;;15331:1;:19;15311:76;;;15364:20;:23;15385:1;15364:23;;;;;;;;;;;;15357:30;;;;;;;;;;;;;;;;;;;;15352:3;;;;;:::i;:::-;;;;15311:76;;;;15409:1;15398:8;:12;;;;15433:1;15421:9;:13;;;;15458:1;15445:10;:14;;;;15485:1;15470:12;:16;;;;15510:1;15497:10;:14;;;;15540:1;15522:15;:19;;;;14828:721::o;5505:388::-;5629:7;5712:35;;;;;;;;5728:7;5712:35;;;;5737:9;5712:35;;;5688:10;:21;5699:9;;5688:21;;;;;;;;;;;:59;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;5797:4;5767:12;:22;5780:8;5767:22;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;5812:9;;:11;;;;;;;;;:::i;:::-;;;;;;5834:22;5843:5;5834:22;;;;;;;;;;;;;;;;;:8;:22::i;:::-;5876:9;;5869:16;;5505:388;;;;;;:::o;3542:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5297:187::-;5399:54;;;;;;;;5411:9;;5399:54;;;;5421:15;5399:54;;;;5437:5;5399:54;;;;5443:9;5399:54;;;5379:6;:17;5386:9;;5379:17;;;;;;;;;;;:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;5465:9;;:11;;;;;;;;;:::i;:::-;;;;;;5297:187;;:::o;8315:135::-;8432:10;8397:11;:22;8409:9;8397:22;;;;;;;;;;;:32;;:45;;;;;;:::i;:::-;;8315:135;;:::o;4826:302::-;4871:15;4927:26;4969:8;;4956:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4927:51;;4994:9;4989:102;5013:8;;5009:1;:12;4989:102;;;5059:9;:12;5069:1;5059:12;;;;;;;;;;;:20;;5043:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;5054:1;5043:13;;;;;;;;:::i;:::-;;;;;;;:36;;;;5023:3;;;;;:::i;:::-;;;;4989:102;;;;5110:10;5103:17;;;4826:302;:::o;5901:152::-;6036:9;6004:10;:20;6015:8;6004:20;;;;;;;;;;;:29;;:41;;;;;;:::i;:::-;;5901:152;;:::o;9300:235::-;9364:4;9389:9;9401:1;9389:13;;9384:119;9408:9;;9404:1;:13;9384:119;;;9472:6;9443:14;:17;9458:1;9443:17;;;;;;;;;;;:25;;;:35;9439:52;;9487:4;9480:11;;;;;9439:52;9419:3;;;;;:::i;:::-;;;;9384:119;;;;9522:5;9515:12;;9300:235;;;;:::o;2162:32::-;;;;:::o;3661:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14392:424::-;14479:4;14504:9;14516:5;14504:17;;14537:9;14532:253;14556:17;;14552:1;:21;14532:253;;;14634:11;14599:17;:20;14617:1;14599:20;;;;;;;;;;;:31;;;:46;:127;;;;;14695:17;:20;14713:1;14695:20;;;;;;;;;;;:29;;14679:47;;;;;;:::i;:::-;;;;;;;;14665:8;14649:26;;;;;;:77;14599:127;14595:179;;;14753:4;14746:11;;14595:179;14575:3;;;;;:::i;:::-;;;;14532:253;;;;14804:4;14797:11;;;14392:424;;;;:::o;1987:25::-;;;;:::o;13126:360::-;13237:7;13289:4;13259:12;:21;13272:7;13259:21;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;13371:54;;;;;;;;13384:10;;13371:54;;;;13396:11;13371:54;;;;13408:8;13371:54;;;;13418:6;13371:54;;;13345:11;:23;13357:10;;13345:23;;;;;;;;;;;:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;13436:10;;:12;;;;;;;;;:::i;:::-;;;;;;13468:10;;13461:17;;13126:360;;;;;;:::o;7408:632::-;7562:7;7649:41;;;;;;;;7666:8;7649:41;;;;7676:10;7649:41;;;;7688:1;7649:41;;;7623:11;:23;7635:10;;7623:23;;;;;;;;;;;:67;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7732:4;7701:12;:22;7714:8;7701:22;;;;;;;;;;;:28;;;:35;;;;;;;;;;;;;;;;;;7747:10;;:12;;;;;;;;;:::i;:::-;;;;;;7777:9;7772:198;7796:16;:23;7792:1;:27;7772:198;;;7841:81;7869:10;;7881:19;;7902:16;7919:1;7902:19;;;;;;;;:::i;:::-;;;;;;;;7841:27;:81::i;:::-;7937:19;;:21;;;;;;;;;:::i;:::-;;;;;;7821:3;;;;;:::i;:::-;;;;7772:198;;;;7980:22;7989:5;7980:22;;;;;;;;;;;;;;;;;:8;:22::i;:::-;8022:10;;8015:17;;7408:632;;;;;;;:::o;7228:159::-;7285:13;7350:10;:20;7361:8;7350:20;;;;;;;;;;;:29;;7343:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7228:159;;;:::o;1920:29::-;;;;:::o;3228:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8048:259::-;8226:73;;;;;;;;8252:9;8226:73;;;;8263:18;8226:73;;;;8283:15;8226:73;;;8182:21;:41;8204:18;8182:41;;;;;;;;;;;:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;8048:259;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:146::-;1707:6;1702:3;1697;1684:30;1748:1;1739:6;1734:3;1730:16;1723:27;1610:146;;;:::o;1762:425::-;1840:5;1865:66;1881:49;1923:6;1881:49;:::i;:::-;1865:66;:::i;:::-;1856:75;;1954:6;1947:5;1940:21;1992:4;1985:5;1981:16;2030:3;2021:6;2016:3;2012:16;2009:25;2006:112;;;2037:79;;:::i;:::-;2006:112;2127:54;2174:6;2169:3;2164;2127:54;:::i;:::-;1846:341;1762:425;;;;;:::o;2207:340::-;2263:5;2312:3;2305:4;2297:6;2293:17;2289:27;2279:122;;2320:79;;:::i;:::-;2279:122;2437:6;2424:20;2462:79;2537:3;2529:6;2522:4;2514:6;2510:17;2462:79;:::i;:::-;2453:88;;2269:278;2207:340;;;;:::o;2553:509::-;2622:6;2671:2;2659:9;2650:7;2646:23;2642:32;2639:119;;;2677:79;;:::i;:::-;2639:119;2825:1;2814:9;2810:17;2797:31;2855:18;2847:6;2844:30;2841:117;;;2877:79;;:::i;:::-;2841:117;2982:63;3037:7;3028:6;3017:9;3013:22;2982:63;:::i;:::-;2972:73;;2768:287;2553:509;;;;:::o;3068:124::-;3145:6;3179:5;3173:12;3163:22;;3068:124;;;:::o;3198:194::-;3307:11;3341:6;3336:3;3329:19;3381:4;3376:3;3372:14;3357:29;;3198:194;;;;:::o;3398:142::-;3475:4;3498:3;3490:11;;3528:4;3523:3;3519:14;3511:22;;3398:142;;;:::o;3546:99::-;3598:6;3632:5;3626:12;3616:22;;3546:99;;;:::o;3651:159::-;3725:11;3759:6;3754:3;3747:19;3799:4;3794:3;3790:14;3775:29;;3651:159;;;;:::o;3816:246::-;3897:1;3907:113;3921:6;3918:1;3915:13;3907:113;;;4006:1;4001:3;3997:11;3991:18;3987:1;3982:3;3978:11;3971:39;3943:2;3940:1;3936:10;3931:15;;3907:113;;;4054:1;4045:6;4040:3;4036:16;4029:27;3878:184;3816:246;;;:::o;4068:357::-;4146:3;4174:39;4207:5;4174:39;:::i;:::-;4229:61;4283:6;4278:3;4229:61;:::i;:::-;4222:68;;4299:65;4357:6;4352:3;4345:4;4338:5;4334:16;4299:65;:::i;:::-;4389:29;4411:6;4389:29;:::i;:::-;4384:3;4380:39;4373:46;;4150:275;4068:357;;;;:::o;4431:196::-;4520:10;4555:66;4617:3;4609:6;4555:66;:::i;:::-;4541:80;;4431:196;;;;:::o;4633:123::-;4713:4;4745;4740:3;4736:14;4728:22;;4633:123;;;:::o;4790:991::-;4929:3;4958:64;5016:5;4958:64;:::i;:::-;5038:96;5127:6;5122:3;5038:96;:::i;:::-;5031:103;;5160:3;5205:4;5197:6;5193:17;5188:3;5184:27;5235:66;5295:5;5235:66;:::i;:::-;5324:7;5355:1;5340:396;5365:6;5362:1;5359:13;5340:396;;;5436:9;5430:4;5426:20;5421:3;5414:33;5487:6;5481:13;5515:84;5594:4;5579:13;5515:84;:::i;:::-;5507:92;;5622:70;5685:6;5622:70;:::i;:::-;5612:80;;5721:4;5716:3;5712:14;5705:21;;5400:336;5387:1;5384;5380:9;5375:14;;5340:396;;;5344:14;5752:4;5745:11;;5772:3;5765:10;;4934:847;;;;;4790:991;;;;:::o;5787:413::-;5950:4;5988:2;5977:9;5973:18;5965:26;;6037:9;6031:4;6027:20;6023:1;6012:9;6008:17;6001:47;6065:128;6188:4;6179:6;6065:128;:::i;:::-;6057:136;;5787:413;;;;:::o;6206:77::-;6243:7;6272:5;6261:16;;6206:77;;;:::o;6289:118::-;6376:24;6394:5;6376:24;:::i;:::-;6371:3;6364:37;6289:118;;:::o;6413:222::-;6506:4;6544:2;6533:9;6529:18;6521:26;;6557:71;6625:1;6614:9;6610:17;6601:6;6557:71;:::i;:::-;6413:222;;;;:::o;6641:122::-;6714:24;6732:5;6714:24;:::i;:::-;6707:5;6704:35;6694:63;;6753:1;6750;6743:12;6694:63;6641:122;:::o;6769:139::-;6815:5;6853:6;6840:20;6831:29;;6869:33;6896:5;6869:33;:::i;:::-;6769:139;;;;:::o;6914:329::-;6973:6;7022:2;7010:9;7001:7;6997:23;6993:32;6990:119;;;7028:79;;:::i;:::-;6990:119;7148:1;7173:53;7218:7;7209:6;7198:9;7194:22;7173:53;:::i;:::-;7163:63;;7119:117;6914:329;;;;:::o;7249:442::-;7398:4;7436:2;7425:9;7421:18;7413:26;;7449:71;7517:1;7506:9;7502:17;7493:6;7449:71;:::i;:::-;7530:72;7598:2;7587:9;7583:18;7574:6;7530:72;:::i;:::-;7612;7680:2;7669:9;7665:18;7656:6;7612:72;:::i;:::-;7249:442;;;;;;:::o;7697:169::-;7781:11;7815:6;7810:3;7803:19;7855:4;7850:3;7846:14;7831:29;;7697:169;;;;:::o;7872:377::-;7960:3;7988:39;8021:5;7988:39;:::i;:::-;8043:71;8107:6;8102:3;8043:71;:::i;:::-;8036:78;;8123:65;8181:6;8176:3;8169:4;8162:5;8158:16;8123:65;:::i;:::-;8213:29;8235:6;8213:29;:::i;:::-;8208:3;8204:39;8197:46;;7964:285;7872:377;;;;:::o;8255:715::-;8464:4;8502:2;8491:9;8487:18;8479:26;;8551:9;8545:4;8541:20;8537:1;8526:9;8522:17;8515:47;8579:78;8652:4;8643:6;8579:78;:::i;:::-;8571:86;;8704:9;8698:4;8694:20;8689:2;8678:9;8674:18;8667:48;8732:78;8805:4;8796:6;8732:78;:::i;:::-;8724:86;;8857:9;8851:4;8847:20;8842:2;8831:9;8827:18;8820:48;8885:78;8958:4;8949:6;8885:78;:::i;:::-;8877:86;;8255:715;;;;;;:::o;8976:332::-;9097:4;9135:2;9124:9;9120:18;9112:26;;9148:71;9216:1;9205:9;9201:17;9192:6;9148:71;:::i;:::-;9229:72;9297:2;9286:9;9282:18;9273:6;9229:72;:::i;:::-;8976:332;;;;;:::o;9314:644::-;9511:4;9549:3;9538:9;9534:19;9526:27;;9563:71;9631:1;9620:9;9616:17;9607:6;9563:71;:::i;:::-;9644:72;9712:2;9701:9;9697:18;9688:6;9644:72;:::i;:::-;9726;9794:2;9783:9;9779:18;9770:6;9726:72;:::i;:::-;9845:9;9839:4;9835:20;9830:2;9819:9;9815:18;9808:48;9873:78;9946:4;9937:6;9873:78;:::i;:::-;9865:86;;9314:644;;;;;;;:::o;9964:533::-;10133:4;10171:2;10160:9;10156:18;10148:26;;10184:71;10252:1;10241:9;10237:17;10228:6;10184:71;:::i;:::-;10302:9;10296:4;10292:20;10287:2;10276:9;10272:18;10265:48;10330:78;10403:4;10394:6;10330:78;:::i;:::-;10322:86;;10418:72;10486:2;10475:9;10471:18;10462:6;10418:72;:::i;:::-;9964:533;;;;;;:::o;10503:474::-;10571:6;10579;10628:2;10616:9;10607:7;10603:23;10599:32;10596:119;;;10634:79;;:::i;:::-;10596:119;10754:1;10779:53;10824:7;10815:6;10804:9;10800:22;10779:53;:::i;:::-;10769:63;;10725:117;10881:2;10907:53;10952:7;10943:6;10932:9;10928:22;10907:53;:::i;:::-;10897:63;;10852:118;10503:474;;;;;:::o;10983:114::-;11050:6;11084:5;11078:12;11068:22;;10983:114;;;:::o;11103:184::-;11202:11;11236:6;11231:3;11224:19;11276:4;11271:3;11267:14;11252:29;;11103:184;;;;:::o;11293:132::-;11360:4;11383:3;11375:11;;11413:4;11408:3;11404:14;11396:22;;11293:132;;;:::o;11431:108::-;11508:24;11526:5;11508:24;:::i;:::-;11503:3;11496:37;11431:108;;:::o;11545:179::-;11614:10;11635:46;11677:3;11669:6;11635:46;:::i;:::-;11713:4;11708:3;11704:14;11690:28;;11545:179;;;;:::o;11730:113::-;11800:4;11832;11827:3;11823:14;11815:22;;11730:113;;;:::o;11879:732::-;11998:3;12027:54;12075:5;12027:54;:::i;:::-;12097:86;12176:6;12171:3;12097:86;:::i;:::-;12090:93;;12207:56;12257:5;12207:56;:::i;:::-;12286:7;12317:1;12302:284;12327:6;12324:1;12321:13;12302:284;;;12403:6;12397:13;12430:63;12489:3;12474:13;12430:63;:::i;:::-;12423:70;;12516:60;12569:6;12516:60;:::i;:::-;12506:70;;12362:224;12349:1;12346;12342:9;12337:14;;12302:284;;;12306:14;12602:3;12595:10;;12003:608;;;11879:732;;;;:::o;12617:373::-;12760:4;12798:2;12787:9;12783:18;12775:26;;12847:9;12841:4;12837:20;12833:1;12822:9;12818:17;12811:47;12875:108;12978:4;12969:6;12875:108;:::i;:::-;12867:116;;12617:373;;;;:::o;12996:735::-;13213:4;13251:3;13240:9;13236:19;13228:27;;13265:71;13333:1;13322:9;13318:17;13309:6;13265:71;:::i;:::-;13346:72;13414:2;13403:9;13399:18;13390:6;13346:72;:::i;:::-;13465:9;13459:4;13455:20;13450:2;13439:9;13435:18;13428:48;13493:78;13566:4;13557:6;13493:78;:::i;:::-;13485:86;;13618:9;13612:4;13608:20;13603:2;13592:9;13588:18;13581:48;13646:78;13719:4;13710:6;13646:78;:::i;:::-;13638:86;;12996:735;;;;;;;:::o;13737:1271::-;13852:6;13860;13868;13876;13884;13933:3;13921:9;13912:7;13908:23;13904:33;13901:120;;;13940:79;;:::i;:::-;13901:120;14060:1;14085:53;14130:7;14121:6;14110:9;14106:22;14085:53;:::i;:::-;14075:63;;14031:117;14187:2;14213:53;14258:7;14249:6;14238:9;14234:22;14213:53;:::i;:::-;14203:63;;14158:118;14315:2;14341:53;14386:7;14377:6;14366:9;14362:22;14341:53;:::i;:::-;14331:63;;14286:118;14471:2;14460:9;14456:18;14443:32;14502:18;14494:6;14491:30;14488:117;;;14524:79;;:::i;:::-;14488:117;14629:63;14684:7;14675:6;14664:9;14660:22;14629:63;:::i;:::-;14619:73;;14414:288;14769:3;14758:9;14754:19;14741:33;14801:18;14793:6;14790:30;14787:117;;;14823:79;;:::i;:::-;14787:117;14928:63;14983:7;14974:6;14963:9;14959:22;14928:63;:::i;:::-;14918:73;;14712:289;13737:1271;;;;;;;;:::o;15014:313::-;15127:4;15165:2;15154:9;15150:18;15142:26;;15214:9;15208:4;15204:20;15200:1;15189:9;15185:17;15178:47;15242:78;15315:4;15306:6;15242:78;:::i;:::-;15234:86;;15014:313;;;;:::o;15333:1125::-;15439:6;15447;15455;15463;15512:3;15500:9;15491:7;15487:23;15483:33;15480:120;;;15519:79;;:::i;:::-;15480:120;15639:1;15664:53;15709:7;15700:6;15689:9;15685:22;15664:53;:::i;:::-;15654:63;;15610:117;15794:2;15783:9;15779:18;15766:32;15825:18;15817:6;15814:30;15811:117;;;15847:79;;:::i;:::-;15811:117;15952:63;16007:7;15998:6;15987:9;15983:22;15952:63;:::i;:::-;15942:73;;15737:288;16092:2;16081:9;16077:18;16064:32;16123:18;16115:6;16112:30;16109:117;;;16145:79;;:::i;:::-;16109:117;16250:63;16305:7;16296:6;16285:9;16281:22;16250:63;:::i;:::-;16240:73;;16035:288;16362:2;16388:53;16433:7;16424:6;16413:9;16409:22;16388:53;:::i;:::-;16378:63;;16333:118;15333:1125;;;;;;;:::o;16464:514::-;16625:4;16663:2;16652:9;16648:18;16640:26;;16712:9;16706:4;16702:20;16698:1;16687:9;16683:17;16676:47;16740:78;16813:4;16804:6;16740:78;:::i;:::-;16732:86;;16865:9;16859:4;16855:20;16850:2;16839:9;16835:18;16828:48;16893:78;16966:4;16957:6;16893:78;:::i;:::-;16885:86;;16464:514;;;;;:::o;16984:1305::-;17100:6;17108;17116;17124;17173:3;17161:9;17152:7;17148:23;17144:33;17141:120;;;17180:79;;:::i;:::-;17141:120;17328:1;17317:9;17313:17;17300:31;17358:18;17350:6;17347:30;17344:117;;;17380:79;;:::i;:::-;17344:117;17485:63;17540:7;17531:6;17520:9;17516:22;17485:63;:::i;:::-;17475:73;;17271:287;17625:2;17614:9;17610:18;17597:32;17656:18;17648:6;17645:30;17642:117;;;17678:79;;:::i;:::-;17642:117;17783:63;17838:7;17829:6;17818:9;17814:22;17783:63;:::i;:::-;17773:73;;17568:288;17923:2;17912:9;17908:18;17895:32;17954:18;17946:6;17943:30;17940:117;;;17976:79;;:::i;:::-;17940:117;18081:63;18136:7;18127:6;18116:9;18112:22;18081:63;:::i;:::-;18071:73;;17866:288;18193:2;18219:53;18264:7;18255:6;18244:9;18240:22;18219:53;:::i;:::-;18209:63;;18164:118;16984:1305;;;;;;;:::o;18295:654::-;18373:6;18381;18430:2;18418:9;18409:7;18405:23;18401:32;18398:119;;;18436:79;;:::i;:::-;18398:119;18556:1;18581:53;18626:7;18617:6;18606:9;18602:22;18581:53;:::i;:::-;18571:63;;18527:117;18711:2;18700:9;18696:18;18683:32;18742:18;18734:6;18731:30;18728:117;;;18764:79;;:::i;:::-;18728:117;18869:63;18924:7;18915:6;18904:9;18900:22;18869:63;:::i;:::-;18859:73;;18654:288;18295:654;;;;;:::o;18955:979::-;19052:6;19060;19068;19117:2;19105:9;19096:7;19092:23;19088:32;19085:119;;;19123:79;;:::i;:::-;19085:119;19243:1;19268:53;19313:7;19304:6;19293:9;19289:22;19268:53;:::i;:::-;19258:63;;19214:117;19398:2;19387:9;19383:18;19370:32;19429:18;19421:6;19418:30;19415:117;;;19451:79;;:::i;:::-;19415:117;19556:63;19611:7;19602:6;19591:9;19587:22;19556:63;:::i;:::-;19546:73;;19341:288;19696:2;19685:9;19681:18;19668:32;19727:18;19719:6;19716:30;19713:117;;;19749:79;;:::i;:::-;19713:117;19854:63;19909:7;19900:6;19889:9;19885:22;19854:63;:::i;:::-;19844:73;;19639:288;18955:979;;;;;:::o;19940:799::-;20027:6;20035;20043;20092:2;20080:9;20071:7;20067:23;20063:32;20060:119;;;20098:79;;:::i;:::-;20060:119;20218:1;20243:53;20288:7;20279:6;20268:9;20264:22;20243:53;:::i;:::-;20233:63;;20189:117;20345:2;20371:53;20416:7;20407:6;20396:9;20392:22;20371:53;:::i;:::-;20361:63;;20316:118;20501:2;20490:9;20486:18;20473:32;20532:18;20524:6;20521:30;20518:117;;;20554:79;;:::i;:::-;20518:117;20659:63;20714:7;20705:6;20694:9;20690:22;20659:63;:::i;:::-;20649:73;;20444:288;19940:799;;;;;:::o;20745:945::-;20841:6;20849;20857;20865;20914:3;20902:9;20893:7;20889:23;20885:33;20882:120;;;20921:79;;:::i;:::-;20882:120;21041:1;21066:53;21111:7;21102:6;21091:9;21087:22;21066:53;:::i;:::-;21056:63;;21012:117;21168:2;21194:53;21239:7;21230:6;21219:9;21215:22;21194:53;:::i;:::-;21184:63;;21139:118;21296:2;21322:53;21367:7;21358:6;21347:9;21343:22;21322:53;:::i;:::-;21312:63;;21267:118;21452:2;21441:9;21437:18;21424:32;21483:18;21475:6;21472:30;21469:117;;;21505:79;;:::i;:::-;21469:117;21610:63;21665:7;21656:6;21645:9;21641:22;21610:63;:::i;:::-;21600:73;;21395:288;20745:945;;;;;;;:::o;21696:90::-;21730:7;21773:5;21766:13;21759:21;21748:32;;21696:90;;;:::o;21792:109::-;21873:21;21888:5;21873:21;:::i;:::-;21868:3;21861:34;21792:109;;:::o;21907:1012::-;22176:4;22214:3;22203:9;22199:19;22191:27;;22228:71;22296:1;22285:9;22281:17;22272:6;22228:71;:::i;:::-;22309:66;22371:2;22360:9;22356:18;22347:6;22309:66;:::i;:::-;22385;22447:2;22436:9;22432:18;22423:6;22385:66;:::i;:::-;22461;22523:2;22512:9;22508:18;22499:6;22461:66;:::i;:::-;22537:67;22599:3;22588:9;22584:19;22575:6;22537:67;:::i;:::-;22614;22676:3;22665:9;22661:19;22652:6;22614:67;:::i;:::-;22691;22753:3;22742:9;22738:19;22729:6;22691:67;:::i;:::-;22768;22830:3;22819:9;22815:19;22806:6;22768:67;:::i;:::-;22845;22907:3;22896:9;22892:19;22883:6;22845:67;:::i;:::-;21907:1012;;;;;;;;;;;;:::o;22925:1305::-;23041:6;23049;23057;23065;23114:3;23102:9;23093:7;23089:23;23085:33;23082:120;;;23121:79;;:::i;:::-;23082:120;23269:1;23258:9;23254:17;23241:31;23299:18;23291:6;23288:30;23285:117;;;23321:79;;:::i;:::-;23285:117;23426:63;23481:7;23472:6;23461:9;23457:22;23426:63;:::i;:::-;23416:73;;23212:287;23566:2;23555:9;23551:18;23538:32;23597:18;23589:6;23586:30;23583:117;;;23619:79;;:::i;:::-;23583:117;23724:63;23779:7;23770:6;23759:9;23755:22;23724:63;:::i;:::-;23714:73;;23509:288;23836:2;23862:53;23907:7;23898:6;23887:9;23883:22;23862:53;:::i;:::-;23852:63;;23807:118;23992:2;23981:9;23977:18;23964:32;24023:18;24015:6;24012:30;24009:117;;;24045:79;;:::i;:::-;24009:117;24150:63;24205:7;24196:6;24185:9;24181:22;24150:63;:::i;:::-;24140:73;;23935:288;22925:1305;;;;;;;:::o;24236:834::-;24324:6;24332;24381:2;24369:9;24360:7;24356:23;24352:32;24349:119;;;24387:79;;:::i;:::-;24349:119;24535:1;24524:9;24520:17;24507:31;24565:18;24557:6;24554:30;24551:117;;;24587:79;;:::i;:::-;24551:117;24692:63;24747:7;24738:6;24727:9;24723:22;24692:63;:::i;:::-;24682:73;;24478:287;24832:2;24821:9;24817:18;24804:32;24863:18;24855:6;24852:30;24849:117;;;24885:79;;:::i;:::-;24849:117;24990:63;25045:7;25036:6;25025:9;25021:22;24990:63;:::i;:::-;24980:73;;24775:288;24236:834;;;;;:::o;25076:210::-;25163:4;25201:2;25190:9;25186:18;25178:26;;25214:65;25276:1;25265:9;25261:17;25252:6;25214:65;:::i;:::-;25076:210;;;;:::o;25292:945::-;25388:6;25396;25404;25412;25461:3;25449:9;25440:7;25436:23;25432:33;25429:120;;;25468:79;;:::i;:::-;25429:120;25588:1;25613:53;25658:7;25649:6;25638:9;25634:22;25613:53;:::i;:::-;25603:63;;25559:117;25743:2;25732:9;25728:18;25715:32;25774:18;25766:6;25763:30;25760:117;;;25796:79;;:::i;:::-;25760:117;25901:63;25956:7;25947:6;25936:9;25932:22;25901:63;:::i;:::-;25891:73;;25686:288;26013:2;26039:53;26084:7;26075:6;26064:9;26060:22;26039:53;:::i;:::-;26029:63;;25984:118;26141:2;26167:53;26212:7;26203:6;26192:9;26188:22;26167:53;:::i;:::-;26157:63;;26112:118;25292:945;;;;;;;:::o;26243:321::-;26330:4;26420:18;26412:6;26409:30;26406:56;;;26442:18;;:::i;:::-;26406:56;26492:4;26484:6;26480:17;26472:25;;26552:4;26546;26542:15;26534:23;;26243:321;;;:::o;26570:117::-;26679:1;26676;26669:12;26709:945;26815:5;26840:91;26856:74;26923:6;26856:74;:::i;:::-;26840:91;:::i;:::-;26831:100;;26951:5;26980:6;26973:5;26966:21;27014:4;27007:5;27003:16;26996:23;;27067:4;27059:6;27055:17;27047:6;27043:30;27096:3;27088:6;27085:15;27082:122;;;27115:79;;:::i;:::-;27082:122;27230:6;27213:435;27247:6;27242:3;27239:15;27213:435;;;27336:3;27323:17;27372:18;27359:11;27356:35;27353:122;;;27394:79;;:::i;:::-;27353:122;27518:11;27510:6;27506:24;27556:47;27599:3;27587:10;27556:47;:::i;:::-;27551:3;27544:60;27633:4;27628:3;27624:14;27617:21;;27289:359;;27273:4;27268:3;27264:14;27257:21;;27213:435;;;27217:21;26821:833;;26709:945;;;;;:::o;27676:390::-;27757:5;27806:3;27799:4;27791:6;27787:17;27783:27;27773:122;;27814:79;;:::i;:::-;27773:122;27931:6;27918:20;27956:104;28056:3;28048:6;28041:4;28033:6;28029:17;27956:104;:::i;:::-;27947:113;;27763:303;27676:390;;;;:::o;28072:1501::-;28222:6;28230;28238;28246;28254;28303:3;28291:9;28282:7;28278:23;28274:33;28271:120;;;28310:79;;:::i;:::-;28271:120;28458:1;28447:9;28443:17;28430:31;28488:18;28480:6;28477:30;28474:117;;;28510:79;;:::i;:::-;28474:117;28615:63;28670:7;28661:6;28650:9;28646:22;28615:63;:::i;:::-;28605:73;;28401:287;28727:2;28753:53;28798:7;28789:6;28778:9;28774:22;28753:53;:::i;:::-;28743:63;;28698:118;28883:2;28872:9;28868:18;28855:32;28914:18;28906:6;28903:30;28900:117;;;28936:79;;:::i;:::-;28900:117;29041:88;29121:7;29112:6;29101:9;29097:22;29041:88;:::i;:::-;29031:98;;28826:313;29178:2;29204:53;29249:7;29240:6;29229:9;29225:22;29204:53;:::i;:::-;29194:63;;29149:118;29334:3;29323:9;29319:19;29306:33;29366:18;29358:6;29355:30;29352:117;;;29388:79;;:::i;:::-;29352:117;29493:63;29548:7;29539:6;29528:9;29524:22;29493:63;:::i;:::-;29483:73;;29277:289;28072:1501;;;;;;;;:::o;29579:533::-;29748:4;29786:2;29775:9;29771:18;29763:26;;29799:71;29867:1;29856:9;29852:17;29843:6;29799:71;:::i;:::-;29880:72;29948:2;29937:9;29933:18;29924:6;29880:72;:::i;:::-;29999:9;29993:4;29989:20;29984:2;29973:9;29969:18;29962:48;30027:78;30100:4;30091:6;30027:78;:::i;:::-;30019:86;;29579:533;;;;;;:::o;30118:180::-;30166:77;30163:1;30156:88;30263:4;30260:1;30253:15;30287:4;30284:1;30277:15;30304:320;30348:6;30385:1;30379:4;30375:12;30365:22;;30432:1;30426:4;30422:12;30453:18;30443:81;;30509:4;30501:6;30497:17;30487:27;;30443:81;30571:2;30563:6;30560:14;30540:18;30537:38;30534:84;;30590:18;;:::i;:::-;30534:84;30355:269;30304:320;;;:::o;30630:147::-;30731:11;30768:3;30753:18;;30630:147;;;;:::o;30783:144::-;30835:4;30858:3;30850:11;;30881:3;30878:1;30871:14;30915:4;30912:1;30902:18;30894:26;;30783:144;;;:::o;30955:878::-;31060:3;31097:5;31091:12;31126:36;31152:9;31126:36;:::i;:::-;31178:88;31259:6;31254:3;31178:88;:::i;:::-;31171:95;;31297:1;31286:9;31282:17;31313:1;31308:166;;;;31488:1;31483:344;;;;31275:552;;31308:166;31392:4;31388:9;31377;31373:25;31368:3;31361:38;31454:6;31447:14;31440:22;31432:6;31428:35;31423:3;31419:45;31412:52;;31308:166;;31483:344;31550:41;31585:5;31550:41;:::i;:::-;31613:1;31627:154;31641:6;31638:1;31635:13;31627:154;;;31715:7;31709:14;31705:1;31700:3;31696:11;31689:35;31765:1;31756:7;31752:15;31741:26;;31663:4;31660:1;31656:12;31651:17;;31627:154;;;31810:6;31805:3;31801:16;31794:23;;31490:337;;31275:552;;31064:769;;30955:878;;;;:::o;31839:273::-;31970:3;31992:94;32082:3;32073:6;31992:94;:::i;:::-;31985:101;;32103:3;32096:10;;31839:273;;;;:::o;32118:180::-;32166:77;32163:1;32156:88;32263:4;32260:1;32253:15;32287:4;32284:1;32277:15;32304:180;32352:77;32349:1;32342:88;32449:4;32446:1;32439:15;32473:4;32470:1;32463:15;32490:233;32529:3;32552:24;32570:5;32552:24;:::i;:::-;32543:33;;32598:66;32591:5;32588:77;32585:103;;32668:18;;:::i;:::-;32585:103;32715:1;32708:5;32704:13;32697:20;;32490:233;;;:::o;32729:191::-;32769:3;32788:20;32806:1;32788:20;:::i;:::-;32783:25;;32822:20;32840:1;32822:20;:::i;:::-;32817:25;;32865:1;32862;32858:9;32851:16;;32886:3;32883:1;32880:10;32877:36;;;32893:18;;:::i;:::-;32877:36;32729:191;;;;:::o;32926:141::-;32975:4;32998:3;32990:11;;33021:3;33018:1;33011:14;33055:4;33052:1;33042:18;33034:26;;32926:141;;;:::o;33073:93::-;33110:6;33157:2;33152;33145:5;33141:14;33137:23;33127:33;;33073:93;;;:::o;33172:107::-;33216:8;33266:5;33260:4;33256:16;33235:37;;33172:107;;;;:::o;33285:393::-;33354:6;33404:1;33392:10;33388:18;33427:97;33457:66;33446:9;33427:97;:::i;:::-;33545:39;33575:8;33564:9;33545:39;:::i;:::-;33533:51;;33617:4;33613:9;33606:5;33602:21;33593:30;;33666:4;33656:8;33652:19;33645:5;33642:30;33632:40;;33361:317;;33285:393;;;;;:::o;33684:60::-;33712:3;33733:5;33726:12;;33684:60;;;:::o;33750:142::-;33800:9;33833:53;33851:34;33860:24;33878:5;33860:24;:::i;:::-;33851:34;:::i;:::-;33833:53;:::i;:::-;33820:66;;33750:142;;;:::o;33898:75::-;33941:3;33962:5;33955:12;;33898:75;;;:::o;33979:269::-;34089:39;34120:7;34089:39;:::i;:::-;34150:91;34199:41;34223:16;34199:41;:::i;:::-;34191:6;34184:4;34178:11;34150:91;:::i;:::-;34144:4;34137:105;34055:193;33979:269;;;:::o;34254:73::-;34299:3;34254:73;:::o;34333:189::-;34410:32;;:::i;:::-;34451:65;34509:6;34501;34495:4;34451:65;:::i;:::-;34386:136;34333:189;;:::o;34528:186::-;34588:120;34605:3;34598:5;34595:14;34588:120;;;34659:39;34696:1;34689:5;34659:39;:::i;:::-;34632:1;34625:5;34621:13;34612:22;;34588:120;;;34528:186;;:::o;34720:543::-;34821:2;34816:3;34813:11;34810:446;;;34855:38;34887:5;34855:38;:::i;:::-;34939:29;34957:10;34939:29;:::i;:::-;34929:8;34925:44;35122:2;35110:10;35107:18;35104:49;;;35143:8;35128:23;;35104:49;35166:80;35222:22;35240:3;35222:22;:::i;:::-;35212:8;35208:37;35195:11;35166:80;:::i;:::-;34825:431;;34810:446;34720:543;;;:::o;35269:117::-;35323:8;35373:5;35367:4;35363:16;35342:37;;35269:117;;;;:::o;35392:169::-;35436:6;35469:51;35517:1;35513:6;35505:5;35502:1;35498:13;35469:51;:::i;:::-;35465:56;35550:4;35544;35540:15;35530:25;;35443:118;35392:169;;;;:::o;35566:295::-;35642:4;35788:29;35813:3;35807:4;35788:29;:::i;:::-;35780:37;;35850:3;35847:1;35843:11;35837:4;35834:21;35826:29;;35566:295;;;;:::o;35866:1395::-;35983:37;36016:3;35983:37;:::i;:::-;36085:18;36077:6;36074:30;36071:56;;;36107:18;;:::i;:::-;36071:56;36151:38;36183:4;36177:11;36151:38;:::i;:::-;36236:67;36296:6;36288;36282:4;36236:67;:::i;:::-;36330:1;36354:4;36341:17;;36386:2;36378:6;36375:14;36403:1;36398:618;;;;37060:1;37077:6;37074:77;;;37126:9;37121:3;37117:19;37111:26;37102:35;;37074:77;37177:67;37237:6;37230:5;37177:67;:::i;:::-;37171:4;37164:81;37033:222;36368:887;;36398:618;36450:4;36446:9;36438:6;36434:22;36484:37;36516:4;36484:37;:::i;:::-;36543:1;36557:208;36571:7;36568:1;36565:14;36557:208;;;36650:9;36645:3;36641:19;36635:26;36627:6;36620:42;36701:1;36693:6;36689:14;36679:24;;36748:2;36737:9;36733:18;36720:31;;36594:4;36591:1;36587:12;36582:17;;36557:208;;;36793:6;36784:7;36781:19;36778:179;;;36851:9;36846:3;36842:19;36836:26;36894:48;36936:4;36928:6;36924:17;36913:9;36894:48;:::i;:::-;36886:6;36879:64;36801:156;36778:179;37003:1;36999;36991:6;36987:14;36983:22;36977:4;36970:36;36405:611;;;36368:887;;35958:1303;;;35866:1395;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"3591000","executionCost":"4039","totalCost":"3595039"},"external":{"_dao_ids()":"2563","_dao_uris(uint256)":"infinite","_donated(uint256)":"infinite","_donations(uint256)":"infinite","_donations_ids()":"2539","_feed_ids()":"2498","_feeds(uint256)":"infinite","_goal_ids()":"2498","_goal_uris(uint256)":"infinite","_ideas_ids()":"2518","_ideas_uris(uint256)":"infinite","_ideas_vote_ids()":"2563","_join_ids()":"2521","_joined_person(uint256)":"infinite","_message_ids()":"2519","_message_read_ids()":"2540","_reply_ids()":"2541","_smart_contract_ids()":"2520","_smart_contracts_uris(uint256)":"infinite","_template_uris(uint256)":"infinite","_user_badges(uint256)":"infinite","add_Feed(string,string)":"infinite","add_donation(uint256,uint256,uint256,string,string)":"infinite","all_goal_ideas_votes(uint256)":"infinite","all_messages(uint256)":"infinite","all_read_messages(uint256)":"infinite","all_replies(uint256)":"infinite","create_dao(string,string,string,uint256)":"infinite","create_goal(string,string,uint256,string)":"infinite","create_goal_ideas_vote(uint256,uint256,uint256,string)":"infinite","create_ideas(string,uint256,string[],uint256,string)":"infinite","dao_uri(uint256)":"infinite","getMsgIDs(uint256)":"infinite","getReadMsg(uint256,string)":"infinite","getReplyIDs(uint256)":"infinite","get_all_daos()":"infinite","get_all_goals()":"infinite","get_all_goals_by_dao_id(string)":"infinite","get_all_ideas()":"infinite","get_all_ideas_by_goal_id(uint256)":"infinite","get_goal_id_by_goal_uri(string)":"infinite","get_goal_id_from_ideas_uri(string)":"infinite","get_ideas_id_by_ideas_uri(string)":"infinite","get_ideas_votes_from_goal(uint256,uint256)":"infinite","goal_uri(uint256)":"infinite","ideas_uri(uint256)":"infinite","is_person_joined(uint256)":"infinite","join_community(uint256,uint256,string)":"infinite","reset_all()":"infinite","sendMsg(uint256,string,string,uint256)":"infinite","sendReadMsg(uint256,uint256,uint256,string)":"infinite","sendReply(uint256,string,uint256,uint256)":"infinite","set_dao(uint256,string,string)":"infinite","set_goal(uint256,string)":"infinite","set_ideas(uint256,string)":"infinite","update_template(uint256,string)":"infinite"},"internal":{"create_ideas_smart_contract(uint256,uint256,string memory)":"infinite"}},"methodIdentifiers":{"_dao_ids()":"7bbd582d","_dao_uris(uint256)":"27a568b9","_donated(uint256)":"20959ed0","_donations(uint256)":"7fc543ec","_donations_ids()":"ec245802","_feed_ids()":"8ac4110c","_feeds(uint256)":"54a9fb18","_goal_ids()":"13bf4cea","_goal_uris(uint256)":"7f2035d4","_ideas_ids()":"d3791b20","_ideas_uris(uint256)":"468d0c80","_ideas_vote_ids()":"4a797bd7","_join_ids()":"1171b621","_joined_person(uint256)":"330b8f26","_message_ids()":"9077007d","_message_read_ids()":"ca013f17","_reply_ids()":"aa2bf5d3","_smart_contract_ids()":"1b592aeb","_smart_contracts_uris(uint256)":"ff4a37ef","_template_uris(uint256)":"6ecda4ee","_user_badges(uint256)":"a428a47f","add_Feed(string,string)":"bda00335","add_donation(uint256,uint256,uint256,string,string)":"5996278f","all_goal_ideas_votes(uint256)":"1ba44c4c","all_messages(uint256)":"b527d45e","all_read_messages(uint256)":"cace8d46","all_replies(uint256)":"3f87a2f4","create_dao(string,string,string,uint256)":"86ffa45b","create_goal(string,string,uint256,string)":"b39a38bd","create_goal_ideas_vote(uint256,uint256,uint256,string)":"8d6b30a1","create_ideas(string,uint256,string[],uint256,string)":"e1b011a0","dao_uri(uint256)":"5d907da1","getMsgIDs(uint256)":"803f5b9f","getReadMsg(uint256,string)":"cd230809","getReplyIDs(uint256)":"812fae1f","get_all_daos()":"c04fe978","get_all_goals()":"29b56f60","get_all_goals_by_dao_id(string)":"0377d44a","get_all_ideas()":"97ee7606","get_all_ideas_by_goal_id(uint256)":"131d44f2","get_goal_id_by_goal_uri(string)":"1e9ac9f5","get_goal_id_from_ideas_uri(string)":"aa4cdf2a","get_ideas_id_by_ideas_uri(string)":"a1ca9178","get_ideas_votes_from_goal(uint256,uint256)":"4be7adb5","goal_uri(uint256)":"e32acc1a","ideas_uri(uint256)":"8d3d2595","is_person_joined(uint256)":"c7af4ee5","join_community(uint256,uint256,string)":"8c70034a","reset_all()":"b16060a6","sendMsg(uint256,string,string,uint256)":"787f19c7","sendReadMsg(uint256,uint256,uint256,string)":"934c5f00","sendReply(uint256,string,uint256,uint256)":"d9fc52db","set_dao(uint256,string,string)":"881de858","set_goal(uint256,string)":"c29595c5","set_ideas(uint256,string)":"c04e7430","update_template(uint256,string)":"87633eb2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"_dao_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_dao_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dao_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"finished\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_donated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_donations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"donation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_donations_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_feed_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_feeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feed_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"Type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_goal_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_goal_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"dao_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"goal_uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ideas_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_ideas_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ideas_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"donation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ideas_vote_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_join_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_joined_person\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"daoid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_message_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_message_read_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_reply_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_smart_contract_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_smart_contracts_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"smart_contract_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"smart_contract_uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_template_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_user_badges\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"dao\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"joined\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"goal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"ideas\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"donation\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"comment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reply\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"feed_text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"}],\"name\":\"add_Feed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_doantion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userid\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_feed1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_feed2\",\"type\":\"string\"}],\"name\":\"add_donation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_goal_ideas_votes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_messages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sender\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_read_messages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_replies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reply_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_template\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"}],\"name\":\"create_dao\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_user_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_feed\",\"type\":\"string\"}],\"name\":\"create_goal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_user_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_feed\",\"type\":\"string\"}],\"name\":\"create_goal_ideas_vote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"_smart_contracts\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"_user_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_feed\",\"type\":\"string\"}],\"name\":\"create_ideas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"}],\"name\":\"dao_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"}],\"name\":\"getMsgIDs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"name\":\"getReadMsg\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"}],\"name\":\"getReplyIDs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_daos\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_goals\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dao_id\",\"type\":\"string\"}],\"name\":\"get_all_goals_by_dao_id\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_ideas\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"}],\"name\":\"get_all_ideas_by_goal_id\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"}],\"name\":\"get_goal_id_by_goal_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"get_goal_id_from_ideas_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"get_ideas_id_by_ideas_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"}],\"name\":\"get_ideas_votes_from_goal\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"}],\"name\":\"goal_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"}],\"name\":\"ideas_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"person\",\"type\":\"uint256\"}],\"name\":\"is_person_joined\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dao_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"person\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_feed\",\"type\":\"string\"}],\"name\":\"join_community\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reset_all\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_sender\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_user_id\",\"type\":\"uint256\"}],\"name\":\"sendMsg\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_wallet\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"name\":\"sendReadMsg\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_reply\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userid\",\"type\":\"uint256\"}],\"name\":\"sendReply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_uri\",\"type\":\"string\"}],\"name\":\"set_dao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"}],\"name\":\"set_goal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"set_ideas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_template\",\"type\":\"string\"}],\"name\":\"update_template\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PlanetDAO.sol\":\"PlanetDAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"contracts/PlanetDAO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\nimport '@openzeppelin/contracts/utils/Strings.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\n\\r\\ncontract PlanetDAO {\\r\\n    struct dao_uri_struct {\\r\\n        string dao_wallet;\\r\\n        string dao_uri;\\r\\n        string finished;\\r\\n    }\\r\\n    struct goal_uri_struct {\\r\\n        string dao_id;\\r\\n        string goal_uri;\\r\\n    }\\r\\n\\r\\n    struct ideas_uri_struct {\\r\\n        uint256 goal_id;\\r\\n        string ideas_uri;\\r\\n        uint256 donation;\\r\\n    }\\r\\n\\r\\n    struct donation_struct {\\r\\n        uint256 ideas_id;\\r\\n        uint256 userid;\\r\\n        uint256 donation;\\r\\n    }\\r\\n\\r\\n    struct smart_contract_uri_struct {\\r\\n        uint256 smart_contract_id;\\r\\n        uint256 ideas_id;\\r\\n        string smart_contract_uri;\\r\\n    }\\r\\n    struct goal_ideas_votes_struct {\\r\\n        uint256 goal_id;\\r\\n        uint256 ideas_id;\\r\\n        uint256 user_id;\\r\\n    }\\r\\n    struct message_struct {\\r\\n        uint256 message_id;\\r\\n        uint256 ideas_id;\\r\\n        string message;\\r\\n        string sender;\\r\\n    }\\r\\n    struct message_read_struct {\\r\\n        uint256 message_id;\\r\\n        uint256 ideas_id;\\r\\n        uint256 user_id;\\r\\n        string msg_type;\\r\\n    }\\r\\n    struct reply_struct {\\r\\n        uint256 reply_id;\\r\\n        uint256 message_id;\\r\\n        uint256 ideas_id;\\r\\n        string message;\\r\\n    }\\r\\n\\r\\n    struct UnbondingRequest {\\r\\n        int64 completionTime;\\r\\n        uint256 amount;\\r\\n    }\\r\\n\\r\\n    struct join_struct {\\r\\n        uint256 daoid;\\r\\n        uint256 user_id;\\r\\n    }\\r\\n\\r\\n    struct user_badge_struct {\\r\\n        uint256 user_id;\\r\\n        bool dao;\\r\\n        bool joined;\\r\\n        bool goal;\\r\\n        bool ideas;\\r\\n        bool vote;\\r\\n        bool donation;\\r\\n        bool comment;\\r\\n        bool reply;\\r\\n    }\\r\\n    \\r\\n    struct feed_struct {\\r\\n        uint256 feed_id;\\r\\n        uint256 date;\\r\\n        string Type;\\r\\n        string data;\\r\\n    }\\r\\n    uint256 public _dao_ids;\\r\\n    uint256 public _donations_ids;\\r\\n    uint256 public _goal_ids;\\r\\n    uint256 public _ideas_ids;\\r\\n    uint256 public _join_ids;\\r\\n    uint256 public _smart_contract_ids;\\r\\n    uint256 public _ideas_vote_ids;\\r\\n    uint256 public _message_ids;\\r\\n    uint256 public _message_read_ids;\\r\\n    uint256 public _reply_ids;\\r\\n    uint256 public _feed_ids;\\r\\n    mapping(uint256 => dao_uri_struct) public _dao_uris; //_dao_ids              => (Dao)                    Dao Wallet + Dao URI   + Finished\\r\\n    mapping(uint256 => string) public _template_uris; //_dao_ids              => (Dao)                   Template HTML Code\\r\\n    mapping(uint256 => join_struct) public _joined_person; //_join_ids             => (Dao)                  join_struct\\r\\n\\r\\n    mapping(uint256 => goal_uri_struct) public _goal_uris; //_goal_ids             => (Goal)                   Dao ID + Goal URI\\r\\n    mapping(uint256 => ideas_uri_struct) public _ideas_uris; //_ideas_ids            => (Ideas)                  Goal ID + Ideas URI\\r\\n    mapping(uint256 => uint256) public _donated; //uint256            => (Donated to ideas)                amount\\r\\n    mapping(uint256 => feed_struct) public _feeds; //_feed_ids            => (feed_struct)\\r\\n    mapping(uint256 => donation_struct) public _donations; //uint256            => donation_struct\\r\\n    mapping(uint256 => smart_contract_uri_struct) public _smart_contracts_uris; //_smart_contract_ids   => (Ideas Smart contract)   Goal ID + Ideas URI\\r\\n    mapping(uint256 => goal_ideas_votes_struct) public all_goal_ideas_votes; //_ideas_vote_ids       => (Vote)                   Goal ID + Ideas ID + User Id\\r\\n\\r\\n    mapping(uint256 => message_struct) public all_messages; // all_messages        => _message_ids + message_struct\\r\\n\\r\\n    mapping(uint256 => message_read_struct) public all_read_messages; // all_read_messages        => _message_read_ids + message_read_struct\\r\\n\\r\\n    mapping(uint256 => reply_struct) public all_replies; // all_messages        => _reply_ids + reply_struct\\r\\n    mapping(uint256 => user_badge_struct) public _user_badges; //user_id            => user_badge_struct\\r\\n\\r\\n    //Daos\\r\\n    function create_dao(string memory _dao_wallet, string memory _dao_uri, string memory _template,uint256 user_id) public returns (uint256) {\\r\\n        //Create Dao into _dao_uris\\r\\n        _dao_uris[_dao_ids] = dao_uri_struct(_dao_wallet, _dao_uri, 'False');\\r\\n        _template_uris[_dao_ids] = _template;\\r\\n        _user_badges[user_id].dao = true;\\r\\n        _dao_ids++;\\r\\n\\r\\n        return _dao_ids;\\r\\n    }\\r\\n\\r\\n    function update_template(uint256 _dao_id, string memory _template) public {\\r\\n        _template_uris[_dao_id] = _template;\\r\\n    }\\r\\n\\r\\n    function set_dao(uint256 _dao_id, string memory _dao_wallet, string memory _dao_uri) public {\\r\\n        //Set Dao of wallet and uri\\r\\n        _dao_uris[_dao_id].dao_wallet = _dao_wallet;\\r\\n        _dao_uris[_dao_id].dao_uri = _dao_uri;\\r\\n    }\\r\\n\\r\\n    function get_all_daos() public view returns (string[] memory) {\\r\\n        //Getting all doas\\r\\n        string[] memory _StoreInfo = new string[](_dao_ids);\\r\\n        for (uint256 i = 0; i < _dao_ids; i++) {\\r\\n            _StoreInfo[i] = _dao_uris[i].dao_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function dao_uri(uint256 _dao_id) public view returns (string memory) {\\r\\n        //Getting one dao URI\\r\\n        return _dao_uris[_dao_id].dao_uri;\\r\\n    }\\r\\n\\r\\n    function add_Feed(string memory feed_text,string memory _type) public {\\r\\n         _feeds[_feed_ids] = feed_struct(_feed_ids,block.timestamp,_type,feed_text);\\r\\n         _feed_ids++;\\r\\n    }\\r\\n\\r\\n    //Goals\\r\\n    function create_goal(string memory _goal_uri, string memory  _dao_id,uint256 _user_id, string memory _feed) public returns (uint256) {\\r\\n        //Create goal into _goal_uris\\r\\n        _goal_uris[_goal_ids] = goal_uri_struct(_dao_id, _goal_uri);\\r\\n       \\r\\n        _user_badges[_user_id].goal = true;\\r\\n        _goal_ids++;\\r\\n        add_Feed(_feed,\\\"goal\\\");\\r\\n\\r\\n        return _goal_ids;\\r\\n    }\\r\\n\\r\\n    function set_goal(uint256 _goal_id, string memory _goal_uri) public {\\r\\n        //Set goal uri\\r\\n        _goal_uris[_goal_id].goal_uri = _goal_uri;\\r\\n    }\\r\\n\\r\\n    function get_all_goals() public view returns (string[] memory) {\\r\\n        //Getting all goals\\r\\n        string[] memory _StoreInfo = new string[](_goal_ids);\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n            _StoreInfo[i] = _goal_uris[i].goal_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_all_goals_by_dao_id(string memory _dao_id) public view returns (string[] memory) {\\r\\n        //Getting all goals by dao id\\r\\n        string[] memory _StoreInfo = new string[](_goal_ids);\\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n            if (keccak256(bytes(_goal_uris[i].dao_id)) == keccak256(bytes(_dao_id))) {\\r\\n                _StoreInfo[_store_id] = _goal_uris[i].goal_uri;\\r\\n                _store_id++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_goal_id_by_goal_uri(string memory _goal_uri) public view returns (uint256) {\\r\\n        //Getting goal id by uri\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n            if (keccak256(bytes(_goal_uris[i].goal_uri)) == keccak256(bytes(_goal_uri))) return i;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function goal_uri(uint256 _goal_id) public view returns (string memory) {\\r\\n        //Getting one goal URI\\r\\n        return _goal_uris[_goal_id].goal_uri;\\r\\n    }\\r\\n\\r\\n    //Ideas\\r\\n    function create_ideas(string memory _ideas_uri, uint256 _goal_id, string[] memory _smart_contracts,uint256 _user_id, string memory _feed) public returns (uint256) {\\r\\n        //Create ideas into _ideas_uris\\r\\n        _ideas_uris[_ideas_ids] = ideas_uri_struct(_goal_id, _ideas_uri, 0);\\r\\n        _user_badges[_user_id].ideas = true;\\r\\n        _ideas_ids++;\\r\\n\\r\\n        for (uint256 i = 0; i < _smart_contracts.length; i++) {\\r\\n            create_ideas_smart_contract(_ideas_ids, _smart_contract_ids, _smart_contracts[i]);\\r\\n            _smart_contract_ids++;\\r\\n        }\\r\\n        add_Feed(_feed,\\\"idea\\\");\\r\\n\\r\\n        return _ideas_ids;\\r\\n    }\\r\\n\\r\\n    function create_ideas_smart_contract(uint256 _ideas_id, uint256 _smart_contract_id, string memory _smart_contract) private {\\r\\n        _smart_contracts_uris[_smart_contract_id] = smart_contract_uri_struct(_ideas_id, _smart_contract_id, _smart_contract);\\r\\n    }\\r\\n\\r\\n    function set_ideas(uint256 _ideas_id, string memory _ideas_uri) public {\\r\\n        _ideas_uris[_ideas_id].ideas_uri = _ideas_uri;\\r\\n    }\\r\\n\\r\\n    function add_donation(uint256 _ideas_id, uint256 _doantion,  uint256 _userid, string memory _feed1, string memory _feed2) public {\\r\\n      if (_user_badges[_userid].donation == false){\\r\\n        add_Feed(_feed1,\\\"badge\\\");\\r\\n      }\\r\\n      add_Feed(_feed2,\\\"donation\\\");\\r\\n      \\r\\n      _user_badges[_userid].donation = true;\\r\\n        _ideas_uris[_ideas_id].donation += _doantion;\\r\\n        _donated[_userid] += _doantion;\\r\\n        _donations[_donations_ids] = donation_struct(_ideas_id, _userid, _doantion);\\r\\n        _donations_ids++;\\r\\n\\r\\n        \\r\\n    }\\r\\n\\r\\n    function join_community(uint256 dao_id, uint256 person, string memory _feed) public {\\r\\n        _user_badges[person].joined = true;\\r\\n        _joined_person[_join_ids] = join_struct({daoid: dao_id, user_id: person});\\r\\n        _join_ids++;\\r\\n         add_Feed(_feed,\\\"join\\\");\\r\\n\\r\\n\\r\\n    }\\r\\n\\r\\n    function is_person_joined( uint256 person) public view returns (bool) {\\r\\n \\r\\n        for (uint256 i = 0; i < _join_ids; i++) {\\r\\n            if (_joined_person[i].user_id == person) return true;\\r\\n        }\\r\\n\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function get_all_ideas() public view returns (string[] memory) {\\r\\n        //Getting all ideas\\r\\n        string[] memory _StoreInfo = new string[](_ideas_ids);\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            _StoreInfo[i] = _ideas_uris[i].ideas_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_all_ideas_by_goal_id(uint256 _goal_id) public view returns (string[] memory) {\\r\\n        //Getting all ideas by goal id\\r\\n        string[] memory _StoreInfo = new string[](_ideas_ids);\\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            if (_ideas_uris[i].goal_id == _goal_id) _StoreInfo[_store_id] = _ideas_uris[i].ideas_uri;\\r\\n            _store_id++;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_ideas_id_by_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\\r\\n        //Getting ideas id by uri\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return i;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function get_goal_id_from_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\\r\\n        //Getting ideas id by uri\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return _ideas_uris[i].goal_id;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function ideas_uri(uint256 _ideas_id) public view returns (string memory) {\\r\\n        //Getting one ideas URI\\r\\n        return _ideas_uris[_ideas_id].ideas_uri;\\r\\n    }\\r\\n\\r\\n    //Votes\\r\\n    function create_goal_ideas_vote(uint256 _goal_id, uint256 _ideas_id, uint256 _user_id, string memory _feed) public returns (uint256) {\\r\\n         _user_badges[_user_id].vote = true;\\r\\n        //Create votes into all_goal_ideas_votes\\r\\n        all_goal_ideas_votes[_ideas_vote_ids] = goal_ideas_votes_struct(_goal_id, _ideas_id, _user_id);\\r\\n        _ideas_vote_ids++;\\r\\n        add_Feed(_feed,\\\"vote\\\");\\r\\n\\r\\n        return _ideas_vote_ids;\\r\\n    }\\r\\n\\r\\n    function get_ideas_votes_from_goal(uint256 _goal_id, uint256 _ideas_id) public view returns (uint256[] memory ) {\\r\\n        //gets all ideas votes from goal\\r\\n        uint256[] memory _StoreInfo = new uint256[](_ideas_vote_ids);\\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _ideas_vote_ids; i++) {\\r\\n            if (all_goal_ideas_votes[i].goal_id == _goal_id && all_goal_ideas_votes[i].ideas_id == _ideas_id) _StoreInfo[_store_id] = all_goal_ideas_votes[i].user_id;\\r\\n            _store_id++;\\r\\n        }\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    //Messages\\r\\n    function sendMsg(uint256 _ideas_id, string memory _message, string memory _sender, uint256 _user_id) public returns (uint256) {\\r\\n            _user_badges[_user_id].comment = true;\\r\\n        //Create messsage into all_messages\\r\\n        all_messages[_message_ids] = message_struct(_message_ids, _ideas_id, _message, _sender);\\r\\n        _message_ids++;\\r\\n\\r\\n        return _message_ids;\\r\\n    }\\r\\n\\r\\n    function getMsgIDs(uint256 ideas_id) public view returns (uint256[] memory) {\\r\\n        //Getting all messages ids by idea id\\r\\n        uint256[] memory _All_Ideas_Messages = new uint256[](_message_ids);\\r\\n        uint256 _msg_id;\\r\\n        for (uint256 i = 0; i < _message_ids; i++) {\\r\\n            if (all_messages[i].ideas_id == ideas_id) {\\r\\n                _All_Ideas_Messages[_msg_id] = all_messages[i].message_id;\\r\\n                _msg_id++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _All_Ideas_Messages;\\r\\n    }\\r\\n\\r\\n    function sendReply(uint256 _message_id, string memory _reply,uint256 ideas_id,uint256 _userid) public returns (uint256) {\\r\\n          _user_badges[_userid].reply = true;\\r\\n        //Create reply into all_replies\\r\\n        all_replies[_reply_ids] = reply_struct(_reply_ids, _message_id,ideas_id, _reply);\\r\\n        _reply_ids++;\\r\\n\\r\\n        return _reply_ids;\\r\\n    }\\r\\n\\r\\n    function getReplyIDs(uint256 message_id) public view returns (uint256[] memory) {\\r\\n        //Getting all messages ids by idea id\\r\\n        uint256[] memory _All_Messages_Replys = new uint256[](_reply_ids);\\r\\n        uint256 _reply_id;\\r\\n        for (uint256 i = 0; i < _reply_ids; i++) {\\r\\n            if (all_replies[i].message_id == message_id) {\\r\\n                _All_Messages_Replys[_reply_id] = all_replies[i].reply_id;\\r\\n                _reply_id++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return _All_Messages_Replys;\\r\\n    }\\r\\n\\r\\n    function sendReadMsg(uint256 _message_id, uint256 _ideas_id,uint256 _wallet, string memory msg_type) public returns (uint256) {\\r\\n        //Create messsage into all_messages\\r\\n        all_read_messages[_message_read_ids] = message_read_struct(_message_id, _ideas_id, _wallet,msg_type);\\r\\n        _message_read_ids++;\\r\\n\\r\\n        return _message_read_ids;\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n  function getReadMsg(uint256 _message_id, string memory msg_type)  public view returns (bool) {\\r\\n       \\r\\n       bool read = false;\\r\\n        for (uint256 i = 0; i < _message_read_ids; i++) {\\r\\n            if (all_read_messages[i].message_id == _message_id && keccak256(bytes(msg_type)) == keccak256(bytes(all_read_messages[i].msg_type))) {\\r\\n               read = true; \\r\\n            }\\r\\n        }\\r\\n\\r\\n        return read;\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n    function reset_all() public {\\r\\n        for (uint256 i = 0; i < _dao_ids; i++) delete _dao_uris[i];\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) delete _goal_uris[i];\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) delete _ideas_uris[i];\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) delete _smart_contracts_uris[i];\\r\\n        for (uint256 i = 0; i < _message_ids; i++) delete all_messages[i];\\r\\n        for (uint256 i = 0; i < _reply_ids; i++) delete all_replies[i];\\r\\n        for (uint256 i = 0; i < _ideas_vote_ids; i++) delete all_goal_ideas_votes[i];\\r\\n        _dao_ids = 0;\\r\\n        _goal_ids = 0;\\r\\n        _ideas_ids = 0;\\r\\n        _message_ids = 0;\\r\\n        _reply_ids = 0;\\r\\n        _ideas_vote_ids = 0;\\r\\n    }\\r\\n\\r\\n   \\r\\n}\\r\\n\",\"keccak256\":\"0xb26fdb300b35d6201e858c10834745c9c8d21b260bd5b309bbd2b62ee036ef6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2431,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_dao_ids","offset":0,"slot":"0","type":"t_uint256"},{"astId":2433,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_donations_ids","offset":0,"slot":"1","type":"t_uint256"},{"astId":2435,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_goal_ids","offset":0,"slot":"2","type":"t_uint256"},{"astId":2437,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_ideas_ids","offset":0,"slot":"3","type":"t_uint256"},{"astId":2439,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_join_ids","offset":0,"slot":"4","type":"t_uint256"},{"astId":2441,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_smart_contract_ids","offset":0,"slot":"5","type":"t_uint256"},{"astId":2443,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_ideas_vote_ids","offset":0,"slot":"6","type":"t_uint256"},{"astId":2445,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_message_ids","offset":0,"slot":"7","type":"t_uint256"},{"astId":2447,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_message_read_ids","offset":0,"slot":"8","type":"t_uint256"},{"astId":2449,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_reply_ids","offset":0,"slot":"9","type":"t_uint256"},{"astId":2451,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_feed_ids","offset":0,"slot":"10","type":"t_uint256"},{"astId":2456,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_dao_uris","offset":0,"slot":"11","type":"t_mapping(t_uint256,t_struct(dao_uri_struct)2331_storage)"},{"astId":2460,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_template_uris","offset":0,"slot":"12","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":2465,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_joined_person","offset":0,"slot":"13","type":"t_mapping(t_uint256,t_struct(join_struct)2401_storage)"},{"astId":2470,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_goal_uris","offset":0,"slot":"14","type":"t_mapping(t_uint256,t_struct(goal_uri_struct)2336_storage)"},{"astId":2475,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_ideas_uris","offset":0,"slot":"15","type":"t_mapping(t_uint256,t_struct(ideas_uri_struct)2343_storage)"},{"astId":2479,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_donated","offset":0,"slot":"16","type":"t_mapping(t_uint256,t_uint256)"},{"astId":2484,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_feeds","offset":0,"slot":"17","type":"t_mapping(t_uint256,t_struct(feed_struct)2429_storage)"},{"astId":2489,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_donations","offset":0,"slot":"18","type":"t_mapping(t_uint256,t_struct(donation_struct)2350_storage)"},{"astId":2494,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_smart_contracts_uris","offset":0,"slot":"19","type":"t_mapping(t_uint256,t_struct(smart_contract_uri_struct)2357_storage)"},{"astId":2499,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"all_goal_ideas_votes","offset":0,"slot":"20","type":"t_mapping(t_uint256,t_struct(goal_ideas_votes_struct)2364_storage)"},{"astId":2504,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"all_messages","offset":0,"slot":"21","type":"t_mapping(t_uint256,t_struct(message_struct)2373_storage)"},{"astId":2509,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"all_read_messages","offset":0,"slot":"22","type":"t_mapping(t_uint256,t_struct(message_read_struct)2382_storage)"},{"astId":2514,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"all_replies","offset":0,"slot":"23","type":"t_mapping(t_uint256,t_struct(reply_struct)2391_storage)"},{"astId":2519,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_user_badges","offset":0,"slot":"24","type":"t_mapping(t_uint256,t_struct(user_badge_struct)2420_storage)"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_uint256,t_struct(dao_uri_struct)2331_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.dao_uri_struct)","numberOfBytes":"32","value":"t_struct(dao_uri_struct)2331_storage"},"t_mapping(t_uint256,t_struct(donation_struct)2350_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.donation_struct)","numberOfBytes":"32","value":"t_struct(donation_struct)2350_storage"},"t_mapping(t_uint256,t_struct(feed_struct)2429_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.feed_struct)","numberOfBytes":"32","value":"t_struct(feed_struct)2429_storage"},"t_mapping(t_uint256,t_struct(goal_ideas_votes_struct)2364_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct)","numberOfBytes":"32","value":"t_struct(goal_ideas_votes_struct)2364_storage"},"t_mapping(t_uint256,t_struct(goal_uri_struct)2336_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.goal_uri_struct)","numberOfBytes":"32","value":"t_struct(goal_uri_struct)2336_storage"},"t_mapping(t_uint256,t_struct(ideas_uri_struct)2343_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct)","numberOfBytes":"32","value":"t_struct(ideas_uri_struct)2343_storage"},"t_mapping(t_uint256,t_struct(join_struct)2401_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.join_struct)","numberOfBytes":"32","value":"t_struct(join_struct)2401_storage"},"t_mapping(t_uint256,t_struct(message_read_struct)2382_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.message_read_struct)","numberOfBytes":"32","value":"t_struct(message_read_struct)2382_storage"},"t_mapping(t_uint256,t_struct(message_struct)2373_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.message_struct)","numberOfBytes":"32","value":"t_struct(message_struct)2373_storage"},"t_mapping(t_uint256,t_struct(reply_struct)2391_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.reply_struct)","numberOfBytes":"32","value":"t_struct(reply_struct)2391_storage"},"t_mapping(t_uint256,t_struct(smart_contract_uri_struct)2357_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.smart_contract_uri_struct)","numberOfBytes":"32","value":"t_struct(smart_contract_uri_struct)2357_storage"},"t_mapping(t_uint256,t_struct(user_badge_struct)2420_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.user_badge_struct)","numberOfBytes":"32","value":"t_struct(user_badge_struct)2420_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(dao_uri_struct)2331_storage":{"encoding":"inplace","label":"struct PlanetDAO.dao_uri_struct","members":[{"astId":2326,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"dao_wallet","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2328,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"dao_uri","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2330,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"finished","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(donation_struct)2350_storage":{"encoding":"inplace","label":"struct PlanetDAO.donation_struct","members":[{"astId":2345,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2347,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"userid","offset":0,"slot":"1","type":"t_uint256"},{"astId":2349,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"donation","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(feed_struct)2429_storage":{"encoding":"inplace","label":"struct PlanetDAO.feed_struct","members":[{"astId":2422,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"feed_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2424,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"date","offset":0,"slot":"1","type":"t_uint256"},{"astId":2426,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"Type","offset":0,"slot":"2","type":"t_string_storage"},{"astId":2428,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"data","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(goal_ideas_votes_struct)2364_storage":{"encoding":"inplace","label":"struct PlanetDAO.goal_ideas_votes_struct","members":[{"astId":2359,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"goal_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2361,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":2363,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"user_id","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(goal_uri_struct)2336_storage":{"encoding":"inplace","label":"struct PlanetDAO.goal_uri_struct","members":[{"astId":2333,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"dao_id","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2335,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"goal_uri","offset":0,"slot":"1","type":"t_string_storage"}],"numberOfBytes":"64"},"t_struct(ideas_uri_struct)2343_storage":{"encoding":"inplace","label":"struct PlanetDAO.ideas_uri_struct","members":[{"astId":2338,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"goal_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2340,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_uri","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2342,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"donation","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(join_struct)2401_storage":{"encoding":"inplace","label":"struct PlanetDAO.join_struct","members":[{"astId":2398,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"daoid","offset":0,"slot":"0","type":"t_uint256"},{"astId":2400,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"user_id","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_struct(message_read_struct)2382_storage":{"encoding":"inplace","label":"struct PlanetDAO.message_read_struct","members":[{"astId":2375,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"message_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2377,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":2379,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"user_id","offset":0,"slot":"2","type":"t_uint256"},{"astId":2381,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"msg_type","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(message_struct)2373_storage":{"encoding":"inplace","label":"struct PlanetDAO.message_struct","members":[{"astId":2366,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"message_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2368,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":2370,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"message","offset":0,"slot":"2","type":"t_string_storage"},{"astId":2372,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"sender","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(reply_struct)2391_storage":{"encoding":"inplace","label":"struct PlanetDAO.reply_struct","members":[{"astId":2384,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"reply_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2386,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"message_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":2388,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"2","type":"t_uint256"},{"astId":2390,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"message","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(smart_contract_uri_struct)2357_storage":{"encoding":"inplace","label":"struct PlanetDAO.smart_contract_uri_struct","members":[{"astId":2352,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"smart_contract_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2354,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":2356,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"smart_contract_uri","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(user_badge_struct)2420_storage":{"encoding":"inplace","label":"struct PlanetDAO.user_badge_struct","members":[{"astId":2403,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"user_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2405,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"dao","offset":0,"slot":"1","type":"t_bool"},{"astId":2407,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"joined","offset":1,"slot":"1","type":"t_bool"},{"astId":2409,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"goal","offset":2,"slot":"1","type":"t_bool"},{"astId":2411,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas","offset":3,"slot":"1","type":"t_bool"},{"astId":2413,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"vote","offset":4,"slot":"1","type":"t_bool"},{"astId":2415,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"donation","offset":5,"slot":"1","type":"t_bool"},{"astId":2417,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"comment","offset":6,"slot":"1","type":"t_bool"},{"astId":2419,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"reply","offset":7,"slot":"1","type":"t_bool"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/precompiles/Batch.sol":{"Batch":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"}],"name":"SubcallFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"}],"name":"SubcallSucceeded","type":"event"},{"inputs":[{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"uint256[]","name":"value","type":"uint256[]"},{"internalType":"bytes[]","name":"callData","type":"bytes[]"},{"internalType":"uint64[]","name":"gasLimit","type":"uint64[]"}],"name":"batchAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"uint256[]","name":"value","type":"uint256[]"},{"internalType":"bytes[]","name":"callData","type":"bytes[]"},{"internalType":"uint64[]","name":"gasLimit","type":"uint64[]"}],"name":"batchSome","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"uint256[]","name":"value","type":"uint256[]"},{"internalType":"bytes[]","name":"callData","type":"bytes[]"},{"internalType":"uint64[]","name":"gasLimit","type":"uint64[]"}],"name":"batchSomeUntilFailure","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"The Moonbeam Team","custom:address":"0x0000000000000000000000000000000000000808","details":"Allows to perform multiple calls throught one call to the precompile. Can be used by EOA to do multiple calls in a single transaction.","kind":"dev","methods":{"batchAll(address[],uint256[],bytes[],uint64[])":{"custom:selector":"96e292b8","details":"Batch multiple calls into a single transaction. All calls are performed from the address calling this precompile. In case of one subcall reverting, the entire batch will revert.","params":{"callData":"Call data for each `to` address. If array is shorter than \"to\" then additional calls will be performed with an empty call data.","gasLimit":"Gas limit for each `to` address. Use 0 to forward all the remaining gas. If array is shorter than \"to\" then the remaining gas available will be used.","to":"List of addresses to call.","value":"List of values for each subcall. If array is shorter than \"to\" then additional calls will be performed with a value of 0."}},"batchSome(address[],uint256[],bytes[],uint64[])":{"custom:selector":"79df4b9c","details":"Batch multiple calls into a single transaction. All calls are performed from the address calling this precompile. In case of one subcall reverting following subcalls will still be attempted.","params":{"callData":"Call data for each `to` address. If array is shorter than \"to\" then additional calls will be performed with an empty call data.","gasLimit":"Gas limit for each `to` address. Use 0 to forward all the remaining gas. If array is shorter than \"to\" then the remaining gas available will be used.","to":"List of addresses to call.","value":"List of values for each subcall. If array is shorter than \"to\" then additional calls will be performed with a value of 0."}},"batchSomeUntilFailure(address[],uint256[],bytes[],uint64[])":{"custom:selector":"cf0491c7","details":"Batch multiple calls into a single transaction. All calls are performed from the address calling this precompile. In case of one subcall reverting, no more subcalls will be executed but the batch transaction will succeed. Use batchAll to revert on any subcall revert.","params":{"callData":"Call data for each `to` address. If array is shorter than \"to\" then additional calls will be performed with an empty call data.","gasLimit":"Gas limit for each `to` address. Use 0 to forward all the remaining gas. If array is shorter than \"to\" then the remaining gas available will be used.","to":"List of addresses to call.","value":"List of values for each subcall. If array is shorter than \"to\" then additional calls will be performed with a value of 0."}}},"title":"Batch precompile","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"batchAll(address[],uint256[],bytes[],uint64[])":"96e292b8","batchSome(address[],uint256[],bytes[],uint64[])":"79df4b9c","batchSomeUntilFailure(address[],uint256[],bytes[],uint64[])":"cf0491c7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"SubcallFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"SubcallSucceeded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"callData\",\"type\":\"bytes[]\"},{\"internalType\":\"uint64[]\",\"name\":\"gasLimit\",\"type\":\"uint64[]\"}],\"name\":\"batchAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"callData\",\"type\":\"bytes[]\"},{\"internalType\":\"uint64[]\",\"name\":\"gasLimit\",\"type\":\"uint64[]\"}],\"name\":\"batchSome\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"callData\",\"type\":\"bytes[]\"},{\"internalType\":\"uint64[]\",\"name\":\"gasLimit\",\"type\":\"uint64[]\"}],\"name\":\"batchSomeUntilFailure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Moonbeam Team\",\"custom:address\":\"0x0000000000000000000000000000000000000808\",\"details\":\"Allows to perform multiple calls throught one call to the precompile. Can be used by EOA to do multiple calls in a single transaction.\",\"kind\":\"dev\",\"methods\":{\"batchAll(address[],uint256[],bytes[],uint64[])\":{\"custom:selector\":\"96e292b8\",\"details\":\"Batch multiple calls into a single transaction. All calls are performed from the address calling this precompile. In case of one subcall reverting, the entire batch will revert.\",\"params\":{\"callData\":\"Call data for each `to` address. If array is shorter than \\\"to\\\" then additional calls will be performed with an empty call data.\",\"gasLimit\":\"Gas limit for each `to` address. Use 0 to forward all the remaining gas. If array is shorter than \\\"to\\\" then the remaining gas available will be used.\",\"to\":\"List of addresses to call.\",\"value\":\"List of values for each subcall. If array is shorter than \\\"to\\\" then additional calls will be performed with a value of 0.\"}},\"batchSome(address[],uint256[],bytes[],uint64[])\":{\"custom:selector\":\"79df4b9c\",\"details\":\"Batch multiple calls into a single transaction. All calls are performed from the address calling this precompile. In case of one subcall reverting following subcalls will still be attempted.\",\"params\":{\"callData\":\"Call data for each `to` address. If array is shorter than \\\"to\\\" then additional calls will be performed with an empty call data.\",\"gasLimit\":\"Gas limit for each `to` address. Use 0 to forward all the remaining gas. If array is shorter than \\\"to\\\" then the remaining gas available will be used.\",\"to\":\"List of addresses to call.\",\"value\":\"List of values for each subcall. If array is shorter than \\\"to\\\" then additional calls will be performed with a value of 0.\"}},\"batchSomeUntilFailure(address[],uint256[],bytes[],uint64[])\":{\"custom:selector\":\"cf0491c7\",\"details\":\"Batch multiple calls into a single transaction. All calls are performed from the address calling this precompile. In case of one subcall reverting, no more subcalls will be executed but the batch transaction will succeed. Use batchAll to revert on any subcall revert.\",\"params\":{\"callData\":\"Call data for each `to` address. If array is shorter than \\\"to\\\" then additional calls will be performed with an empty call data.\",\"gasLimit\":\"Gas limit for each `to` address. Use 0 to forward all the remaining gas. If array is shorter than \\\"to\\\" then the remaining gas available will be used.\",\"to\":\"List of addresses to call.\",\"value\":\"List of values for each subcall. If array is shorter than \\\"to\\\" then additional calls will be performed with a value of 0.\"}}},\"title\":\"Batch precompile\",\"version\":1},\"userdoc\":{\"events\":{\"SubcallFailed(uint256)\":{\"notice\":\"Emitted when a subcall fails.\"},\"SubcallSucceeded(uint256)\":{\"notice\":\"Emitted when a subcall succeeds.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/Batch.sol\":\"Batch\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/precompiles/Batch.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\r\\npragma solidity >=0.8.3;\\r\\n\\r\\n/// @dev The Batch contract's address.\\r\\naddress constant BATCH_ADDRESS = 0x0000000000000000000000000000000000000808;\\r\\n\\r\\n/// @dev The Batch contract's instance.\\r\\nBatch constant BATCH_CONTRACT = Batch(BATCH_ADDRESS);\\r\\n\\r\\n/// @author The Moonbeam Team\\r\\n/// @title Batch precompile\\r\\n/// @dev Allows to perform multiple calls throught one call to the precompile.\\r\\n/// Can be used by EOA to do multiple calls in a single transaction.\\r\\n/// @custom:address 0x0000000000000000000000000000000000000808\\r\\ninterface Batch {\\r\\n    /// @dev Batch multiple calls into a single transaction.\\r\\n    /// All calls are performed from the address calling this precompile.\\r\\n    ///\\r\\n    /// In case of one subcall reverting following subcalls will still be attempted.\\r\\n    ///\\r\\n    /// @param to List of addresses to call.\\r\\n    /// @param value List of values for each subcall. If array is shorter than \\\"to\\\" then additional\\r\\n    /// calls will be performed with a value of 0.\\r\\n    /// @param callData Call data for each `to` address. If array is shorter than \\\"to\\\" then\\r\\n    /// additional calls will be performed with an empty call data.\\r\\n    /// @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\\r\\n    /// If array is shorter than \\\"to\\\" then the remaining gas available will be used.\\r\\n    /// @custom:selector 79df4b9c\\r\\n    function batchSome(\\r\\n        address[] memory to,\\r\\n        uint256[] memory value,\\r\\n        bytes[] memory callData,\\r\\n        uint64[] memory gasLimit\\r\\n    ) external;\\r\\n\\r\\n    /// @dev Batch multiple calls into a single transaction.\\r\\n    /// All calls are performed from the address calling this precompile.\\r\\n    ///\\r\\n    /// In case of one subcall reverting, no more subcalls will be executed but\\r\\n    /// the batch transaction will succeed. Use batchAll to revert on any subcall revert.\\r\\n    ///\\r\\n    /// @param to List of addresses to call.\\r\\n    /// @param value List of values for each subcall. If array is shorter than \\\"to\\\" then additional\\r\\n    /// calls will be performed with a value of 0.\\r\\n    /// @param callData Call data for each `to` address. If array is shorter than \\\"to\\\" then\\r\\n    /// additional calls will be performed with an empty call data.\\r\\n    /// @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\\r\\n    /// If array is shorter than \\\"to\\\" then the remaining gas available will be used.\\r\\n    /// @custom:selector cf0491c7\\r\\n    function batchSomeUntilFailure(\\r\\n        address[] memory to,\\r\\n        uint256[] memory value,\\r\\n        bytes[] memory callData,\\r\\n        uint64[] memory gasLimit\\r\\n    ) external;\\r\\n\\r\\n    /// @dev Batch multiple calls into a single transaction.\\r\\n    /// All calls are performed from the address calling this precompile.\\r\\n    ///\\r\\n    /// In case of one subcall reverting, the entire batch will revert.\\r\\n    ///\\r\\n    /// @param to List of addresses to call.\\r\\n    /// @param value List of values for each subcall. If array is shorter than \\\"to\\\" then additional\\r\\n    /// calls will be performed with a value of 0.\\r\\n    /// @param callData Call data for each `to` address. If array is shorter than \\\"to\\\" then\\r\\n    /// additional calls will be performed with an empty call data.\\r\\n    /// @param gasLimit Gas limit for each `to` address. Use 0 to forward all the remaining gas.\\r\\n    /// If array is shorter than \\\"to\\\" then the remaining gas available will be used.\\r\\n    /// @custom:selector 96e292b8\\r\\n    function batchAll(\\r\\n        address[] memory to,\\r\\n        uint256[] memory value,\\r\\n        bytes[] memory callData,\\r\\n        uint64[] memory gasLimit\\r\\n    ) external;\\r\\n\\r\\n    /// Emitted when a subcall succeeds.\\r\\n    event SubcallSucceeded(uint256 index);\\r\\n\\r\\n    /// Emitted when a subcall fails.\\r\\n    event SubcallFailed(uint256 index);\\r\\n}\",\"keccak256\":\"0x5f7bd6403e434c7e9c199c362e8c4ad94a3b874ac67414dd183924ee80b3a62e\",\"license\":\"GPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"SubcallFailed(uint256)":{"notice":"Emitted when a subcall fails."},"SubcallSucceeded(uint256)":{"notice":"Emitted when a subcall succeeds."}},"kind":"user","methods":{},"version":1}}},"contracts/precompiles/InterchainAccountRouter.sol":{"IInterchainAccountRouter":{"abi":[{"inputs":[{"internalType":"uint32","name":"_destinationDomain","type":"uint32"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"callRemote","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_destination","type":"uint32"},{"internalType":"address","name":"_owner","type":"address"}],"name":"getRemoteInterchainAccount","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"callRemote(uint32,address,uint256,bytes)":"1ddce514","getRemoteInterchainAccount(uint32,address)":"0e258285"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"callRemote\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_destination\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getRemoteInterchainAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/InterchainAccountRouter.sol\":\"IInterchainAccountRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"contracts/precompiles/InterchainAccountRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\r\\npragma solidity >=0.6.11;\\r\\n\\r\\nimport {CallLib} from \\\"./libs/Call.sol\\\";\\r\\n\\r\\ninterface IInterchainAccountRouter {\\r\\n    function callRemote(\\r\\n        uint32 _destinationDomain,\\r\\n         address to,\\r\\n        uint256 value,\\r\\n        bytes memory data\\r\\n    ) external returns (bytes32);\\r\\n\\r\\n    function getRemoteInterchainAccount(uint32 _destination, address _owner)\\r\\n        external\\r\\n        view\\r\\n        returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x9b222046a86ee642a1b88cdf9406143ecf27e62e0c08d4b477e61f69cf5ef3c8\",\"license\":\"MIT OR Apache-2.0\"},\"contracts/precompiles/libs/Call.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\r\\npragma solidity ^0.8.13;\\r\\n\\r\\nimport {Address} from \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\r\\n\\r\\nimport {TypeCasts} from \\\"./TypeCasts.sol\\\";\\r\\n\\r\\nlibrary CallLib {\\r\\n    struct StaticCall {\\r\\n        // supporting non EVM targets\\r\\n        bytes32 to;\\r\\n        bytes data;\\r\\n    }\\r\\n\\r\\n    struct Call {\\r\\n        // supporting non EVM targets\\r\\n        bytes32 to;\\r\\n        uint256 value;\\r\\n        bytes data;\\r\\n    }\\r\\n\\r\\n    struct StaticCallWithCallback {\\r\\n        StaticCall _call;\\r\\n        bytes callback;\\r\\n    }\\r\\n\\r\\n    function call(Call memory _call)\\r\\n        internal\\r\\n        returns (bytes memory returnData)\\r\\n    {\\r\\n        return\\r\\n            Address.functionCallWithValue(\\r\\n                TypeCasts.bytes32ToAddress(_call.to),\\r\\n                _call.data,\\r\\n                _call.value\\r\\n            );\\r\\n    }\\r\\n\\r\\n    function staticcall(StaticCall memory _call)\\r\\n        private\\r\\n        view\\r\\n        returns (bytes memory)\\r\\n    {\\r\\n        return\\r\\n            Address.functionStaticCall(\\r\\n                TypeCasts.bytes32ToAddress(_call.to),\\r\\n                _call.data\\r\\n            );\\r\\n    }\\r\\n\\r\\n    function staticcall(StaticCallWithCallback memory _call)\\r\\n        internal\\r\\n        view\\r\\n        returns (bytes memory callback)\\r\\n    {\\r\\n        return bytes.concat(_call.callback, staticcall(_call._call));\\r\\n    }\\r\\n\\r\\n    function multicall(Call[] memory calls) internal {\\r\\n        uint256 i = 0;\\r\\n        uint256 len = calls.length;\\r\\n        while (i < len) {\\r\\n            call(calls[i]);\\r\\n            unchecked {\\r\\n                ++i;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function multistaticcall(StaticCallWithCallback[] memory _calls)\\r\\n        internal\\r\\n        view\\r\\n        returns (bytes[] memory)\\r\\n    {\\r\\n        uint256 i = 0;\\r\\n        uint256 len = _calls.length;\\r\\n        bytes[] memory callbacks = new bytes[](len);\\r\\n        while (i < len) {\\r\\n            callbacks[i] = staticcall(_calls[i]);\\r\\n            unchecked {\\r\\n                ++i;\\r\\n            }\\r\\n        }\\r\\n        return callbacks;\\r\\n    }\\r\\n\\r\\n    function multicallto(address to, bytes[] memory calls) internal {\\r\\n        uint256 i = 0;\\r\\n        uint256 len = calls.length;\\r\\n        while (i < len) {\\r\\n            Address.functionCall(to, calls[i]);\\r\\n            unchecked {\\r\\n                ++i;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function build(bytes32 to, bytes memory data)\\r\\n        internal\\r\\n        pure\\r\\n        returns (StaticCall memory)\\r\\n    {\\r\\n        return StaticCall(to, data);\\r\\n    }\\r\\n\\r\\n    function build(address to, bytes memory data)\\r\\n        internal\\r\\n        pure\\r\\n        returns (StaticCall memory)\\r\\n    {\\r\\n        return build(TypeCasts.addressToBytes32(to), data);\\r\\n    }\\r\\n\\r\\n    function build(\\r\\n        bytes32 to,\\r\\n        uint256 value,\\r\\n        bytes memory data\\r\\n    ) internal pure returns (Call memory) {\\r\\n        return Call(to, value, data);\\r\\n    }\\r\\n\\r\\n    function build(\\r\\n        address to,\\r\\n        uint256 value,\\r\\n        bytes memory data\\r\\n    ) internal pure returns (Call memory) {\\r\\n        return Call(TypeCasts.addressToBytes32(to), value, data);\\r\\n    }\\r\\n\\r\\n    function build(\\r\\n        bytes32 to,\\r\\n        bytes memory data,\\r\\n        bytes memory callback\\r\\n    ) internal pure returns (StaticCallWithCallback memory) {\\r\\n        return StaticCallWithCallback(build(to, data), callback);\\r\\n    }\\r\\n\\r\\n    function build(\\r\\n        address to,\\r\\n        bytes memory data,\\r\\n        bytes memory callback\\r\\n    ) internal pure returns (StaticCallWithCallback memory) {\\r\\n        return StaticCallWithCallback(build(to, data), callback);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xd81d486e87fc6872068ff8454dd3e626ef5c012f4fb51ed871f1082d462ad2f7\",\"license\":\"Apache-2.0\"},\"contracts/precompiles/libs/TypeCasts.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\r\\npragma solidity >=0.6.11;\\r\\n\\r\\nlibrary TypeCasts {\\r\\n    // alignment preserving cast\\r\\n    function addressToBytes32(address _addr) internal pure returns (bytes32) {\\r\\n        return bytes32(uint256(uint160(_addr)));\\r\\n    }\\r\\n\\r\\n    // alignment preserving cast\\r\\n    function bytes32ToAddress(bytes32 _buf) internal pure returns (address) {\\r\\n        return address(uint160(uint256(_buf)));\\r\\n    }\\r\\n}\",\"keccak256\":\"0x2b223c8b1cd9ff5d73208abe2f0ef563631810881922fb14c276d5a8fe08e811\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/precompiles/InterchainGasPaymaster.sol":{"IInterchainGasPaymaster":{"abi":[{"inputs":[{"internalType":"bytes32","name":"_messageId","type":"bytes32"},{"internalType":"uint32","name":"_destinationDomain","type":"uint32"},{"internalType":"uint256","name":"_gasAmount","type":"uint256"},{"internalType":"address","name":"_refundAddress","type":"address"}],"name":"payForGas","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"payForGas(bytes32,uint32,uint256,address)":"11bf2c18"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"_destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_gasAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_refundAddress\",\"type\":\"address\"}],\"name\":\"payForGas\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/InterchainGasPaymaster.sol\":\"IInterchainGasPaymaster\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/precompiles/InterchainGasPaymaster.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\r\\npragma solidity >=0.6.11;\\r\\n\\r\\ninterface IInterchainGasPaymaster {\\r\\n    function payForGas(\\r\\n        bytes32 _messageId,\\r\\n         uint32 _destinationDomain,\\r\\n        uint256 _gasAmount,\\r\\n        address _refundAddress\\r\\n    ) external payable;\\r\\n}\\r\\n\",\"keccak256\":\"0xaf58aa240b9701d1ae5d7498b8214f8301dda90a95636f4dd78f8ea01cf1c84b\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/precompiles/PriceFeed.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"decimals()\":{\"notice\":\"Returns the decimals to offset on the getLatestPrice call\"},\"description()\":{\"notice\":\"Returns the description of the underlying price feed aggregator\"},\"getRoundData(uint80)\":{\"notice\":\"Returns price data about a specific round\"},\"latestRoundData()\":{\"notice\":\"Returns price data from the latest round\"},\"version()\":{\"notice\":\"Returns the version number representing the type of aggregator the proxy points to\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/PriceFeed.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/precompiles/PriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface AggregatorV3Interface {\\r\\n    /**\\r\\n     * Returns the decimals to offset on the getLatestPrice call\\r\\n     */\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    /**\\r\\n     * Returns the description of the underlying price feed aggregator\\r\\n     */\\r\\n    function description() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * Returns the version number representing the type of aggregator the proxy points to\\r\\n     */\\r\\n    function version() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * Returns price data about a specific round\\r\\n     */\\r\\n    function getRoundData(uint80 _roundId) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\r\\n\\r\\n    /**\\r\\n     * Returns price data from the latest round\\r\\n     */\\r\\n    function latestRoundData() external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\r\\n}\\r\\n\",\"keccak256\":\"0xa93adb3129b5c01e144ac37caed34fbf6d5150d68cda73ad0d4971f6cc49e121\",\"license\":\"GPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"decimals()":{"notice":"Returns the decimals to offset on the getLatestPrice call"},"description()":{"notice":"Returns the description of the underlying price feed aggregator"},"getRoundData(uint80)":{"notice":"Returns price data about a specific round"},"latestRoundData()":{"notice":"Returns price data from the latest round"},"version()":{"notice":"Returns the version number representing the type of aggregator the proxy points to"}},"version":1}}},"contracts/precompiles/libs/Call.sol":{"CallLib":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a7ef994327bc090319e7cc0c8d6da4ebabb81809a78bf98a3555f3b885596dde64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0xEF SWAP10 NUMBER 0x27 0xBC MULMOD SUB NOT 0xE7 0xCC 0xC DUP14 PUSH14 0xA4EBABB81809A78BF98A3555F3B8 DUP6 MSIZE PUSH14 0xDE64736F6C634300081100330000 ","sourceMap":"184:3417:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a7ef994327bc090319e7cc0c8d6da4ebabb81809a78bf98a3555f3b885596dde64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0xEF SWAP10 NUMBER 0x27 0xBC MULMOD SUB NOT 0xE7 0xCC 0xC DUP14 PUSH14 0xA4EBABB81809A78BF98A3555F3B8 DUP6 MSIZE PUSH14 0xDE64736F6C634300081100330000 ","sourceMap":"184:3417:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"build(address,bytes memory)":"infinite","build(address,bytes memory,bytes memory)":"infinite","build(address,uint256,bytes memory)":"infinite","build(bytes32,bytes memory)":"infinite","build(bytes32,bytes memory,bytes memory)":"infinite","build(bytes32,uint256,bytes memory)":"infinite","call(struct CallLib.Call memory)":"infinite","multicall(struct CallLib.Call memory[] memory)":"infinite","multicallto(address,bytes memory[] memory)":"infinite","multistaticcall(struct CallLib.StaticCallWithCallback memory[] memory)":"infinite","staticcall(struct CallLib.StaticCall memory)":"infinite","staticcall(struct CallLib.StaticCallWithCallback memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/libs/Call.sol\":\"CallLib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"contracts/precompiles/libs/Call.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\r\\npragma solidity ^0.8.13;\\r\\n\\r\\nimport {Address} from \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\r\\n\\r\\nimport {TypeCasts} from \\\"./TypeCasts.sol\\\";\\r\\n\\r\\nlibrary CallLib {\\r\\n    struct StaticCall {\\r\\n        // supporting non EVM targets\\r\\n        bytes32 to;\\r\\n        bytes data;\\r\\n    }\\r\\n\\r\\n    struct Call {\\r\\n        // supporting non EVM targets\\r\\n        bytes32 to;\\r\\n        uint256 value;\\r\\n        bytes data;\\r\\n    }\\r\\n\\r\\n    struct StaticCallWithCallback {\\r\\n        StaticCall _call;\\r\\n        bytes callback;\\r\\n    }\\r\\n\\r\\n    function call(Call memory _call)\\r\\n        internal\\r\\n        returns (bytes memory returnData)\\r\\n    {\\r\\n        return\\r\\n            Address.functionCallWithValue(\\r\\n                TypeCasts.bytes32ToAddress(_call.to),\\r\\n                _call.data,\\r\\n                _call.value\\r\\n            );\\r\\n    }\\r\\n\\r\\n    function staticcall(StaticCall memory _call)\\r\\n        private\\r\\n        view\\r\\n        returns (bytes memory)\\r\\n    {\\r\\n        return\\r\\n            Address.functionStaticCall(\\r\\n                TypeCasts.bytes32ToAddress(_call.to),\\r\\n                _call.data\\r\\n            );\\r\\n    }\\r\\n\\r\\n    function staticcall(StaticCallWithCallback memory _call)\\r\\n        internal\\r\\n        view\\r\\n        returns (bytes memory callback)\\r\\n    {\\r\\n        return bytes.concat(_call.callback, staticcall(_call._call));\\r\\n    }\\r\\n\\r\\n    function multicall(Call[] memory calls) internal {\\r\\n        uint256 i = 0;\\r\\n        uint256 len = calls.length;\\r\\n        while (i < len) {\\r\\n            call(calls[i]);\\r\\n            unchecked {\\r\\n                ++i;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function multistaticcall(StaticCallWithCallback[] memory _calls)\\r\\n        internal\\r\\n        view\\r\\n        returns (bytes[] memory)\\r\\n    {\\r\\n        uint256 i = 0;\\r\\n        uint256 len = _calls.length;\\r\\n        bytes[] memory callbacks = new bytes[](len);\\r\\n        while (i < len) {\\r\\n            callbacks[i] = staticcall(_calls[i]);\\r\\n            unchecked {\\r\\n                ++i;\\r\\n            }\\r\\n        }\\r\\n        return callbacks;\\r\\n    }\\r\\n\\r\\n    function multicallto(address to, bytes[] memory calls) internal {\\r\\n        uint256 i = 0;\\r\\n        uint256 len = calls.length;\\r\\n        while (i < len) {\\r\\n            Address.functionCall(to, calls[i]);\\r\\n            unchecked {\\r\\n                ++i;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function build(bytes32 to, bytes memory data)\\r\\n        internal\\r\\n        pure\\r\\n        returns (StaticCall memory)\\r\\n    {\\r\\n        return StaticCall(to, data);\\r\\n    }\\r\\n\\r\\n    function build(address to, bytes memory data)\\r\\n        internal\\r\\n        pure\\r\\n        returns (StaticCall memory)\\r\\n    {\\r\\n        return build(TypeCasts.addressToBytes32(to), data);\\r\\n    }\\r\\n\\r\\n    function build(\\r\\n        bytes32 to,\\r\\n        uint256 value,\\r\\n        bytes memory data\\r\\n    ) internal pure returns (Call memory) {\\r\\n        return Call(to, value, data);\\r\\n    }\\r\\n\\r\\n    function build(\\r\\n        address to,\\r\\n        uint256 value,\\r\\n        bytes memory data\\r\\n    ) internal pure returns (Call memory) {\\r\\n        return Call(TypeCasts.addressToBytes32(to), value, data);\\r\\n    }\\r\\n\\r\\n    function build(\\r\\n        bytes32 to,\\r\\n        bytes memory data,\\r\\n        bytes memory callback\\r\\n    ) internal pure returns (StaticCallWithCallback memory) {\\r\\n        return StaticCallWithCallback(build(to, data), callback);\\r\\n    }\\r\\n\\r\\n    function build(\\r\\n        address to,\\r\\n        bytes memory data,\\r\\n        bytes memory callback\\r\\n    ) internal pure returns (StaticCallWithCallback memory) {\\r\\n        return StaticCallWithCallback(build(to, data), callback);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xd81d486e87fc6872068ff8454dd3e626ef5c012f4fb51ed871f1082d462ad2f7\",\"license\":\"Apache-2.0\"},\"contracts/precompiles/libs/TypeCasts.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\r\\npragma solidity >=0.6.11;\\r\\n\\r\\nlibrary TypeCasts {\\r\\n    // alignment preserving cast\\r\\n    function addressToBytes32(address _addr) internal pure returns (bytes32) {\\r\\n        return bytes32(uint256(uint160(_addr)));\\r\\n    }\\r\\n\\r\\n    // alignment preserving cast\\r\\n    function bytes32ToAddress(bytes32 _buf) internal pure returns (address) {\\r\\n        return address(uint160(uint256(_buf)));\\r\\n    }\\r\\n}\",\"keccak256\":\"0x2b223c8b1cd9ff5d73208abe2f0ef563631810881922fb14c276d5a8fe08e811\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/precompiles/libs/TypeCasts.sol":{"TypeCasts":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b65648ac2b03d1c6789311831fa126177c2df4e159b4f51988b097daa40b726f64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 JUMP BASEFEE 0xAC 0x2B SUB 0xD1 0xC6 PUSH25 0x9311831FA126177C2DF4E159B4F51988B097DAA40B726F6473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"76:364:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b65648ac2b03d1c6789311831fa126177c2df4e159b4f51988b097daa40b726f64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 JUMP BASEFEE 0xAC 0x2B SUB 0xD1 0xC6 PUSH25 0x9311831FA126177C2DF4E159B4F51988B097DAA40B726F6473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"76:364:15:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"addressToBytes32(address)":"infinite","bytes32ToAddress(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/precompiles/libs/TypeCasts.sol\":\"TypeCasts\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/precompiles/libs/TypeCasts.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\r\\npragma solidity >=0.6.11;\\r\\n\\r\\nlibrary TypeCasts {\\r\\n    // alignment preserving cast\\r\\n    function addressToBytes32(address _addr) internal pure returns (bytes32) {\\r\\n        return bytes32(uint256(uint160(_addr)));\\r\\n    }\\r\\n\\r\\n    // alignment preserving cast\\r\\n    function bytes32ToAddress(bytes32 _buf) internal pure returns (address) {\\r\\n        return address(uint160(uint256(_buf)));\\r\\n    }\\r\\n}\",\"keccak256\":\"0x2b223c8b1cd9ff5d73208abe2f0ef563631810881922fb14c276d5a8fe08e811\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}