{"id":"d6635d78d3c7b2ae65118169b1474cb6","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/PlanetDAO.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport '@openzeppelin/contracts/utils/Strings.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\n\r\ncontract PlanetDAO {\r\n  struct dao_uri_struct {\r\n    string dao_wallet;\r\n    string dao_uri;\r\n    string finished;\r\n  }\r\n  struct goal_uri_struct {\r\n    string dao_id;\r\n    string goal_uri;\r\n  }\r\n\r\n  struct ideas_uri_struct {\r\n    uint256 goal_id;\r\n    string ideas_uri;\r\n    uint256 donation;\r\n  }\r\n\r\n  struct donation_struct {\r\n    uint256 ideas_id;\r\n    uint256 userid;\r\n    uint256 donation;\r\n  }\r\n\r\n  struct smart_contract_uri_struct {\r\n    uint256 smart_contract_id;\r\n    uint256 ideas_id;\r\n    string smart_contract_uri;\r\n  }\r\n  struct goal_ideas_votes_struct {\r\n    uint256 goal_id;\r\n    uint256 ideas_id;\r\n    uint256 user_id;\r\n  }\r\n  struct message_struct {\r\n    uint256 message_id;\r\n    uint256 ideas_id;\r\n    string message;\r\n    string sender;\r\n  }\r\n  struct message_read_struct {\r\n    uint256 message_id;\r\n    uint256 ideas_id;\r\n    uint256 user_id;\r\n    string msg_type;\r\n  }\r\n  struct reply_struct {\r\n    uint256 reply_id;\r\n    uint256 message_id;\r\n    uint256 ideas_id;\r\n    string message;\r\n  }\r\n\r\n  struct UnbondingRequest {\r\n    int64 completionTime;\r\n    uint256 amount;\r\n  }\r\n\r\n  struct join_struct {\r\n    uint256 daoid;\r\n    uint256 user_id;\r\n  }\r\n\r\n  struct user_badge_struct {\r\n    uint256 user_id;\r\n    bool dao;\r\n    bool joined;\r\n    bool goal;\r\n    bool ideas;\r\n    bool vote;\r\n    bool donation;\r\n    bool comment;\r\n    bool reply;\r\n  }\r\n\r\n  struct feed_struct {\r\n    uint256 feed_id;\r\n    uint256 date;\r\n    string Type;\r\n    string data;\r\n  }\r\n  uint256 public _dao_ids;\r\n  uint256 public _donations_ids;\r\n  uint256 public _goal_ids;\r\n  uint256 public _ideas_ids;\r\n  uint256 public _join_ids;\r\n  uint256 public _smart_contract_ids;\r\n  uint256 public _ideas_vote_ids;\r\n  uint256 public _message_ids;\r\n  uint256 public _message_read_ids;\r\n  uint256 public _reply_ids;\r\n  uint256 public _feed_ids;\r\n  mapping(uint256 => dao_uri_struct) public _dao_uris; //_dao_ids              => (Dao)                    Dao Wallet + Dao URI   + Finished\r\n  mapping(uint256 => string) public _template_uris; //_dao_ids              => (Dao)                   Template HTML Code\r\n  mapping(uint256 => join_struct) public _joined_person; //_join_ids             => (Dao)                  join_struct\r\n\r\n  mapping(uint256 => goal_uri_struct) public _goal_uris; //_goal_ids             => (Goal)                   Dao ID + Goal URI\r\n  mapping(uint256 => ideas_uri_struct) public _ideas_uris; //_ideas_ids            => (Ideas)                  Goal ID + Ideas URI\r\n  mapping(uint256 => uint256) public _donated; //uint256            => (Donated to ideas)                amount\r\n  mapping(uint256 => feed_struct) public _feeds; //_feed_ids            => (feed_struct)\r\n  mapping(uint256 => donation_struct) public _donations; //uint256            => donation_struct\r\n  mapping(uint256 => smart_contract_uri_struct) public _smart_contracts_uris; //_smart_contract_ids   => (Ideas Smart contract)   Goal ID + Ideas URI\r\n  mapping(uint256 => goal_ideas_votes_struct) public all_goal_ideas_votes; //_ideas_vote_ids       => (Vote)                   Goal ID + Ideas ID + User Id\r\n\r\n  mapping(uint256 => message_struct) public all_messages; // all_messages        => _message_ids + message_struct\r\n\r\n  mapping(uint256 => message_read_struct) public all_read_messages; // all_read_messages        => _message_read_ids + message_read_struct\r\n\r\n  mapping(uint256 => reply_struct) public all_replies; // all_messages        => _reply_ids + reply_struct\r\n  mapping(uint256 => user_badge_struct) public _user_badges; //user_id            => user_badge_struct\r\n\r\n  //Daos\r\n  function create_dao(string memory _dao_wallet, string memory _dao_uri, string memory _template, uint256 user_id) public returns (uint256) {\r\n    //Create Dao into _dao_uris\r\n    _dao_uris[_dao_ids] = dao_uri_struct(_dao_wallet, _dao_uri, 'False');\r\n    _template_uris[_dao_ids] = _template;\r\n    _user_badges[user_id].dao = true;\r\n    _dao_ids++;\r\n\r\n    return _dao_ids;\r\n  }\r\n\r\n  function update_template(uint256 _dao_id, string memory _template) public {\r\n    _template_uris[_dao_id] = _template;\r\n  }\r\n\r\n  function set_dao(uint256 _dao_id, string memory _dao_wallet, string memory _dao_uri) public {\r\n    //Set Dao of wallet and uri\r\n    _dao_uris[_dao_id].dao_wallet = _dao_wallet;\r\n    _dao_uris[_dao_id].dao_uri = _dao_uri;\r\n  }\r\n\r\n  function get_all_daos() public view returns (string[] memory) {\r\n    //Getting all doas\r\n    string[] memory _StoreInfo = new string[](_dao_ids);\r\n    for (uint256 i = 0; i < _dao_ids; i++) {\r\n      _StoreInfo[i] = _dao_uris[i].dao_uri;\r\n    }\r\n\r\n    return _StoreInfo;\r\n  }\r\n\r\n  function dao_uri(uint256 _dao_id) public view returns (string memory) {\r\n    //Getting one dao URI\r\n    return _dao_uris[_dao_id].dao_uri;\r\n  }\r\n\r\n  function add_Feed(string memory feed_text, string memory _type) public {\r\n    _feeds[_feed_ids] = feed_struct(_feed_ids, block.timestamp, _type, feed_text);\r\n    _feed_ids++;\r\n  }\r\n\r\n  //Goals\r\n  function create_goal(string memory _goal_uri, string memory _dao_id, uint256 _user_id, string memory _feed) public returns (uint256) {\r\n    //Create goal into _goal_uris\r\n    _goal_uris[_goal_ids] = goal_uri_struct(_dao_id, _goal_uri);\r\n\r\n    _user_badges[_user_id].goal = true;\r\n    _goal_ids++;\r\n    add_Feed(_feed, 'goal');\r\n\r\n    return _goal_ids;\r\n  }\r\n\r\n  function set_goal(uint256 _goal_id, string memory _goal_uri) public {\r\n    //Set goal uri\r\n    _goal_uris[_goal_id].goal_uri = _goal_uri;\r\n  }\r\n\r\n  function get_all_goals() public view returns (string[] memory) {\r\n    //Getting all goals\r\n    string[] memory _StoreInfo = new string[](_goal_ids);\r\n    for (uint256 i = 0; i < _goal_ids; i++) {\r\n      _StoreInfo[i] = _goal_uris[i].goal_uri;\r\n    }\r\n\r\n    return _StoreInfo;\r\n  }\r\n\r\n  function get_all_goals_by_dao_id(string memory _dao_id) public view returns (string[] memory) {\r\n    //Getting all goals by dao id\r\n    string[] memory _StoreInfo = new string[](_goal_ids);\r\n    uint256 _store_id;\r\n    for (uint256 i = 0; i < _goal_ids; i++) {\r\n      if (keccak256(bytes(_goal_uris[i].dao_id)) == keccak256(bytes(_dao_id))) {\r\n        _StoreInfo[_store_id] = _goal_uris[i].goal_uri;\r\n        _store_id++;\r\n      }\r\n    }\r\n\r\n    return _StoreInfo;\r\n  }\r\n\r\n  function get_goal_id_by_goal_uri(string memory _goal_uri) public view returns (uint256) {\r\n    //Getting goal id by uri\r\n    for (uint256 i = 0; i < _goal_ids; i++) {\r\n      if (keccak256(bytes(_goal_uris[i].goal_uri)) == keccak256(bytes(_goal_uri))) return i;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n  \r\n  function get_dao_id_by_ideas_id(uint256 ideas_id) public view returns (string memory) {\r\n    \r\n    uint256 goal_id= _ideas_uris[ideas_id].goal_id;\r\n    string memory dao_id = _goal_uris[goal_id].dao_id;\r\n    \r\n    return dao_id;\r\n  }\r\n\r\n  function goal_uri(uint256 _goal_id) public view returns (string memory) {\r\n    //Getting one goal URI\r\n    return _goal_uris[_goal_id].goal_uri;\r\n  }\r\n\r\n  //Ideas\r\n  function create_ideas(string memory _ideas_uri, uint256 _goal_id, string[] memory _smart_contracts, uint256 _user_id, string memory _feed) public returns (uint256) {\r\n    //Create ideas into _ideas_uris\r\n    _ideas_uris[_ideas_ids] = ideas_uri_struct(_goal_id, _ideas_uri, 0);\r\n    _user_badges[_user_id].ideas = true;\r\n    _ideas_ids++;\r\n\r\n    for (uint256 i = 0; i < _smart_contracts.length; i++) {\r\n      create_ideas_smart_contract(_ideas_ids, _smart_contract_ids, _smart_contracts[i]);\r\n      _smart_contract_ids++;\r\n    }\r\n    add_Feed(_feed, 'idea');\r\n\r\n    return _ideas_ids;\r\n  }\r\n\r\n  function create_ideas_smart_contract(uint256 _ideas_id, uint256 _smart_contract_id, string memory _smart_contract) private {\r\n    _smart_contracts_uris[_smart_contract_id] = smart_contract_uri_struct(_ideas_id, _smart_contract_id, _smart_contract);\r\n  }\r\n\r\n  function set_ideas(uint256 _ideas_id, string memory _ideas_uri) public {\r\n    _ideas_uris[_ideas_id].ideas_uri = _ideas_uri;\r\n  }\r\n\r\n  function add_donation(uint256 _ideas_id, uint256 _doantion, uint256 _userid, string memory _feed1, string memory _feed2) public {\r\n    if (_user_badges[_userid].donation == false) {\r\n      add_Feed(_feed1, 'badge');\r\n    }\r\n    add_Feed(_feed2, 'donation');\r\n\r\n    _user_badges[_userid].donation = true;\r\n    _ideas_uris[_ideas_id].donation += _doantion;\r\n    _donated[_userid] += _doantion;\r\n    _donations[_donations_ids] = donation_struct(_ideas_id, _userid, _doantion);\r\n    _donations_ids++;\r\n  }\r\n\r\n  function join_community(uint256 dao_id, uint256 person, string memory _feed) public {\r\n    _user_badges[person].joined = true;\r\n    _joined_person[_join_ids] = join_struct({daoid: dao_id, user_id: person});\r\n    _join_ids++;\r\n    add_Feed(_feed, 'join');\r\n  }\r\n\r\n  function leave_community(uint256 join_id) public {\r\n    _joined_person[join_id] = join_struct({daoid: 9999, user_id: 9999});\r\n  }\r\n\r\n  function is_person_joined(uint256 dao_id, uint256 person) public view returns (bool) {\r\n    for (uint256 i = 0; i < _join_ids; i++) {\r\n      if ((_joined_person[i].user_id == person) && (_joined_person[i].daoid == dao_id)) return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function get_person_joinedID(uint256 dao_id, uint256 person) public view returns (uint256) {\r\n    for (uint256 i = 0; i < _join_ids; i++) {\r\n      if ((_joined_person[i].user_id == person) && (_joined_person[i].daoid == dao_id)) return i;\r\n    }\r\n\r\n    return 9999;\r\n  }\r\n\r\n  function get_all_ideas() public view returns (string[] memory) {\r\n    //Getting all ideas\r\n    string[] memory _StoreInfo = new string[](_ideas_ids);\r\n    for (uint256 i = 0; i < _ideas_ids; i++) {\r\n      _StoreInfo[i] = _ideas_uris[i].ideas_uri;\r\n    }\r\n\r\n    return _StoreInfo;\r\n  }\r\n\r\n  function get_all_ideas_by_goal_id(uint256 _goal_id) public view returns (string[] memory) {\r\n    //Getting all ideas by goal id\r\n    string[] memory _StoreInfo = new string[](_ideas_ids);\r\n    uint256 _store_id;\r\n    for (uint256 i = 0; i < _ideas_ids; i++) {\r\n      if (_ideas_uris[i].goal_id == _goal_id) _StoreInfo[_store_id] = _ideas_uris[i].ideas_uri;\r\n      _store_id++;\r\n    }\r\n\r\n    return _StoreInfo;\r\n  }\r\n\r\n  function get_ideas_id_by_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\r\n    //Getting ideas id by uri\r\n    for (uint256 i = 0; i < _ideas_ids; i++) {\r\n      if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return i;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  function get_goal_id_from_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\r\n    //Getting ideas id by uri\r\n    for (uint256 i = 0; i < _ideas_ids; i++) {\r\n      if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return _ideas_uris[i].goal_id;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  function ideas_uri(uint256 _ideas_id) public view returns (string memory) {\r\n    //Getting one ideas URI\r\n    return _ideas_uris[_ideas_id].ideas_uri;\r\n  }\r\n\r\n  //Votes\r\n  function create_goal_ideas_vote(uint256 _goal_id, uint256 _ideas_id, uint256 _user_id, string memory _feed,bool  feed_add) public returns (uint256) {\r\n    _user_badges[_user_id].vote = true;\r\n    //Create votes into all_goal_ideas_votes\r\n    all_goal_ideas_votes[_ideas_vote_ids] = goal_ideas_votes_struct(_goal_id, _ideas_id, _user_id);\r\n    _ideas_vote_ids++;\r\n    if (feed_add){\r\n        add_Feed(_feed, 'vote');\r\n    }\r\n\r\n    return _ideas_vote_ids;\r\n  }\r\n\r\n  function get_ideas_votes_from_goal(uint256 _goal_id, uint256 _ideas_id) public view returns (string[] memory) {\r\n    //gets all ideas votes from goal\r\n    string[] memory _StoreInfo = new string[](_ideas_vote_ids);\r\n    uint256 _store_id;\r\n    for (uint256 i = 0; i < _ideas_vote_ids; i++) {\r\n      if (all_goal_ideas_votes[i].goal_id == _goal_id && all_goal_ideas_votes[i].ideas_id == _ideas_id) _StoreInfo[_store_id] = Strings.toString(all_goal_ideas_votes[i].user_id);\r\n      _store_id++;\r\n    }\r\n    return _StoreInfo;\r\n  }\r\n\r\n  //Messages\r\n  function sendMsg(uint256 _ideas_id, string memory _message, string memory _sender, uint256 _user_id) public returns (uint256) {\r\n    _user_badges[_user_id].comment = true;\r\n    //Create messsage into all_messages\r\n    all_messages[_message_ids] = message_struct(_message_ids, _ideas_id, _message, _sender);\r\n    _message_ids++;\r\n\r\n    return _message_ids;\r\n  }\r\n\r\n  function getMsgIDs(uint256 ideas_id) public view returns (uint256[] memory) {\r\n    //Getting all messages ids by idea id\r\n    uint256[] memory _All_Ideas_Messages = new uint256[](_message_ids);\r\n    uint256 _msg_id;\r\n    for (uint256 i = 0; i < _message_ids; i++) {\r\n      if (all_messages[i].ideas_id == ideas_id) {\r\n        _All_Ideas_Messages[_msg_id] = all_messages[i].message_id;\r\n        _msg_id++;\r\n      }\r\n    }\r\n\r\n    return _All_Ideas_Messages;\r\n  }\r\n\r\n  function sendReply(uint256 _message_id, string memory _reply, uint256 ideas_id, uint256 _userid) public returns (uint256) {\r\n    _user_badges[_userid].reply = true;\r\n    //Create reply into all_replies\r\n    all_replies[_reply_ids] = reply_struct(_reply_ids, _message_id, ideas_id, _reply);\r\n    _reply_ids++;\r\n\r\n    return _reply_ids;\r\n  }\r\n\r\n  function getReplyIDs(uint256 message_id) public view returns (uint256[] memory) {\r\n    //Getting all messages ids by idea id\r\n    uint256[] memory _All_Messages_Replys = new uint256[](_reply_ids);\r\n    uint256 _reply_id;\r\n    for (uint256 i = 0; i < _reply_ids; i++) {\r\n      if (all_replies[i].message_id == message_id) {\r\n        _All_Messages_Replys[_reply_id] = all_replies[i].reply_id;\r\n        _reply_id++;\r\n      }\r\n    }\r\n\r\n    return _All_Messages_Replys;\r\n  }\r\n\r\n  function sendReadMsg(uint256 _message_id, uint256 _ideas_id, uint256 _wallet, string memory msg_type) public returns (uint256) {\r\n    //Create messsage into all_messages\r\n    all_read_messages[_message_read_ids] = message_read_struct(_message_id, _ideas_id, _wallet, msg_type);\r\n    _message_read_ids++;\r\n\r\n    return _message_read_ids;\r\n  }\r\n\r\n  function getReadMsg(uint256 _message_id, string memory msg_type) public view returns (bool) {\r\n    bool read = false;\r\n    for (uint256 i = 0; i < _message_read_ids; i++) {\r\n      if (all_read_messages[i].message_id == _message_id && keccak256(bytes(msg_type)) == keccak256(bytes(all_read_messages[i].msg_type))) {\r\n        read = true;\r\n      }\r\n    }\r\n\r\n    return read;\r\n  }\r\n\r\n  function reset_all() public {\r\n    for (uint256 i = 0; i < _dao_ids; i++) delete _dao_uris[i];\r\n    for (uint256 i = 0; i < _goal_ids; i++) delete _goal_uris[i];\r\n    for (uint256 i = 0; i < _ideas_ids; i++) delete _ideas_uris[i];\r\n    for (uint256 i = 0; i < _goal_ids; i++) delete _smart_contracts_uris[i];\r\n    for (uint256 i = 0; i < _message_ids; i++) delete all_messages[i];\r\n    for (uint256 i = 0; i < _reply_ids; i++) delete all_replies[i];\r\n    for (uint256 i = 0; i < _ideas_vote_ids; i++) delete all_goal_ideas_votes[i];\r\n    _dao_ids = 0;\r\n    _goal_ids = 0;\r\n    _ideas_ids = 0;\r\n    _message_ids = 0;\r\n    _reply_ids = 0;\r\n    _ideas_vote_ids = 0;\r\n  }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[719],"ERC20":[586],"IERC20":[664],"IERC20Metadata":[689]},"id":587,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:0"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":665,"src":"130:22:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":690,"src":"153:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":587,"sourceUnit":720,"src":"195:33:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6,"name":"Context","nameLocations":["1550:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":719,"src":"1550:7:0"},"id":7,"nodeType":"InheritanceSpecifier","src":"1550:7:0"},{"baseName":{"id":8,"name":"IERC20","nameLocations":["1559:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"1559:6:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"1559:6:0"},{"baseName":{"id":10,"name":"IERC20Metadata","nameLocations":["1567:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":689,"src":"1567:14:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"1567:14:0"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"230:1301:0","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":586,"linearizedBaseContracts":[586,689,664,719],"name":"ERC20","nameLocation":"1541:5:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":15,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:0","nodeType":"VariableDeclaration","scope":586,"src":"1588:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":14,"keyType":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":21,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:0","nodeType":"VariableDeclaration","scope":586,"src":"1640:67:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":20,"keyType":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":19,"keyType":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":23,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:0","nodeType":"VariableDeclaration","scope":586,"src":"1714:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":22,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":25,"mutability":"mutable","name":"_name","nameLocation":"1764:5:0","nodeType":"VariableDeclaration","scope":586,"src":"1749:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":24,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":27,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:0","nodeType":"VariableDeclaration","scope":586,"src":"1775:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":26,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":43,"nodeType":"Block","src":"2036:57:0","statements":[{"expression":{"id":37,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":35,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2046:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":36,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2054:5:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":38,"nodeType":"ExpressionStatement","src":"2046:13:0"},{"expression":{"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2069:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2079:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":42,"nodeType":"ExpressionStatement","src":"2069:17:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"1804:171:0","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":44,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"name_","nameLocation":"2006:5:0","nodeType":"VariableDeclaration","scope":44,"src":"1992:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:0","nodeType":"VariableDeclaration","scope":44,"src":"2013:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":31,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:0"},"returnParameters":{"id":34,"nodeType":"ParameterList","parameters":[],"src":"2036:0:0"},"scope":586,"src":"1980:113:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[676],"body":{"id":53,"nodeType":"Block","src":"2227:29:0","statements":[{"expression":{"id":51,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2244:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"2237:12:0"}]},"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"2099:54:0","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:0","nodeType":"FunctionDefinition","overrides":{"id":47,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:0"},"parameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"2171:2:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"2212:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":48,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:0"},"scope":586,"src":"2158:98:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[682],"body":{"id":63,"nodeType":"Block","src":"2440:31:0","statements":[{"expression":{"id":61,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2457:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":60,"id":62,"nodeType":"Return","src":"2450:14:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"2262:102:0","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":64,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:0","nodeType":"FunctionDefinition","overrides":{"id":57,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:0"},"parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"2384:2:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64,"src":"2425:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":58,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:0"},"scope":586,"src":"2369:102:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[688],"body":{"id":73,"nodeType":"Block","src":"3169:26:0","statements":[{"expression":{"hexValue":"3138","id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:0","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":70,"id":72,"nodeType":"Return","src":"3179:9:0"}]},"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"2477:622:0","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":74,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[],"src":"3121:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":74,"src":"3162:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":68,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:0"},"scope":586,"src":"3104:91:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[613],"body":{"id":83,"nodeType":"Block","src":"3325:36:0","statements":[{"expression":{"id":81,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"3342:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":80,"id":82,"nodeType":"Return","src":"3335:19:0"}]},"documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"3201:49:0","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":84,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:0","nodeType":"FunctionDefinition","overrides":{"id":77,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:0"},"parameters":{"id":76,"nodeType":"ParameterList","parameters":[],"src":"3275:2:0"},"returnParameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":84,"src":"3316:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":78,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:0"},"scope":586,"src":"3255:106:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[621],"body":{"id":97,"nodeType":"Block","src":"3502:42:0","statements":[{"expression":{"baseExpression":{"id":93,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"3519:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":95,"indexExpression":{"id":94,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"3529:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":92,"id":96,"nodeType":"Return","src":"3512:25:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"3367:47:0","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":98,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:0","nodeType":"FunctionDefinition","overrides":{"id":89,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:0"},"parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"account","nameLocation":"3446:7:0","nodeType":"VariableDeclaration","scope":98,"src":"3438:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:0"},"returnParameters":{"id":92,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":98,"src":"3493:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":90,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:0"},"scope":586,"src":"3419:125:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[631],"body":{"id":122,"nodeType":"Block","src":"3825:104:0","statements":[{"assignments":[110],"declarations":[{"constant":false,"id":110,"mutability":"mutable","name":"owner","nameLocation":"3843:5:0","nodeType":"VariableDeclaration","scope":122,"src":"3835:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":109,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":113,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"3851:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:0"},{"expression":{"arguments":[{"id":115,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"3883:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":116,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"3890:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":117,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3894:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":114,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"3873:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":119,"nodeType":"ExpressionStatement","src":"3873:28:0"},{"expression":{"hexValue":"74727565","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":108,"id":121,"nodeType":"Return","src":"3911:11:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"3550:185:0","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":123,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:0","nodeType":"FunctionDefinition","overrides":{"id":105,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:0"},"parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"to","nameLocation":"3766:2:0","nodeType":"VariableDeclaration","scope":123,"src":"3758:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"amount","nameLocation":"3778:6:0","nodeType":"VariableDeclaration","scope":123,"src":"3770:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":123,"src":"3819:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":106,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:0"},"scope":586,"src":"3740:189:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[641],"body":{"id":140,"nodeType":"Block","src":"4085:51:0","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":134,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"4102:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":136,"indexExpression":{"id":135,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"4114:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":138,"indexExpression":{"id":137,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4121:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":133,"id":139,"nodeType":"Return","src":"4095:34:0"}]},"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"3935:47:0","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":141,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:0","nodeType":"FunctionDefinition","overrides":{"id":130,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:0"},"parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"owner","nameLocation":"4014:5:0","nodeType":"VariableDeclaration","scope":141,"src":"4006:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":128,"mutability":"mutable","name":"spender","nameLocation":"4029:7:0","nodeType":"VariableDeclaration","scope":141,"src":"4021:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:0"},"returnParameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"4076:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:0"},"scope":586,"src":"3987:149:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[651],"body":{"id":165,"nodeType":"Block","src":"4533:108:0","statements":[{"assignments":[153],"declarations":[{"constant":false,"id":153,"mutability":"mutable","name":"owner","nameLocation":"4551:5:0","nodeType":"VariableDeclaration","scope":165,"src":"4543:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":156,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":154,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"4559:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:0"},{"expression":{"arguments":[{"id":158,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4590:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":159,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"4597:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":160,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4606:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":157,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"4581:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"4581:32:0"},{"expression":{"hexValue":"74727565","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":151,"id":164,"nodeType":"Return","src":"4623:11:0"}]},"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"4142:297:0","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":166,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:0","nodeType":"FunctionDefinition","overrides":{"id":148,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:0"},"parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"spender","nameLocation":"4469:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4461:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"amount","nameLocation":"4486:6:0","nodeType":"VariableDeclaration","scope":166,"src":"4478:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:0"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":166,"src":"4527:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":149,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:0"},"scope":586,"src":"4444:197:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[663],"body":{"id":198,"nodeType":"Block","src":"5306:153:0","statements":[{"assignments":[180],"declarations":[{"constant":false,"id":180,"mutability":"mutable","name":"spender","nameLocation":"5324:7:0","nodeType":"VariableDeclaration","scope":198,"src":"5316:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":183,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":181,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5334:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:0"},{"expression":{"arguments":[{"id":185,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5372:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":186,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"5378:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":187,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5387:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":184,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"5356:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":189,"nodeType":"ExpressionStatement","src":"5356:38:0"},{"expression":{"arguments":[{"id":191,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5414:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":192,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5420:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":193,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5424:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":190,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5404:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"5404:27:0"},{"expression":{"hexValue":"74727565","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":178,"id":197,"nodeType":"Return","src":"5441:11:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4647:551:0","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":199,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:0","nodeType":"FunctionDefinition","overrides":{"id":175,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:0"},"parameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"from","nameLocation":"5233:4:0","nodeType":"VariableDeclaration","scope":199,"src":"5225:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":168,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"5247:2:0","nodeType":"VariableDeclaration","scope":199,"src":"5239:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"amount","nameLocation":"5259:6:0","nodeType":"VariableDeclaration","scope":199,"src":"5251:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:0"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"5300:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":176,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:0"},"scope":586,"src":"5203:256:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":227,"nodeType":"Block","src":"5948:140:0","statements":[{"assignments":[210],"declarations":[{"constant":false,"id":210,"mutability":"mutable","name":"owner","nameLocation":"5966:5:0","nodeType":"VariableDeclaration","scope":227,"src":"5958:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":213,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":211,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5974:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:0"},{"expression":{"arguments":[{"id":215,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"6005:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":216,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"6012:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":218,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"6031:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":219,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"6038:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6021:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":221,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6049:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":214,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5996:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":224,"nodeType":"ExpressionStatement","src":"5996:64:0"},{"expression":{"hexValue":"74727565","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":208,"id":226,"nodeType":"Return","src":"6070:11:0"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"5465:384:0","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":228,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:0","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"spender","nameLocation":"5889:7:0","nodeType":"VariableDeclaration","scope":228,"src":"5881:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:0","nodeType":"VariableDeclaration","scope":228,"src":"5898:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:0"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"5942:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":206,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:0"},"scope":586,"src":"5854:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":268,"nodeType":"Block","src":"6674:328:0","statements":[{"assignments":[239],"declarations":[{"constant":false,"id":239,"mutability":"mutable","name":"owner","nameLocation":"6692:5:0","nodeType":"VariableDeclaration","scope":268,"src":"6684:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":242,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":240,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"6700:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:0"},{"assignments":[244],"declarations":[{"constant":false,"id":244,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:0","nodeType":"VariableDeclaration","scope":268,"src":"6722:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":249,"initialValue":{"arguments":[{"id":246,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"6759:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":247,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"6766:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":245,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6749:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":251,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6792:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":252,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"6812:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":256,"nodeType":"ExpressionStatement","src":"6784:85:0"},{"id":265,"nodeType":"UncheckedBlock","src":"6879:95:0","statements":[{"expression":{"arguments":[{"id":258,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"6912:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":259,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"6919:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":260,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6928:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":261,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"6947:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":257,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6903:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":264,"nodeType":"ExpressionStatement","src":"6903:60:0"}]},{"expression":{"hexValue":"74727565","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":237,"id":267,"nodeType":"Return","src":"6984:11:0"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"6094:476:0","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":269,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:0","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"spender","nameLocation":"6610:7:0","nodeType":"VariableDeclaration","scope":269,"src":"6602:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:0","nodeType":"VariableDeclaration","scope":269,"src":"6619:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:0"},"returnParameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":269,"src":"6668:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":235,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:0"},"scope":586,"src":"6575:427:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":345,"nodeType":"Block","src":"7534:710:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":280,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7552:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:0","typeDescriptions":{}}},"id":284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":288,"nodeType":"ExpressionStatement","src":"7544:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":290,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7630:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:0","typeDescriptions":{}}},"id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":289,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"7622:64:0"},{"expression":{"arguments":[{"id":300,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7718:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":301,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7724:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":302,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7728:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":299,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"7697:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":304,"nodeType":"ExpressionStatement","src":"7697:38:0"},{"assignments":[306],"declarations":[{"constant":false,"id":306,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:0","nodeType":"VariableDeclaration","scope":345,"src":"7746:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":310,"initialValue":{"baseExpression":{"id":307,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"7768:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":309,"indexExpression":{"id":308,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7778:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":312,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7801:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":313,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7816:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":317,"nodeType":"ExpressionStatement","src":"7793:72:0"},{"id":332,"nodeType":"UncheckedBlock","src":"7875:273:0","statements":[{"expression":{"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":318,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"7899:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":320,"indexExpression":{"id":319,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7909:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":321,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7917:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":322,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"7931:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":325,"nodeType":"ExpressionStatement","src":"7899:38:0"},{"expression":{"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":326,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"8114:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":328,"indexExpression":{"id":327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8124:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":329,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8131:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":331,"nodeType":"ExpressionStatement","src":"8114:23:0"}]},{"eventCall":{"arguments":[{"id":334,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"8172:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":335,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8178:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":336,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8182:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":333,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"8163:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":338,"nodeType":"EmitStatement","src":"8158:31:0"},{"expression":{"arguments":[{"id":340,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"8220:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":341,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8226:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":342,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"8230:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":339,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"8200:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":344,"nodeType":"ExpressionStatement","src":"8200:37:0"}]},"documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"7008:443:0","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":346,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:0","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"from","nameLocation":"7483:4:0","nodeType":"VariableDeclaration","scope":346,"src":"7475:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"to","nameLocation":"7497:2:0","nodeType":"VariableDeclaration","scope":346,"src":"7489:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"amount","nameLocation":"7509:6:0","nodeType":"VariableDeclaration","scope":346,"src":"7501:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:0"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[],"src":"7534:0:0"},"scope":586,"src":"7456:788:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":402,"nodeType":"Block","src":"8585:470:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":355,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8603:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:0","typeDescriptions":{}}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":363,"nodeType":"ExpressionStatement","src":"8595:65:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:0","typeDescriptions":{}}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":369,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8704:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":370,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8713:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":364,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"8671:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"ExpressionStatement","src":"8671:49:0"},{"expression":{"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":373,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"8731:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":374,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8747:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":376,"nodeType":"ExpressionStatement","src":"8731:22:0"},{"id":383,"nodeType":"UncheckedBlock","src":"8763:175:0","statements":[{"expression":{"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":377,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"8899:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":379,"indexExpression":{"id":378,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8909:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":380,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8921:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":382,"nodeType":"ExpressionStatement","src":"8899:28:0"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:0","typeDescriptions":{}}},"id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":389,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8973:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":390,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"8982:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":384,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"8952:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":392,"nodeType":"EmitStatement","src":"8947:42:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:0","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":398,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"9032:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":399,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"9041:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":393,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"9000:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"ExpressionStatement","src":"9000:48:0"}]},"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"8250:265:0","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":403,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:0","nodeType":"FunctionDefinition","parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"account","nameLocation":"8543:7:0","nodeType":"VariableDeclaration","scope":403,"src":"8535:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"amount","nameLocation":"8560:6:0","nodeType":"VariableDeclaration","scope":403,"src":"8552:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:0"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[],"src":"8585:0:0"},"scope":586,"src":"8520:535:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":474,"nodeType":"Block","src":"9440:594:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":412,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9458:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:0","typeDescriptions":{}}},"id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":420,"nodeType":"ExpressionStatement","src":"9450:67:0"},{"expression":{"arguments":[{"id":422,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9549:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:0","typeDescriptions":{}}},"id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9570:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":421,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"9528:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"9528:49:0"},{"assignments":[431],"declarations":[{"constant":false,"id":431,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:0","nodeType":"VariableDeclaration","scope":474,"src":"9588:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":435,"initialValue":{"baseExpression":{"id":432,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"9613:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":434,"indexExpression":{"id":433,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9623:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":437,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"9649:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":438,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9667:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":436,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":442,"nodeType":"ExpressionStatement","src":"9641:71:0"},{"id":455,"nodeType":"UncheckedBlock","src":"9722:194:0","statements":[{"expression":{"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":443,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"9746:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":445,"indexExpression":{"id":444,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9756:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":446,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"9767:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":447,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9784:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":450,"nodeType":"ExpressionStatement","src":"9746:44:0"},{"expression":{"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":451,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"9883:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":452,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9899:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":454,"nodeType":"ExpressionStatement","src":"9883:22:0"}]},{"eventCall":{"arguments":[{"id":457,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:0","typeDescriptions":{}}},"id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":462,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9961:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":456,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"9931:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":464,"nodeType":"EmitStatement","src":"9926:42:0"},{"expression":{"arguments":[{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9999:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:0","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":471,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"10020:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":465,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"9979:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":473,"nodeType":"ExpressionStatement","src":"9979:48:0"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"9061:309:0","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":475,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:0","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"account","nameLocation":"9398:7:0","nodeType":"VariableDeclaration","scope":475,"src":"9390:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":408,"mutability":"mutable","name":"amount","nameLocation":"9415:6:0","nodeType":"VariableDeclaration","scope":475,"src":"9407:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":407,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:0"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"9440:0:0"},"scope":586,"src":"9375:659:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":519,"nodeType":"Block","src":"10540:257:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":486,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10558:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:0","typeDescriptions":{}}},"id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":494,"nodeType":"ExpressionStatement","src":"10550:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":496,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10636:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:0","typeDescriptions":{}}},"id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":495,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"10628:68:0"},{"expression":{"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":505,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"10707:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":508,"indexExpression":{"id":506,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10719:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":509,"indexExpression":{"id":507,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10726:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":510,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"10737:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":512,"nodeType":"ExpressionStatement","src":"10707:36:0"},{"eventCall":{"arguments":[{"id":514,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"10767:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":515,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10774:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":516,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"10783:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":513,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10758:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":518,"nodeType":"EmitStatement","src":"10753:37:0"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"10040:412:0","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":520,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:0","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"owner","nameLocation":"10483:5:0","nodeType":"VariableDeclaration","scope":520,"src":"10475:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"spender","nameLocation":"10498:7:0","nodeType":"VariableDeclaration","scope":520,"src":"10490:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"amount","nameLocation":"10515:6:0","nodeType":"VariableDeclaration","scope":520,"src":"10507:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:0"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"10540:0:0"},"scope":586,"src":"10457:340:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":562,"nodeType":"Block","src":"11168:321:0","statements":[{"assignments":[531],"declarations":[{"constant":false,"id":531,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:0","nodeType":"VariableDeclaration","scope":562,"src":"11178:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":536,"initialValue":{"arguments":[{"id":533,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"11215:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"11222:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":532,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"11205:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":537,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11244:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":539,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":538,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:0","memberName":"max","nodeType":"MemberAccess","src":"11264:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"IfStatement","src":"11240:243:0","trueBody":{"id":560,"nodeType":"Block","src":"11283:200:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":545,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11305:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":546,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"11325:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":544,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":550,"nodeType":"ExpressionStatement","src":"11297:68:0"},{"id":559,"nodeType":"UncheckedBlock","src":"11379:94:0","statements":[{"expression":{"arguments":[{"id":552,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"11416:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":553,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"11423:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11432:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":555,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"11451:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":551,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"11407:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"ExpressionStatement","src":"11407:51:0"}]}]}}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"10803:270:0","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":563,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:0","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"owner","nameLocation":"11111:5:0","nodeType":"VariableDeclaration","scope":563,"src":"11103:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"spender","nameLocation":"11126:7:0","nodeType":"VariableDeclaration","scope":563,"src":"11118:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"amount","nameLocation":"11143:6:0","nodeType":"VariableDeclaration","scope":563,"src":"11135:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":526,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:0"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"11168:0:0"},"scope":586,"src":"11078:411:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":573,"nodeType":"Block","src":"12162:2:0","statements":[]},"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"11495:573:0","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":574,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:0","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"from","nameLocation":"12111:4:0","nodeType":"VariableDeclaration","scope":574,"src":"12103:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"to","nameLocation":"12125:2:0","nodeType":"VariableDeclaration","scope":574,"src":"12117:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"amount","nameLocation":"12137:6:0","nodeType":"VariableDeclaration","scope":574,"src":"12129:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:0"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"12162:0:0"},"scope":586,"src":"12073:91:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":584,"nodeType":"Block","src":"12840:2:0","statements":[]},"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"12170:577:0","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":585,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:0","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"from","nameLocation":"12789:4:0","nodeType":"VariableDeclaration","scope":585,"src":"12781:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"to","nameLocation":"12803:2:0","nodeType":"VariableDeclaration","scope":585,"src":"12795:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"amount","nameLocation":"12815:6:0","nodeType":"VariableDeclaration","scope":585,"src":"12807:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:0"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"12840:0:0"},"scope":586,"src":"12752:90:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":587,"src":"1532:11312:0","usedErrors":[]}],"src":"105:12740:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[664]},"id":665,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":588,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"131:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":664,"linearizedBaseContracts":[664],"name":"IERC20","nameLocation":"212:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"225:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":598,"name":"Transfer","nameLocation":"394:8:1","nodeType":"EventDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:1","nodeType":"VariableDeclaration","scope":598,"src":"403:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":594,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:1","nodeType":"VariableDeclaration","scope":598,"src":"425:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":593,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":596,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:1","nodeType":"VariableDeclaration","scope":598,"src":"445:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":595,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:1"},"src":"388:72:1"},{"anonymous":false,"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"466:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":607,"name":"Approval","nameLocation":"625:8:1","nodeType":"EventDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:1","nodeType":"VariableDeclaration","scope":607,"src":"634:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":603,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:1","nodeType":"VariableDeclaration","scope":607,"src":"657:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:1","nodeType":"VariableDeclaration","scope":607,"src":"682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:1"},"src":"619:78:1"},{"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"703:66:1","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":613,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":613,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":664,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"835:72:1","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":621,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":621,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":621,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":664,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"986:202:1","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":631,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:1","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"1219:2:1","nodeType":"VariableDeclaration","scope":631,"src":"1211:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"amount","nameLocation":"1231:6:1","nodeType":"VariableDeclaration","scope":631,"src":"1223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:1"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":631,"src":"1257:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":628,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:1"},"scope":664,"src":"1193:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"1269:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":641,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:1","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"owner","nameLocation":"1565:5:1","nodeType":"VariableDeclaration","scope":641,"src":"1557:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"spender","nameLocation":"1580:7:1","nodeType":"VariableDeclaration","scope":641,"src":"1572:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:1"},"returnParameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":641,"src":"1612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:1"},"scope":664,"src":"1538:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"1627:642:1","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":651,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:1","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":644,"mutability":"mutable","name":"spender","nameLocation":"2299:7:1","nodeType":"VariableDeclaration","scope":651,"src":"2291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":646,"mutability":"mutable","name":"amount","nameLocation":"2316:6:1","nodeType":"VariableDeclaration","scope":651,"src":"2308:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:1"},"returnParameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":651,"src":"2342:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":648,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:1"},"scope":664,"src":"2274:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"2354:287:1","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":663,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:1","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"from","nameLocation":"2676:4:1","nodeType":"VariableDeclaration","scope":663,"src":"2668:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"to","nameLocation":"2690:2:1","nodeType":"VariableDeclaration","scope":663,"src":"2682:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"amount","nameLocation":"2702:6:1","nodeType":"VariableDeclaration","scope":663,"src":"2694:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:1"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":663,"src":"2728:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":660,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:1"},"scope":664,"src":"2646:88:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":665,"src":"202:2534:1","usedErrors":[]}],"src":"106:2631:1"},"id":1},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[664],"IERC20Metadata":[689]},"id":690,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":666,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":667,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":690,"sourceUnit":665,"src":"135:23:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":669,"name":"IERC20","nameLocations":["305:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"305:6:2"},"id":670,"nodeType":"InheritanceSpecifier","src":"305:6:2"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":668,"nodeType":"StructuredDocumentation","src":"160:116:2","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":689,"linearizedBaseContracts":[689,664],"name":"IERC20Metadata","nameLocation":"287:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"318:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":676,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:2","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[],"src":"390:2:2"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":676,"src":"416:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":673,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:2"},"scope":689,"src":"377:54:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"437:56:2","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":682,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:2","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[],"src":"513:2:2"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":682,"src":"539:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":679,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:2"},"scope":689,"src":"498:56:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"560:65:2","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":688,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:2","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"647:2:2"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":688,"src":"673:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":685,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:2"},"scope":689,"src":"630:50:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":690,"src":"277:405:2","usedErrors":[]}],"src":"110:573:2"},"id":2},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[719]},"id":720,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":691,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:3"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"126:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":719,"linearizedBaseContracts":[719],"name":"Context","nameLocation":"641:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":700,"nodeType":"Block","src":"717:34:3","statements":[{"expression":{"expression":{"id":697,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:3","memberName":"sender","nodeType":"MemberAccess","src":"734:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":696,"id":699,"nodeType":"Return","src":"727:17:3"}]},"id":701,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:3","nodeType":"FunctionDefinition","parameters":{"id":693,"nodeType":"ParameterList","parameters":[],"src":"674:2:3"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":701,"src":"708:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:3"},"scope":719,"src":"655:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":709,"nodeType":"Block","src":"824:32:3","statements":[{"expression":{"expression":{"id":706,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:3","memberName":"data","nodeType":"MemberAccess","src":"841:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":705,"id":708,"nodeType":"Return","src":"834:15:3"}]},"id":710,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:3","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[],"src":"774:2:3"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":710,"src":"808:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":703,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:3"},"scope":719,"src":"757:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":717,"nodeType":"Block","src":"934:25:3","statements":[{"expression":{"hexValue":"30","id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":714,"id":716,"nodeType":"Return","src":"944:8:3"}]},"id":718,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:3","nodeType":"FunctionDefinition","parameters":{"id":711,"nodeType":"ParameterList","parameters":[],"src":"891:2:3"},"returnParameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":718,"src":"925:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:3"},"scope":719,"src":"862:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":720,"src":"623:338:3","usedErrors":[]}],"src":"101:861:3"},"id":3},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1814],"SignedMath":[1919],"Strings":[948]},"id":949,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":721,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":722,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":949,"sourceUnit":1815,"src":"126:25:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":723,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":949,"sourceUnit":1920,"src":"152:31:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":724,"nodeType":"StructuredDocumentation","src":"185:34:4","text":" @dev String operations."},"fullyImplemented":true,"id":948,"linearizedBaseContracts":[948],"name":"Strings","nameLocation":"228:7:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":727,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:4","nodeType":"VariableDeclaration","scope":948,"src":"242:54:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":725,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:4","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":730,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:4","nodeType":"VariableDeclaration","scope":948,"src":"302:43:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":728,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:4","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":777,"nodeType":"Block","src":"518:625:4","statements":[{"id":776,"nodeType":"UncheckedBlock","src":"528:609:4","statements":[{"assignments":[739],"declarations":[{"constant":false,"id":739,"mutability":"mutable","name":"length","nameLocation":"560:6:4","nodeType":"VariableDeclaration","scope":776,"src":"552:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":746,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"580:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":740,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"569:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1814_$","typeString":"type(library Math)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:4","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1651,"src":"569:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:4"},{"assignments":[748],"declarations":[{"constant":false,"id":748,"mutability":"mutable","name":"buffer","nameLocation":"618:6:4","nodeType":"VariableDeclaration","scope":776,"src":"604:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":747,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":753,"initialValue":{"arguments":[{"id":751,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"638:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":749,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:4"},{"assignments":[755],"declarations":[{"constant":false,"id":755,"mutability":"mutable","name":"ptr","nameLocation":"667:3:4","nodeType":"VariableDeclaration","scope":776,"src":"659:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":756,"nodeType":"VariableDeclarationStatement","src":"659:11:4"},{"AST":{"nodeType":"YulBlock","src":"740:67:4","statements":[{"nodeType":"YulAssignment","src":"758:35:4","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:4","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:4"},"nodeType":"YulFunctionCall","src":"777:15:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:4"},"nodeType":"YulFunctionCall","src":"765:28:4"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":748,"isOffset":false,"isSlot":false,"src":"769:6:4","valueSize":1},{"declaration":739,"isOffset":false,"isSlot":false,"src":"785:6:4","valueSize":1},{"declaration":755,"isOffset":false,"isSlot":false,"src":"758:3:4","valueSize":1}],"id":757,"nodeType":"InlineAssembly","src":"731:76:4"},{"body":{"id":772,"nodeType":"Block","src":"833:267:4","statements":[{"expression":{"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:4","subExpression":{"id":759,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"851:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":761,"nodeType":"ExpressionStatement","src":"851:5:4"},{"AST":{"nodeType":"YulBlock","src":"934:84:4","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:4"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:4","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:4"},"nodeType":"YulFunctionCall","src":"974:14:4"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:4"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:4"},"nodeType":"YulFunctionCall","src":"969:30:4"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:4"},"nodeType":"YulFunctionCall","src":"956:44:4"},"nodeType":"YulExpressionStatement","src":"956:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":727,"isOffset":false,"isSlot":false,"src":"990:8:4","valueSize":1},{"declaration":755,"isOffset":false,"isSlot":false,"src":"964:3:4","valueSize":1},{"declaration":733,"isOffset":false,"isSlot":false,"src":"978:5:4","valueSize":1}],"id":762,"nodeType":"InlineAssembly","src":"925:93:4"},{"expression":{"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"1035:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":766,"nodeType":"ExpressionStatement","src":"1035:11:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"1068:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":771,"nodeType":"IfStatement","src":"1064:21:4","trueBody":{"id":770,"nodeType":"Break","src":"1080:5:4"}}]},"condition":{"hexValue":"74727565","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":773,"nodeType":"WhileStatement","src":"820:280:4"},{"expression":{"id":774,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"1120:6:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":737,"id":775,"nodeType":"Return","src":"1113:13:4"}]}]},"documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"352:90:4","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":778,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:4","nodeType":"FunctionDefinition","parameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"value","nameLocation":"473:5:4","nodeType":"VariableDeclaration","scope":778,"src":"465:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":732,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:4"},"returnParameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"503:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":735,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:4"},"scope":948,"src":"447:696:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":805,"nodeType":"Block","src":"1313:103:4","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"1354:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:4","trueExpression":{"hexValue":"2d","id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"1400:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":797,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"1385:10:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$1919_$","typeString":"type(library SignedMath)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:4","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":1918,"src":"1385:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":796,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[778,806],"referencedDeclaration":778,"src":"1376:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":788,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:4","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":786,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:4","typeDescriptions":{}}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":785,"id":804,"nodeType":"Return","src":"1323:86:4"}]},"documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"1149:89:4","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":806,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:4","nodeType":"FunctionDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"value","nameLocation":"1268:5:4","nodeType":"VariableDeclaration","scope":806,"src":"1261:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":780,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:4"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":806,"src":"1298:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":783,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:4"},"scope":948,"src":"1243:173:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":825,"nodeType":"Block","src":"1595:100:4","statements":[{"id":824,"nodeType":"UncheckedBlock","src":"1605:84:4","statements":[{"expression":{"arguments":[{"id":815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"1648:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"1667:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":816,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"1655:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1814_$","typeString":"type(library Math)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:4","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":1774,"src":"1655:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":814,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[826,902,922],"referencedDeclaration":902,"src":"1636:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":813,"id":823,"nodeType":"Return","src":"1629:49:4"}]}]},"documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"1422:94:4","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":826,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:4","nodeType":"FunctionDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"value","nameLocation":"1550:5:4","nodeType":"VariableDeclaration","scope":826,"src":"1542:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:4"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"1580:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":811,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:4"},"scope":948,"src":"1521:174:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":901,"nodeType":"Block","src":"1908:347:4","statements":[{"assignments":[837],"declarations":[{"constant":false,"id":837,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:4","nodeType":"VariableDeclaration","scope":901,"src":"1918:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":836,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":846,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":841,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"1954:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":838,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:4"},{"expression":{"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":847,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"1975:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":849,"indexExpression":{"hexValue":"30","id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":852,"nodeType":"ExpressionStatement","src":"1975:15:4"},{"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":853,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2000:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":855,"indexExpression":{"hexValue":"31","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":858,"nodeType":"ExpressionStatement","src":"2000:15:4"},{"body":{"id":887,"nodeType":"Block","src":"2070:83:4","statements":[{"expression":{"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":873,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2084:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":875,"indexExpression":{"id":874,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"2091:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":876,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"2096:8:4","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":880,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"2105:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:4","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":882,"nodeType":"ExpressionStatement","src":"2084:33:4"},{"expression":{"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"2131:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":886,"nodeType":"ExpressionStatement","src":"2131:11:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":867,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"2058:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":888,"initializationExpression":{"assignments":[860],"declarations":[{"constant":false,"id":860,"mutability":"mutable","name":"i","nameLocation":"2038:1:4","nodeType":"VariableDeclaration","scope":888,"src":"2030:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":866,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":862,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"2046:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:4"},"loopExpression":{"expression":{"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:4","subExpression":{"id":870,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"2067:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":872,"nodeType":"ExpressionStatement","src":"2065:3:4"},"nodeType":"ForStatement","src":"2025:128:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"2170:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":895,"nodeType":"ExpressionStatement","src":"2162:55:4"},{"expression":{"arguments":[{"id":898,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2241:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":896,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:4","typeDescriptions":{}}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":835,"id":900,"nodeType":"Return","src":"2227:21:4"}]},"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"1701:112:4","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":902,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:4","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"value","nameLocation":"1847:5:4","nodeType":"VariableDeclaration","scope":902,"src":"1839:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"length","nameLocation":"1862:6:4","nodeType":"VariableDeclaration","scope":902,"src":"1854:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:4"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":902,"src":"1893:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":833,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:4"},"scope":948,"src":"1818:437:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":921,"nodeType":"Block","src":"2480:76:4","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":915,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"2525:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":913,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:4","typeDescriptions":{}}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":911,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:4","typeDescriptions":{}}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":918,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"2533:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":910,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[826,902,922],"referencedDeclaration":902,"src":"2497:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":909,"id":920,"nodeType":"Return","src":"2490:59:4"}]},"documentation":{"id":903,"nodeType":"StructuredDocumentation","src":"2261:141:4","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":922,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:4","nodeType":"FunctionDefinition","parameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"addr","nameLocation":"2436:4:4","nodeType":"VariableDeclaration","scope":922,"src":"2428:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:4"},"returnParameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":922,"src":"2465:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":907,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:4"},"scope":948,"src":"2407:149:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":946,"nodeType":"Block","src":"2711:66:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":935,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"2744:1:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":933,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:4","typeDescriptions":{}}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":932,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":941,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"2767:1:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":939,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:4","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":938,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":931,"id":945,"nodeType":"Return","src":"2721:49:4"}]},"documentation":{"id":923,"nodeType":"StructuredDocumentation","src":"2562:66:4","text":" @dev Returns true if the two strings are equal."},"id":947,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:4","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":925,"mutability":"mutable","name":"a","nameLocation":"2662:1:4","nodeType":"VariableDeclaration","scope":947,"src":"2648:15:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":924,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"b","nameLocation":"2679:1:4","nodeType":"VariableDeclaration","scope":947,"src":"2665:15:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":926,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:4"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":947,"src":"2705:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":929,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:4"},"scope":948,"src":"2633:144:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":949,"src":"220:2559:4","usedErrors":[]}],"src":"101:2679:4"},"id":4},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1814]},"id":1815,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":950,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"128:73:5","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1814,"linearizedBaseContracts":[1814],"name":"Math","nameLocation":"210:4:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":955,"members":[{"id":952,"name":"Down","nameLocation":"245:4:5","nodeType":"EnumValue","src":"245:4:5"},{"id":953,"name":"Up","nameLocation":"287:2:5","nodeType":"EnumValue","src":"287:2:5"},{"id":954,"name":"Zero","nameLocation":"318:4:5","nodeType":"EnumValue","src":"318:4:5"}],"name":"Rounding","nameLocation":"226:8:5","nodeType":"EnumDefinition","src":"221:122:5"},{"body":{"id":972,"nodeType":"Block","src":"480:37:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":965,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"497:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":966,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"501:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":969,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"509:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:5","trueExpression":{"id":968,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"505:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":964,"id":971,"nodeType":"Return","src":"490:20:5"}]},"documentation":{"id":956,"nodeType":"StructuredDocumentation","src":"349:59:5","text":" @dev Returns the largest of two numbers."},"id":973,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:5","nodeType":"FunctionDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"a","nameLocation":"434:1:5","nodeType":"VariableDeclaration","scope":973,"src":"426:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"b","nameLocation":"445:1:5","nodeType":"VariableDeclaration","scope":973,"src":"437:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:5"},"returnParameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":973,"src":"471:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:5"},"scope":1814,"src":"413:104:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":990,"nodeType":"Block","src":"655:37:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":983,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"672:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":984,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"676:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":987,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"684:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:5","trueExpression":{"id":986,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"680:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":982,"id":989,"nodeType":"Return","src":"665:20:5"}]},"documentation":{"id":974,"nodeType":"StructuredDocumentation","src":"523:60:5","text":" @dev Returns the smallest of two numbers."},"id":991,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:5","nodeType":"FunctionDefinition","parameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"a","nameLocation":"609:1:5","nodeType":"VariableDeclaration","scope":991,"src":"601:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"b","nameLocation":"620:1:5","nodeType":"VariableDeclaration","scope":991,"src":"612:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":977,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:5"},"returnParameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":991,"src":"646:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:5"},"scope":1814,"src":"588:104:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"876:82:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1001,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"931:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1002,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"935:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1004,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1005,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"941:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1006,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"945:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1000,"id":1012,"nodeType":"Return","src":"923:28:5"}]},"documentation":{"id":992,"nodeType":"StructuredDocumentation","src":"698:102:5","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:5","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"mutability":"mutable","name":"a","nameLocation":"830:1:5","nodeType":"VariableDeclaration","scope":1014,"src":"822:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"b","nameLocation":"841:1:5","nodeType":"VariableDeclaration","scope":1014,"src":"833:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":995,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:5"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1014,"src":"867:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":998,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:5"},"scope":1814,"src":"805:153:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1038,"nodeType":"Block","src":"1228:123:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1024,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"1316:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1028,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"1330:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1032,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"1339:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:5","trueExpression":{"hexValue":"30","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1023,"id":1037,"nodeType":"Return","src":"1309:35:5"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"964:188:5","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:5","nodeType":"FunctionDefinition","parameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"a","nameLocation":"1182:1:5","nodeType":"VariableDeclaration","scope":1039,"src":"1174:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"b","nameLocation":"1193:1:5","nodeType":"VariableDeclaration","scope":1039,"src":"1185:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:5"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1039,"src":"1219:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:5"},"scope":1814,"src":"1157:194:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1161,"nodeType":"Block","src":"1765:4115:5","statements":[{"id":1160,"nodeType":"UncheckedBlock","src":"1775:4099:5","statements":[{"assignments":[1052],"declarations":[{"constant":false,"id":1052,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:5","nodeType":"VariableDeclaration","scope":1160,"src":"2096:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1053,"nodeType":"VariableDeclarationStatement","src":"2096:13:5"},{"assignments":[1055],"declarations":[{"constant":false,"id":1055,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:5","nodeType":"VariableDeclaration","scope":1160,"src":"2168:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1056,"nodeType":"VariableDeclarationStatement","src":"2168:13:5"},{"AST":{"nodeType":"YulBlock","src":"2248:157:5","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:5","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:5"},"nodeType":"YulFunctionCall","src":"2289:6:5"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:5"},"nodeType":"YulFunctionCall","src":"2276:20:5"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:5","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:5"},"nodeType":"YulFunctionCall","src":"2322:9:5"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:5"}]},{"nodeType":"YulAssignment","src":"2348:43:5","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:5"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:5"},"nodeType":"YulFunctionCall","src":"2361:14:5"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:5"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:5"},"nodeType":"YulFunctionCall","src":"2377:13:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:5"},"nodeType":"YulFunctionCall","src":"2357:34:5"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1052,"isOffset":false,"isSlot":false,"src":"2313:5:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"2369:5:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"2384:5:5","valueSize":1},{"declaration":1055,"isOffset":false,"isSlot":false,"src":"2348:5:5","valueSize":1},{"declaration":1042,"isOffset":false,"isSlot":false,"src":"2283:1:5","valueSize":1},{"declaration":1042,"isOffset":false,"isSlot":false,"src":"2326:1:5","valueSize":1},{"declaration":1044,"isOffset":false,"isSlot":false,"src":"2286:1:5","valueSize":1},{"declaration":1044,"isOffset":false,"isSlot":false,"src":"2329:1:5","valueSize":1}],"id":1057,"nodeType":"InlineAssembly","src":"2239:166:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1058,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2486:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1066,"nodeType":"IfStatement","src":"2482:368:5","trueBody":{"id":1065,"nodeType":"Block","src":"2498:352:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1061,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2816:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1062,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"2824:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1050,"id":1064,"nodeType":"Return","src":"2809:26:5"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1068,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"2960:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1069,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2974:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":1067,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1073,"nodeType":"ExpressionStatement","src":"2952:53:5"},{"assignments":[1075],"declarations":[{"constant":false,"id":1075,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:5","nodeType":"VariableDeclaration","scope":1160,"src":"3261:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1076,"nodeType":"VariableDeclarationStatement","src":"3261:17:5"},{"AST":{"nodeType":"YulBlock","src":"3301:291:5","statements":[{"nodeType":"YulAssignment","src":"3370:38:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:5"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:5"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:5"},"nodeType":"YulFunctionCall","src":"3383:25:5"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:5"}]},{"nodeType":"YulAssignment","src":"3490:41:5","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:5"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:5"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:5"},"nodeType":"YulFunctionCall","src":"3510:20:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:5"},"nodeType":"YulFunctionCall","src":"3499:32:5"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:5"}]},{"nodeType":"YulAssignment","src":"3548:30:5","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:5"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:5"},"nodeType":"YulFunctionCall","src":"3557:21:5"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1046,"isOffset":false,"isSlot":false,"src":"3396:11:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"3524:5:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"3548:5:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"3561:5:5","valueSize":1},{"declaration":1055,"isOffset":false,"isSlot":false,"src":"3490:5:5","valueSize":1},{"declaration":1055,"isOffset":false,"isSlot":false,"src":"3503:5:5","valueSize":1},{"declaration":1075,"isOffset":false,"isSlot":false,"src":"3370:9:5","valueSize":1},{"declaration":1075,"isOffset":false,"isSlot":false,"src":"3513:9:5","valueSize":1},{"declaration":1075,"isOffset":false,"isSlot":false,"src":"3568:9:5","valueSize":1},{"declaration":1042,"isOffset":false,"isSlot":false,"src":"3390:1:5","valueSize":1},{"declaration":1044,"isOffset":false,"isSlot":false,"src":"3393:1:5","valueSize":1}],"id":1077,"nodeType":"InlineAssembly","src":"3292:300:5"},{"assignments":[1079],"declarations":[{"constant":false,"id":1079,"mutability":"mutable","name":"twos","nameLocation":"3907:4:5","nodeType":"VariableDeclaration","scope":1160,"src":"3899:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1087,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1080,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"3914:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:5","subExpression":{"id":1081,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"3930:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:5"},{"AST":{"nodeType":"YulBlock","src":"3969:362:5","statements":[{"nodeType":"YulAssignment","src":"4034:37:5","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:5"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:5"},"nodeType":"YulFunctionCall","src":"4049:22:5"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:5"}]},{"nodeType":"YulAssignment","src":"4138:25:5","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:5"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:5"},"nodeType":"YulFunctionCall","src":"4147:16:5"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:5"}]},{"nodeType":"YulAssignment","src":"4278:39:5","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:5","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:5"},"nodeType":"YulFunctionCall","src":"4294:12:5"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:5"},"nodeType":"YulFunctionCall","src":"4290:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:5"},"nodeType":"YulFunctionCall","src":"4286:31:5"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1046,"isOffset":false,"isSlot":false,"src":"4034:11:5","valueSize":1},{"declaration":1046,"isOffset":false,"isSlot":false,"src":"4053:11:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"4138:5:5","valueSize":1},{"declaration":1052,"isOffset":false,"isSlot":false,"src":"4151:5:5","valueSize":1},{"declaration":1079,"isOffset":false,"isSlot":false,"src":"4066:4:5","valueSize":1},{"declaration":1079,"isOffset":false,"isSlot":false,"src":"4158:4:5","valueSize":1},{"declaration":1079,"isOffset":false,"isSlot":false,"src":"4278:4:5","valueSize":1},{"declaration":1079,"isOffset":false,"isSlot":false,"src":"4301:4:5","valueSize":1},{"declaration":1079,"isOffset":false,"isSlot":false,"src":"4308:4:5","valueSize":1}],"id":1088,"nodeType":"InlineAssembly","src":"3960:371:5"},{"expression":{"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1089,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"4397:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1090,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"4406:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1091,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"4414:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1094,"nodeType":"ExpressionStatement","src":"4397:21:5"},{"assignments":[1096],"declarations":[{"constant":false,"id":1096,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:5","nodeType":"VariableDeclaration","scope":1160,"src":"4736:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1103,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1098,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"4759:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1100,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:5"},{"expression":{"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1104,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"4992:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1106,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5007:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1107,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5021:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1111,"nodeType":"ExpressionStatement","src":"4992:36:5"},{"expression":{"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1112,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5061:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1114,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5076:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1115,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5090:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1119,"nodeType":"ExpressionStatement","src":"5061:36:5"},{"expression":{"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1120,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5131:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1122,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5146:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1123,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5160:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1127,"nodeType":"ExpressionStatement","src":"5131:36:5"},{"expression":{"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1128,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5201:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1130,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5216:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1131,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5230:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1135,"nodeType":"ExpressionStatement","src":"5201:36:5"},{"expression":{"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1136,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5271:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1138,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5286:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1139,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5300:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1143,"nodeType":"ExpressionStatement","src":"5271:36:5"},{"expression":{"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1144,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5342:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1146,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5357:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1147,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5371:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1151,"nodeType":"ExpressionStatement","src":"5342:36:5"},{"expression":{"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1152,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"5812:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1153,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"5821:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1154,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"5829:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1157,"nodeType":"ExpressionStatement","src":"5812:24:5"},{"expression":{"id":1158,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"5857:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1050,"id":1159,"nodeType":"Return","src":"5850:13:5"}]}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"1357:305:5","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1162,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:5","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"x","nameLocation":"1691:1:5","nodeType":"VariableDeclaration","scope":1162,"src":"1683:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"y","nameLocation":"1702:1:5","nodeType":"VariableDeclaration","scope":1162,"src":"1694:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:5","nodeType":"VariableDeclaration","scope":1162,"src":"1705:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1045,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:5"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"result","nameLocation":"1757:6:5","nodeType":"VariableDeclaration","scope":1162,"src":"1749:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:5"},"scope":1814,"src":"1667:4213:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1205,"nodeType":"Block","src":"6122:189:5","statements":[{"assignments":[1178],"declarations":[{"constant":false,"id":1178,"mutability":"mutable","name":"result","nameLocation":"6140:6:5","nodeType":"VariableDeclaration","scope":1205,"src":"6132:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1177,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1184,"initialValue":{"arguments":[{"id":1180,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"6156:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1181,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"6159:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1182,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"6162:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1179,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1162,1206],"referencedDeclaration":1162,"src":"6149:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1185,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"6188:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1186,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"6200:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$955_$","typeString":"type(enum Math.Rounding)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":953,"src":"6200:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"src":"6188:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1190,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"6222:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1191,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"6225:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1192,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"6228:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1189,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:5","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1202,"nodeType":"IfStatement","src":"6184:98:5","trueBody":{"id":1201,"nodeType":"Block","src":"6246:36:5","statements":[{"expression":{"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1197,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"6260:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1200,"nodeType":"ExpressionStatement","src":"6260:11:5"}]}},{"expression":{"id":1203,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"6298:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1176,"id":1204,"nodeType":"Return","src":"6291:13:5"}]},"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"5886:121:5","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:5","nodeType":"FunctionDefinition","parameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"x","nameLocation":"6036:1:5","nodeType":"VariableDeclaration","scope":1206,"src":"6028:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"y","nameLocation":"6047:1:5","nodeType":"VariableDeclaration","scope":1206,"src":"6039:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:5","nodeType":"VariableDeclaration","scope":1206,"src":"6050:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:5","nodeType":"VariableDeclaration","scope":1206,"src":"6071:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"typeName":{"id":1171,"nodeType":"UserDefinedTypeName","pathNode":{"id":1170,"name":"Rounding","nameLocations":["6071:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"6071:8:5"},"referencedDeclaration":955,"src":"6071:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:5"},"returnParameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1206,"src":"6113:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1174,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:5"},"scope":1814,"src":"6012:299:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1317,"nodeType":"Block","src":"6587:1585:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1214,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6601:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1220,"nodeType":"IfStatement","src":"6597:45:5","trueBody":{"id":1219,"nodeType":"Block","src":"6609:33:5","statements":[{"expression":{"hexValue":"30","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1213,"id":1218,"nodeType":"Return","src":"6623:8:5"}]}},{"assignments":[1222],"declarations":[{"constant":false,"id":1222,"mutability":"mutable","name":"result","nameLocation":"7329:6:5","nodeType":"VariableDeclaration","scope":1317,"src":"7321:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1231,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1225,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7349:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1224,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1486,1522],"referencedDeclaration":1486,"src":"7344:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:5"},{"id":1316,"nodeType":"UncheckedBlock","src":"7758:408:5","statements":[{"expression":{"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1232,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7782:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1233,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7792:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1234,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7801:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7805:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1242,"nodeType":"ExpressionStatement","src":"7782:35:5"},{"expression":{"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1243,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7831:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1244,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7841:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1245,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7850:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1246,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7854:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1249,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1253,"nodeType":"ExpressionStatement","src":"7831:35:5"},{"expression":{"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7880:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1255,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7890:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7899:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7903:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1264,"nodeType":"ExpressionStatement","src":"7880:35:5"},{"expression":{"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1265,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7929:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1266,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7939:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1267,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7948:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7952:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1271,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1275,"nodeType":"ExpressionStatement","src":"7929:35:5"},{"expression":{"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7978:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1277,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7988:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1278,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7997:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1279,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8001:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1286,"nodeType":"ExpressionStatement","src":"7978:35:5"},{"expression":{"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1287,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8027:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1288,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8037:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"8046:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1290,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8050:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1297,"nodeType":"ExpressionStatement","src":"8027:35:5"},{"expression":{"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1298,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8076:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8086:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1300,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"8095:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1301,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8099:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1308,"nodeType":"ExpressionStatement","src":"8076:35:5"},{"expression":{"arguments":[{"id":1310,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8136:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1311,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"8144:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8148:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1309,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"8132:3:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1213,"id":1315,"nodeType":"Return","src":"8125:30:5"}]}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"6317:208:5","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1318,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:5","nodeType":"FunctionDefinition","parameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"a","nameLocation":"6552:1:5","nodeType":"VariableDeclaration","scope":1318,"src":"6544:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:5"},"returnParameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1318,"src":"6578:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1211,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:5"},"scope":1814,"src":"6530:1642:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1353,"nodeType":"Block","src":"8348:161:5","statements":[{"id":1352,"nodeType":"UncheckedBlock","src":"8358:145:5","statements":[{"assignments":[1330],"declarations":[{"constant":false,"id":1330,"mutability":"mutable","name":"result","nameLocation":"8390:6:5","nodeType":"VariableDeclaration","scope":1352,"src":"8382:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1334,"initialValue":{"arguments":[{"id":1332,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"8404:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1331,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1318,1354],"referencedDeclaration":1318,"src":"8399:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"8427:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1336,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"8437:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1337,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"8449:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$955_$","typeString":"type(enum Math.Rounding)"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":953,"src":"8449:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"src":"8437:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1340,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"8464:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1341,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"8473:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1343,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"8482:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:5","trueExpression":{"hexValue":"31","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1349,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1328,"id":1351,"nodeType":"Return","src":"8420:72:5"}]}]},"documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"8178:89:5","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1354,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:5","nodeType":"FunctionDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"a","nameLocation":"8294:1:5","nodeType":"VariableDeclaration","scope":1354,"src":"8286:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1324,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:5","nodeType":"VariableDeclaration","scope":1354,"src":"8297:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"typeName":{"id":1323,"nodeType":"UserDefinedTypeName","pathNode":{"id":1322,"name":"Rounding","nameLocations":["8297:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"8297:8:5"},"referencedDeclaration":955,"src":"8297:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:5"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1354,"src":"8339:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1326,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:5"},"scope":1814,"src":"8272:237:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1485,"nodeType":"Block","src":"8694:922:5","statements":[{"assignments":[1363],"declarations":[{"constant":false,"id":1363,"mutability":"mutable","name":"result","nameLocation":"8712:6:5","nodeType":"VariableDeclaration","scope":1485,"src":"8704:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1365,"initialValue":{"hexValue":"30","id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:5"},{"id":1482,"nodeType":"UncheckedBlock","src":"8732:855:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"8760:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1380,"nodeType":"IfStatement","src":"8756:99:5","trueBody":{"id":1379,"nodeType":"Block","src":"8778:77:5","statements":[{"expression":{"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"8796:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1374,"nodeType":"ExpressionStatement","src":"8796:13:5"},{"expression":{"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1375,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"8827:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1378,"nodeType":"ExpressionStatement","src":"8827:13:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"8872:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1395,"nodeType":"IfStatement","src":"8868:96:5","trueBody":{"id":1394,"nodeType":"Block","src":"8889:75:5","statements":[{"expression":{"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"8907:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1389,"nodeType":"ExpressionStatement","src":"8907:12:5"},{"expression":{"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1390,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"8937:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1393,"nodeType":"ExpressionStatement","src":"8937:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"8981:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1410,"nodeType":"IfStatement","src":"8977:96:5","trueBody":{"id":1409,"nodeType":"Block","src":"8998:75:5","statements":[{"expression":{"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9016:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1404,"nodeType":"ExpressionStatement","src":"9016:12:5"},{"expression":{"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1405,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9046:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1408,"nodeType":"ExpressionStatement","src":"9046:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9090:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1425,"nodeType":"IfStatement","src":"9086:96:5","trueBody":{"id":1424,"nodeType":"Block","src":"9107:75:5","statements":[{"expression":{"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9125:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1419,"nodeType":"ExpressionStatement","src":"9125:12:5"},{"expression":{"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1420,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9155:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1423,"nodeType":"ExpressionStatement","src":"9155:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9199:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1440,"nodeType":"IfStatement","src":"9195:93:5","trueBody":{"id":1439,"nodeType":"Block","src":"9215:73:5","statements":[{"expression":{"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9233:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1434,"nodeType":"ExpressionStatement","src":"9233:11:5"},{"expression":{"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9262:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1438,"nodeType":"ExpressionStatement","src":"9262:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9305:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1455,"nodeType":"IfStatement","src":"9301:93:5","trueBody":{"id":1454,"nodeType":"Block","src":"9321:73:5","statements":[{"expression":{"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9339:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1449,"nodeType":"ExpressionStatement","src":"9339:11:5"},{"expression":{"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1450,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9368:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1453,"nodeType":"ExpressionStatement","src":"9368:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9411:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1470,"nodeType":"IfStatement","src":"9407:93:5","trueBody":{"id":1469,"nodeType":"Block","src":"9427:73:5","statements":[{"expression":{"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9445:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1464,"nodeType":"ExpressionStatement","src":"9445:11:5"},{"expression":{"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1465,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9474:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1468,"nodeType":"ExpressionStatement","src":"9474:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"9517:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1481,"nodeType":"IfStatement","src":"9513:64:5","trueBody":{"id":1480,"nodeType":"Block","src":"9533:44:5","statements":[{"expression":{"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1476,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9551:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1479,"nodeType":"ExpressionStatement","src":"9551:11:5"}]}}]},{"expression":{"id":1483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9603:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1361,"id":1484,"nodeType":"Return","src":"9596:13:5"}]},"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"8515:113:5","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1486,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:5","nodeType":"FunctionDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"mutability":"mutable","name":"value","nameLocation":"8655:5:5","nodeType":"VariableDeclaration","scope":1486,"src":"8647:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:5"},"returnParameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1486,"src":"8685:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:5"},"scope":1814,"src":"8633:983:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1521,"nodeType":"Block","src":"9849:165:5","statements":[{"id":1520,"nodeType":"UncheckedBlock","src":"9859:149:5","statements":[{"assignments":[1498],"declarations":[{"constant":false,"id":1498,"mutability":"mutable","name":"result","nameLocation":"9891:6:5","nodeType":"VariableDeclaration","scope":1520,"src":"9883:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1502,"initialValue":{"arguments":[{"id":1500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"9905:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1499,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1486,1522],"referencedDeclaration":1486,"src":"9900:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1503,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"9932:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1504,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"9942:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1505,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"9954:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$955_$","typeString":"type(enum Math.Rounding)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":953,"src":"9954:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"src":"9942:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1509,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"9974:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"9983:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:5","trueExpression":{"hexValue":"31","id":1514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1517,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1496,"id":1519,"nodeType":"Return","src":"9925:72:5"}]}]},"documentation":{"id":1487,"nodeType":"StructuredDocumentation","src":"9622:142:5","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1522,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:5","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1489,"mutability":"mutable","name":"value","nameLocation":"9791:5:5","nodeType":"VariableDeclaration","scope":1522,"src":"9783:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:5","nodeType":"VariableDeclaration","scope":1522,"src":"9798:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"typeName":{"id":1491,"nodeType":"UserDefinedTypeName","pathNode":{"id":1490,"name":"Rounding","nameLocations":["9798:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"9798:8:5"},"referencedDeclaration":955,"src":"9798:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:5"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1522,"src":"9840:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:5"},"scope":1814,"src":"9769:245:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1650,"nodeType":"Block","src":"10201:854:5","statements":[{"assignments":[1531],"declarations":[{"constant":false,"id":1531,"mutability":"mutable","name":"result","nameLocation":"10219:6:5","nodeType":"VariableDeclaration","scope":1650,"src":"10211:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1533,"initialValue":{"hexValue":"30","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:5"},{"id":1647,"nodeType":"UncheckedBlock","src":"10239:787:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10267:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1550,"nodeType":"IfStatement","src":"10263:103:5","trueBody":{"id":1549,"nodeType":"Block","src":"10286:80:5","statements":[{"expression":{"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10304:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1544,"nodeType":"ExpressionStatement","src":"10304:17:5"},{"expression":{"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1545,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10339:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1548,"nodeType":"ExpressionStatement","src":"10339:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10383:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1567,"nodeType":"IfStatement","src":"10379:103:5","trueBody":{"id":1566,"nodeType":"Block","src":"10402:80:5","statements":[{"expression":{"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10420:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1561,"nodeType":"ExpressionStatement","src":"10420:17:5"},{"expression":{"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1562,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10455:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1565,"nodeType":"ExpressionStatement","src":"10455:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10499:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1584,"nodeType":"IfStatement","src":"10495:103:5","trueBody":{"id":1583,"nodeType":"Block","src":"10518:80:5","statements":[{"expression":{"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10536:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1578,"nodeType":"ExpressionStatement","src":"10536:17:5"},{"expression":{"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10571:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1582,"nodeType":"ExpressionStatement","src":"10571:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10615:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1601,"nodeType":"IfStatement","src":"10611:100:5","trueBody":{"id":1600,"nodeType":"Block","src":"10633:78:5","statements":[{"expression":{"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10651:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1595,"nodeType":"ExpressionStatement","src":"10651:16:5"},{"expression":{"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1596,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10685:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1599,"nodeType":"ExpressionStatement","src":"10685:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10728:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1618,"nodeType":"IfStatement","src":"10724:100:5","trueBody":{"id":1617,"nodeType":"Block","src":"10746:78:5","statements":[{"expression":{"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10764:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1612,"nodeType":"ExpressionStatement","src":"10764:16:5"},{"expression":{"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1613,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10798:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1616,"nodeType":"ExpressionStatement","src":"10798:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10841:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1635,"nodeType":"IfStatement","src":"10837:100:5","trueBody":{"id":1634,"nodeType":"Block","src":"10859:78:5","statements":[{"expression":{"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10877:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1629,"nodeType":"ExpressionStatement","src":"10877:16:5"},{"expression":{"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1630,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10911:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1633,"nodeType":"ExpressionStatement","src":"10911:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"10954:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1646,"nodeType":"IfStatement","src":"10950:66:5","trueBody":{"id":1645,"nodeType":"Block","src":"10972:44:5","statements":[{"expression":{"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1641,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"10990:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1644,"nodeType":"ExpressionStatement","src":"10990:11:5"}]}}]},{"expression":{"id":1648,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"11042:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1529,"id":1649,"nodeType":"Return","src":"11035:13:5"}]},"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"10020:114:5","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1651,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:5","nodeType":"FunctionDefinition","parameters":{"id":1526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"value","nameLocation":"10162:5:5","nodeType":"VariableDeclaration","scope":1651,"src":"10154:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1524,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:5"},"returnParameters":{"id":1529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1651,"src":"10192:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1527,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:5"},"scope":1814,"src":"10139:916:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1686,"nodeType":"Block","src":"11290:167:5","statements":[{"id":1685,"nodeType":"UncheckedBlock","src":"11300:151:5","statements":[{"assignments":[1663],"declarations":[{"constant":false,"id":1663,"mutability":"mutable","name":"result","nameLocation":"11332:6:5","nodeType":"VariableDeclaration","scope":1685,"src":"11324:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1662,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1667,"initialValue":{"arguments":[{"id":1665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"11347:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1664,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1651,1687],"referencedDeclaration":1651,"src":"11341:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1668,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"11374:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1669,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"11384:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1670,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"11396:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$955_$","typeString":"type(enum Math.Rounding)"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":953,"src":"11396:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"src":"11384:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"11417:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"11426:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:5","trueExpression":{"hexValue":"31","id":1679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1661,"id":1684,"nodeType":"Return","src":"11367:73:5"}]}]},"documentation":{"id":1652,"nodeType":"StructuredDocumentation","src":"11061:143:5","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1687,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:5","nodeType":"FunctionDefinition","parameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1654,"mutability":"mutable","name":"value","nameLocation":"11232:5:5","nodeType":"VariableDeclaration","scope":1687,"src":"11224:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1657,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:5","nodeType":"VariableDeclaration","scope":1687,"src":"11239:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"typeName":{"id":1656,"nodeType":"UserDefinedTypeName","pathNode":{"id":1655,"name":"Rounding","nameLocations":["11239:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"11239:8:5"},"referencedDeclaration":955,"src":"11239:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:5"},"returnParameters":{"id":1661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1687,"src":"11281:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:5"},"scope":1814,"src":"11209:248:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1773,"nodeType":"Block","src":"11771:600:5","statements":[{"assignments":[1696],"declarations":[{"constant":false,"id":1696,"mutability":"mutable","name":"result","nameLocation":"11789:6:5","nodeType":"VariableDeclaration","scope":1773,"src":"11781:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1698,"initialValue":{"hexValue":"30","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:5"},{"id":1770,"nodeType":"UncheckedBlock","src":"11809:533:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"11837:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1713,"nodeType":"IfStatement","src":"11833:98:5","trueBody":{"id":1712,"nodeType":"Block","src":"11855:76:5","statements":[{"expression":{"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"11873:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1707,"nodeType":"ExpressionStatement","src":"11873:13:5"},{"expression":{"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1708,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"11904:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1711,"nodeType":"ExpressionStatement","src":"11904:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"11948:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1728,"nodeType":"IfStatement","src":"11944:95:5","trueBody":{"id":1727,"nodeType":"Block","src":"11965:74:5","statements":[{"expression":{"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"11983:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1722,"nodeType":"ExpressionStatement","src":"11983:12:5"},{"expression":{"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1723,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"12013:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1726,"nodeType":"ExpressionStatement","src":"12013:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"12056:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1743,"nodeType":"IfStatement","src":"12052:95:5","trueBody":{"id":1742,"nodeType":"Block","src":"12073:74:5","statements":[{"expression":{"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"12091:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1737,"nodeType":"ExpressionStatement","src":"12091:12:5"},{"expression":{"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1738,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"12121:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1741,"nodeType":"ExpressionStatement","src":"12121:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"12164:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1758,"nodeType":"IfStatement","src":"12160:95:5","trueBody":{"id":1757,"nodeType":"Block","src":"12181:74:5","statements":[{"expression":{"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"12199:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1752,"nodeType":"ExpressionStatement","src":"12199:12:5"},{"expression":{"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1753,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"12229:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1756,"nodeType":"ExpressionStatement","src":"12229:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"12272:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1769,"nodeType":"IfStatement","src":"12268:64:5","trueBody":{"id":1768,"nodeType":"Block","src":"12288:44:5","statements":[{"expression":{"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"12306:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1767,"nodeType":"ExpressionStatement","src":"12306:11:5"}]}}]},{"expression":{"id":1771,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"12358:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1694,"id":1772,"nodeType":"Return","src":"12351:13:5"}]},"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"11463:240:5","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1774,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:5","nodeType":"FunctionDefinition","parameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"value","nameLocation":"11732:5:5","nodeType":"VariableDeclaration","scope":1774,"src":"11724:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:5"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1774,"src":"11762:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1692,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:5"},"scope":1814,"src":"11708:663:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1812,"nodeType":"Block","src":"12608:174:5","statements":[{"id":1811,"nodeType":"UncheckedBlock","src":"12618:158:5","statements":[{"assignments":[1786],"declarations":[{"constant":false,"id":1786,"mutability":"mutable","name":"result","nameLocation":"12650:6:5","nodeType":"VariableDeclaration","scope":1811,"src":"12642:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1790,"initialValue":{"arguments":[{"id":1788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"12666:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1787,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1774,1813],"referencedDeclaration":1774,"src":"12659:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"12693:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1792,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"12703:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1793,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"12715:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$955_$","typeString":"type(enum Math.Rounding)"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":953,"src":"12715:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"src":"12703:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1797,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"12736:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1800,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"12751:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:5","trueExpression":{"hexValue":"31","id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1784,"id":1810,"nodeType":"Return","src":"12686:79:5"}]}]},"documentation":{"id":1775,"nodeType":"StructuredDocumentation","src":"12377:144:5","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1813,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:5","nodeType":"FunctionDefinition","parameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"value","nameLocation":"12550:5:5","nodeType":"VariableDeclaration","scope":1813,"src":"12542:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1776,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:5","nodeType":"VariableDeclaration","scope":1813,"src":"12557:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"},"typeName":{"id":1779,"nodeType":"UserDefinedTypeName","pathNode":{"id":1778,"name":"Rounding","nameLocations":["12557:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"12557:8:5"},"referencedDeclaration":955,"src":"12557:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$955","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:5"},"returnParameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1813,"src":"12599:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:5"},"scope":1814,"src":"12526:256:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1815,"src":"202:12582:5","usedErrors":[]}],"src":"103:12682:5"},"id":5},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[1919]},"id":1920,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1816,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"134:80:6","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1919,"linearizedBaseContracts":[1919],"name":"SignedMath","nameLocation":"223:10:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1834,"nodeType":"Block","src":"375:37:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1827,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"392:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1828,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"396:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1831,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"404:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:6","trueExpression":{"id":1830,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"400:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1826,"id":1833,"nodeType":"Return","src":"385:20:6"}]},"documentation":{"id":1818,"nodeType":"StructuredDocumentation","src":"240:66:6","text":" @dev Returns the largest of two signed numbers."},"id":1835,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:6","nodeType":"FunctionDefinition","parameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"a","nameLocation":"331:1:6","nodeType":"VariableDeclaration","scope":1835,"src":"324:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1819,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1822,"mutability":"mutable","name":"b","nameLocation":"341:1:6","nodeType":"VariableDeclaration","scope":1835,"src":"334:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1821,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:6"},"returnParameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1835,"src":"367:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1824,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:6"},"scope":1919,"src":"311:101:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1852,"nodeType":"Block","src":"554:37:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1845,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"571:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1846,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"575:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1849,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"583:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:6","trueExpression":{"id":1848,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"579:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1844,"id":1851,"nodeType":"Return","src":"564:20:6"}]},"documentation":{"id":1836,"nodeType":"StructuredDocumentation","src":"418:67:6","text":" @dev Returns the smallest of two signed numbers."},"id":1853,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:6","nodeType":"FunctionDefinition","parameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"a","nameLocation":"510:1:6","nodeType":"VariableDeclaration","scope":1853,"src":"503:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1837,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"b","nameLocation":"520:1:6","nodeType":"VariableDeclaration","scope":1853,"src":"513:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1839,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:6"},"returnParameters":{"id":1844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1853,"src":"546:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1842,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:6"},"scope":1919,"src":"490:101:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1896,"nodeType":"Block","src":"796:162:6","statements":[{"assignments":[1864],"declarations":[{"constant":false,"id":1864,"mutability":"mutable","name":"x","nameLocation":"865:1:6","nodeType":"VariableDeclaration","scope":1896,"src":"858:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1863,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1877,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1865,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"870:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1866,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"874:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1869,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"881:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1870,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"885:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1875,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:6"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1878,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"910:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1883,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"930:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1881,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:6","typeDescriptions":{}}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1879,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:6","typeDescriptions":{}}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1888,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"944:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1889,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"948:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1893,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1862,"id":1895,"nodeType":"Return","src":"903:48:6"}]},"documentation":{"id":1854,"nodeType":"StructuredDocumentation","src":"597:126:6","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":1897,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:6","nodeType":"FunctionDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"a","nameLocation":"752:1:6","nodeType":"VariableDeclaration","scope":1897,"src":"745:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1855,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"b","nameLocation":"762:1:6","nodeType":"VariableDeclaration","scope":1897,"src":"755:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1857,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:6"},"returnParameters":{"id":1862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1897,"src":"788:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1860,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:6"},"scope":1919,"src":"728:230:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1917,"nodeType":"Block","src":"1102:158:6","statements":[{"id":1916,"nodeType":"UncheckedBlock","src":"1112:142:6","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1907,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"1227:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:6","subExpression":{"id":1911,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"1241:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:6","trueExpression":{"id":1910,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"1236:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:6","typeDescriptions":{}}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1904,"id":1915,"nodeType":"Return","src":"1212:31:6"}]}]},"documentation":{"id":1898,"nodeType":"StructuredDocumentation","src":"964:78:6","text":" @dev Returns the absolute unsigned value of a signed value."},"id":1918,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:6","nodeType":"FunctionDefinition","parameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"n","nameLocation":"1067:1:6","nodeType":"VariableDeclaration","scope":1918,"src":"1060:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1899,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:6"},"returnParameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1918,"src":"1093:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1902,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:6"},"scope":1919,"src":"1047:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1920,"src":"215:1047:6","usedErrors":[]}],"src":"109:1154:6"},"id":6},"contracts/PlanetDAO.sol":{"ast":{"absolutePath":"contracts/PlanetDAO.sol","exportedSymbols":{"Context":[719],"ERC20":[586],"IERC20":[664],"IERC20Metadata":[689],"Math":[1814],"PlanetDAO":[3542],"SignedMath":[1919],"Strings":[948]},"id":3543,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1921,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":1922,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3543,"sourceUnit":949,"src":"58:51:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1923,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3543,"sourceUnit":587,"src":"111:55:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"PlanetDAO","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3542,"linearizedBaseContracts":[3542],"name":"PlanetDAO","nameLocation":"179:9:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PlanetDAO.dao_uri_struct","id":1930,"members":[{"constant":false,"id":1925,"mutability":"mutable","name":"dao_wallet","nameLocation":"230:10:7","nodeType":"VariableDeclaration","scope":1930,"src":"223:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1924,"name":"string","nodeType":"ElementaryTypeName","src":"223:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1927,"mutability":"mutable","name":"dao_uri","nameLocation":"254:7:7","nodeType":"VariableDeclaration","scope":1930,"src":"247:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1926,"name":"string","nodeType":"ElementaryTypeName","src":"247:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1929,"mutability":"mutable","name":"finished","nameLocation":"275:8:7","nodeType":"VariableDeclaration","scope":1930,"src":"268:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1928,"name":"string","nodeType":"ElementaryTypeName","src":"268:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"dao_uri_struct","nameLocation":"201:14:7","nodeType":"StructDefinition","scope":3542,"src":"194:95:7","visibility":"public"},{"canonicalName":"PlanetDAO.goal_uri_struct","id":1935,"members":[{"constant":false,"id":1932,"mutability":"mutable","name":"dao_id","nameLocation":"330:6:7","nodeType":"VariableDeclaration","scope":1935,"src":"323:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1931,"name":"string","nodeType":"ElementaryTypeName","src":"323:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"goal_uri","nameLocation":"350:8:7","nodeType":"VariableDeclaration","scope":1935,"src":"343:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1933,"name":"string","nodeType":"ElementaryTypeName","src":"343:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"goal_uri_struct","nameLocation":"300:15:7","nodeType":"StructDefinition","scope":3542,"src":"293:71:7","visibility":"public"},{"canonicalName":"PlanetDAO.ideas_uri_struct","id":1942,"members":[{"constant":false,"id":1937,"mutability":"mutable","name":"goal_id","nameLocation":"409:7:7","nodeType":"VariableDeclaration","scope":1942,"src":"401:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"401:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1939,"mutability":"mutable","name":"ideas_uri","nameLocation":"430:9:7","nodeType":"VariableDeclaration","scope":1942,"src":"423:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1938,"name":"string","nodeType":"ElementaryTypeName","src":"423:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"donation","nameLocation":"454:8:7","nodeType":"VariableDeclaration","scope":1942,"src":"446:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ideas_uri_struct","nameLocation":"377:16:7","nodeType":"StructDefinition","scope":3542,"src":"370:98:7","visibility":"public"},{"canonicalName":"PlanetDAO.donation_struct","id":1949,"members":[{"constant":false,"id":1944,"mutability":"mutable","name":"ideas_id","nameLocation":"512:8:7","nodeType":"VariableDeclaration","scope":1949,"src":"504:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1943,"name":"uint256","nodeType":"ElementaryTypeName","src":"504:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1946,"mutability":"mutable","name":"userid","nameLocation":"535:6:7","nodeType":"VariableDeclaration","scope":1949,"src":"527:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"527:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1948,"mutability":"mutable","name":"donation","nameLocation":"556:8:7","nodeType":"VariableDeclaration","scope":1949,"src":"548:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1947,"name":"uint256","nodeType":"ElementaryTypeName","src":"548:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"donation_struct","nameLocation":"481:15:7","nodeType":"StructDefinition","scope":3542,"src":"474:96:7","visibility":"public"},{"canonicalName":"PlanetDAO.smart_contract_uri_struct","id":1956,"members":[{"constant":false,"id":1951,"mutability":"mutable","name":"smart_contract_id","nameLocation":"624:17:7","nodeType":"VariableDeclaration","scope":1956,"src":"616:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"616:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1953,"mutability":"mutable","name":"ideas_id","nameLocation":"656:8:7","nodeType":"VariableDeclaration","scope":1956,"src":"648:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1952,"name":"uint256","nodeType":"ElementaryTypeName","src":"648:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1955,"mutability":"mutable","name":"smart_contract_uri","nameLocation":"678:18:7","nodeType":"VariableDeclaration","scope":1956,"src":"671:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1954,"name":"string","nodeType":"ElementaryTypeName","src":"671:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"smart_contract_uri_struct","nameLocation":"583:25:7","nodeType":"StructDefinition","scope":3542,"src":"576:126:7","visibility":"public"},{"canonicalName":"PlanetDAO.goal_ideas_votes_struct","id":1963,"members":[{"constant":false,"id":1958,"mutability":"mutable","name":"goal_id","nameLocation":"752:7:7","nodeType":"VariableDeclaration","scope":1963,"src":"744:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1957,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"ideas_id","nameLocation":"774:8:7","nodeType":"VariableDeclaration","scope":1963,"src":"766:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1959,"name":"uint256","nodeType":"ElementaryTypeName","src":"766:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"user_id","nameLocation":"797:7:7","nodeType":"VariableDeclaration","scope":1963,"src":"789:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"789:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"goal_ideas_votes_struct","nameLocation":"713:23:7","nodeType":"StructDefinition","scope":3542,"src":"706:104:7","visibility":"public"},{"canonicalName":"PlanetDAO.message_struct","id":1972,"members":[{"constant":false,"id":1965,"mutability":"mutable","name":"message_id","nameLocation":"851:10:7","nodeType":"VariableDeclaration","scope":1972,"src":"843:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1964,"name":"uint256","nodeType":"ElementaryTypeName","src":"843:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1967,"mutability":"mutable","name":"ideas_id","nameLocation":"876:8:7","nodeType":"VariableDeclaration","scope":1972,"src":"868:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"868:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1969,"mutability":"mutable","name":"message","nameLocation":"898:7:7","nodeType":"VariableDeclaration","scope":1972,"src":"891:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1968,"name":"string","nodeType":"ElementaryTypeName","src":"891:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"sender","nameLocation":"919:6:7","nodeType":"VariableDeclaration","scope":1972,"src":"912:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1970,"name":"string","nodeType":"ElementaryTypeName","src":"912:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"message_struct","nameLocation":"821:14:7","nodeType":"StructDefinition","scope":3542,"src":"814:117:7","visibility":"public"},{"canonicalName":"PlanetDAO.message_read_struct","id":1981,"members":[{"constant":false,"id":1974,"mutability":"mutable","name":"message_id","nameLocation":"977:10:7","nodeType":"VariableDeclaration","scope":1981,"src":"969:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"969:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1976,"mutability":"mutable","name":"ideas_id","nameLocation":"1002:8:7","nodeType":"VariableDeclaration","scope":1981,"src":"994:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1975,"name":"uint256","nodeType":"ElementaryTypeName","src":"994:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1978,"mutability":"mutable","name":"user_id","nameLocation":"1025:7:7","nodeType":"VariableDeclaration","scope":1981,"src":"1017:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1977,"name":"uint256","nodeType":"ElementaryTypeName","src":"1017:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1980,"mutability":"mutable","name":"msg_type","nameLocation":"1046:8:7","nodeType":"VariableDeclaration","scope":1981,"src":"1039:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1979,"name":"string","nodeType":"ElementaryTypeName","src":"1039:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"message_read_struct","nameLocation":"942:19:7","nodeType":"StructDefinition","scope":3542,"src":"935:125:7","visibility":"public"},{"canonicalName":"PlanetDAO.reply_struct","id":1990,"members":[{"constant":false,"id":1983,"mutability":"mutable","name":"reply_id","nameLocation":"1099:8:7","nodeType":"VariableDeclaration","scope":1990,"src":"1091:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1982,"name":"uint256","nodeType":"ElementaryTypeName","src":"1091:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1985,"mutability":"mutable","name":"message_id","nameLocation":"1122:10:7","nodeType":"VariableDeclaration","scope":1990,"src":"1114:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1984,"name":"uint256","nodeType":"ElementaryTypeName","src":"1114:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1987,"mutability":"mutable","name":"ideas_id","nameLocation":"1147:8:7","nodeType":"VariableDeclaration","scope":1990,"src":"1139:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"1139:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1989,"mutability":"mutable","name":"message","nameLocation":"1169:7:7","nodeType":"VariableDeclaration","scope":1990,"src":"1162:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1988,"name":"string","nodeType":"ElementaryTypeName","src":"1162:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"reply_struct","nameLocation":"1071:12:7","nodeType":"StructDefinition","scope":3542,"src":"1064:118:7","visibility":"public"},{"canonicalName":"PlanetDAO.UnbondingRequest","id":1995,"members":[{"constant":false,"id":1992,"mutability":"mutable","name":"completionTime","nameLocation":"1225:14:7","nodeType":"VariableDeclaration","scope":1995,"src":"1219:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":1991,"name":"int64","nodeType":"ElementaryTypeName","src":"1219:5:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":1994,"mutability":"mutable","name":"amount","nameLocation":"1254:6:7","nodeType":"VariableDeclaration","scope":1995,"src":"1246:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"1246:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UnbondingRequest","nameLocation":"1195:16:7","nodeType":"StructDefinition","scope":3542,"src":"1188:78:7","visibility":"public"},{"canonicalName":"PlanetDAO.join_struct","id":2000,"members":[{"constant":false,"id":1997,"mutability":"mutable","name":"daoid","nameLocation":"1306:5:7","nodeType":"VariableDeclaration","scope":2000,"src":"1298:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1996,"name":"uint256","nodeType":"ElementaryTypeName","src":"1298:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1999,"mutability":"mutable","name":"user_id","nameLocation":"1326:7:7","nodeType":"VariableDeclaration","scope":2000,"src":"1318:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1998,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"join_struct","nameLocation":"1279:11:7","nodeType":"StructDefinition","scope":3542,"src":"1272:67:7","visibility":"public"},{"canonicalName":"PlanetDAO.user_badge_struct","id":2019,"members":[{"constant":false,"id":2002,"mutability":"mutable","name":"user_id","nameLocation":"1385:7:7","nodeType":"VariableDeclaration","scope":2019,"src":"1377:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2001,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2004,"mutability":"mutable","name":"dao","nameLocation":"1404:3:7","nodeType":"VariableDeclaration","scope":2019,"src":"1399:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2003,"name":"bool","nodeType":"ElementaryTypeName","src":"1399:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2006,"mutability":"mutable","name":"joined","nameLocation":"1419:6:7","nodeType":"VariableDeclaration","scope":2019,"src":"1414:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2005,"name":"bool","nodeType":"ElementaryTypeName","src":"1414:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2008,"mutability":"mutable","name":"goal","nameLocation":"1437:4:7","nodeType":"VariableDeclaration","scope":2019,"src":"1432:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2007,"name":"bool","nodeType":"ElementaryTypeName","src":"1432:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2010,"mutability":"mutable","name":"ideas","nameLocation":"1453:5:7","nodeType":"VariableDeclaration","scope":2019,"src":"1448:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2009,"name":"bool","nodeType":"ElementaryTypeName","src":"1448:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2012,"mutability":"mutable","name":"vote","nameLocation":"1470:4:7","nodeType":"VariableDeclaration","scope":2019,"src":"1465:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2011,"name":"bool","nodeType":"ElementaryTypeName","src":"1465:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2014,"mutability":"mutable","name":"donation","nameLocation":"1486:8:7","nodeType":"VariableDeclaration","scope":2019,"src":"1481:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2013,"name":"bool","nodeType":"ElementaryTypeName","src":"1481:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2016,"mutability":"mutable","name":"comment","nameLocation":"1506:7:7","nodeType":"VariableDeclaration","scope":2019,"src":"1501:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2015,"name":"bool","nodeType":"ElementaryTypeName","src":"1501:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2018,"mutability":"mutable","name":"reply","nameLocation":"1525:5:7","nodeType":"VariableDeclaration","scope":2019,"src":"1520:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2017,"name":"bool","nodeType":"ElementaryTypeName","src":"1520:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"user_badge_struct","nameLocation":"1352:17:7","nodeType":"StructDefinition","scope":3542,"src":"1345:191:7","visibility":"public"},{"canonicalName":"PlanetDAO.feed_struct","id":2028,"members":[{"constant":false,"id":2021,"mutability":"mutable","name":"feed_id","nameLocation":"1576:7:7","nodeType":"VariableDeclaration","scope":2028,"src":"1568:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2020,"name":"uint256","nodeType":"ElementaryTypeName","src":"1568:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2023,"mutability":"mutable","name":"date","nameLocation":"1598:4:7","nodeType":"VariableDeclaration","scope":2028,"src":"1590:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2022,"name":"uint256","nodeType":"ElementaryTypeName","src":"1590:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2025,"mutability":"mutable","name":"Type","nameLocation":"1616:4:7","nodeType":"VariableDeclaration","scope":2028,"src":"1609:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2024,"name":"string","nodeType":"ElementaryTypeName","src":"1609:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2027,"mutability":"mutable","name":"data","nameLocation":"1634:4:7","nodeType":"VariableDeclaration","scope":2028,"src":"1627:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2026,"name":"string","nodeType":"ElementaryTypeName","src":"1627:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"feed_struct","nameLocation":"1549:11:7","nodeType":"StructDefinition","scope":3542,"src":"1542:102:7","visibility":"public"},{"constant":false,"functionSelector":"7bbd582d","id":2030,"mutability":"mutable","name":"_dao_ids","nameLocation":"1663:8:7","nodeType":"VariableDeclaration","scope":3542,"src":"1648:23:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ec245802","id":2032,"mutability":"mutable","name":"_donations_ids","nameLocation":"1691:14:7","nodeType":"VariableDeclaration","scope":3542,"src":"1676:29:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"13bf4cea","id":2034,"mutability":"mutable","name":"_goal_ids","nameLocation":"1725:9:7","nodeType":"VariableDeclaration","scope":3542,"src":"1710:24:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1710:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d3791b20","id":2036,"mutability":"mutable","name":"_ideas_ids","nameLocation":"1754:10:7","nodeType":"VariableDeclaration","scope":3542,"src":"1739:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2035,"name":"uint256","nodeType":"ElementaryTypeName","src":"1739:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1171b621","id":2038,"mutability":"mutable","name":"_join_ids","nameLocation":"1784:9:7","nodeType":"VariableDeclaration","scope":3542,"src":"1769:24:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"1769:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1b592aeb","id":2040,"mutability":"mutable","name":"_smart_contract_ids","nameLocation":"1813:19:7","nodeType":"VariableDeclaration","scope":3542,"src":"1798:34:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2039,"name":"uint256","nodeType":"ElementaryTypeName","src":"1798:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"4a797bd7","id":2042,"mutability":"mutable","name":"_ideas_vote_ids","nameLocation":"1852:15:7","nodeType":"VariableDeclaration","scope":3542,"src":"1837:30:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1837:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"9077007d","id":2044,"mutability":"mutable","name":"_message_ids","nameLocation":"1887:12:7","nodeType":"VariableDeclaration","scope":3542,"src":"1872:27:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1872:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ca013f17","id":2046,"mutability":"mutable","name":"_message_read_ids","nameLocation":"1919:17:7","nodeType":"VariableDeclaration","scope":3542,"src":"1904:32:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"1904:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"aa2bf5d3","id":2048,"mutability":"mutable","name":"_reply_ids","nameLocation":"1956:10:7","nodeType":"VariableDeclaration","scope":3542,"src":"1941:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2047,"name":"uint256","nodeType":"ElementaryTypeName","src":"1941:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8ac4110c","id":2050,"mutability":"mutable","name":"_feed_ids","nameLocation":"1986:9:7","nodeType":"VariableDeclaration","scope":3542,"src":"1971:24:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2049,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"27a568b9","id":2055,"mutability":"mutable","name":"_dao_uris","nameLocation":"2042:9:7","nodeType":"VariableDeclaration","scope":3542,"src":"2000:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct)"},"typeName":{"id":2054,"keyType":{"id":2051,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2000:34:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct)"},"valueType":{"id":2053,"nodeType":"UserDefinedTypeName","pathNode":{"id":2052,"name":"dao_uri_struct","nameLocations":["2019:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1930,"src":"2019:14:7"},"referencedDeclaration":1930,"src":"2019:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage_ptr","typeString":"struct PlanetDAO.dao_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"6ecda4ee","id":2059,"mutability":"mutable","name":"_template_uris","nameLocation":"2176:14:7","nodeType":"VariableDeclaration","scope":3542,"src":"2142:48:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":2058,"keyType":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"2150:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2142:26:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":2057,"name":"string","nodeType":"ElementaryTypeName","src":"2161:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":false,"functionSelector":"330b8f26","id":2064,"mutability":"mutable","name":"_joined_person","nameLocation":"2304:14:7","nodeType":"VariableDeclaration","scope":3542,"src":"2265:53:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2000_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct)"},"typeName":{"id":2063,"keyType":{"id":2060,"name":"uint256","nodeType":"ElementaryTypeName","src":"2273:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2265:31:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2000_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct)"},"valueType":{"id":2062,"nodeType":"UserDefinedTypeName","pathNode":{"id":2061,"name":"join_struct","nameLocations":["2284:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":2000,"src":"2284:11:7"},"referencedDeclaration":2000,"src":"2284:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2000_storage_ptr","typeString":"struct PlanetDAO.join_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"7f2035d4","id":2069,"mutability":"mutable","name":"_goal_uris","nameLocation":"2430:10:7","nodeType":"VariableDeclaration","scope":3542,"src":"2387:53:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct)"},"typeName":{"id":2068,"keyType":{"id":2065,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2387:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct)"},"valueType":{"id":2067,"nodeType":"UserDefinedTypeName","pathNode":{"id":2066,"name":"goal_uri_struct","nameLocations":["2406:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1935,"src":"2406:15:7"},"referencedDeclaration":1935,"src":"2406:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage_ptr","typeString":"struct PlanetDAO.goal_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"468d0c80","id":2074,"mutability":"mutable","name":"_ideas_uris","nameLocation":"2559:11:7","nodeType":"VariableDeclaration","scope":3542,"src":"2515:55:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct)"},"typeName":{"id":2073,"keyType":{"id":2070,"name":"uint256","nodeType":"ElementaryTypeName","src":"2523:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2515:36:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct)"},"valueType":{"id":2072,"nodeType":"UserDefinedTypeName","pathNode":{"id":2071,"name":"ideas_uri_struct","nameLocations":["2534:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":1942,"src":"2534:16:7"},"referencedDeclaration":1942,"src":"2534:16:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage_ptr","typeString":"struct PlanetDAO.ideas_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"20959ed0","id":2078,"mutability":"mutable","name":"_donated","nameLocation":"2682:8:7","nodeType":"VariableDeclaration","scope":3542,"src":"2647:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2077,"keyType":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"2655:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2647:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":2076,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"54a9fb18","id":2083,"mutability":"mutable","name":"_feeds","nameLocation":"2799:6:7","nodeType":"VariableDeclaration","scope":3542,"src":"2760:45:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_feed_struct_$2028_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.feed_struct)"},"typeName":{"id":2082,"keyType":{"id":2079,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2760:31:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_feed_struct_$2028_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.feed_struct)"},"valueType":{"id":2081,"nodeType":"UserDefinedTypeName","pathNode":{"id":2080,"name":"feed_struct","nameLocations":["2779:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":2028,"src":"2779:11:7"},"referencedDeclaration":2028,"src":"2779:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_feed_struct_$2028_storage_ptr","typeString":"struct PlanetDAO.feed_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"7fc543ec","id":2088,"mutability":"mutable","name":"_donations","nameLocation":"2893:10:7","nodeType":"VariableDeclaration","scope":3542,"src":"2850:53:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_donation_struct_$1949_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.donation_struct)"},"typeName":{"id":2087,"keyType":{"id":2084,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2850:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_donation_struct_$1949_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.donation_struct)"},"valueType":{"id":2086,"nodeType":"UserDefinedTypeName","pathNode":{"id":2085,"name":"donation_struct","nameLocations":["2869:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1949,"src":"2869:15:7"},"referencedDeclaration":1949,"src":"2869:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$1949_storage_ptr","typeString":"struct PlanetDAO.donation_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"ff4a37ef","id":2093,"mutability":"mutable","name":"_smart_contracts_uris","nameLocation":"3001:21:7","nodeType":"VariableDeclaration","scope":3542,"src":"2948:74:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1956_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.smart_contract_uri_struct)"},"typeName":{"id":2092,"keyType":{"id":2089,"name":"uint256","nodeType":"ElementaryTypeName","src":"2956:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2948:45:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1956_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.smart_contract_uri_struct)"},"valueType":{"id":2091,"nodeType":"UserDefinedTypeName","pathNode":{"id":2090,"name":"smart_contract_uri_struct","nameLocations":["2967:25:7"],"nodeType":"IdentifierPath","referencedDeclaration":1956,"src":"2967:25:7"},"referencedDeclaration":1956,"src":"2967:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1956_storage_ptr","typeString":"struct PlanetDAO.smart_contract_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"1ba44c4c","id":2098,"mutability":"mutable","name":"all_goal_ideas_votes","nameLocation":"3150:20:7","nodeType":"VariableDeclaration","scope":3542,"src":"3099:71:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct)"},"typeName":{"id":2097,"keyType":{"id":2094,"name":"uint256","nodeType":"ElementaryTypeName","src":"3107:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3099:43:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct)"},"valueType":{"id":2096,"nodeType":"UserDefinedTypeName","pathNode":{"id":2095,"name":"goal_ideas_votes_struct","nameLocations":["3118:23:7"],"nodeType":"IdentifierPath","referencedDeclaration":1963,"src":"3118:23:7"},"referencedDeclaration":1963,"src":"3118:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage_ptr","typeString":"struct PlanetDAO.goal_ideas_votes_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"b527d45e","id":2103,"mutability":"mutable","name":"all_messages","nameLocation":"3300:12:7","nodeType":"VariableDeclaration","scope":3542,"src":"3258:54:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1972_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct)"},"typeName":{"id":2102,"keyType":{"id":2099,"name":"uint256","nodeType":"ElementaryTypeName","src":"3266:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3258:34:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1972_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct)"},"valueType":{"id":2101,"nodeType":"UserDefinedTypeName","pathNode":{"id":2100,"name":"message_struct","nameLocations":["3277:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1972,"src":"3277:14:7"},"referencedDeclaration":1972,"src":"3277:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_storage_ptr","typeString":"struct PlanetDAO.message_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"cace8d46","id":2108,"mutability":"mutable","name":"all_read_messages","nameLocation":"3422:17:7","nodeType":"VariableDeclaration","scope":3542,"src":"3375:64:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$1981_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_read_struct)"},"typeName":{"id":2107,"keyType":{"id":2104,"name":"uint256","nodeType":"ElementaryTypeName","src":"3383:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3375:39:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$1981_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_read_struct)"},"valueType":{"id":2106,"nodeType":"UserDefinedTypeName","pathNode":{"id":2105,"name":"message_read_struct","nameLocations":["3394:19:7"],"nodeType":"IdentifierPath","referencedDeclaration":1981,"src":"3394:19:7"},"referencedDeclaration":1981,"src":"3394:19:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1981_storage_ptr","typeString":"struct PlanetDAO.message_read_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"3f87a2f4","id":2113,"mutability":"mutable","name":"all_replies","nameLocation":"3557:11:7","nodeType":"VariableDeclaration","scope":3542,"src":"3517:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1990_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct)"},"typeName":{"id":2112,"keyType":{"id":2109,"name":"uint256","nodeType":"ElementaryTypeName","src":"3525:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3517:32:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1990_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct)"},"valueType":{"id":2111,"nodeType":"UserDefinedTypeName","pathNode":{"id":2110,"name":"reply_struct","nameLocations":["3536:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":1990,"src":"3536:12:7"},"referencedDeclaration":1990,"src":"3536:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_storage_ptr","typeString":"struct PlanetDAO.reply_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"a428a47f","id":2118,"mutability":"mutable","name":"_user_badges","nameLocation":"3670:12:7","nodeType":"VariableDeclaration","scope":3542,"src":"3625:57:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct)"},"typeName":{"id":2117,"keyType":{"id":2114,"name":"uint256","nodeType":"ElementaryTypeName","src":"3633:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3625:37:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct)"},"valueType":{"id":2116,"nodeType":"UserDefinedTypeName","pathNode":{"id":2115,"name":"user_badge_struct","nameLocations":["3644:17:7"],"nodeType":"IdentifierPath","referencedDeclaration":2019,"src":"3644:17:7"},"referencedDeclaration":2019,"src":"3644:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2019_storage_ptr","typeString":"struct PlanetDAO.user_badge_struct"}}},"visibility":"public"},{"body":{"id":2159,"nodeType":"Block","src":"3879:237:7","statements":[{"expression":{"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2131,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"3919:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":2133,"indexExpression":{"id":2132,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"3929:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3919:19:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2135,"name":"_dao_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"3956:11:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2136,"name":"_dao_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"3969:8:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"46616c7365","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3979:7:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b","typeString":"literal_string \"False\""},"value":"False"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_a2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b","typeString":"literal_string \"False\""}],"id":2134,"name":"dao_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"3941:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_dao_uri_struct_$1930_storage_ptr_$","typeString":"type(struct PlanetDAO.dao_uri_struct storage pointer)"}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3941:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_memory_ptr","typeString":"struct PlanetDAO.dao_uri_struct memory"}},"src":"3919:68:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"id":2140,"nodeType":"ExpressionStatement","src":"3919:68:7"},{"expression":{"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2141,"name":"_template_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"3994:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2143,"indexExpression":{"id":2142,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"4009:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3994:24:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2144,"name":"_template","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"4021:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3994:36:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2146,"nodeType":"ExpressionStatement","src":"3994:36:7"},{"expression":{"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2147,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"4037:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2149,"indexExpression":{"id":2148,"name":"user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"4050:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4037:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2019_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4059:3:7","memberName":"dao","nodeType":"MemberAccess","referencedDeclaration":2004,"src":"4037:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4065:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4037:32:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2153,"nodeType":"ExpressionStatement","src":"4037:32:7"},{"expression":{"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4076:10:7","subExpression":{"id":2154,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"4076:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2156,"nodeType":"ExpressionStatement","src":"4076:10:7"},{"expression":{"id":2157,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"4102:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2130,"id":2158,"nodeType":"Return","src":"4095:15:7"}]},"functionSelector":"86ffa45b","id":2160,"implemented":true,"kind":"function","modifiers":[],"name":"create_dao","nameLocation":"3750:10:7","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2120,"mutability":"mutable","name":"_dao_wallet","nameLocation":"3775:11:7","nodeType":"VariableDeclaration","scope":2160,"src":"3761:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2119,"name":"string","nodeType":"ElementaryTypeName","src":"3761:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2122,"mutability":"mutable","name":"_dao_uri","nameLocation":"3802:8:7","nodeType":"VariableDeclaration","scope":2160,"src":"3788:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2121,"name":"string","nodeType":"ElementaryTypeName","src":"3788:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2124,"mutability":"mutable","name":"_template","nameLocation":"3826:9:7","nodeType":"VariableDeclaration","scope":2160,"src":"3812:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2123,"name":"string","nodeType":"ElementaryTypeName","src":"3812:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2126,"mutability":"mutable","name":"user_id","nameLocation":"3845:7:7","nodeType":"VariableDeclaration","scope":2160,"src":"3837:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2125,"name":"uint256","nodeType":"ElementaryTypeName","src":"3837:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3760:93:7"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2160,"src":"3870:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2128,"name":"uint256","nodeType":"ElementaryTypeName","src":"3870:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3869:9:7"},"scope":3542,"src":"3741:375:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2173,"nodeType":"Block","src":"4196:48:7","statements":[{"expression":{"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2167,"name":"_template_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"4203:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2169,"indexExpression":{"id":2168,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"4218:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4203:23:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2170,"name":"_template","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"4229:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4203:35:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2172,"nodeType":"ExpressionStatement","src":"4203:35:7"}]},"functionSelector":"87633eb2","id":2174,"implemented":true,"kind":"function","modifiers":[],"name":"update_template","nameLocation":"4131:15:7","nodeType":"FunctionDefinition","parameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"_dao_id","nameLocation":"4155:7:7","nodeType":"VariableDeclaration","scope":2174,"src":"4147:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2161,"name":"uint256","nodeType":"ElementaryTypeName","src":"4147:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2164,"mutability":"mutable","name":"_template","nameLocation":"4178:9:7","nodeType":"VariableDeclaration","scope":2174,"src":"4164:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2163,"name":"string","nodeType":"ElementaryTypeName","src":"4164:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4146:42:7"},"returnParameters":{"id":2166,"nodeType":"ParameterList","parameters":[],"src":"4196:0:7"},"scope":3542,"src":"4122:122:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2197,"nodeType":"Block","src":"4342:133:7","statements":[{"expression":{"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2183,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"4382:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":2185,"indexExpression":{"id":2184,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"4392:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4382:18:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"id":2186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4401:10:7","memberName":"dao_wallet","nodeType":"MemberAccess","referencedDeclaration":1925,"src":"4382:29:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2187,"name":"_dao_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"4414:11:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4382:43:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2189,"nodeType":"ExpressionStatement","src":"4382:43:7"},{"expression":{"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2190,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"4432:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":2192,"indexExpression":{"id":2191,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"4442:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4432:18:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"id":2193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4451:7:7","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"4432:26:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2194,"name":"_dao_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"4461:8:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4432:37:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2196,"nodeType":"ExpressionStatement","src":"4432:37:7"}]},"functionSelector":"881de858","id":2198,"implemented":true,"kind":"function","modifiers":[],"name":"set_dao","nameLocation":"4259:7:7","nodeType":"FunctionDefinition","parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"_dao_id","nameLocation":"4275:7:7","nodeType":"VariableDeclaration","scope":2198,"src":"4267:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2175,"name":"uint256","nodeType":"ElementaryTypeName","src":"4267:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2178,"mutability":"mutable","name":"_dao_wallet","nameLocation":"4298:11:7","nodeType":"VariableDeclaration","scope":2198,"src":"4284:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2177,"name":"string","nodeType":"ElementaryTypeName","src":"4284:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"_dao_uri","nameLocation":"4325:8:7","nodeType":"VariableDeclaration","scope":2198,"src":"4311:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2179,"name":"string","nodeType":"ElementaryTypeName","src":"4311:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4266:68:7"},"returnParameters":{"id":2182,"nodeType":"ParameterList","parameters":[],"src":"4342:0:7"},"scope":3542,"src":"4250:225:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2238,"nodeType":"Block","src":"4543:212:7","statements":[{"assignments":[2208],"declarations":[{"constant":false,"id":2208,"mutability":"mutable","name":"_StoreInfo","nameLocation":"4590:10:7","nodeType":"VariableDeclaration","scope":2238,"src":"4574:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2206,"name":"string","nodeType":"ElementaryTypeName","src":"4574:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2207,"nodeType":"ArrayTypeName","src":"4574:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2214,"initialValue":{"arguments":[{"id":2212,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"4616:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4603:12:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2209,"name":"string","nodeType":"ElementaryTypeName","src":"4607:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2210,"nodeType":"ArrayTypeName","src":"4607:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4603:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4574:51:7"},{"body":{"id":2234,"nodeType":"Block","src":"4671:53:7","statements":[{"expression":{"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2225,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"4680:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2227,"indexExpression":{"id":2226,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"4691:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4680:13:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2228,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"4696:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":2230,"indexExpression":{"id":2229,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"4706:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4696:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"id":2231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4709:7:7","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"4696:20:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"4680:36:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2233,"nodeType":"ExpressionStatement","src":"4680:36:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2219,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"4652:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2220,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"4656:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4652:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2235,"initializationExpression":{"assignments":[2216],"declarations":[{"constant":false,"id":2216,"mutability":"mutable","name":"i","nameLocation":"4645:1:7","nodeType":"VariableDeclaration","scope":2235,"src":"4637:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2215,"name":"uint256","nodeType":"ElementaryTypeName","src":"4637:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2218,"initialValue":{"hexValue":"30","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4649:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4637:13:7"},"loopExpression":{"expression":{"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4666:3:7","subExpression":{"id":2222,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"4666:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2224,"nodeType":"ExpressionStatement","src":"4666:3:7"},"nodeType":"ForStatement","src":"4632:92:7"},{"expression":{"id":2236,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"4739:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2203,"id":2237,"nodeType":"Return","src":"4732:17:7"}]},"functionSelector":"c04fe978","id":2239,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_daos","nameLocation":"4490:12:7","nodeType":"FunctionDefinition","parameters":{"id":2199,"nodeType":"ParameterList","parameters":[],"src":"4502:2:7"},"returnParameters":{"id":2203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2239,"src":"4526:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2200,"name":"string","nodeType":"ElementaryTypeName","src":"4526:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2201,"nodeType":"ArrayTypeName","src":"4526:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"4525:17:7"},"scope":3542,"src":"4481:274:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2251,"nodeType":"Block","src":"4831:73:7","statements":[{"expression":{"expression":{"baseExpression":{"id":2246,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"4872:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":2248,"indexExpression":{"id":2247,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"4882:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4872:18:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"id":2249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4891:7:7","memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"4872:26:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2245,"id":2250,"nodeType":"Return","src":"4865:33:7"}]},"functionSelector":"5d907da1","id":2252,"implemented":true,"kind":"function","modifiers":[],"name":"dao_uri","nameLocation":"4770:7:7","nodeType":"FunctionDefinition","parameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2241,"mutability":"mutable","name":"_dao_id","nameLocation":"4786:7:7","nodeType":"VariableDeclaration","scope":2252,"src":"4778:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"4778:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4777:17:7"},"returnParameters":{"id":2245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2252,"src":"4816:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2243,"name":"string","nodeType":"ElementaryTypeName","src":"4816:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4815:15:7"},"scope":3542,"src":"4761:143:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2274,"nodeType":"Block","src":"4981:108:7","statements":[{"expression":{"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2259,"name":"_feeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"4988:6:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_feed_struct_$2028_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.feed_struct storage ref)"}},"id":2261,"indexExpression":{"id":2260,"name":"_feed_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"4995:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4988:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_feed_struct_$2028_storage","typeString":"struct PlanetDAO.feed_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2263,"name":"_feed_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"5020:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2264,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5031:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"5031:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2266,"name":"_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"5048:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2267,"name":"feed_text","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"5055:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2262,"name":"feed_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"5008:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_feed_struct_$2028_storage_ptr_$","typeString":"type(struct PlanetDAO.feed_struct storage pointer)"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5008:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_feed_struct_$2028_memory_ptr","typeString":"struct PlanetDAO.feed_struct memory"}},"src":"4988:77:7","typeDescriptions":{"typeIdentifier":"t_struct$_feed_struct_$2028_storage","typeString":"struct PlanetDAO.feed_struct storage ref"}},"id":2270,"nodeType":"ExpressionStatement","src":"4988:77:7"},{"expression":{"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5072:11:7","subExpression":{"id":2271,"name":"_feed_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"5072:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2273,"nodeType":"ExpressionStatement","src":"5072:11:7"}]},"functionSelector":"bda00335","id":2275,"implemented":true,"kind":"function","modifiers":[],"name":"add_Feed","nameLocation":"4919:8:7","nodeType":"FunctionDefinition","parameters":{"id":2257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"feed_text","nameLocation":"4942:9:7","nodeType":"VariableDeclaration","scope":2275,"src":"4928:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2253,"name":"string","nodeType":"ElementaryTypeName","src":"4928:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2256,"mutability":"mutable","name":"_type","nameLocation":"4967:5:7","nodeType":"VariableDeclaration","scope":2275,"src":"4953:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2255,"name":"string","nodeType":"ElementaryTypeName","src":"4953:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4927:46:7"},"returnParameters":{"id":2258,"nodeType":"ParameterList","parameters":[],"src":"4981:0:7"},"scope":3542,"src":"4910:179:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2314,"nodeType":"Block","src":"5239:223:7","statements":[{"expression":{"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2288,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"5281:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2290,"indexExpression":{"id":2289,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"5292:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5281:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2292,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"5321:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2293,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"5330:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2291,"name":"goal_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"5305:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_goal_uri_struct_$1935_storage_ptr_$","typeString":"type(struct PlanetDAO.goal_uri_struct storage pointer)"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5305:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_memory_ptr","typeString":"struct PlanetDAO.goal_uri_struct memory"}},"src":"5281:59:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2296,"nodeType":"ExpressionStatement","src":"5281:59:7"},{"expression":{"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2297,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"5349:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2299,"indexExpression":{"id":2298,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"5362:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5349:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2019_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5372:4:7","memberName":"goal","nodeType":"MemberAccess","referencedDeclaration":2008,"src":"5349:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5379:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5349:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2303,"nodeType":"ExpressionStatement","src":"5349:34:7"},{"expression":{"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5390:11:7","subExpression":{"id":2304,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"5390:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2306,"nodeType":"ExpressionStatement","src":"5390:11:7"},{"expression":{"arguments":[{"id":2308,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"5417:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"676f616c","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5424:6:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef4dbb26a297ed6dbfec0a46d7ae3a5acf736a0cb97a6b9e708aed49967b12f9","typeString":"literal_string \"goal\""},"value":"goal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_ef4dbb26a297ed6dbfec0a46d7ae3a5acf736a0cb97a6b9e708aed49967b12f9","typeString":"literal_string \"goal\""}],"id":2307,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"5408:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2311,"nodeType":"ExpressionStatement","src":"5408:23:7"},{"expression":{"id":2312,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"5447:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2287,"id":2313,"nodeType":"Return","src":"5440:16:7"}]},"functionSelector":"b39a38bd","id":2315,"implemented":true,"kind":"function","modifiers":[],"name":"create_goal","nameLocation":"5115:11:7","nodeType":"FunctionDefinition","parameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"_goal_uri","nameLocation":"5141:9:7","nodeType":"VariableDeclaration","scope":2315,"src":"5127:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2276,"name":"string","nodeType":"ElementaryTypeName","src":"5127:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2279,"mutability":"mutable","name":"_dao_id","nameLocation":"5166:7:7","nodeType":"VariableDeclaration","scope":2315,"src":"5152:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2278,"name":"string","nodeType":"ElementaryTypeName","src":"5152:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2281,"mutability":"mutable","name":"_user_id","nameLocation":"5183:8:7","nodeType":"VariableDeclaration","scope":2315,"src":"5175:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2280,"name":"uint256","nodeType":"ElementaryTypeName","src":"5175:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2283,"mutability":"mutable","name":"_feed","nameLocation":"5207:5:7","nodeType":"VariableDeclaration","scope":2315,"src":"5193:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2282,"name":"string","nodeType":"ElementaryTypeName","src":"5193:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5126:87:7"},"returnParameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2315,"src":"5230:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2285,"name":"uint256","nodeType":"ElementaryTypeName","src":"5230:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5229:9:7"},"scope":3542,"src":"5106:356:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2329,"nodeType":"Block","src":"5536:74:7","statements":[{"expression":{"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2322,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"5563:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2324,"indexExpression":{"id":2323,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"5574:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5563:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5584:8:7","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1934,"src":"5563:29:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2326,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"5595:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5563:41:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2328,"nodeType":"ExpressionStatement","src":"5563:41:7"}]},"functionSelector":"c29595c5","id":2330,"implemented":true,"kind":"function","modifiers":[],"name":"set_goal","nameLocation":"5477:8:7","nodeType":"FunctionDefinition","parameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"_goal_id","nameLocation":"5494:8:7","nodeType":"VariableDeclaration","scope":2330,"src":"5486:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"5486:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2319,"mutability":"mutable","name":"_goal_uri","nameLocation":"5518:9:7","nodeType":"VariableDeclaration","scope":2330,"src":"5504:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2318,"name":"string","nodeType":"ElementaryTypeName","src":"5504:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5485:43:7"},"returnParameters":{"id":2321,"nodeType":"ParameterList","parameters":[],"src":"5536:0:7"},"scope":3542,"src":"5468:142:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2370,"nodeType":"Block","src":"5679:217:7","statements":[{"assignments":[2340],"declarations":[{"constant":false,"id":2340,"mutability":"mutable","name":"_StoreInfo","nameLocation":"5727:10:7","nodeType":"VariableDeclaration","scope":2370,"src":"5711:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2338,"name":"string","nodeType":"ElementaryTypeName","src":"5711:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2339,"nodeType":"ArrayTypeName","src":"5711:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2346,"initialValue":{"arguments":[{"id":2344,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"5753:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5740:12:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2341,"name":"string","nodeType":"ElementaryTypeName","src":"5744:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2342,"nodeType":"ArrayTypeName","src":"5744:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5740:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5711:52:7"},{"body":{"id":2366,"nodeType":"Block","src":"5810:55:7","statements":[{"expression":{"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2357,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"5819:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2359,"indexExpression":{"id":2358,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"5830:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5819:13:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2360,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"5835:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2362,"indexExpression":{"id":2361,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"5846:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5835:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2363,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5849:8:7","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1934,"src":"5835:22:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"5819:38:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2365,"nodeType":"ExpressionStatement","src":"5819:38:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2351,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"5790:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2352,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"5794:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5790:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2367,"initializationExpression":{"assignments":[2348],"declarations":[{"constant":false,"id":2348,"mutability":"mutable","name":"i","nameLocation":"5783:1:7","nodeType":"VariableDeclaration","scope":2367,"src":"5775:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2347,"name":"uint256","nodeType":"ElementaryTypeName","src":"5775:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2350,"initialValue":{"hexValue":"30","id":2349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5787:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5775:13:7"},"loopExpression":{"expression":{"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5805:3:7","subExpression":{"id":2354,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"5805:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2356,"nodeType":"ExpressionStatement","src":"5805:3:7"},"nodeType":"ForStatement","src":"5770:95:7"},{"expression":{"id":2368,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"5880:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2335,"id":2369,"nodeType":"Return","src":"5873:17:7"}]},"functionSelector":"29b56f60","id":2371,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_goals","nameLocation":"5625:13:7","nodeType":"FunctionDefinition","parameters":{"id":2331,"nodeType":"ParameterList","parameters":[],"src":"5638:2:7"},"returnParameters":{"id":2335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2371,"src":"5662:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2332,"name":"string","nodeType":"ElementaryTypeName","src":"5662:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2333,"nodeType":"ArrayTypeName","src":"5662:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"5661:17:7"},"scope":3542,"src":"5616:280:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2437,"nodeType":"Block","src":"5996:374:7","statements":[{"assignments":[2383],"declarations":[{"constant":false,"id":2383,"mutability":"mutable","name":"_StoreInfo","nameLocation":"6054:10:7","nodeType":"VariableDeclaration","scope":2437,"src":"6038:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2381,"name":"string","nodeType":"ElementaryTypeName","src":"6038:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2382,"nodeType":"ArrayTypeName","src":"6038:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2389,"initialValue":{"arguments":[{"id":2387,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"6080:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6067:12:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2384,"name":"string","nodeType":"ElementaryTypeName","src":"6071:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2385,"nodeType":"ArrayTypeName","src":"6071:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6067:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6038:52:7"},{"assignments":[2391],"declarations":[{"constant":false,"id":2391,"mutability":"mutable","name":"_store_id","nameLocation":"6105:9:7","nodeType":"VariableDeclaration","scope":2437,"src":"6097:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2390,"name":"uint256","nodeType":"ElementaryTypeName","src":"6097:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2392,"nodeType":"VariableDeclarationStatement","src":"6097:17:7"},{"body":{"id":2433,"nodeType":"Block","src":"6161:178:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2406,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"6190:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2408,"indexExpression":{"id":2407,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"6201:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6190:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6204:6:7","memberName":"dao_id","nodeType":"MemberAccess","referencedDeclaration":1932,"src":"6190:20:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6184:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2404,"name":"bytes","nodeType":"ElementaryTypeName","src":"6184:5:7","typeDescriptions":{}}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6184:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2403,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6174:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2415,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"6232:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6226:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2413,"name":"bytes","nodeType":"ElementaryTypeName","src":"6226:5:7","typeDescriptions":{}}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6226:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2412,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6216:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6216:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6174:67:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2432,"nodeType":"IfStatement","src":"6170:162:7","trueBody":{"id":2431,"nodeType":"Block","src":"6243:89:7","statements":[{"expression":{"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2419,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"6254:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2421,"indexExpression":{"id":2420,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"6265:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6254:21:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2422,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"6278:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2424,"indexExpression":{"id":2423,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"6289:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6278:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6292:8:7","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1934,"src":"6278:22:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"6254:46:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2427,"nodeType":"ExpressionStatement","src":"6254:46:7"},{"expression":{"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6311:11:7","subExpression":{"id":2428,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"6311:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2430,"nodeType":"ExpressionStatement","src":"6311:11:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2397,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"6141:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2398,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"6145:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6141:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2434,"initializationExpression":{"assignments":[2394],"declarations":[{"constant":false,"id":2394,"mutability":"mutable","name":"i","nameLocation":"6134:1:7","nodeType":"VariableDeclaration","scope":2434,"src":"6126:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2393,"name":"uint256","nodeType":"ElementaryTypeName","src":"6126:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2396,"initialValue":{"hexValue":"30","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6138:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6126:13:7"},"loopExpression":{"expression":{"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6156:3:7","subExpression":{"id":2400,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"6156:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2402,"nodeType":"ExpressionStatement","src":"6156:3:7"},"nodeType":"ForStatement","src":"6121:218:7"},{"expression":{"id":2435,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"6354:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2378,"id":2436,"nodeType":"Return","src":"6347:17:7"}]},"functionSelector":"0377d44a","id":2438,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_goals_by_dao_id","nameLocation":"5911:23:7","nodeType":"FunctionDefinition","parameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"_dao_id","nameLocation":"5949:7:7","nodeType":"VariableDeclaration","scope":2438,"src":"5935:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2372,"name":"string","nodeType":"ElementaryTypeName","src":"5935:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5934:23:7"},"returnParameters":{"id":2378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2438,"src":"5979:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2375,"name":"string","nodeType":"ElementaryTypeName","src":"5979:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2376,"nodeType":"ArrayTypeName","src":"5979:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"5978:17:7"},"scope":3542,"src":"5902:468:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2478,"nodeType":"Block","src":"6464:201:7","statements":[{"body":{"id":2474,"nodeType":"Block","src":"6541:102:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2458,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"6570:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2460,"indexExpression":{"id":2459,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"6581:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6584:8:7","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1934,"src":"6570:22:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6564:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2456,"name":"bytes","nodeType":"ElementaryTypeName","src":"6564:5:7","typeDescriptions":{}}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6564:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2455,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6554:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2467,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"6614:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6608:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2465,"name":"bytes","nodeType":"ElementaryTypeName","src":"6608:5:7","typeDescriptions":{}}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6608:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2464,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6598:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6598:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6554:71:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2473,"nodeType":"IfStatement","src":"6550:85:7","trueBody":{"expression":{"id":2471,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"6634:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2444,"id":2472,"nodeType":"Return","src":"6627:8:7"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2449,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"6521:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2450,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"6525:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6521:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2475,"initializationExpression":{"assignments":[2446],"declarations":[{"constant":false,"id":2446,"mutability":"mutable","name":"i","nameLocation":"6514:1:7","nodeType":"VariableDeclaration","scope":2475,"src":"6506:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2445,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2448,"initialValue":{"hexValue":"30","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6518:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6506:13:7"},"loopExpression":{"expression":{"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6536:3:7","subExpression":{"id":2452,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"6536:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2454,"nodeType":"ExpressionStatement","src":"6536:3:7"},"nodeType":"ForStatement","src":"6501:142:7"},{"expression":{"hexValue":"30","id":2476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6658:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2444,"id":2477,"nodeType":"Return","src":"6651:8:7"}]},"functionSelector":"1e9ac9f5","id":2479,"implemented":true,"kind":"function","modifiers":[],"name":"get_goal_id_by_goal_uri","nameLocation":"6385:23:7","nodeType":"FunctionDefinition","parameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"_goal_uri","nameLocation":"6423:9:7","nodeType":"VariableDeclaration","scope":2479,"src":"6409:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2439,"name":"string","nodeType":"ElementaryTypeName","src":"6409:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6408:25:7"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2479,"src":"6455:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2442,"name":"uint256","nodeType":"ElementaryTypeName","src":"6455:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6454:9:7"},"scope":3542,"src":"6376:289:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2502,"nodeType":"Block","src":"6759:147:7","statements":[{"assignments":[2487],"declarations":[{"constant":false,"id":2487,"mutability":"mutable","name":"goal_id","nameLocation":"6780:7:7","nodeType":"VariableDeclaration","scope":2502,"src":"6772:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2486,"name":"uint256","nodeType":"ElementaryTypeName","src":"6772:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2492,"initialValue":{"expression":{"baseExpression":{"id":2488,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"6789:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2490,"indexExpression":{"id":2489,"name":"ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"6801:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6789:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6811:7:7","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1937,"src":"6789:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6772:46:7"},{"assignments":[2494],"declarations":[{"constant":false,"id":2494,"mutability":"mutable","name":"dao_id","nameLocation":"6839:6:7","nodeType":"VariableDeclaration","scope":2502,"src":"6825:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2493,"name":"string","nodeType":"ElementaryTypeName","src":"6825:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2499,"initialValue":{"expression":{"baseExpression":{"id":2495,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"6848:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2497,"indexExpression":{"id":2496,"name":"goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"6859:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6848:19:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6868:6:7","memberName":"dao_id","nodeType":"MemberAccess","referencedDeclaration":1932,"src":"6848:26:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6825:49:7"},{"expression":{"id":2500,"name":"dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"6894:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2485,"id":2501,"nodeType":"Return","src":"6887:13:7"}]},"functionSelector":"38a512d9","id":2503,"implemented":true,"kind":"function","modifiers":[],"name":"get_dao_id_by_ideas_id","nameLocation":"6682:22:7","nodeType":"FunctionDefinition","parameters":{"id":2482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2481,"mutability":"mutable","name":"ideas_id","nameLocation":"6713:8:7","nodeType":"VariableDeclaration","scope":2503,"src":"6705:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"6705:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6704:18:7"},"returnParameters":{"id":2485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2503,"src":"6744:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2483,"name":"string","nodeType":"ElementaryTypeName","src":"6744:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6743:15:7"},"scope":3542,"src":"6673:233:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2515,"nodeType":"Block","src":"6984:77:7","statements":[{"expression":{"expression":{"baseExpression":{"id":2510,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"7026:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":2512,"indexExpression":{"id":2511,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"7037:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7026:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"id":2513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7047:8:7","memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1934,"src":"7026:29:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2509,"id":2514,"nodeType":"Return","src":"7019:36:7"}]},"functionSelector":"e32acc1a","id":2516,"implemented":true,"kind":"function","modifiers":[],"name":"goal_uri","nameLocation":"6921:8:7","nodeType":"FunctionDefinition","parameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2505,"mutability":"mutable","name":"_goal_id","nameLocation":"6938:8:7","nodeType":"VariableDeclaration","scope":2516,"src":"6930:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2504,"name":"uint256","nodeType":"ElementaryTypeName","src":"6930:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6929:18:7"},"returnParameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2516,"src":"6969:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2507,"name":"string","nodeType":"ElementaryTypeName","src":"6969:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6968:15:7"},"scope":3542,"src":"6912:149:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2583,"nodeType":"Block","src":"7242:424:7","statements":[{"expression":{"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2532,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"7286:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2534,"indexExpression":{"id":2533,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"7298:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7286:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2536,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"7329:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2537,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"7339:10:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7351:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2535,"name":"ideas_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"7312:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ideas_uri_struct_$1942_storage_ptr_$","typeString":"type(struct PlanetDAO.ideas_uri_struct storage pointer)"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7312:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_memory_ptr","typeString":"struct PlanetDAO.ideas_uri_struct memory"}},"src":"7286:67:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2541,"nodeType":"ExpressionStatement","src":"7286:67:7"},{"expression":{"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2542,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"7360:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2544,"indexExpression":{"id":2543,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"7373:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7360:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2019_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2545,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7383:5:7","memberName":"ideas","nodeType":"MemberAccess","referencedDeclaration":2010,"src":"7360:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7391:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7360:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2548,"nodeType":"ExpressionStatement","src":"7360:35:7"},{"expression":{"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7402:12:7","subExpression":{"id":2549,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"7402:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2551,"nodeType":"ExpressionStatement","src":"7402:12:7"},{"body":{"id":2574,"nodeType":"Block","src":"7477:128:7","statements":[{"expression":{"arguments":[{"id":2564,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"7514:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2565,"name":"_smart_contract_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"7526:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2566,"name":"_smart_contracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"7547:16:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2568,"indexExpression":{"id":2567,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"7564:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7547:19:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2563,"name":"create_ideas_smart_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"7486:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7486:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2570,"nodeType":"ExpressionStatement","src":"7486:81:7"},{"expression":{"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7576:21:7","subExpression":{"id":2571,"name":"_smart_contract_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"7576:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2573,"nodeType":"ExpressionStatement","src":"7576:21:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2556,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"7443:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2557,"name":"_smart_contracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"7447:16:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7464:6:7","memberName":"length","nodeType":"MemberAccess","src":"7447:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7443:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2575,"initializationExpression":{"assignments":[2553],"declarations":[{"constant":false,"id":2553,"mutability":"mutable","name":"i","nameLocation":"7436:1:7","nodeType":"VariableDeclaration","scope":2575,"src":"7428:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"7428:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2555,"initialValue":{"hexValue":"30","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7440:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7428:13:7"},"loopExpression":{"expression":{"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7472:3:7","subExpression":{"id":2560,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"7472:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2562,"nodeType":"ExpressionStatement","src":"7472:3:7"},"nodeType":"ForStatement","src":"7423:182:7"},{"expression":{"arguments":[{"id":2577,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"7620:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"69646561","id":2578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7627:6:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6a7bf0b356c2ee2abd155803d8597e311bd7062ed4dcc25d72fbfcb126eb1e3","typeString":"literal_string \"idea\""},"value":"idea"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_d6a7bf0b356c2ee2abd155803d8597e311bd7062ed4dcc25d72fbfcb126eb1e3","typeString":"literal_string \"idea\""}],"id":2576,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"7611:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7611:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2580,"nodeType":"ExpressionStatement","src":"7611:23:7"},{"expression":{"id":2581,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"7650:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2531,"id":2582,"nodeType":"Return","src":"7643:17:7"}]},"functionSelector":"e1b011a0","id":2584,"implemented":true,"kind":"function","modifiers":[],"name":"create_ideas","nameLocation":"7087:12:7","nodeType":"FunctionDefinition","parameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"_ideas_uri","nameLocation":"7114:10:7","nodeType":"VariableDeclaration","scope":2584,"src":"7100:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2517,"name":"string","nodeType":"ElementaryTypeName","src":"7100:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2520,"mutability":"mutable","name":"_goal_id","nameLocation":"7134:8:7","nodeType":"VariableDeclaration","scope":2584,"src":"7126:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2519,"name":"uint256","nodeType":"ElementaryTypeName","src":"7126:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2523,"mutability":"mutable","name":"_smart_contracts","nameLocation":"7160:16:7","nodeType":"VariableDeclaration","scope":2584,"src":"7144:32:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2521,"name":"string","nodeType":"ElementaryTypeName","src":"7144:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2522,"nodeType":"ArrayTypeName","src":"7144:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"_user_id","nameLocation":"7186:8:7","nodeType":"VariableDeclaration","scope":2584,"src":"7178:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"7178:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2527,"mutability":"mutable","name":"_feed","nameLocation":"7210:5:7","nodeType":"VariableDeclaration","scope":2584,"src":"7196:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2526,"name":"string","nodeType":"ElementaryTypeName","src":"7196:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7099:117:7"},"returnParameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2584,"src":"7233:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"7233:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7232:9:7"},"scope":3542,"src":"7078:588:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2603,"nodeType":"Block","src":"7795:130:7","statements":[{"expression":{"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2593,"name":"_smart_contracts_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"7802:21:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1956_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.smart_contract_uri_struct storage ref)"}},"id":2595,"indexExpression":{"id":2594,"name":"_smart_contract_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"7824:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7802:41:7","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1956_storage","typeString":"struct PlanetDAO.smart_contract_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2597,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"7872:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2598,"name":"_smart_contract_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"7883:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2599,"name":"_smart_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"7903:15:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2596,"name":"smart_contract_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"7846:25:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_smart_contract_uri_struct_$1956_storage_ptr_$","typeString":"type(struct PlanetDAO.smart_contract_uri_struct storage pointer)"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7846:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1956_memory_ptr","typeString":"struct PlanetDAO.smart_contract_uri_struct memory"}},"src":"7802:117:7","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1956_storage","typeString":"struct PlanetDAO.smart_contract_uri_struct storage ref"}},"id":2602,"nodeType":"ExpressionStatement","src":"7802:117:7"}]},"id":2604,"implemented":true,"kind":"function","modifiers":[],"name":"create_ideas_smart_contract","nameLocation":"7681:27:7","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2586,"mutability":"mutable","name":"_ideas_id","nameLocation":"7717:9:7","nodeType":"VariableDeclaration","scope":2604,"src":"7709:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2585,"name":"uint256","nodeType":"ElementaryTypeName","src":"7709:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2588,"mutability":"mutable","name":"_smart_contract_id","nameLocation":"7736:18:7","nodeType":"VariableDeclaration","scope":2604,"src":"7728:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"7728:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"_smart_contract","nameLocation":"7770:15:7","nodeType":"VariableDeclaration","scope":2604,"src":"7756:29:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2589,"name":"string","nodeType":"ElementaryTypeName","src":"7756:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7708:78:7"},"returnParameters":{"id":2592,"nodeType":"ParameterList","parameters":[],"src":"7795:0:7"},"scope":3542,"src":"7672:253:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2618,"nodeType":"Block","src":"8002:58:7","statements":[{"expression":{"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2611,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"8009:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2613,"indexExpression":{"id":2612,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"8021:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8009:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8032:9:7","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"8009:32:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2615,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"8044:10:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8009:45:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2617,"nodeType":"ExpressionStatement","src":"8009:45:7"}]},"functionSelector":"c04e7430","id":2619,"implemented":true,"kind":"function","modifiers":[],"name":"set_ideas","nameLocation":"7940:9:7","nodeType":"FunctionDefinition","parameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2606,"mutability":"mutable","name":"_ideas_id","nameLocation":"7958:9:7","nodeType":"VariableDeclaration","scope":2619,"src":"7950:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2605,"name":"uint256","nodeType":"ElementaryTypeName","src":"7950:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2608,"mutability":"mutable","name":"_ideas_uri","nameLocation":"7983:10:7","nodeType":"VariableDeclaration","scope":2619,"src":"7969:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2607,"name":"string","nodeType":"ElementaryTypeName","src":"7969:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7949:45:7"},"returnParameters":{"id":2610,"nodeType":"ParameterList","parameters":[],"src":"8002:0:7"},"scope":3542,"src":"7931:129:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2683,"nodeType":"Block","src":"8194:373:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2632,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"8205:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2634,"indexExpression":{"id":2633,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"8218:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8205:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2019_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8227:8:7","memberName":"donation","nodeType":"MemberAccess","referencedDeclaration":2014,"src":"8205:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":2636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8239:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8205:39:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2644,"nodeType":"IfStatement","src":"8201:87:7","trueBody":{"id":2643,"nodeType":"Block","src":"8246:42:7","statements":[{"expression":{"arguments":[{"id":2639,"name":"_feed1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"8264:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"6261646765","id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8272:7:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e3a9f11f2b764119ca635d6f294a573e14aa4219f3c85f80318b632e8f1f2ec","typeString":"literal_string \"badge\""},"value":"badge"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_1e3a9f11f2b764119ca635d6f294a573e14aa4219f3c85f80318b632e8f1f2ec","typeString":"literal_string \"badge\""}],"id":2638,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"8255:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8255:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2642,"nodeType":"ExpressionStatement","src":"8255:25:7"}]}},{"expression":{"arguments":[{"id":2646,"name":"_feed2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"8303:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"646f6e6174696f6e","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8311:10:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_5de029d3f5be747e56a965618431f5f83612802fba356b1700f1f9974a3eb3d6","typeString":"literal_string \"donation\""},"value":"donation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_5de029d3f5be747e56a965618431f5f83612802fba356b1700f1f9974a3eb3d6","typeString":"literal_string \"donation\""}],"id":2645,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"8294:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8294:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2649,"nodeType":"ExpressionStatement","src":"8294:28:7"},{"expression":{"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2650,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"8331:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2652,"indexExpression":{"id":2651,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"8344:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8331:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2019_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2653,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8353:8:7","memberName":"donation","nodeType":"MemberAccess","referencedDeclaration":2014,"src":"8331:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8364:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8331:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2656,"nodeType":"ExpressionStatement","src":"8331:37:7"},{"expression":{"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2657,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"8375:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2659,"indexExpression":{"id":2658,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"8387:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8375:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2660,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8398:8:7","memberName":"donation","nodeType":"MemberAccess","referencedDeclaration":1941,"src":"8375:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2661,"name":"_doantion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"8410:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8375:44:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2663,"nodeType":"ExpressionStatement","src":"8375:44:7"},{"expression":{"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2664,"name":"_donated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"8426:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2666,"indexExpression":{"id":2665,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"8435:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8426:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2667,"name":"_doantion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"8447:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8426:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2669,"nodeType":"ExpressionStatement","src":"8426:30:7"},{"expression":{"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2670,"name":"_donations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"8463:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_donation_struct_$1949_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.donation_struct storage ref)"}},"id":2672,"indexExpression":{"id":2671,"name":"_donations_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"8474:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8463:26:7","typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$1949_storage","typeString":"struct PlanetDAO.donation_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2674,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"8508:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2675,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"8519:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2676,"name":"_doantion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"8528:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2673,"name":"donation_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"8492:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_donation_struct_$1949_storage_ptr_$","typeString":"type(struct PlanetDAO.donation_struct storage pointer)"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8492:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$1949_memory_ptr","typeString":"struct PlanetDAO.donation_struct memory"}},"src":"8463:75:7","typeDescriptions":{"typeIdentifier":"t_struct$_donation_struct_$1949_storage","typeString":"struct PlanetDAO.donation_struct storage ref"}},"id":2679,"nodeType":"ExpressionStatement","src":"8463:75:7"},{"expression":{"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8545:16:7","subExpression":{"id":2680,"name":"_donations_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"8545:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2682,"nodeType":"ExpressionStatement","src":"8545:16:7"}]},"functionSelector":"5996278f","id":2684,"implemented":true,"kind":"function","modifiers":[],"name":"add_donation","nameLocation":"8075:12:7","nodeType":"FunctionDefinition","parameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"_ideas_id","nameLocation":"8096:9:7","nodeType":"VariableDeclaration","scope":2684,"src":"8088:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2620,"name":"uint256","nodeType":"ElementaryTypeName","src":"8088:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2623,"mutability":"mutable","name":"_doantion","nameLocation":"8115:9:7","nodeType":"VariableDeclaration","scope":2684,"src":"8107:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2622,"name":"uint256","nodeType":"ElementaryTypeName","src":"8107:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2625,"mutability":"mutable","name":"_userid","nameLocation":"8134:7:7","nodeType":"VariableDeclaration","scope":2684,"src":"8126:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"8126:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2627,"mutability":"mutable","name":"_feed1","nameLocation":"8157:6:7","nodeType":"VariableDeclaration","scope":2684,"src":"8143:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2626,"name":"string","nodeType":"ElementaryTypeName","src":"8143:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2629,"mutability":"mutable","name":"_feed2","nameLocation":"8179:6:7","nodeType":"VariableDeclaration","scope":2684,"src":"8165:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2628,"name":"string","nodeType":"ElementaryTypeName","src":"8165:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8087:99:7"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[],"src":"8194:0:7"},"scope":3542,"src":"8066:501:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2717,"nodeType":"Block","src":"8657:175:7","statements":[{"expression":{"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2693,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"8664:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":2695,"indexExpression":{"id":2694,"name":"person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"8677:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8664:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2019_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":2696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8685:6:7","memberName":"joined","nodeType":"MemberAccess","referencedDeclaration":2006,"src":"8664:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8694:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8664:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2699,"nodeType":"ExpressionStatement","src":"8664:34:7"},{"expression":{"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2700,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"8705:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2000_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct storage ref)"}},"id":2702,"indexExpression":{"id":2701,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"8720:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8705:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2000_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2704,"name":"dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"8753:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2705,"name":"person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"8770:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2703,"name":"join_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"8733:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_join_struct_$2000_storage_ptr_$","typeString":"type(struct PlanetDAO.join_struct storage pointer)"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8746:5:7","8761:7:7"],"names":["daoid","user_id"],"nodeType":"FunctionCall","src":"8733:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2000_memory_ptr","typeString":"struct PlanetDAO.join_struct memory"}},"src":"8705:73:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2000_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"id":2708,"nodeType":"ExpressionStatement","src":"8705:73:7"},{"expression":{"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8785:11:7","subExpression":{"id":2709,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"8785:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2711,"nodeType":"ExpressionStatement","src":"8785:11:7"},{"expression":{"arguments":[{"id":2713,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"8812:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"6a6f696e","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8819:6:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_10dece5307d9dcd771fa36385e14096af85d5982a2225c49c0f2e7039a4a141a","typeString":"literal_string \"join\""},"value":"join"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_10dece5307d9dcd771fa36385e14096af85d5982a2225c49c0f2e7039a4a141a","typeString":"literal_string \"join\""}],"id":2712,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"8803:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8803:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2716,"nodeType":"ExpressionStatement","src":"8803:23:7"}]},"functionSelector":"8c70034a","id":2718,"implemented":true,"kind":"function","modifiers":[],"name":"join_community","nameLocation":"8582:14:7","nodeType":"FunctionDefinition","parameters":{"id":2691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2686,"mutability":"mutable","name":"dao_id","nameLocation":"8605:6:7","nodeType":"VariableDeclaration","scope":2718,"src":"8597:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2685,"name":"uint256","nodeType":"ElementaryTypeName","src":"8597:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2688,"mutability":"mutable","name":"person","nameLocation":"8621:6:7","nodeType":"VariableDeclaration","scope":2718,"src":"8613:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2687,"name":"uint256","nodeType":"ElementaryTypeName","src":"8613:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2690,"mutability":"mutable","name":"_feed","nameLocation":"8643:5:7","nodeType":"VariableDeclaration","scope":2718,"src":"8629:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2689,"name":"string","nodeType":"ElementaryTypeName","src":"8629:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8596:53:7"},"returnParameters":{"id":2692,"nodeType":"ParameterList","parameters":[],"src":"8657:0:7"},"scope":3542,"src":"8573:259:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2732,"nodeType":"Block","src":"8887:80:7","statements":[{"expression":{"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2723,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"8894:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2000_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct storage ref)"}},"id":2725,"indexExpression":{"id":2724,"name":"join_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"8909:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8894:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2000_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"39393939","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8940:4:7","typeDescriptions":{"typeIdentifier":"t_rational_9999_by_1","typeString":"int_const 9999"},"value":"9999"},{"hexValue":"39393939","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8955:4:7","typeDescriptions":{"typeIdentifier":"t_rational_9999_by_1","typeString":"int_const 9999"},"value":"9999"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_9999_by_1","typeString":"int_const 9999"},{"typeIdentifier":"t_rational_9999_by_1","typeString":"int_const 9999"}],"id":2726,"name":"join_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"8920:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_join_struct_$2000_storage_ptr_$","typeString":"type(struct PlanetDAO.join_struct storage pointer)"}},"id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8933:5:7","8946:7:7"],"names":["daoid","user_id"],"nodeType":"FunctionCall","src":"8920:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2000_memory_ptr","typeString":"struct PlanetDAO.join_struct memory"}},"src":"8894:67:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2000_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"id":2731,"nodeType":"ExpressionStatement","src":"8894:67:7"}]},"functionSelector":"826eeefe","id":2733,"implemented":true,"kind":"function","modifiers":[],"name":"leave_community","nameLocation":"8847:15:7","nodeType":"FunctionDefinition","parameters":{"id":2721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2720,"mutability":"mutable","name":"join_id","nameLocation":"8871:7:7","nodeType":"VariableDeclaration","scope":2733,"src":"8863:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2719,"name":"uint256","nodeType":"ElementaryTypeName","src":"8863:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8862:17:7"},"returnParameters":{"id":2722,"nodeType":"ParameterList","parameters":[],"src":"8887:0:7"},"scope":3542,"src":"8838:129:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2774,"nodeType":"Block","src":"9058:183:7","statements":[{"body":{"id":2770,"nodeType":"Block","src":"9105:110:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2752,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"9119:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2000_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct storage ref)"}},"id":2754,"indexExpression":{"id":2753,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"9134:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9119:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2000_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"id":2755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9137:7:7","memberName":"user_id","nodeType":"MemberAccess","referencedDeclaration":1999,"src":"9119:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2756,"name":"person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"9148:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9119:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9118:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2759,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"9160:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2000_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct storage ref)"}},"id":2761,"indexExpression":{"id":2760,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"9175:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9160:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2000_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"id":2762,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9178:5:7","memberName":"daoid","nodeType":"MemberAccess","referencedDeclaration":1997,"src":"9160:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2763,"name":"dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"9187:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9160:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2765,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9159:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9118:76:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2769,"nodeType":"IfStatement","src":"9114:93:7","trueBody":{"expression":{"hexValue":"74727565","id":2767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9203:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2741,"id":2768,"nodeType":"Return","src":"9196:11:7"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2746,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"9085:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2747,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"9089:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9085:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2771,"initializationExpression":{"assignments":[2743],"declarations":[{"constant":false,"id":2743,"mutability":"mutable","name":"i","nameLocation":"9078:1:7","nodeType":"VariableDeclaration","scope":2771,"src":"9070:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2742,"name":"uint256","nodeType":"ElementaryTypeName","src":"9070:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2745,"initialValue":{"hexValue":"30","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9082:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9070:13:7"},"loopExpression":{"expression":{"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9100:3:7","subExpression":{"id":2749,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"9100:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2751,"nodeType":"ExpressionStatement","src":"9100:3:7"},"nodeType":"ForStatement","src":"9065:150:7"},{"expression":{"hexValue":"66616c7365","id":2772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9230:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2741,"id":2773,"nodeType":"Return","src":"9223:12:7"}]},"functionSelector":"7a82b1d6","id":2775,"implemented":true,"kind":"function","modifiers":[],"name":"is_person_joined","nameLocation":"8982:16:7","nodeType":"FunctionDefinition","parameters":{"id":2738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"dao_id","nameLocation":"9007:6:7","nodeType":"VariableDeclaration","scope":2775,"src":"8999:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2734,"name":"uint256","nodeType":"ElementaryTypeName","src":"8999:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2737,"mutability":"mutable","name":"person","nameLocation":"9023:6:7","nodeType":"VariableDeclaration","scope":2775,"src":"9015:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2736,"name":"uint256","nodeType":"ElementaryTypeName","src":"9015:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8998:32:7"},"returnParameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2775,"src":"9052:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2739,"name":"bool","nodeType":"ElementaryTypeName","src":"9052:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9051:6:7"},"scope":3542,"src":"8973:268:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2816,"nodeType":"Block","src":"9338:179:7","statements":[{"body":{"id":2812,"nodeType":"Block","src":"9385:107:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2794,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"9399:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2000_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct storage ref)"}},"id":2796,"indexExpression":{"id":2795,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"9414:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9399:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2000_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"id":2797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9417:7:7","memberName":"user_id","nodeType":"MemberAccess","referencedDeclaration":1999,"src":"9399:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2798,"name":"person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"9428:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9399:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2800,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9398:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2801,"name":"_joined_person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"9440:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_join_struct_$2000_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.join_struct storage ref)"}},"id":2803,"indexExpression":{"id":2802,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"9455:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9440:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_join_struct_$2000_storage","typeString":"struct PlanetDAO.join_struct storage ref"}},"id":2804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9458:5:7","memberName":"daoid","nodeType":"MemberAccess","referencedDeclaration":1997,"src":"9440:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2805,"name":"dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"9467:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9440:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2807,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9439:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9398:76:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2811,"nodeType":"IfStatement","src":"9394:90:7","trueBody":{"expression":{"id":2809,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"9483:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2783,"id":2810,"nodeType":"Return","src":"9476:8:7"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2788,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"9365:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2789,"name":"_join_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"9369:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9365:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2813,"initializationExpression":{"assignments":[2785],"declarations":[{"constant":false,"id":2785,"mutability":"mutable","name":"i","nameLocation":"9358:1:7","nodeType":"VariableDeclaration","scope":2813,"src":"9350:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2784,"name":"uint256","nodeType":"ElementaryTypeName","src":"9350:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2787,"initialValue":{"hexValue":"30","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9362:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9350:13:7"},"loopExpression":{"expression":{"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9380:3:7","subExpression":{"id":2791,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"9380:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2793,"nodeType":"ExpressionStatement","src":"9380:3:7"},"nodeType":"ForStatement","src":"9345:147:7"},{"expression":{"hexValue":"39393939","id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9507:4:7","typeDescriptions":{"typeIdentifier":"t_rational_9999_by_1","typeString":"int_const 9999"},"value":"9999"},"functionReturnParameters":2783,"id":2815,"nodeType":"Return","src":"9500:11:7"}]},"functionSelector":"b604efaa","id":2817,"implemented":true,"kind":"function","modifiers":[],"name":"get_person_joinedID","nameLocation":"9256:19:7","nodeType":"FunctionDefinition","parameters":{"id":2780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2777,"mutability":"mutable","name":"dao_id","nameLocation":"9284:6:7","nodeType":"VariableDeclaration","scope":2817,"src":"9276:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2776,"name":"uint256","nodeType":"ElementaryTypeName","src":"9276:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2779,"mutability":"mutable","name":"person","nameLocation":"9300:6:7","nodeType":"VariableDeclaration","scope":2817,"src":"9292:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2778,"name":"uint256","nodeType":"ElementaryTypeName","src":"9292:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9275:32:7"},"returnParameters":{"id":2783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2817,"src":"9329:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2781,"name":"uint256","nodeType":"ElementaryTypeName","src":"9329:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9328:9:7"},"scope":3542,"src":"9247:270:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2857,"nodeType":"Block","src":"9586:221:7","statements":[{"assignments":[2827],"declarations":[{"constant":false,"id":2827,"mutability":"mutable","name":"_StoreInfo","nameLocation":"9634:10:7","nodeType":"VariableDeclaration","scope":2857,"src":"9618:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2825,"name":"string","nodeType":"ElementaryTypeName","src":"9618:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2826,"nodeType":"ArrayTypeName","src":"9618:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2833,"initialValue":{"arguments":[{"id":2831,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"9660:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9647:12:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2828,"name":"string","nodeType":"ElementaryTypeName","src":"9651:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2829,"nodeType":"ArrayTypeName","src":"9651:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9647:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9618:53:7"},{"body":{"id":2853,"nodeType":"Block","src":"9719:57:7","statements":[{"expression":{"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2844,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"9728:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2846,"indexExpression":{"id":2845,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"9739:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9728:13:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2847,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"9744:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2849,"indexExpression":{"id":2848,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"9756:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9744:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9759:9:7","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"9744:24:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"9728:40:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2852,"nodeType":"ExpressionStatement","src":"9728:40:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2838,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"9698:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2839,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"9702:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9698:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2854,"initializationExpression":{"assignments":[2835],"declarations":[{"constant":false,"id":2835,"mutability":"mutable","name":"i","nameLocation":"9691:1:7","nodeType":"VariableDeclaration","scope":2854,"src":"9683:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2834,"name":"uint256","nodeType":"ElementaryTypeName","src":"9683:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2837,"initialValue":{"hexValue":"30","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9695:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9683:13:7"},"loopExpression":{"expression":{"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9714:3:7","subExpression":{"id":2841,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"9714:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2843,"nodeType":"ExpressionStatement","src":"9714:3:7"},"nodeType":"ForStatement","src":"9678:98:7"},{"expression":{"id":2855,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"9791:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2822,"id":2856,"nodeType":"Return","src":"9784:17:7"}]},"functionSelector":"97ee7606","id":2858,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_ideas","nameLocation":"9532:13:7","nodeType":"FunctionDefinition","parameters":{"id":2818,"nodeType":"ParameterList","parameters":[],"src":"9545:2:7"},"returnParameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2858,"src":"9569:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2819,"name":"string","nodeType":"ElementaryTypeName","src":"9569:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2820,"nodeType":"ArrayTypeName","src":"9569:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"9568:17:7"},"scope":3542,"src":"9523:284:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2913,"nodeType":"Block","src":"9903:324:7","statements":[{"assignments":[2870],"declarations":[{"constant":false,"id":2870,"mutability":"mutable","name":"_StoreInfo","nameLocation":"9962:10:7","nodeType":"VariableDeclaration","scope":2913,"src":"9946:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2868,"name":"string","nodeType":"ElementaryTypeName","src":"9946:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2869,"nodeType":"ArrayTypeName","src":"9946:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":2876,"initialValue":{"arguments":[{"id":2874,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"9988:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9975:12:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":2871,"name":"string","nodeType":"ElementaryTypeName","src":"9979:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2872,"nodeType":"ArrayTypeName","src":"9979:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9946:53:7"},{"assignments":[2878],"declarations":[{"constant":false,"id":2878,"mutability":"mutable","name":"_store_id","nameLocation":"10014:9:7","nodeType":"VariableDeclaration","scope":2913,"src":"10006:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2877,"name":"uint256","nodeType":"ElementaryTypeName","src":"10006:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2879,"nodeType":"VariableDeclarationStatement","src":"10006:17:7"},{"body":{"id":2909,"nodeType":"Block","src":"10071:125:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2890,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"10084:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2892,"indexExpression":{"id":2891,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"10096:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10084:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10099:7:7","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1937,"src":"10084:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2894,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"10110:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2905,"nodeType":"IfStatement","src":"10080:88:7","trueBody":{"expression":{"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2896,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"10120:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":2898,"indexExpression":{"id":2897,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"10131:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10120:21:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2899,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"10144:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2901,"indexExpression":{"id":2900,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"10156:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10144:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10159:9:7","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"10144:24:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"10120:48:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2904,"nodeType":"ExpressionStatement","src":"10120:48:7"}},{"expression":{"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10177:11:7","subExpression":{"id":2906,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"10177:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2908,"nodeType":"ExpressionStatement","src":"10177:11:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2884,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"10050:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2885,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"10054:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10050:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2910,"initializationExpression":{"assignments":[2881],"declarations":[{"constant":false,"id":2881,"mutability":"mutable","name":"i","nameLocation":"10043:1:7","nodeType":"VariableDeclaration","scope":2910,"src":"10035:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2880,"name":"uint256","nodeType":"ElementaryTypeName","src":"10035:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2883,"initialValue":{"hexValue":"30","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10047:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10035:13:7"},"loopExpression":{"expression":{"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10066:3:7","subExpression":{"id":2887,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"10066:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2889,"nodeType":"ExpressionStatement","src":"10066:3:7"},"nodeType":"ForStatement","src":"10030:166:7"},{"expression":{"id":2911,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"10211:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":2865,"id":2912,"nodeType":"Return","src":"10204:17:7"}]},"functionSelector":"131d44f2","id":2914,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_ideas_by_goal_id","nameLocation":"9822:24:7","nodeType":"FunctionDefinition","parameters":{"id":2861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2860,"mutability":"mutable","name":"_goal_id","nameLocation":"9855:8:7","nodeType":"VariableDeclaration","scope":2914,"src":"9847:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2859,"name":"uint256","nodeType":"ElementaryTypeName","src":"9847:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9846:18:7"},"returnParameters":{"id":2865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2914,"src":"9886:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2862,"name":"string","nodeType":"ElementaryTypeName","src":"9886:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2863,"nodeType":"ArrayTypeName","src":"9886:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"9885:17:7"},"scope":3542,"src":"9813:414:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2954,"nodeType":"Block","src":"10324:206:7","statements":[{"body":{"id":2950,"nodeType":"Block","src":"10403:105:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2934,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"10432:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2936,"indexExpression":{"id":2935,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"10444:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10432:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10447:9:7","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"10432:24:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10426:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2932,"name":"bytes","nodeType":"ElementaryTypeName","src":"10426:5:7","typeDescriptions":{}}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10426:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2931,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10416:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10416:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2943,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"10478:10:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10472:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2941,"name":"bytes","nodeType":"ElementaryTypeName","src":"10472:5:7","typeDescriptions":{}}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10472:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2940,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10462:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10462:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10416:74:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2949,"nodeType":"IfStatement","src":"10412:88:7","trueBody":{"expression":{"id":2947,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"10499:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2920,"id":2948,"nodeType":"Return","src":"10492:8:7"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2925,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"10382:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2926,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"10386:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10382:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2951,"initializationExpression":{"assignments":[2922],"declarations":[{"constant":false,"id":2922,"mutability":"mutable","name":"i","nameLocation":"10375:1:7","nodeType":"VariableDeclaration","scope":2951,"src":"10367:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2921,"name":"uint256","nodeType":"ElementaryTypeName","src":"10367:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2924,"initialValue":{"hexValue":"30","id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10379:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10367:13:7"},"loopExpression":{"expression":{"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10398:3:7","subExpression":{"id":2928,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"10398:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2930,"nodeType":"ExpressionStatement","src":"10398:3:7"},"nodeType":"ForStatement","src":"10362:146:7"},{"expression":{"hexValue":"30","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10523:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2920,"id":2953,"nodeType":"Return","src":"10516:8:7"}]},"functionSelector":"a1ca9178","id":2955,"implemented":true,"kind":"function","modifiers":[],"name":"get_ideas_id_by_ideas_uri","nameLocation":"10242:25:7","nodeType":"FunctionDefinition","parameters":{"id":2917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"_ideas_uri","nameLocation":"10282:10:7","nodeType":"VariableDeclaration","scope":2955,"src":"10268:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2915,"name":"string","nodeType":"ElementaryTypeName","src":"10268:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10267:26:7"},"returnParameters":{"id":2920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2955,"src":"10315:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2918,"name":"uint256","nodeType":"ElementaryTypeName","src":"10315:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10314:9:7"},"scope":3542,"src":"10233:297:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2998,"nodeType":"Block","src":"10628:227:7","statements":[{"body":{"id":2994,"nodeType":"Block","src":"10707:126:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2975,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"10736:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2977,"indexExpression":{"id":2976,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"10748:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10736:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10751:9:7","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"10736:24:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10730:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2973,"name":"bytes","nodeType":"ElementaryTypeName","src":"10730:5:7","typeDescriptions":{}}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10730:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2972,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10720:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10720:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2984,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"10782:10:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10776:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2982,"name":"bytes","nodeType":"ElementaryTypeName","src":"10776:5:7","typeDescriptions":{}}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10776:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2981,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10766:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10766:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10720:74:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2993,"nodeType":"IfStatement","src":"10716:109:7","trueBody":{"expression":{"expression":{"baseExpression":{"id":2988,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"10803:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":2990,"indexExpression":{"id":2989,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"10815:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10803:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":2991,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10818:7:7","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1937,"src":"10803:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2961,"id":2992,"nodeType":"Return","src":"10796:29:7"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2966,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"10686:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2967,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"10690:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10686:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2995,"initializationExpression":{"assignments":[2963],"declarations":[{"constant":false,"id":2963,"mutability":"mutable","name":"i","nameLocation":"10679:1:7","nodeType":"VariableDeclaration","scope":2995,"src":"10671:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2962,"name":"uint256","nodeType":"ElementaryTypeName","src":"10671:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2965,"initialValue":{"hexValue":"30","id":2964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10683:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10671:13:7"},"loopExpression":{"expression":{"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10702:3:7","subExpression":{"id":2969,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"10702:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2971,"nodeType":"ExpressionStatement","src":"10702:3:7"},"nodeType":"ForStatement","src":"10666:167:7"},{"expression":{"hexValue":"30","id":2996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10848:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2961,"id":2997,"nodeType":"Return","src":"10841:8:7"}]},"functionSelector":"aa4cdf2a","id":2999,"implemented":true,"kind":"function","modifiers":[],"name":"get_goal_id_from_ideas_uri","nameLocation":"10545:26:7","nodeType":"FunctionDefinition","parameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2957,"mutability":"mutable","name":"_ideas_uri","nameLocation":"10586:10:7","nodeType":"VariableDeclaration","scope":2999,"src":"10572:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2956,"name":"string","nodeType":"ElementaryTypeName","src":"10572:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10571:26:7"},"returnParameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2999,"src":"10619:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2959,"name":"uint256","nodeType":"ElementaryTypeName","src":"10619:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10618:9:7"},"scope":3542,"src":"10536:319:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3011,"nodeType":"Block","src":"10935:81:7","statements":[{"expression":{"expression":{"baseExpression":{"id":3006,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"10978:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":3008,"indexExpression":{"id":3007,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"10990:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10978:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"id":3009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11001:9:7","memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"10978:32:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":3005,"id":3010,"nodeType":"Return","src":"10971:39:7"}]},"functionSelector":"8d3d2595","id":3012,"implemented":true,"kind":"function","modifiers":[],"name":"ideas_uri","nameLocation":"10870:9:7","nodeType":"FunctionDefinition","parameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"_ideas_id","nameLocation":"10888:9:7","nodeType":"VariableDeclaration","scope":3012,"src":"10880:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"10880:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10879:19:7"},"returnParameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3012,"src":"10920:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3003,"name":"string","nodeType":"ElementaryTypeName","src":"10920:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10919:15:7"},"scope":3542,"src":"10861:155:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3057,"nodeType":"Block","src":"11181:310:7","statements":[{"expression":{"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3027,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"11188:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":3029,"indexExpression":{"id":3028,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"11201:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11188:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2019_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":3030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11211:4:7","memberName":"vote","nodeType":"MemberAccess","referencedDeclaration":2012,"src":"11188:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11218:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11188:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3033,"nodeType":"ExpressionStatement","src":"11188:34:7"},{"expression":{"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3034,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"11275:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct storage ref)"}},"id":3036,"indexExpression":{"id":3035,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"11296:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11275:37:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3038,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"11339:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3039,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"11349:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3040,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"11360:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3037,"name":"goal_ideas_votes_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"11315:23:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_goal_ideas_votes_struct_$1963_storage_ptr_$","typeString":"type(struct PlanetDAO.goal_ideas_votes_struct storage pointer)"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11315:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_memory_ptr","typeString":"struct PlanetDAO.goal_ideas_votes_struct memory"}},"src":"11275:94:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"id":3043,"nodeType":"ExpressionStatement","src":"11275:94:7"},{"expression":{"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11376:17:7","subExpression":{"id":3044,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"11376:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3046,"nodeType":"ExpressionStatement","src":"11376:17:7"},{"condition":{"id":3047,"name":"feed_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"11404:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3054,"nodeType":"IfStatement","src":"11400:55:7","trueBody":{"id":3053,"nodeType":"Block","src":"11413:42:7","statements":[{"expression":{"arguments":[{"id":3049,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"11433:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"766f7465","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11440:6:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0932bdf85fc8aa10ac3c22f02317f8f53d4b4f52235ed1eabb3a4cbbe08b5c41","typeString":"literal_string \"vote\""},"value":"vote"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_0932bdf85fc8aa10ac3c22f02317f8f53d4b4f52235ed1eabb3a4cbbe08b5c41","typeString":"literal_string \"vote\""}],"id":3048,"name":"add_Feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"11424:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11424:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3052,"nodeType":"ExpressionStatement","src":"11424:23:7"}]}},{"expression":{"id":3055,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"11470:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3026,"id":3056,"nodeType":"Return","src":"11463:22:7"}]},"functionSelector":"ecde3243","id":3058,"implemented":true,"kind":"function","modifiers":[],"name":"create_goal_ideas_vote","nameLocation":"11042:22:7","nodeType":"FunctionDefinition","parameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3014,"mutability":"mutable","name":"_goal_id","nameLocation":"11073:8:7","nodeType":"VariableDeclaration","scope":3058,"src":"11065:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3013,"name":"uint256","nodeType":"ElementaryTypeName","src":"11065:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3016,"mutability":"mutable","name":"_ideas_id","nameLocation":"11091:9:7","nodeType":"VariableDeclaration","scope":3058,"src":"11083:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3015,"name":"uint256","nodeType":"ElementaryTypeName","src":"11083:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3018,"mutability":"mutable","name":"_user_id","nameLocation":"11110:8:7","nodeType":"VariableDeclaration","scope":3058,"src":"11102:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3017,"name":"uint256","nodeType":"ElementaryTypeName","src":"11102:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3020,"mutability":"mutable","name":"_feed","nameLocation":"11134:5:7","nodeType":"VariableDeclaration","scope":3058,"src":"11120:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3019,"name":"string","nodeType":"ElementaryTypeName","src":"11120:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3022,"mutability":"mutable","name":"feed_add","nameLocation":"11146:8:7","nodeType":"VariableDeclaration","scope":3058,"src":"11140:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3021,"name":"bool","nodeType":"ElementaryTypeName","src":"11140:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11064:91:7"},"returnParameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3058,"src":"11172:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3024,"name":"uint256","nodeType":"ElementaryTypeName","src":"11172:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11171:9:7"},"scope":3542,"src":"11033:458:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3125,"nodeType":"Block","src":"11607:417:7","statements":[{"assignments":[3072],"declarations":[{"constant":false,"id":3072,"mutability":"mutable","name":"_StoreInfo","nameLocation":"11668:10:7","nodeType":"VariableDeclaration","scope":3125,"src":"11652:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3070,"name":"string","nodeType":"ElementaryTypeName","src":"11652:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3071,"nodeType":"ArrayTypeName","src":"11652:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":3078,"initialValue":{"arguments":[{"id":3076,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"11694:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11681:12:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":3073,"name":"string","nodeType":"ElementaryTypeName","src":"11685:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3074,"nodeType":"ArrayTypeName","src":"11685:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11681:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11652:58:7"},{"assignments":[3080],"declarations":[{"constant":false,"id":3080,"mutability":"mutable","name":"_store_id","nameLocation":"11725:9:7","nodeType":"VariableDeclaration","scope":3125,"src":"11717:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3079,"name":"uint256","nodeType":"ElementaryTypeName","src":"11717:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3081,"nodeType":"VariableDeclarationStatement","src":"11717:17:7"},{"body":{"id":3121,"nodeType":"Block","src":"11787:208:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3092,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"11800:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct storage ref)"}},"id":3094,"indexExpression":{"id":3093,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"11821:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11800:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"id":3095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11824:7:7","memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1958,"src":"11800:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3096,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"11835:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11800:43:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3098,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"11847:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct storage ref)"}},"id":3100,"indexExpression":{"id":3099,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"11868:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11847:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"id":3101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11871:8:7","memberName":"ideas_id","nodeType":"MemberAccess","referencedDeclaration":1960,"src":"11847:32:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3102,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"11883:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11847:45:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11800:92:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3117,"nodeType":"IfStatement","src":"11796:171:7","trueBody":{"expression":{"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3105,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"11894:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":3107,"indexExpression":{"id":3106,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"11905:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11894:21:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"baseExpression":{"id":3110,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"11935:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct storage ref)"}},"id":3112,"indexExpression":{"id":3111,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"11956:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11935:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"id":3113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11959:7:7","memberName":"user_id","nodeType":"MemberAccess","referencedDeclaration":1962,"src":"11935:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3108,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"11918:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$948_$","typeString":"type(library Strings)"}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11926:8:7","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":778,"src":"11918:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11918:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"11894:73:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3116,"nodeType":"ExpressionStatement","src":"11894:73:7"}},{"expression":{"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11976:11:7","subExpression":{"id":3118,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"11976:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3120,"nodeType":"ExpressionStatement","src":"11976:11:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3086,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"11761:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3087,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"11765:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11761:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3122,"initializationExpression":{"assignments":[3083],"declarations":[{"constant":false,"id":3083,"mutability":"mutable","name":"i","nameLocation":"11754:1:7","nodeType":"VariableDeclaration","scope":3122,"src":"11746:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3082,"name":"uint256","nodeType":"ElementaryTypeName","src":"11746:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3085,"initialValue":{"hexValue":"30","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11758:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11746:13:7"},"loopExpression":{"expression":{"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11782:3:7","subExpression":{"id":3089,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"11782:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3091,"nodeType":"ExpressionStatement","src":"11782:3:7"},"nodeType":"ForStatement","src":"11741:254:7"},{"expression":{"id":3123,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"12008:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":3067,"id":3124,"nodeType":"Return","src":"12001:17:7"}]},"functionSelector":"4be7adb5","id":3126,"implemented":true,"kind":"function","modifiers":[],"name":"get_ideas_votes_from_goal","nameLocation":"11506:25:7","nodeType":"FunctionDefinition","parameters":{"id":3063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3060,"mutability":"mutable","name":"_goal_id","nameLocation":"11540:8:7","nodeType":"VariableDeclaration","scope":3126,"src":"11532:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"11532:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3062,"mutability":"mutable","name":"_ideas_id","nameLocation":"11558:9:7","nodeType":"VariableDeclaration","scope":3126,"src":"11550:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3061,"name":"uint256","nodeType":"ElementaryTypeName","src":"11550:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11531:37:7"},"returnParameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3126,"src":"11590:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3064,"name":"string","nodeType":"ElementaryTypeName","src":"11590:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3065,"nodeType":"ArrayTypeName","src":"11590:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"11589:17:7"},"scope":3542,"src":"11497:527:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3162,"nodeType":"Block","src":"12170:234:7","statements":[{"expression":{"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3139,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"12177:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":3141,"indexExpression":{"id":3140,"name":"_user_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"12190:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12177:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2019_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":3142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12200:7:7","memberName":"comment","nodeType":"MemberAccess","referencedDeclaration":2016,"src":"12177:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12210:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12177:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3145,"nodeType":"ExpressionStatement","src":"12177:37:7"},{"expression":{"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3146,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"12262:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1972_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct storage ref)"}},"id":3148,"indexExpression":{"id":3147,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"12275:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12262:26:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_storage","typeString":"struct PlanetDAO.message_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3150,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"12306:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3151,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"12320:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3152,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"12331:8:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3153,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"12341:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3149,"name":"message_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"12291:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_message_struct_$1972_storage_ptr_$","typeString":"type(struct PlanetDAO.message_struct storage pointer)"}},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12291:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_memory_ptr","typeString":"struct PlanetDAO.message_struct memory"}},"src":"12262:87:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_storage","typeString":"struct PlanetDAO.message_struct storage ref"}},"id":3156,"nodeType":"ExpressionStatement","src":"12262:87:7"},{"expression":{"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12356:14:7","subExpression":{"id":3157,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"12356:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3159,"nodeType":"ExpressionStatement","src":"12356:14:7"},{"expression":{"id":3160,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"12386:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3138,"id":3161,"nodeType":"Return","src":"12379:19:7"}]},"functionSelector":"787f19c7","id":3163,"implemented":true,"kind":"function","modifiers":[],"name":"sendMsg","nameLocation":"12053:7:7","nodeType":"FunctionDefinition","parameters":{"id":3135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"_ideas_id","nameLocation":"12069:9:7","nodeType":"VariableDeclaration","scope":3163,"src":"12061:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3127,"name":"uint256","nodeType":"ElementaryTypeName","src":"12061:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3130,"mutability":"mutable","name":"_message","nameLocation":"12094:8:7","nodeType":"VariableDeclaration","scope":3163,"src":"12080:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3129,"name":"string","nodeType":"ElementaryTypeName","src":"12080:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3132,"mutability":"mutable","name":"_sender","nameLocation":"12118:7:7","nodeType":"VariableDeclaration","scope":3163,"src":"12104:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3131,"name":"string","nodeType":"ElementaryTypeName","src":"12104:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3134,"mutability":"mutable","name":"_user_id","nameLocation":"12135:8:7","nodeType":"VariableDeclaration","scope":3163,"src":"12127:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3133,"name":"uint256","nodeType":"ElementaryTypeName","src":"12127:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12060:84:7"},"returnParameters":{"id":3138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3163,"src":"12161:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3136,"name":"uint256","nodeType":"ElementaryTypeName","src":"12161:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12160:9:7"},"scope":3542,"src":"12044:360:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3219,"nodeType":"Block","src":"12486:384:7","statements":[{"assignments":[3175],"declarations":[{"constant":false,"id":3175,"mutability":"mutable","name":"_All_Ideas_Messages","nameLocation":"12553:19:7","nodeType":"VariableDeclaration","scope":3219,"src":"12536:36:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3173,"name":"uint256","nodeType":"ElementaryTypeName","src":"12536:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3174,"nodeType":"ArrayTypeName","src":"12536:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3181,"initialValue":{"arguments":[{"id":3179,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"12589:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12575:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3176,"name":"uint256","nodeType":"ElementaryTypeName","src":"12579:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3177,"nodeType":"ArrayTypeName","src":"12579:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12575:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12536:66:7"},{"assignments":[3183],"declarations":[{"constant":false,"id":3183,"mutability":"mutable","name":"_msg_id","nameLocation":"12617:7:7","nodeType":"VariableDeclaration","scope":3219,"src":"12609:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3182,"name":"uint256","nodeType":"ElementaryTypeName","src":"12609:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3184,"nodeType":"VariableDeclarationStatement","src":"12609:15:7"},{"body":{"id":3215,"nodeType":"Block","src":"12674:156:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3195,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"12687:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1972_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct storage ref)"}},"id":3197,"indexExpression":{"id":3196,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"12700:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12687:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_storage","typeString":"struct PlanetDAO.message_struct storage ref"}},"id":3198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12703:8:7","memberName":"ideas_id","nodeType":"MemberAccess","referencedDeclaration":1967,"src":"12687:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3199,"name":"ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"12715:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12687:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3214,"nodeType":"IfStatement","src":"12683:140:7","trueBody":{"id":3213,"nodeType":"Block","src":"12725:98:7","statements":[{"expression":{"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3201,"name":"_All_Ideas_Messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"12736:19:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3203,"indexExpression":{"id":3202,"name":"_msg_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"12756:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12736:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3204,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"12767:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1972_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct storage ref)"}},"id":3206,"indexExpression":{"id":3205,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"12780:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12767:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_storage","typeString":"struct PlanetDAO.message_struct storage ref"}},"id":3207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12783:10:7","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":1965,"src":"12767:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12736:57:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3209,"nodeType":"ExpressionStatement","src":"12736:57:7"},{"expression":{"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12804:9:7","subExpression":{"id":3210,"name":"_msg_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"12804:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3212,"nodeType":"ExpressionStatement","src":"12804:9:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3189,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"12651:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3190,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"12655:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12651:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3216,"initializationExpression":{"assignments":[3186],"declarations":[{"constant":false,"id":3186,"mutability":"mutable","name":"i","nameLocation":"12644:1:7","nodeType":"VariableDeclaration","scope":3216,"src":"12636:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"12636:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3188,"initialValue":{"hexValue":"30","id":3187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12648:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12636:13:7"},"loopExpression":{"expression":{"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12669:3:7","subExpression":{"id":3192,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"12669:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3194,"nodeType":"ExpressionStatement","src":"12669:3:7"},"nodeType":"ForStatement","src":"12631:199:7"},{"expression":{"id":3217,"name":"_All_Ideas_Messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"12845:19:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3170,"id":3218,"nodeType":"Return","src":"12838:26:7"}]},"functionSelector":"803f5b9f","id":3220,"implemented":true,"kind":"function","modifiers":[],"name":"getMsgIDs","nameLocation":"12419:9:7","nodeType":"FunctionDefinition","parameters":{"id":3166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"mutability":"mutable","name":"ideas_id","nameLocation":"12437:8:7","nodeType":"VariableDeclaration","scope":3220,"src":"12429:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3164,"name":"uint256","nodeType":"ElementaryTypeName","src":"12429:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12428:18:7"},"returnParameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3220,"src":"12468:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3167,"name":"uint256","nodeType":"ElementaryTypeName","src":"12468:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3168,"nodeType":"ArrayTypeName","src":"12468:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12467:18:7"},"scope":3542,"src":"12410:460:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3256,"nodeType":"Block","src":"12998:217:7","statements":[{"expression":{"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3233,"name":"_user_badges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"13005:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_user_badge_struct_$2019_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.user_badge_struct storage ref)"}},"id":3235,"indexExpression":{"id":3234,"name":"_userid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"13018:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13005:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_user_badge_struct_$2019_storage","typeString":"struct PlanetDAO.user_badge_struct storage ref"}},"id":3236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13027:5:7","memberName":"reply","nodeType":"MemberAccess","referencedDeclaration":2018,"src":"13005:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13035:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13005:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3239,"nodeType":"ExpressionStatement","src":"13005:34:7"},{"expression":{"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3240,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"13083:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1990_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct storage ref)"}},"id":3242,"indexExpression":{"id":3241,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"13095:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13083:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_storage","typeString":"struct PlanetDAO.reply_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3244,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"13122:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3245,"name":"_message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"13134:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3246,"name":"ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"13147:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3247,"name":"_reply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"13157:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3243,"name":"reply_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"13109:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_reply_struct_$1990_storage_ptr_$","typeString":"type(struct PlanetDAO.reply_struct storage pointer)"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13109:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_memory_ptr","typeString":"struct PlanetDAO.reply_struct memory"}},"src":"13083:81:7","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_storage","typeString":"struct PlanetDAO.reply_struct storage ref"}},"id":3250,"nodeType":"ExpressionStatement","src":"13083:81:7"},{"expression":{"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13171:12:7","subExpression":{"id":3251,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"13171:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3253,"nodeType":"ExpressionStatement","src":"13171:12:7"},{"expression":{"id":3254,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"13199:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3232,"id":3255,"nodeType":"Return","src":"13192:17:7"}]},"functionSelector":"d9fc52db","id":3257,"implemented":true,"kind":"function","modifiers":[],"name":"sendReply","nameLocation":"12885:9:7","nodeType":"FunctionDefinition","parameters":{"id":3229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"_message_id","nameLocation":"12903:11:7","nodeType":"VariableDeclaration","scope":3257,"src":"12895:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"12895:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3224,"mutability":"mutable","name":"_reply","nameLocation":"12930:6:7","nodeType":"VariableDeclaration","scope":3257,"src":"12916:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3223,"name":"string","nodeType":"ElementaryTypeName","src":"12916:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3226,"mutability":"mutable","name":"ideas_id","nameLocation":"12946:8:7","nodeType":"VariableDeclaration","scope":3257,"src":"12938:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"12938:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3228,"mutability":"mutable","name":"_userid","nameLocation":"12964:7:7","nodeType":"VariableDeclaration","scope":3257,"src":"12956:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3227,"name":"uint256","nodeType":"ElementaryTypeName","src":"12956:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12894:78:7"},"returnParameters":{"id":3232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3257,"src":"12989:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"12989:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12988:9:7"},"scope":3542,"src":"12876:339:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3313,"nodeType":"Block","src":"13301:389:7","statements":[{"assignments":[3269],"declarations":[{"constant":false,"id":3269,"mutability":"mutable","name":"_All_Messages_Replys","nameLocation":"13368:20:7","nodeType":"VariableDeclaration","scope":3313,"src":"13351:37:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3267,"name":"uint256","nodeType":"ElementaryTypeName","src":"13351:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3268,"nodeType":"ArrayTypeName","src":"13351:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3275,"initialValue":{"arguments":[{"id":3273,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"13405:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13391:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3270,"name":"uint256","nodeType":"ElementaryTypeName","src":"13395:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3271,"nodeType":"ArrayTypeName","src":"13395:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13391:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13351:65:7"},{"assignments":[3277],"declarations":[{"constant":false,"id":3277,"mutability":"mutable","name":"_reply_id","nameLocation":"13431:9:7","nodeType":"VariableDeclaration","scope":3313,"src":"13423:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"13423:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3278,"nodeType":"VariableDeclarationStatement","src":"13423:17:7"},{"body":{"id":3309,"nodeType":"Block","src":"13488:161:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3289,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"13501:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1990_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct storage ref)"}},"id":3291,"indexExpression":{"id":3290,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"13513:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13501:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_storage","typeString":"struct PlanetDAO.reply_struct storage ref"}},"id":3292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13516:10:7","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":1985,"src":"13501:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3293,"name":"message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"13530:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13501:39:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3308,"nodeType":"IfStatement","src":"13497:145:7","trueBody":{"id":3307,"nodeType":"Block","src":"13542:100:7","statements":[{"expression":{"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3295,"name":"_All_Messages_Replys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"13553:20:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3297,"indexExpression":{"id":3296,"name":"_reply_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"13574:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13553:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3298,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"13587:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1990_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct storage ref)"}},"id":3300,"indexExpression":{"id":3299,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"13599:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13587:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_storage","typeString":"struct PlanetDAO.reply_struct storage ref"}},"id":3301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13602:8:7","memberName":"reply_id","nodeType":"MemberAccess","referencedDeclaration":1983,"src":"13587:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13553:57:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3303,"nodeType":"ExpressionStatement","src":"13553:57:7"},{"expression":{"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13621:11:7","subExpression":{"id":3304,"name":"_reply_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"13621:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3306,"nodeType":"ExpressionStatement","src":"13621:11:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3283,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"13467:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3284,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"13471:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13467:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3310,"initializationExpression":{"assignments":[3280],"declarations":[{"constant":false,"id":3280,"mutability":"mutable","name":"i","nameLocation":"13460:1:7","nodeType":"VariableDeclaration","scope":3310,"src":"13452:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3279,"name":"uint256","nodeType":"ElementaryTypeName","src":"13452:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3282,"initialValue":{"hexValue":"30","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13452:13:7"},"loopExpression":{"expression":{"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13483:3:7","subExpression":{"id":3286,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"13483:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3288,"nodeType":"ExpressionStatement","src":"13483:3:7"},"nodeType":"ForStatement","src":"13447:202:7"},{"expression":{"id":3311,"name":"_All_Messages_Replys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"13664:20:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3264,"id":3312,"nodeType":"Return","src":"13657:27:7"}]},"functionSelector":"812fae1f","id":3314,"implemented":true,"kind":"function","modifiers":[],"name":"getReplyIDs","nameLocation":"13230:11:7","nodeType":"FunctionDefinition","parameters":{"id":3260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3259,"mutability":"mutable","name":"message_id","nameLocation":"13250:10:7","nodeType":"VariableDeclaration","scope":3314,"src":"13242:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3258,"name":"uint256","nodeType":"ElementaryTypeName","src":"13242:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13241:20:7"},"returnParameters":{"id":3264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3314,"src":"13283:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3261,"name":"uint256","nodeType":"ElementaryTypeName","src":"13283:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3262,"nodeType":"ArrayTypeName","src":"13283:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13282:18:7"},"scope":3542,"src":"13221:469:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3343,"nodeType":"Block","src":"13823:214:7","statements":[{"expression":{"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3327,"name":"all_read_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"13871:17:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$1981_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_read_struct storage ref)"}},"id":3329,"indexExpression":{"id":3328,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"13889:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13871:36:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1981_storage","typeString":"struct PlanetDAO.message_read_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3331,"name":"_message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"13930:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3332,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"13943:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3333,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"13954:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3334,"name":"msg_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"13963:8:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3330,"name":"message_read_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"13910:19:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_message_read_struct_$1981_storage_ptr_$","typeString":"type(struct PlanetDAO.message_read_struct storage pointer)"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13910:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1981_memory_ptr","typeString":"struct PlanetDAO.message_read_struct memory"}},"src":"13871:101:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1981_storage","typeString":"struct PlanetDAO.message_read_struct storage ref"}},"id":3337,"nodeType":"ExpressionStatement","src":"13871:101:7"},{"expression":{"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13979:19:7","subExpression":{"id":3338,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"13979:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3340,"nodeType":"ExpressionStatement","src":"13979:19:7"},{"expression":{"id":3341,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"14014:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3326,"id":3342,"nodeType":"Return","src":"14007:24:7"}]},"functionSelector":"934c5f00","id":3344,"implemented":true,"kind":"function","modifiers":[],"name":"sendReadMsg","nameLocation":"13705:11:7","nodeType":"FunctionDefinition","parameters":{"id":3323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3316,"mutability":"mutable","name":"_message_id","nameLocation":"13725:11:7","nodeType":"VariableDeclaration","scope":3344,"src":"13717:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3315,"name":"uint256","nodeType":"ElementaryTypeName","src":"13717:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3318,"mutability":"mutable","name":"_ideas_id","nameLocation":"13746:9:7","nodeType":"VariableDeclaration","scope":3344,"src":"13738:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"13738:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3320,"mutability":"mutable","name":"_wallet","nameLocation":"13765:7:7","nodeType":"VariableDeclaration","scope":3344,"src":"13757:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3319,"name":"uint256","nodeType":"ElementaryTypeName","src":"13757:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3322,"mutability":"mutable","name":"msg_type","nameLocation":"13788:8:7","nodeType":"VariableDeclaration","scope":3344,"src":"13774:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3321,"name":"string","nodeType":"ElementaryTypeName","src":"13774:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13716:81:7"},"returnParameters":{"id":3326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3344,"src":"13814:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3324,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:9:7"},"scope":3542,"src":"13696:341:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3400,"nodeType":"Block","src":"14135:285:7","statements":[{"assignments":[3354],"declarations":[{"constant":false,"id":3354,"mutability":"mutable","name":"read","nameLocation":"14147:4:7","nodeType":"VariableDeclaration","scope":3400,"src":"14142:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3353,"name":"bool","nodeType":"ElementaryTypeName","src":"14142:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3356,"initialValue":{"hexValue":"66616c7365","id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14154:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"14142:17:7"},{"body":{"id":3396,"nodeType":"Block","src":"14214:181:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3367,"name":"all_read_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"14227:17:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$1981_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_read_struct storage ref)"}},"id":3369,"indexExpression":{"id":3368,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"14245:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14227:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1981_storage","typeString":"struct PlanetDAO.message_read_struct storage ref"}},"id":3370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14248:10:7","memberName":"message_id","nodeType":"MemberAccess","referencedDeclaration":1974,"src":"14227:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3371,"name":"_message_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"14262:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14227:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3376,"name":"msg_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"14293:8:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14287:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3374,"name":"bytes","nodeType":"ElementaryTypeName","src":"14287:5:7","typeDescriptions":{}}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14287:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3373,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14277:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14277:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":3382,"name":"all_read_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"14323:17:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_read_struct_$1981_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_read_struct storage ref)"}},"id":3384,"indexExpression":{"id":3383,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"14341:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14323:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_read_struct_$1981_storage","typeString":"struct PlanetDAO.message_read_struct storage ref"}},"id":3385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14344:8:7","memberName":"msg_type","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"14323:29:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14317:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3380,"name":"bytes","nodeType":"ElementaryTypeName","src":"14317:5:7","typeDescriptions":{}}},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14317:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":3379,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14307:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14307:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14277:77:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14227:127:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3395,"nodeType":"IfStatement","src":"14223:165:7","trueBody":{"id":3394,"nodeType":"Block","src":"14356:32:7","statements":[{"expression":{"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3390,"name":"read","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"14367:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14374:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"14367:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3393,"nodeType":"ExpressionStatement","src":"14367:11:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3361,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"14186:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3362,"name":"_message_read_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"14190:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14186:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3397,"initializationExpression":{"assignments":[3358],"declarations":[{"constant":false,"id":3358,"mutability":"mutable","name":"i","nameLocation":"14179:1:7","nodeType":"VariableDeclaration","scope":3397,"src":"14171:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3357,"name":"uint256","nodeType":"ElementaryTypeName","src":"14171:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3360,"initialValue":{"hexValue":"30","id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14183:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14171:13:7"},"loopExpression":{"expression":{"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14209:3:7","subExpression":{"id":3364,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"14209:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3366,"nodeType":"ExpressionStatement","src":"14209:3:7"},"nodeType":"ForStatement","src":"14166:229:7"},{"expression":{"id":3398,"name":"read","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"14410:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3352,"id":3399,"nodeType":"Return","src":"14403:11:7"}]},"functionSelector":"cd230809","id":3401,"implemented":true,"kind":"function","modifiers":[],"name":"getReadMsg","nameLocation":"14052:10:7","nodeType":"FunctionDefinition","parameters":{"id":3349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3346,"mutability":"mutable","name":"_message_id","nameLocation":"14071:11:7","nodeType":"VariableDeclaration","scope":3401,"src":"14063:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3345,"name":"uint256","nodeType":"ElementaryTypeName","src":"14063:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3348,"mutability":"mutable","name":"msg_type","nameLocation":"14098:8:7","nodeType":"VariableDeclaration","scope":3401,"src":"14084:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3347,"name":"string","nodeType":"ElementaryTypeName","src":"14084:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14062:45:7"},"returnParameters":{"id":3352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3401,"src":"14129:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3350,"name":"bool","nodeType":"ElementaryTypeName","src":"14129:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14128:6:7"},"scope":3542,"src":"14043:377:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3540,"nodeType":"Block","src":"14454:639:7","statements":[{"body":{"expression":{"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14500:19:7","subExpression":{"baseExpression":{"id":3414,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"14507:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1930_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.dao_uri_struct storage ref)"}},"id":3416,"indexExpression":{"id":3415,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"14517:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14507:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1930_storage","typeString":"struct PlanetDAO.dao_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3418,"nodeType":"ExpressionStatement","src":"14500:19:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3408,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"14481:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3409,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"14485:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14481:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3419,"initializationExpression":{"assignments":[3405],"declarations":[{"constant":false,"id":3405,"mutability":"mutable","name":"i","nameLocation":"14474:1:7","nodeType":"VariableDeclaration","scope":3419,"src":"14466:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3404,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3407,"initialValue":{"hexValue":"30","id":3406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14478:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14466:13:7"},"loopExpression":{"expression":{"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14495:3:7","subExpression":{"id":3411,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"14495:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3413,"nodeType":"ExpressionStatement","src":"14495:3:7"},"nodeType":"ForStatement","src":"14461:58:7"},{"body":{"expression":{"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14566:20:7","subExpression":{"baseExpression":{"id":3430,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"14573:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1935_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_uri_struct storage ref)"}},"id":3432,"indexExpression":{"id":3431,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"14584:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14573:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1935_storage","typeString":"struct PlanetDAO.goal_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3434,"nodeType":"ExpressionStatement","src":"14566:20:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3424,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"14546:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3425,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"14550:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14546:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3435,"initializationExpression":{"assignments":[3421],"declarations":[{"constant":false,"id":3421,"mutability":"mutable","name":"i","nameLocation":"14539:1:7","nodeType":"VariableDeclaration","scope":3435,"src":"14531:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"14531:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3423,"initialValue":{"hexValue":"30","id":3422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14543:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14531:13:7"},"loopExpression":{"expression":{"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14561:3:7","subExpression":{"id":3427,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"14561:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3429,"nodeType":"ExpressionStatement","src":"14561:3:7"},"nodeType":"ForStatement","src":"14526:60:7"},{"body":{"expression":{"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14634:21:7","subExpression":{"baseExpression":{"id":3446,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"14641:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1942_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct storage ref)"}},"id":3448,"indexExpression":{"id":3447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"14653:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14641:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1942_storage","typeString":"struct PlanetDAO.ideas_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3450,"nodeType":"ExpressionStatement","src":"14634:21:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3440,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"14613:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3441,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"14617:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14613:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3451,"initializationExpression":{"assignments":[3437],"declarations":[{"constant":false,"id":3437,"mutability":"mutable","name":"i","nameLocation":"14606:1:7","nodeType":"VariableDeclaration","scope":3451,"src":"14598:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3436,"name":"uint256","nodeType":"ElementaryTypeName","src":"14598:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3439,"initialValue":{"hexValue":"30","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14610:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14598:13:7"},"loopExpression":{"expression":{"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14629:3:7","subExpression":{"id":3443,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"14629:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3445,"nodeType":"ExpressionStatement","src":"14629:3:7"},"nodeType":"ForStatement","src":"14593:62:7"},{"body":{"expression":{"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14702:31:7","subExpression":{"baseExpression":{"id":3462,"name":"_smart_contracts_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"14709:21:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_smart_contract_uri_struct_$1956_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.smart_contract_uri_struct storage ref)"}},"id":3464,"indexExpression":{"id":3463,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"14731:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14709:24:7","typeDescriptions":{"typeIdentifier":"t_struct$_smart_contract_uri_struct_$1956_storage","typeString":"struct PlanetDAO.smart_contract_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3466,"nodeType":"ExpressionStatement","src":"14702:31:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3456,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"14682:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3457,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"14686:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14682:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3467,"initializationExpression":{"assignments":[3453],"declarations":[{"constant":false,"id":3453,"mutability":"mutable","name":"i","nameLocation":"14675:1:7","nodeType":"VariableDeclaration","scope":3467,"src":"14667:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3452,"name":"uint256","nodeType":"ElementaryTypeName","src":"14667:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3455,"initialValue":{"hexValue":"30","id":3454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14679:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14667:13:7"},"loopExpression":{"expression":{"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14697:3:7","subExpression":{"id":3459,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"14697:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3461,"nodeType":"ExpressionStatement","src":"14697:3:7"},"nodeType":"ForStatement","src":"14662:71:7"},{"body":{"expression":{"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14783:22:7","subExpression":{"baseExpression":{"id":3478,"name":"all_messages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"14790:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_message_struct_$1972_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.message_struct storage ref)"}},"id":3480,"indexExpression":{"id":3479,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"14803:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14790:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_message_struct_$1972_storage","typeString":"struct PlanetDAO.message_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3482,"nodeType":"ExpressionStatement","src":"14783:22:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3472,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"14760:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3473,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"14764:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14760:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3483,"initializationExpression":{"assignments":[3469],"declarations":[{"constant":false,"id":3469,"mutability":"mutable","name":"i","nameLocation":"14753:1:7","nodeType":"VariableDeclaration","scope":3483,"src":"14745:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3468,"name":"uint256","nodeType":"ElementaryTypeName","src":"14745:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3471,"initialValue":{"hexValue":"30","id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14757:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14745:13:7"},"loopExpression":{"expression":{"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14778:3:7","subExpression":{"id":3475,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"14778:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3477,"nodeType":"ExpressionStatement","src":"14778:3:7"},"nodeType":"ForStatement","src":"14740:65:7"},{"body":{"expression":{"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14853:21:7","subExpression":{"baseExpression":{"id":3494,"name":"all_replies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"14860:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_reply_struct_$1990_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.reply_struct storage ref)"}},"id":3496,"indexExpression":{"id":3495,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"14872:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14860:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_reply_struct_$1990_storage","typeString":"struct PlanetDAO.reply_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3498,"nodeType":"ExpressionStatement","src":"14853:21:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3488,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"14832:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3489,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"14836:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14832:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3499,"initializationExpression":{"assignments":[3485],"declarations":[{"constant":false,"id":3485,"mutability":"mutable","name":"i","nameLocation":"14825:1:7","nodeType":"VariableDeclaration","scope":3499,"src":"14817:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3484,"name":"uint256","nodeType":"ElementaryTypeName","src":"14817:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3487,"initialValue":{"hexValue":"30","id":3486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14829:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14817:13:7"},"loopExpression":{"expression":{"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14848:3:7","subExpression":{"id":3491,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"14848:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3493,"nodeType":"ExpressionStatement","src":"14848:3:7"},"nodeType":"ForStatement","src":"14812:62:7"},{"body":{"expression":{"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14927:30:7","subExpression":{"baseExpression":{"id":3510,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"14934:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1963_storage_$","typeString":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct storage ref)"}},"id":3512,"indexExpression":{"id":3511,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"14955:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14934:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1963_storage","typeString":"struct PlanetDAO.goal_ideas_votes_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3514,"nodeType":"ExpressionStatement","src":"14927:30:7"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3504,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"14901:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3505,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"14905:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14901:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3515,"initializationExpression":{"assignments":[3501],"declarations":[{"constant":false,"id":3501,"mutability":"mutable","name":"i","nameLocation":"14894:1:7","nodeType":"VariableDeclaration","scope":3515,"src":"14886:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3500,"name":"uint256","nodeType":"ElementaryTypeName","src":"14886:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3503,"initialValue":{"hexValue":"30","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14898:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14886:13:7"},"loopExpression":{"expression":{"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14922:3:7","subExpression":{"id":3507,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"14922:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3509,"nodeType":"ExpressionStatement","src":"14922:3:7"},"nodeType":"ForStatement","src":"14881:76:7"},{"expression":{"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3516,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"14964:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14975:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14964:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3519,"nodeType":"ExpressionStatement","src":"14964:12:7"},{"expression":{"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3520,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"14983:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14995:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14983:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3523,"nodeType":"ExpressionStatement","src":"14983:13:7"},{"expression":{"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3524,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"15003:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15016:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15003:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3527,"nodeType":"ExpressionStatement","src":"15003:14:7"},{"expression":{"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3528,"name":"_message_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"15024:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15039:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15024:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3531,"nodeType":"ExpressionStatement","src":"15024:16:7"},{"expression":{"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3532,"name":"_reply_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"15047:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15060:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15047:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3535,"nodeType":"ExpressionStatement","src":"15047:14:7"},{"expression":{"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3536,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"15068:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15086:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15068:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3539,"nodeType":"ExpressionStatement","src":"15068:19:7"}]},"functionSelector":"b16060a6","id":3541,"implemented":true,"kind":"function","modifiers":[],"name":"reset_all","nameLocation":"14435:9:7","nodeType":"FunctionDefinition","parameters":{"id":3402,"nodeType":"ParameterList","parameters":[],"src":"14444:2:7"},"returnParameters":{"id":3403,"nodeType":"ParameterList","parameters":[],"src":"14454:0:7"},"scope":3542,"src":"14426:667:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3543,"src":"170:14926:7","usedErrors":[]}],"src":"33:15065:7"},"id":7}},"contracts":{"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_44":{"entryPoint":null,"id":44,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":376,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":502,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":99,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1067,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":332,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":193,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1160,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":646,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":146,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":109,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":796,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":952,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":995,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:8","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:8","statements":[{"nodeType":"YulAssignment","src":"57:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:8"},"nodeType":"YulFunctionCall","src":"67:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:8","type":""}],"src":"7:75:8"},{"body":{"nodeType":"YulBlock","src":"177:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:8"},"nodeType":"YulFunctionCall","src":"187:12:8"},"nodeType":"YulExpressionStatement","src":"187:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:8"},{"body":{"nodeType":"YulBlock","src":"300:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:8"},"nodeType":"YulFunctionCall","src":"310:12:8"},"nodeType":"YulExpressionStatement","src":"310:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:8"},{"body":{"nodeType":"YulBlock","src":"423:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:8"},"nodeType":"YulFunctionCall","src":"433:12:8"},"nodeType":"YulExpressionStatement","src":"433:12:8"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:8"},{"body":{"nodeType":"YulBlock","src":"546:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:8"},"nodeType":"YulFunctionCall","src":"556:12:8"},"nodeType":"YulExpressionStatement","src":"556:12:8"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:8"},{"body":{"nodeType":"YulBlock","src":"628:54:8","statements":[{"nodeType":"YulAssignment","src":"638:38:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:8"},"nodeType":"YulFunctionCall","src":"652:14:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:8"},"nodeType":"YulFunctionCall","src":"668:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:8"},"nodeType":"YulFunctionCall","src":"648:28:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:8"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:8","type":""}],"src":"580:102:8"},{"body":{"nodeType":"YulBlock","src":"716:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:8"},"nodeType":"YulFunctionCall","src":"726:88:8"},"nodeType":"YulExpressionStatement","src":"726:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:8","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:8"},"nodeType":"YulFunctionCall","src":"823:15:8"},"nodeType":"YulExpressionStatement","src":"823:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:8"},"nodeType":"YulFunctionCall","src":"847:15:8"},"nodeType":"YulExpressionStatement","src":"847:15:8"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:8"},{"body":{"nodeType":"YulBlock","src":"917:238:8","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:8","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:8"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:8"},"nodeType":"YulFunctionCall","src":"957:27:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:8"},"nodeType":"YulFunctionCall","src":"945:40:8"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:8"},"nodeType":"YulFunctionCall","src":"1098:18:8"},"nodeType":"YulExpressionStatement","src":"1098:18:8"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:8"},"nodeType":"YulFunctionCall","src":"1036:34:8"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:8"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:8"},"nodeType":"YulFunctionCall","src":"1072:22:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:8"},"nodeType":"YulFunctionCall","src":"1033:62:8"},"nodeType":"YulIf","src":"1030:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:8","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:8"},"nodeType":"YulFunctionCall","src":"1127:22:8"},"nodeType":"YulExpressionStatement","src":"1127:22:8"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:8","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:8","type":""}],"src":"874:281:8"},{"body":{"nodeType":"YulBlock","src":"1202:88:8","statements":[{"nodeType":"YulAssignment","src":"1212:30:8","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:8"},"nodeType":"YulFunctionCall","src":"1222:20:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:8"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:8"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:8"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:8"},"nodeType":"YulFunctionCall","src":"1251:33:8"},"nodeType":"YulExpressionStatement","src":"1251:33:8"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:8","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:8","type":""}],"src":"1161:129:8"},{"body":{"nodeType":"YulBlock","src":"1363:241:8","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:8"},"nodeType":"YulFunctionCall","src":"1470:18:8"},"nodeType":"YulExpressionStatement","src":"1470:18:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:8"},"nodeType":"YulFunctionCall","src":"1437:30:8"},"nodeType":"YulIf","src":"1434:56:8"},{"nodeType":"YulAssignment","src":"1500:37:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:8"},"nodeType":"YulFunctionCall","src":"1508:29:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:8"}]},{"nodeType":"YulAssignment","src":"1574:23:8","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:8"},"nodeType":"YulFunctionCall","src":"1582:15:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:8"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:8","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:8","type":""}],"src":"1296:308:8"},{"body":{"nodeType":"YulBlock","src":"1672:184:8","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:8"},"nodeType":"YulFunctionCall","src":"1772:11:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:8"},"nodeType":"YulFunctionCall","src":"1791:11:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:8"},"nodeType":"YulFunctionCall","src":"1785:18:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:8"},"nodeType":"YulFunctionCall","src":"1765:39:8"},"nodeType":"YulExpressionStatement","src":"1765:39:8"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:8"},"nodeType":"YulFunctionCall","src":"1709:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:8","statements":[{"nodeType":"YulAssignment","src":"1725:15:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:8"},"nodeType":"YulFunctionCall","src":"1730:10:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:8","statements":[]},"src":"1701:113:8"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:8"},"nodeType":"YulFunctionCall","src":"1830:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:8"},"nodeType":"YulFunctionCall","src":"1823:27:8"},"nodeType":"YulExpressionStatement","src":"1823:27:8"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:8","type":""}],"src":"1610:246:8"},{"body":{"nodeType":"YulBlock","src":"1957:339:8","statements":[{"nodeType":"YulAssignment","src":"1967:75:8","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:8"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:8"},"nodeType":"YulFunctionCall","src":"1992:49:8"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:8"},"nodeType":"YulFunctionCall","src":"1976:66:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:8"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:8"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:8"},"nodeType":"YulFunctionCall","src":"2051:21:8"},"nodeType":"YulExpressionStatement","src":"2051:21:8"},{"nodeType":"YulVariableDeclaration","src":"2081:27:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:8"},"nodeType":"YulFunctionCall","src":"2092:16:8"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:8"},"nodeType":"YulFunctionCall","src":"2148:79:8"},"nodeType":"YulExpressionStatement","src":"2148:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:8"},"nodeType":"YulFunctionCall","src":"2123:16:8"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:8"},"nodeType":"YulFunctionCall","src":"2120:25:8"},"nodeType":"YulIf","src":"2117:112:8"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:8"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:8"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:8"},"nodeType":"YulFunctionCall","src":"2238:52:8"},"nodeType":"YulExpressionStatement","src":"2238:52:8"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:8","type":""}],"src":"1862:434:8"},{"body":{"nodeType":"YulBlock","src":"2389:282:8","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:8"},"nodeType":"YulFunctionCall","src":"2440:79:8"},"nodeType":"YulExpressionStatement","src":"2440:79:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:8"},"nodeType":"YulFunctionCall","src":"2413:17:8"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:8"},"nodeType":"YulFunctionCall","src":"2409:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:8"},"nodeType":"YulFunctionCall","src":"2402:35:8"},"nodeType":"YulIf","src":"2399:122:8"},{"nodeType":"YulVariableDeclaration","src":"2530:27:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:8"},"nodeType":"YulFunctionCall","src":"2544:13:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:8","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:8","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:8"},"nodeType":"YulFunctionCall","src":"2634:17:8"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:8"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:8"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:8"},"nodeType":"YulFunctionCall","src":"2575:90:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:8"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:8","type":""}],"src":"2316:355:8"},{"body":{"nodeType":"YulBlock","src":"2791:739:8","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:8"},"nodeType":"YulFunctionCall","src":"2839:79:8"},"nodeType":"YulExpressionStatement","src":"2839:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:8"},"nodeType":"YulFunctionCall","src":"2808:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:8"},"nodeType":"YulFunctionCall","src":"2804:32:8"},"nodeType":"YulIf","src":"2801:119:8"},{"nodeType":"YulBlock","src":"2930:291:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:8"},"nodeType":"YulFunctionCall","src":"2965:17:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:8"},"nodeType":"YulFunctionCall","src":"2959:24:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:8"},"nodeType":"YulFunctionCall","src":"3032:79:8"},"nodeType":"YulExpressionStatement","src":"3032:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:8"},"nodeType":"YulFunctionCall","src":"2999:30:8"},"nodeType":"YulIf","src":"2996:117:8"},{"nodeType":"YulAssignment","src":"3127:84:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:8"},"nodeType":"YulFunctionCall","src":"3179:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:8"},"nodeType":"YulFunctionCall","src":"3137:74:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:8"}]}]},{"nodeType":"YulBlock","src":"3231:292:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:8"},"nodeType":"YulFunctionCall","src":"3266:18:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:8"},"nodeType":"YulFunctionCall","src":"3260:25:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:8"},"nodeType":"YulFunctionCall","src":"3334:79:8"},"nodeType":"YulExpressionStatement","src":"3334:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:8"},"nodeType":"YulFunctionCall","src":"3301:30:8"},"nodeType":"YulIf","src":"3298:117:8"},{"nodeType":"YulAssignment","src":"3429:84:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:8"},"nodeType":"YulFunctionCall","src":"3481:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:8"},"nodeType":"YulFunctionCall","src":"3439:74:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:8"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:8","type":""}],"src":"2677:853:8"},{"body":{"nodeType":"YulBlock","src":"3595:40:8","statements":[{"nodeType":"YulAssignment","src":"3606:22:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:8"},"nodeType":"YulFunctionCall","src":"3616:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:8"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:8","type":""}],"src":"3536:99:8"},{"body":{"nodeType":"YulBlock","src":"3669:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:8"},"nodeType":"YulFunctionCall","src":"3679:88:8"},"nodeType":"YulExpressionStatement","src":"3679:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:8"},"nodeType":"YulFunctionCall","src":"3776:15:8"},"nodeType":"YulExpressionStatement","src":"3776:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:8"},"nodeType":"YulFunctionCall","src":"3800:15:8"},"nodeType":"YulExpressionStatement","src":"3800:15:8"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:8"},{"body":{"nodeType":"YulBlock","src":"3878:269:8","statements":[{"nodeType":"YulAssignment","src":"3888:22:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:8","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:8"},"nodeType":"YulFunctionCall","src":"3898:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:8","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:8"},"nodeType":"YulFunctionCall","src":"3945:12:8"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:8","statements":[{"nodeType":"YulAssignment","src":"4010:27:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:8"},"nodeType":"YulFunctionCall","src":"4020:17:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:8"},"nodeType":"YulFunctionCall","src":"3969:26:8"},"nodeType":"YulIf","src":"3966:81:8"},{"body":{"nodeType":"YulBlock","src":"4099:42:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:8"},"nodeType":"YulFunctionCall","src":"4113:18:8"},"nodeType":"YulExpressionStatement","src":"4113:18:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:8"},"nodeType":"YulFunctionCall","src":"4083:14:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:8"},"nodeType":"YulFunctionCall","src":"4060:38:8"},"nodeType":"YulIf","src":"4057:84:8"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:8","type":""}],"src":"3827:320:8"},{"body":{"nodeType":"YulBlock","src":"4207:87:8","statements":[{"nodeType":"YulAssignment","src":"4217:11:8","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:8"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:8","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:8"},"nodeType":"YulFunctionCall","src":"4238:14:8"},"nodeType":"YulExpressionStatement","src":"4238:14:8"},{"nodeType":"YulAssignment","src":"4261:26:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:8"},"nodeType":"YulFunctionCall","src":"4269:18:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:8"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:8","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:8","type":""}],"src":"4153:141:8"},{"body":{"nodeType":"YulBlock","src":"4344:49:8","statements":[{"nodeType":"YulAssignment","src":"4354:33:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:8"},"nodeType":"YulFunctionCall","src":"4368:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:8","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:8"},"nodeType":"YulFunctionCall","src":"4364:23:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:8"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:8","type":""}],"src":"4300:93:8"},{"body":{"nodeType":"YulBlock","src":"4452:54:8","statements":[{"nodeType":"YulAssignment","src":"4462:37:8","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:8"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:8"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:8"},"nodeType":"YulFunctionCall","src":"4483:16:8"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:8"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:8","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:8","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:8","type":""}],"src":"4399:107:8"},{"body":{"nodeType":"YulBlock","src":"4588:317:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:8","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:8","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:8"},"nodeType":"YulFunctionCall","src":"4615:18:8"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:8","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:8"},"nodeType":"YulFunctionCall","src":"4654:97:8"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:8","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:8","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:8"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:8"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:8"},"nodeType":"YulFunctionCall","src":"4772:39:8"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:8"}]},{"nodeType":"YulAssignment","src":"4820:30:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:8"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:8"},"nodeType":"YulFunctionCall","src":"4840:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:8"},"nodeType":"YulFunctionCall","src":"4829:21:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:8"}]},{"nodeType":"YulAssignment","src":"4859:40:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:8"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:8"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:8"},"nodeType":"YulFunctionCall","src":"4879:19:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:8"},"nodeType":"YulFunctionCall","src":"4869:30:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:8"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:8","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:8","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:8","type":""}],"src":"4512:393:8"},{"body":{"nodeType":"YulBlock","src":"4956:32:8","statements":[{"nodeType":"YulAssignment","src":"4966:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:8"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:8","type":""}],"src":"4911:77:8"},{"body":{"nodeType":"YulBlock","src":"5026:28:8","statements":[{"nodeType":"YulAssignment","src":"5036:12:8","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:8"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:8","type":""}],"src":"4994:60:8"},{"body":{"nodeType":"YulBlock","src":"5120:82:8","statements":[{"nodeType":"YulAssignment","src":"5130:66:8","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:8"},"nodeType":"YulFunctionCall","src":"5170:24:8"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:8"},"nodeType":"YulFunctionCall","src":"5161:34:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:8"},"nodeType":"YulFunctionCall","src":"5143:53:8"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:8"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:8","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:8","type":""}],"src":"5060:142:8"},{"body":{"nodeType":"YulBlock","src":"5255:28:8","statements":[{"nodeType":"YulAssignment","src":"5265:12:8","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:8"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:8","type":""}],"src":"5208:75:8"},{"body":{"nodeType":"YulBlock","src":"5365:193:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:8","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:8"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:8"},"nodeType":"YulFunctionCall","src":"5399:39:8"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:8"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:8"},"nodeType":"YulFunctionCall","src":"5488:11:8"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:8"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:8"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:8"},"nodeType":"YulFunctionCall","src":"5509:41:8"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:8"},"nodeType":"YulFunctionCall","src":"5460:91:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:8"},"nodeType":"YulFunctionCall","src":"5447:105:8"},"nodeType":"YulExpressionStatement","src":"5447:105:8"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:8","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:8","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:8","type":""}],"src":"5289:269:8"},{"body":{"nodeType":"YulBlock","src":"5613:24:8","statements":[{"nodeType":"YulAssignment","src":"5623:8:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:8","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:8"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:8","type":""}],"src":"5564:73:8"},{"body":{"nodeType":"YulBlock","src":"5696:136:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:8","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:8"},"nodeType":"YulFunctionCall","src":"5720:32:8"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:8"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:8"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:8"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:8"},"nodeType":"YulFunctionCall","src":"5761:65:8"},"nodeType":"YulExpressionStatement","src":"5761:65:8"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:8","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:8","type":""}],"src":"5643:189:8"},{"body":{"nodeType":"YulBlock","src":"5888:136:8","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:8","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:8","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:8"},"nodeType":"YulFunctionCall","src":"5969:39:8"},"nodeType":"YulExpressionStatement","src":"5969:39:8"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:8"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:8"},"nodeType":"YulFunctionCall","src":"5905:14:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:8","statements":[{"nodeType":"YulAssignment","src":"5922:22:8","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:8"},"nodeType":"YulFunctionCall","src":"5931:13:8"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:8"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:8","statements":[]},"src":"5898:120:8"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:8","type":""}],"src":"5838:186:8"},{"body":{"nodeType":"YulBlock","src":"6109:464:8","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:8"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:8"},"nodeType":"YulFunctionCall","src":"6165:38:8"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:8","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:8"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:8"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:8"},"nodeType":"YulFunctionCall","src":"6249:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:8"},"nodeType":"YulFunctionCall","src":"6235:44:8"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:8","statements":[{"nodeType":"YulAssignment","src":"6438:23:8","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:8"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:8"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:8"},"nodeType":"YulFunctionCall","src":"6417:18:8"},"nodeType":"YulIf","src":"6414:49:8"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:8"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:8"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:8"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:8"},"nodeType":"YulFunctionCall","src":"6532:22:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:8"},"nodeType":"YulFunctionCall","src":"6518:37:8"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:8"},"nodeType":"YulFunctionCall","src":"6476:80:8"},"nodeType":"YulExpressionStatement","src":"6476:80:8"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:8"},"nodeType":"YulFunctionCall","src":"6123:11:8"},"nodeType":"YulIf","src":"6120:446:8"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:8","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:8","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:8","type":""}],"src":"6030:543:8"},{"body":{"nodeType":"YulBlock","src":"6642:54:8","statements":[{"nodeType":"YulAssignment","src":"6652:37:8","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:8"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:8"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:8"},"nodeType":"YulFunctionCall","src":"6673:16:8"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:8"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:8","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:8","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:8","type":""}],"src":"6579:117:8"},{"body":{"nodeType":"YulBlock","src":"6753:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:8","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:8","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:8"},"nodeType":"YulFunctionCall","src":"6808:13:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:8","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:8"},"nodeType":"YulFunctionCall","src":"6823:6:8"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:8"},"nodeType":"YulFunctionCall","src":"6779:51:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:8"},"nodeType":"YulFunctionCall","src":"6775:56:8"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:8","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:8"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:8"},"nodeType":"YulFunctionCall","src":"6850:15:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:8"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:8","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:8","type":""}],"src":"6702:169:8"},{"body":{"nodeType":"YulBlock","src":"6957:214:8","statements":[{"nodeType":"YulAssignment","src":"7090:37:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:8"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:8"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:8"},"nodeType":"YulFunctionCall","src":"7098:29:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:8"}]},{"nodeType":"YulAssignment","src":"7136:29:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:8","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:8"},"nodeType":"YulFunctionCall","src":"7153:11:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:8"},"nodeType":"YulFunctionCall","src":"7144:21:8"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:8"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:8","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:8","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:8","type":""}],"src":"6876:295:8"},{"body":{"nodeType":"YulBlock","src":"7268:1303:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:8","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:8"},"nodeType":"YulFunctionCall","src":"7293:37:8"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:8"},"nodeType":"YulFunctionCall","src":"7417:18:8"},"nodeType":"YulExpressionStatement","src":"7417:18:8"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:8"},"nodeType":"YulFunctionCall","src":"7384:30:8"},"nodeType":"YulIf","src":"7381:56:8"},{"nodeType":"YulVariableDeclaration","src":"7447:52:8","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:8"},"nodeType":"YulFunctionCall","src":"7487:11:8"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:8"},"nodeType":"YulFunctionCall","src":"7461:38:8"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:8"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:8"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:8"},"nodeType":"YulFunctionCall","src":"7546:67:8"},"nodeType":"YulExpressionStatement","src":"7546:67:8"},{"nodeType":"YulVariableDeclaration","src":"7623:18:8","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:8","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:8","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:8","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:8","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:8"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:8","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:8","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:8"},"nodeType":"YulFunctionCall","src":"7756:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:8"},"nodeType":"YulFunctionCall","src":"7744:22:8"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:8","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:8"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:8"},"nodeType":"YulFunctionCall","src":"7794:37:8"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:8","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:8"},"nodeType":"YulFunctionCall","src":"7951:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:8"},"nodeType":"YulFunctionCall","src":"7945:26:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:8"},"nodeType":"YulFunctionCall","src":"7930:42:8"},"nodeType":"YulExpressionStatement","src":"7930:42:8"},{"nodeType":"YulAssignment","src":"7989:24:8","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:8"},"nodeType":"YulFunctionCall","src":"7999:14:8"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:8"}]},{"nodeType":"YulAssignment","src":"8030:31:8","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:8"},"nodeType":"YulFunctionCall","src":"8043:18:8"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:8"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:8"},"nodeType":"YulFunctionCall","src":"7875:14:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:8","statements":[{"nodeType":"YulAssignment","src":"7892:17:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:8"},"nodeType":"YulFunctionCall","src":"7897:12:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:8","statements":[]},"src":"7867:208:8"},{"body":{"nodeType":"YulBlock","src":"8111:156:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:8","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:8"},"nodeType":"YulFunctionCall","src":"8152:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:8"},"nodeType":"YulFunctionCall","src":"8146:26:8"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:8","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:8"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:8"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:8","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:8"},"nodeType":"YulFunctionCall","src":"8234:17:8"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:8"},"nodeType":"YulFunctionCall","src":"8204:48:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:8"},"nodeType":"YulFunctionCall","src":"8189:64:8"},"nodeType":"YulExpressionStatement","src":"8189:64:8"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:8"},"nodeType":"YulFunctionCall","src":"8091:19:8"},"nodeType":"YulIf","src":"8088:179:8"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:8"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:8","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:8"},"nodeType":"YulFunctionCall","src":"8297:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:8"},"nodeType":"YulFunctionCall","src":"8293:22:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:8"},"nodeType":"YulFunctionCall","src":"8280:36:8"},"nodeType":"YulExpressionStatement","src":"8280:36:8"}]},"nodeType":"YulCase","src":"7708:618:8","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:8","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:8","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:8","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:8","statements":[{"nodeType":"YulAssignment","src":"8412:35:8","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:8"},"nodeType":"YulFunctionCall","src":"8427:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:8"},"nodeType":"YulFunctionCall","src":"8421:26:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:8"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:8"},"nodeType":"YulIf","src":"8384:77:8"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:8"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:8"},"nodeType":"YulFunctionCall","src":"8487:67:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:8"},"nodeType":"YulFunctionCall","src":"8474:81:8"},"nodeType":"YulExpressionStatement","src":"8474:81:8"}]},"nodeType":"YulCase","src":"8335:230:8","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:8"},"nodeType":"YulFunctionCall","src":"7685:14:8"},"nodeType":"YulSwitch","src":"7678:887:8"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:8","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:8","type":""}],"src":"7176:1395:8"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620017ec380380620017ec8339818101604052810190620000379190620001f6565b8160039081620000489190620004c6565b5080600490816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61122f80620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea2646970667358221220183d5a0e2248a04947293bb80feb25e4832139060ff57231762d688e3687bc0064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17EC CODESIZE SUB DUP1 PUSH3 0x17EC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x122F DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR RETURNDATASIZE GAS 0xE 0x22 BASEFEE LOG0 0x49 SELFBALANCE 0x29 EXTCODESIZE 0xB8 0xF 0xEB 0x25 0xE4 DUP4 0x21 CODECOPY MOD 0xF CREATE2 PUSH19 0x31762D688E3687BC0064736F6C634300081100 CALLER ","sourceMap":"1532:11312:0:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2054:5;2046;:13;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;:::i;:::-;;1980:113;;1532:11312;;7:75:8;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1532:11312:0:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_585":{"entryPoint":2679,"id":585,"parameterSlots":3,"returnSlots":0},"@_approve_520":{"entryPoint":1447,"id":520,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_574":{"entryPoint":2674,"id":574,"parameterSlots":3,"returnSlots":0},"@_msgSender_701":{"entryPoint":1439,"id":701,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_563":{"entryPoint":1904,"id":563,"parameterSlots":3,"returnSlots":0},"@_transfer_346":{"entryPoint":2044,"id":346,"parameterSlots":3,"returnSlots":0},"@allowance_141":{"entryPoint":1304,"id":141,"parameterSlots":2,"returnSlots":1},"@approve_166":{"entryPoint":776,"id":166,"parameterSlots":2,"returnSlots":1},"@balanceOf_98":{"entryPoint":932,"id":98,"parameterSlots":1,"returnSlots":1},"@decimals_74":{"entryPoint":868,"id":74,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_269":{"entryPoint":1150,"id":269,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_228":{"entryPoint":877,"id":228,"parameterSlots":2,"returnSlots":1},"@name_54":{"entryPoint":630,"id":54,"parameterSlots":0,"returnSlots":1},"@symbol_64":{"entryPoint":1004,"id":64,"parameterSlots":0,"returnSlots":1},"@totalSupply_84":{"entryPoint":811,"id":84,"parameterSlots":0,"returnSlots":1},"@transferFrom_199":{"entryPoint":821,"id":199,"parameterSlots":3,"returnSlots":1},"@transfer_123":{"entryPoint":1269,"id":123,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3358,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3175,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3015,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3091,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4096,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4534,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3271,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2828,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4569,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4277,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3286,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2684,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2695,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3565,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2899,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3079,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2867,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2961,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3258,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2712,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3469,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3518,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3422,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2862,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2754,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4309,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3909,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4055,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4455,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4163,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3763,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3617,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2917,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2971,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13699:8","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:8","statements":[{"nodeType":"YulAssignment","src":"77:22:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:8"},"nodeType":"YulFunctionCall","src":"87:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:8"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:8","type":""}],"src":"7:99:8"},{"body":{"nodeType":"YulBlock","src":"208:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:8"},"nodeType":"YulFunctionCall","src":"218:19:8"},"nodeType":"YulExpressionStatement","src":"218:19:8"},{"nodeType":"YulAssignment","src":"246:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:8"},"nodeType":"YulFunctionCall","src":"261:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:8"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:8","type":""}],"src":"112:169:8"},{"body":{"nodeType":"YulBlock","src":"349:184:8","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:8"},"nodeType":"YulFunctionCall","src":"449:11:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:8"},"nodeType":"YulFunctionCall","src":"468:11:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:8"},"nodeType":"YulFunctionCall","src":"462:18:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:8"},"nodeType":"YulFunctionCall","src":"442:39:8"},"nodeType":"YulExpressionStatement","src":"442:39:8"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:8"},"nodeType":"YulFunctionCall","src":"386:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:8","statements":[{"nodeType":"YulAssignment","src":"402:15:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:8"},"nodeType":"YulFunctionCall","src":"407:10:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:8","statements":[]},"src":"378:113:8"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:8"},"nodeType":"YulFunctionCall","src":"507:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:8"},"nodeType":"YulFunctionCall","src":"500:27:8"},"nodeType":"YulExpressionStatement","src":"500:27:8"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:8","type":""}],"src":"287:246:8"},{"body":{"nodeType":"YulBlock","src":"587:54:8","statements":[{"nodeType":"YulAssignment","src":"597:38:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:8"},"nodeType":"YulFunctionCall","src":"611:14:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:8"},"nodeType":"YulFunctionCall","src":"627:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:8"},"nodeType":"YulFunctionCall","src":"607:28:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:8"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:8","type":""}],"src":"539:102:8"},{"body":{"nodeType":"YulBlock","src":"739:285:8","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:8"},"nodeType":"YulFunctionCall","src":"763:39:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:8","type":""}]},{"nodeType":"YulAssignment","src":"811:78:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:8"},"nodeType":"YulFunctionCall","src":"818:71:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:8"},"nodeType":"YulFunctionCall","src":"933:16:8"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:8"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:8"},"nodeType":"YulFunctionCall","src":"898:65:8"},"nodeType":"YulExpressionStatement","src":"898:65:8"},{"nodeType":"YulAssignment","src":"972:46:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:8"},"nodeType":"YulFunctionCall","src":"988:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:8"},"nodeType":"YulFunctionCall","src":"979:39:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:8"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:8","type":""}],"src":"647:377:8"},{"body":{"nodeType":"YulBlock","src":"1148:195:8","statements":[{"nodeType":"YulAssignment","src":"1158:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:8"},"nodeType":"YulFunctionCall","src":"1166:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:8"},"nodeType":"YulFunctionCall","src":"1201:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:8"},"nodeType":"YulFunctionCall","src":"1220:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:8"},"nodeType":"YulFunctionCall","src":"1194:47:8"},"nodeType":"YulExpressionStatement","src":"1194:47:8"},{"nodeType":"YulAssignment","src":"1250:86:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:8"},"nodeType":"YulFunctionCall","src":"1258:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:8"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:8","type":""}],"src":"1030:313:8"},{"body":{"nodeType":"YulBlock","src":"1389:35:8","statements":[{"nodeType":"YulAssignment","src":"1399:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:8"},"nodeType":"YulFunctionCall","src":"1409:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:8","type":""}],"src":"1349:75:8"},{"body":{"nodeType":"YulBlock","src":"1519:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:8"},"nodeType":"YulFunctionCall","src":"1529:12:8"},"nodeType":"YulExpressionStatement","src":"1529:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:8"},{"body":{"nodeType":"YulBlock","src":"1642:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:8"},"nodeType":"YulFunctionCall","src":"1652:12:8"},"nodeType":"YulExpressionStatement","src":"1652:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:8"},{"body":{"nodeType":"YulBlock","src":"1721:81:8","statements":[{"nodeType":"YulAssignment","src":"1731:65:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:8"},"nodeType":"YulFunctionCall","src":"1742:54:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:8"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:8","type":""}],"src":"1676:126:8"},{"body":{"nodeType":"YulBlock","src":"1853:51:8","statements":[{"nodeType":"YulAssignment","src":"1863:35:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:8"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:8"},"nodeType":"YulFunctionCall","src":"1874:24:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:8"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:8","type":""}],"src":"1808:96:8"},{"body":{"nodeType":"YulBlock","src":"1953:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:8"},"nodeType":"YulFunctionCall","src":"2012:12:8"},"nodeType":"YulExpressionStatement","src":"2012:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:8"},"nodeType":"YulFunctionCall","src":"1983:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:8"},"nodeType":"YulFunctionCall","src":"1973:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:8"},"nodeType":"YulFunctionCall","src":"1966:43:8"},"nodeType":"YulIf","src":"1963:63:8"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:8","type":""}],"src":"1910:122:8"},{"body":{"nodeType":"YulBlock","src":"2090:87:8","statements":[{"nodeType":"YulAssignment","src":"2100:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:8"},"nodeType":"YulFunctionCall","src":"2109:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:8"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:8"},"nodeType":"YulFunctionCall","src":"2138:33:8"},"nodeType":"YulExpressionStatement","src":"2138:33:8"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:8","type":""}],"src":"2038:139:8"},{"body":{"nodeType":"YulBlock","src":"2228:32:8","statements":[{"nodeType":"YulAssignment","src":"2238:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:8"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:8","type":""}],"src":"2183:77:8"},{"body":{"nodeType":"YulBlock","src":"2309:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:8"},"nodeType":"YulFunctionCall","src":"2368:12:8"},"nodeType":"YulExpressionStatement","src":"2368:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:8"},"nodeType":"YulFunctionCall","src":"2339:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:8"},"nodeType":"YulFunctionCall","src":"2329:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:8"},"nodeType":"YulFunctionCall","src":"2322:43:8"},"nodeType":"YulIf","src":"2319:63:8"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:8","type":""}],"src":"2266:122:8"},{"body":{"nodeType":"YulBlock","src":"2446:87:8","statements":[{"nodeType":"YulAssignment","src":"2456:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:8"},"nodeType":"YulFunctionCall","src":"2465:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:8"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:8"},"nodeType":"YulFunctionCall","src":"2494:33:8"},"nodeType":"YulExpressionStatement","src":"2494:33:8"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:8","type":""}],"src":"2394:139:8"},{"body":{"nodeType":"YulBlock","src":"2622:391:8","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:8"},"nodeType":"YulFunctionCall","src":"2670:79:8"},"nodeType":"YulExpressionStatement","src":"2670:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:8"},"nodeType":"YulFunctionCall","src":"2639:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:8"},"nodeType":"YulFunctionCall","src":"2635:32:8"},"nodeType":"YulIf","src":"2632:119:8"},{"nodeType":"YulBlock","src":"2761:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:8","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:8"},"nodeType":"YulFunctionCall","src":"2836:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:8"},"nodeType":"YulFunctionCall","src":"2815:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:8"}]}]},{"nodeType":"YulBlock","src":"2888:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:8","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:8"},"nodeType":"YulFunctionCall","src":"2964:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:8"},"nodeType":"YulFunctionCall","src":"2943:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:8","type":""}],"src":"2539:474:8"},{"body":{"nodeType":"YulBlock","src":"3061:48:8","statements":[{"nodeType":"YulAssignment","src":"3071:32:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:8"},"nodeType":"YulFunctionCall","src":"3089:13:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:8"},"nodeType":"YulFunctionCall","src":"3082:21:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:8"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:8","type":""}],"src":"3019:90:8"},{"body":{"nodeType":"YulBlock","src":"3174:50:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:8"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:8"},"nodeType":"YulFunctionCall","src":"3196:21:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:8"},"nodeType":"YulFunctionCall","src":"3184:34:8"},"nodeType":"YulExpressionStatement","src":"3184:34:8"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:8","type":""}],"src":"3115:109:8"},{"body":{"nodeType":"YulBlock","src":"3322:118:8","statements":[{"nodeType":"YulAssignment","src":"3332:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:8"},"nodeType":"YulFunctionCall","src":"3340:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:8"},"nodeType":"YulFunctionCall","src":"3415:17:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:8"},"nodeType":"YulFunctionCall","src":"3368:65:8"},"nodeType":"YulExpressionStatement","src":"3368:65:8"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:8","type":""}],"src":"3230:210:8"},{"body":{"nodeType":"YulBlock","src":"3511:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:8"},"nodeType":"YulFunctionCall","src":"3533:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:8"},"nodeType":"YulFunctionCall","src":"3521:37:8"},"nodeType":"YulExpressionStatement","src":"3521:37:8"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:8","type":""}],"src":"3446:118:8"},{"body":{"nodeType":"YulBlock","src":"3668:124:8","statements":[{"nodeType":"YulAssignment","src":"3678:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:8"},"nodeType":"YulFunctionCall","src":"3686:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:8"},"nodeType":"YulFunctionCall","src":"3767:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:8"},"nodeType":"YulFunctionCall","src":"3714:71:8"},"nodeType":"YulExpressionStatement","src":"3714:71:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:8","type":""}],"src":"3570:222:8"},{"body":{"nodeType":"YulBlock","src":"3898:519:8","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:8"},"nodeType":"YulFunctionCall","src":"3946:79:8"},"nodeType":"YulExpressionStatement","src":"3946:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:8"},"nodeType":"YulFunctionCall","src":"3915:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:8","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:8"},"nodeType":"YulFunctionCall","src":"3911:32:8"},"nodeType":"YulIf","src":"3908:119:8"},{"nodeType":"YulBlock","src":"4037:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:8","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:8"},"nodeType":"YulFunctionCall","src":"4112:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:8"},"nodeType":"YulFunctionCall","src":"4091:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:8"}]}]},{"nodeType":"YulBlock","src":"4164:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:8","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:8"},"nodeType":"YulFunctionCall","src":"4240:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:8"},"nodeType":"YulFunctionCall","src":"4219:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:8"}]}]},{"nodeType":"YulBlock","src":"4292:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:8","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:8"},"nodeType":"YulFunctionCall","src":"4368:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:8"},"nodeType":"YulFunctionCall","src":"4347:53:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:8","type":""}],"src":"3798:619:8"},{"body":{"nodeType":"YulBlock","src":"4466:43:8","statements":[{"nodeType":"YulAssignment","src":"4476:27:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:8","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:8"},"nodeType":"YulFunctionCall","src":"4487:16:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:8"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:8","type":""}],"src":"4423:86:8"},{"body":{"nodeType":"YulBlock","src":"4576:51:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:8"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:8"},"nodeType":"YulFunctionCall","src":"4598:22:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:8"},"nodeType":"YulFunctionCall","src":"4586:35:8"},"nodeType":"YulExpressionStatement","src":"4586:35:8"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:8","type":""}],"src":"4515:112:8"},{"body":{"nodeType":"YulBlock","src":"4727:120:8","statements":[{"nodeType":"YulAssignment","src":"4737:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:8"},"nodeType":"YulFunctionCall","src":"4745:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:8"},"nodeType":"YulFunctionCall","src":"4822:17:8"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:8"},"nodeType":"YulFunctionCall","src":"4773:67:8"},"nodeType":"YulExpressionStatement","src":"4773:67:8"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:8","type":""}],"src":"4633:214:8"},{"body":{"nodeType":"YulBlock","src":"4919:263:8","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:8"},"nodeType":"YulFunctionCall","src":"4967:79:8"},"nodeType":"YulExpressionStatement","src":"4967:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:8"},"nodeType":"YulFunctionCall","src":"4936:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:8"},"nodeType":"YulFunctionCall","src":"4932:32:8"},"nodeType":"YulIf","src":"4929:119:8"},{"nodeType":"YulBlock","src":"5058:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:8","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:8"},"nodeType":"YulFunctionCall","src":"5133:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:8"},"nodeType":"YulFunctionCall","src":"5112:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:8"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:8","type":""}],"src":"4853:329:8"},{"body":{"nodeType":"YulBlock","src":"5271:391:8","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:8"},"nodeType":"YulFunctionCall","src":"5319:79:8"},"nodeType":"YulExpressionStatement","src":"5319:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:8"},"nodeType":"YulFunctionCall","src":"5288:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:8"},"nodeType":"YulFunctionCall","src":"5284:32:8"},"nodeType":"YulIf","src":"5281:119:8"},{"nodeType":"YulBlock","src":"5410:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:8","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:8"},"nodeType":"YulFunctionCall","src":"5485:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:8"},"nodeType":"YulFunctionCall","src":"5464:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:8"}]}]},{"nodeType":"YulBlock","src":"5537:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:8","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:8"},"nodeType":"YulFunctionCall","src":"5613:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:8"},"nodeType":"YulFunctionCall","src":"5592:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:8","type":""}],"src":"5188:474:8"},{"body":{"nodeType":"YulBlock","src":"5696:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:8"},"nodeType":"YulFunctionCall","src":"5706:88:8"},"nodeType":"YulExpressionStatement","src":"5706:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:8"},"nodeType":"YulFunctionCall","src":"5803:15:8"},"nodeType":"YulExpressionStatement","src":"5803:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:8"},"nodeType":"YulFunctionCall","src":"5827:15:8"},"nodeType":"YulExpressionStatement","src":"5827:15:8"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:8"},{"body":{"nodeType":"YulBlock","src":"5905:269:8","statements":[{"nodeType":"YulAssignment","src":"5915:22:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:8","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:8"},"nodeType":"YulFunctionCall","src":"5925:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:8","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:8"},"nodeType":"YulFunctionCall","src":"5972:12:8"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:8","statements":[{"nodeType":"YulAssignment","src":"6037:27:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:8"},"nodeType":"YulFunctionCall","src":"6047:17:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:8"},"nodeType":"YulFunctionCall","src":"5996:26:8"},"nodeType":"YulIf","src":"5993:81:8"},{"body":{"nodeType":"YulBlock","src":"6126:42:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:8"},"nodeType":"YulFunctionCall","src":"6140:18:8"},"nodeType":"YulExpressionStatement","src":"6140:18:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:8"},"nodeType":"YulFunctionCall","src":"6110:14:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:8"},"nodeType":"YulFunctionCall","src":"6087:38:8"},"nodeType":"YulIf","src":"6084:84:8"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:8","type":""}],"src":"5854:320:8"},{"body":{"nodeType":"YulBlock","src":"6208:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:8"},"nodeType":"YulFunctionCall","src":"6218:88:8"},"nodeType":"YulExpressionStatement","src":"6218:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:8"},"nodeType":"YulFunctionCall","src":"6315:15:8"},"nodeType":"YulExpressionStatement","src":"6315:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:8"},"nodeType":"YulFunctionCall","src":"6339:15:8"},"nodeType":"YulExpressionStatement","src":"6339:15:8"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:8"},{"body":{"nodeType":"YulBlock","src":"6410:147:8","statements":[{"nodeType":"YulAssignment","src":"6420:25:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:8"},"nodeType":"YulFunctionCall","src":"6425:20:8"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:8"}]},{"nodeType":"YulAssignment","src":"6454:25:8","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:8"},"nodeType":"YulFunctionCall","src":"6459:20:8"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:8"}]},{"nodeType":"YulAssignment","src":"6488:16:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:8"},"nodeType":"YulFunctionCall","src":"6495:9:8"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:8"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:8"},"nodeType":"YulFunctionCall","src":"6530:18:8"},"nodeType":"YulExpressionStatement","src":"6530:18:8"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:8"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:8"},"nodeType":"YulFunctionCall","src":"6517:10:8"},"nodeType":"YulIf","src":"6514:36:8"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:8","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:8","type":""}],"src":"6366:191:8"},{"body":{"nodeType":"YulBlock","src":"6669:118:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:8"},"nodeType":"YulFunctionCall","src":"6687:14:8"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:8","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:8"},"nodeType":"YulFunctionCall","src":"6680:58:8"},"nodeType":"YulExpressionStatement","src":"6680:58:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:8"},"nodeType":"YulFunctionCall","src":"6755:15:8"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:8","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:8"},"nodeType":"YulFunctionCall","src":"6748:32:8"},"nodeType":"YulExpressionStatement","src":"6748:32:8"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:8","type":""}],"src":"6563:224:8"},{"body":{"nodeType":"YulBlock","src":"6939:220:8","statements":[{"nodeType":"YulAssignment","src":"6949:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:8","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:8"},"nodeType":"YulFunctionCall","src":"6956:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:8"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:8"},"nodeType":"YulFunctionCall","src":"7032:93:8"},"nodeType":"YulExpressionStatement","src":"7032:93:8"},{"nodeType":"YulAssignment","src":"7134:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:8"},"nodeType":"YulFunctionCall","src":"7141:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:8"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:8","type":""}],"src":"6793:366:8"},{"body":{"nodeType":"YulBlock","src":"7336:248:8","statements":[{"nodeType":"YulAssignment","src":"7346:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:8"},"nodeType":"YulFunctionCall","src":"7354:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:8"},"nodeType":"YulFunctionCall","src":"7389:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:8"},"nodeType":"YulFunctionCall","src":"7408:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:8"},"nodeType":"YulFunctionCall","src":"7382:47:8"},"nodeType":"YulExpressionStatement","src":"7382:47:8"},{"nodeType":"YulAssignment","src":"7438:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:8"},"nodeType":"YulFunctionCall","src":"7446:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:8","type":""}],"src":"7165:419:8"},{"body":{"nodeType":"YulBlock","src":"7696:117:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:8"},"nodeType":"YulFunctionCall","src":"7714:14:8"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:8","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:8"},"nodeType":"YulFunctionCall","src":"7707:58:8"},"nodeType":"YulExpressionStatement","src":"7707:58:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:8"},"nodeType":"YulFunctionCall","src":"7782:15:8"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:8","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:8"},"nodeType":"YulFunctionCall","src":"7775:31:8"},"nodeType":"YulExpressionStatement","src":"7775:31:8"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:8","type":""}],"src":"7590:223:8"},{"body":{"nodeType":"YulBlock","src":"7965:220:8","statements":[{"nodeType":"YulAssignment","src":"7975:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:8","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:8"},"nodeType":"YulFunctionCall","src":"7982:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:8"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:8"},"nodeType":"YulFunctionCall","src":"8058:93:8"},"nodeType":"YulExpressionStatement","src":"8058:93:8"},{"nodeType":"YulAssignment","src":"8160:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:8"},"nodeType":"YulFunctionCall","src":"8167:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:8"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:8","type":""}],"src":"7819:366:8"},{"body":{"nodeType":"YulBlock","src":"8362:248:8","statements":[{"nodeType":"YulAssignment","src":"8372:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:8"},"nodeType":"YulFunctionCall","src":"8380:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:8"},"nodeType":"YulFunctionCall","src":"8415:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:8"},"nodeType":"YulFunctionCall","src":"8434:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:8"},"nodeType":"YulFunctionCall","src":"8408:47:8"},"nodeType":"YulExpressionStatement","src":"8408:47:8"},{"nodeType":"YulAssignment","src":"8464:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:8"},"nodeType":"YulFunctionCall","src":"8472:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:8","type":""}],"src":"8191:419:8"},{"body":{"nodeType":"YulBlock","src":"8722:115:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:8"},"nodeType":"YulFunctionCall","src":"8740:14:8"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:8","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:8"},"nodeType":"YulFunctionCall","src":"8733:58:8"},"nodeType":"YulExpressionStatement","src":"8733:58:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:8"},"nodeType":"YulFunctionCall","src":"8808:15:8"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:8","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:8"},"nodeType":"YulFunctionCall","src":"8801:29:8"},"nodeType":"YulExpressionStatement","src":"8801:29:8"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:8","type":""}],"src":"8616:221:8"},{"body":{"nodeType":"YulBlock","src":"8989:220:8","statements":[{"nodeType":"YulAssignment","src":"8999:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:8","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:8"},"nodeType":"YulFunctionCall","src":"9006:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:8"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:8"},"nodeType":"YulFunctionCall","src":"9082:93:8"},"nodeType":"YulExpressionStatement","src":"9082:93:8"},{"nodeType":"YulAssignment","src":"9184:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:8"},"nodeType":"YulFunctionCall","src":"9191:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:8"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:8","type":""}],"src":"8843:366:8"},{"body":{"nodeType":"YulBlock","src":"9386:248:8","statements":[{"nodeType":"YulAssignment","src":"9396:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:8"},"nodeType":"YulFunctionCall","src":"9404:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:8"},"nodeType":"YulFunctionCall","src":"9439:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:8"},"nodeType":"YulFunctionCall","src":"9458:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:8"},"nodeType":"YulFunctionCall","src":"9432:47:8"},"nodeType":"YulExpressionStatement","src":"9432:47:8"},{"nodeType":"YulAssignment","src":"9488:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:8"},"nodeType":"YulFunctionCall","src":"9496:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:8","type":""}],"src":"9215:419:8"},{"body":{"nodeType":"YulBlock","src":"9746:73:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:8"},"nodeType":"YulFunctionCall","src":"9764:14:8"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:8","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:8"},"nodeType":"YulFunctionCall","src":"9757:55:8"},"nodeType":"YulExpressionStatement","src":"9757:55:8"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:8","type":""}],"src":"9640:179:8"},{"body":{"nodeType":"YulBlock","src":"9971:220:8","statements":[{"nodeType":"YulAssignment","src":"9981:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:8","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:8"},"nodeType":"YulFunctionCall","src":"9988:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:8"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:8"},"nodeType":"YulFunctionCall","src":"10064:93:8"},"nodeType":"YulExpressionStatement","src":"10064:93:8"},{"nodeType":"YulAssignment","src":"10166:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:8"},"nodeType":"YulFunctionCall","src":"10173:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:8"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:8","type":""}],"src":"9825:366:8"},{"body":{"nodeType":"YulBlock","src":"10368:248:8","statements":[{"nodeType":"YulAssignment","src":"10378:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:8"},"nodeType":"YulFunctionCall","src":"10386:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:8"},"nodeType":"YulFunctionCall","src":"10421:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:8"},"nodeType":"YulFunctionCall","src":"10440:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:8"},"nodeType":"YulFunctionCall","src":"10414:47:8"},"nodeType":"YulExpressionStatement","src":"10414:47:8"},{"nodeType":"YulAssignment","src":"10470:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:8"},"nodeType":"YulFunctionCall","src":"10478:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:8","type":""}],"src":"10197:419:8"},{"body":{"nodeType":"YulBlock","src":"10728:118:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:8"},"nodeType":"YulFunctionCall","src":"10746:14:8"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:8","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:8"},"nodeType":"YulFunctionCall","src":"10739:58:8"},"nodeType":"YulExpressionStatement","src":"10739:58:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:8"},"nodeType":"YulFunctionCall","src":"10814:15:8"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:8","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:8"},"nodeType":"YulFunctionCall","src":"10807:32:8"},"nodeType":"YulExpressionStatement","src":"10807:32:8"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:8","type":""}],"src":"10622:224:8"},{"body":{"nodeType":"YulBlock","src":"10998:220:8","statements":[{"nodeType":"YulAssignment","src":"11008:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:8","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:8"},"nodeType":"YulFunctionCall","src":"11015:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:8"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:8"},"nodeType":"YulFunctionCall","src":"11091:93:8"},"nodeType":"YulExpressionStatement","src":"11091:93:8"},{"nodeType":"YulAssignment","src":"11193:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:8"},"nodeType":"YulFunctionCall","src":"11200:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:8"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:8","type":""}],"src":"10852:366:8"},{"body":{"nodeType":"YulBlock","src":"11395:248:8","statements":[{"nodeType":"YulAssignment","src":"11405:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:8"},"nodeType":"YulFunctionCall","src":"11413:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:8"},"nodeType":"YulFunctionCall","src":"11448:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:8"},"nodeType":"YulFunctionCall","src":"11467:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:8"},"nodeType":"YulFunctionCall","src":"11441:47:8"},"nodeType":"YulExpressionStatement","src":"11441:47:8"},{"nodeType":"YulAssignment","src":"11497:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:8"},"nodeType":"YulFunctionCall","src":"11505:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:8","type":""}],"src":"11224:419:8"},{"body":{"nodeType":"YulBlock","src":"11755:116:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:8"},"nodeType":"YulFunctionCall","src":"11773:14:8"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:8","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:8"},"nodeType":"YulFunctionCall","src":"11766:58:8"},"nodeType":"YulExpressionStatement","src":"11766:58:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:8"},"nodeType":"YulFunctionCall","src":"11841:15:8"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:8","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:8"},"nodeType":"YulFunctionCall","src":"11834:30:8"},"nodeType":"YulExpressionStatement","src":"11834:30:8"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:8","type":""}],"src":"11649:222:8"},{"body":{"nodeType":"YulBlock","src":"12023:220:8","statements":[{"nodeType":"YulAssignment","src":"12033:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:8","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:8"},"nodeType":"YulFunctionCall","src":"12040:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:8"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:8"},"nodeType":"YulFunctionCall","src":"12116:93:8"},"nodeType":"YulExpressionStatement","src":"12116:93:8"},{"nodeType":"YulAssignment","src":"12218:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:8"},"nodeType":"YulFunctionCall","src":"12225:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:8"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:8","type":""}],"src":"11877:366:8"},{"body":{"nodeType":"YulBlock","src":"12420:248:8","statements":[{"nodeType":"YulAssignment","src":"12430:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:8"},"nodeType":"YulFunctionCall","src":"12438:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:8"},"nodeType":"YulFunctionCall","src":"12473:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:8"},"nodeType":"YulFunctionCall","src":"12492:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:8"},"nodeType":"YulFunctionCall","src":"12466:47:8"},"nodeType":"YulExpressionStatement","src":"12466:47:8"},{"nodeType":"YulAssignment","src":"12522:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:8"},"nodeType":"YulFunctionCall","src":"12530:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:8","type":""}],"src":"12249:419:8"},{"body":{"nodeType":"YulBlock","src":"12780:119:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:8"},"nodeType":"YulFunctionCall","src":"12798:14:8"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:8","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:8"},"nodeType":"YulFunctionCall","src":"12791:58:8"},"nodeType":"YulExpressionStatement","src":"12791:58:8"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:8"},"nodeType":"YulFunctionCall","src":"12866:15:8"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:8","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:8"},"nodeType":"YulFunctionCall","src":"12859:33:8"},"nodeType":"YulExpressionStatement","src":"12859:33:8"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:8","type":""}],"src":"12674:225:8"},{"body":{"nodeType":"YulBlock","src":"13051:220:8","statements":[{"nodeType":"YulAssignment","src":"13061:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:8","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:8"},"nodeType":"YulFunctionCall","src":"13068:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:8"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:8"},"nodeType":"YulFunctionCall","src":"13144:93:8"},"nodeType":"YulExpressionStatement","src":"13144:93:8"},{"nodeType":"YulAssignment","src":"13246:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:8"},"nodeType":"YulFunctionCall","src":"13253:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:8"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:8","type":""}],"src":"12905:366:8"},{"body":{"nodeType":"YulBlock","src":"13448:248:8","statements":[{"nodeType":"YulAssignment","src":"13458:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:8"},"nodeType":"YulFunctionCall","src":"13466:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:8"},"nodeType":"YulFunctionCall","src":"13501:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:8"},"nodeType":"YulFunctionCall","src":"13520:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:8"},"nodeType":"YulFunctionCall","src":"13494:47:8"},"nodeType":"YulExpressionStatement","src":"13494:47:8"},{"nodeType":"YulAssignment","src":"13550:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:8"},"nodeType":"YulFunctionCall","src":"13558:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:8","type":""}],"src":"13277:419:8"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea2646970667358221220183d5a0e2248a04947293bb80feb25e4832139060ff57231762d688e3687bc0064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR RETURNDATASIZE GAS 0xE 0x22 BASEFEE LOG0 0x49 SELFBALANCE 0x29 EXTCODESIZE 0xB8 0xF 0xEB 0x25 0xE4 DUP4 0x21 CODECOPY MOD 0xF CREATE2 PUSH19 0x31762D688E3687BC0064736F6C634300081100 CALLER ","sourceMap":"1532:11312:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3419:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3987:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;3104:91::-;3162:5;3186:2;3179:9;;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;3419:125::-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;3987:149::-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;655:96:3:-;708:7;734:10;727:17;;655:96;:::o;10457:340:0:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;12073:91::-;;;;:::o;12752:90::-;;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"931000","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"432","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":15,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":21,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":23,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":25,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":27,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c29294e9a7945ee1c17aea97a4c738ac270bec445d37cd6cae443fc0caddb41264736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP3 SWAP5 0xE9 0xA7 SWAP5 0x5E 0xE1 0xC1 PUSH27 0xEA97A4C738AC270BEC445D37CD6CAE443FC0CADDB41264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"220:2559:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c29294e9a7945ee1c17aea97a4c738ac270bec445d37cd6cae443fc0caddb41264736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP3 SWAP5 0xE9 0xA7 SWAP5 0x5E 0xE1 0xC1 PUSH27 0xEA97A4C738AC270BEC445D37CD6CAE443FC0CADDB41264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"220:2559:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(int256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d49866380d66d8d35d4a9114da523643ad70362ac2115bf943870317c5f76df964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SWAP9 PUSH7 0x380D66D8D35D4A SWAP2 EQ 0xDA MSTORE CALLDATASIZE NUMBER 0xAD PUSH17 0x362AC2115BF943870317C5F76DF964736F PUSH13 0x63430008110033000000000000 ","sourceMap":"202:12582:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d49866380d66d8d35d4a9114da523643ad70362ac2115bf943870317c5f76df964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SWAP9 PUSH7 0x380D66D8D35D4A SWAP2 EQ 0xDA MSTORE CALLDATASIZE NUMBER 0xAD PUSH17 0x362AC2115BF943870317C5F76DF964736F PUSH13 0x63430008110033000000000000 ","sourceMap":"202:12582:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f629ff033a0960039f8fa55117e2507e2e6b7ce094b0faef9e4566377b8c5c964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x629FF033A0960039F8FA55117E2507E2 0xE6 0xB7 0xCE MULMOD 0x4B 0xF 0xAE 0xF9 0xE4 JUMP PUSH4 0x77B8C5C9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1047:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f629ff033a0960039f8fa55117e2507e2e6b7ce094b0faef9e4566377b8c5c964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x629FF033A0960039F8FA55117E2507E2 0xE6 0xB7 0xCE MULMOD 0x4B 0xF 0xAE 0xF9 0xE4 JUMP PUSH4 0x77B8C5C9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1047:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/PlanetDAO.sol":{"PlanetDAO":{"abi":[{"inputs":[],"name":"_dao_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_dao_uris","outputs":[{"internalType":"string","name":"dao_wallet","type":"string"},{"internalType":"string","name":"dao_uri","type":"string"},{"internalType":"string","name":"finished","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_donated","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_donations","outputs":[{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"uint256","name":"userid","type":"uint256"},{"internalType":"uint256","name":"donation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_donations_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_feed_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_feeds","outputs":[{"internalType":"uint256","name":"feed_id","type":"uint256"},{"internalType":"uint256","name":"date","type":"uint256"},{"internalType":"string","name":"Type","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_goal_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_goal_uris","outputs":[{"internalType":"string","name":"dao_id","type":"string"},{"internalType":"string","name":"goal_uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_ideas_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_ideas_uris","outputs":[{"internalType":"uint256","name":"goal_id","type":"uint256"},{"internalType":"string","name":"ideas_uri","type":"string"},{"internalType":"uint256","name":"donation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_ideas_vote_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_join_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_joined_person","outputs":[{"internalType":"uint256","name":"daoid","type":"uint256"},{"internalType":"uint256","name":"user_id","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_message_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_message_read_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_reply_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_smart_contract_ids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_smart_contracts_uris","outputs":[{"internalType":"uint256","name":"smart_contract_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"smart_contract_uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_template_uris","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_user_badges","outputs":[{"internalType":"uint256","name":"user_id","type":"uint256"},{"internalType":"bool","name":"dao","type":"bool"},{"internalType":"bool","name":"joined","type":"bool"},{"internalType":"bool","name":"goal","type":"bool"},{"internalType":"bool","name":"ideas","type":"bool"},{"internalType":"bool","name":"vote","type":"bool"},{"internalType":"bool","name":"donation","type":"bool"},{"internalType":"bool","name":"comment","type":"bool"},{"internalType":"bool","name":"reply","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"feed_text","type":"string"},{"internalType":"string","name":"_type","type":"string"}],"name":"add_Feed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"uint256","name":"_doantion","type":"uint256"},{"internalType":"uint256","name":"_userid","type":"uint256"},{"internalType":"string","name":"_feed1","type":"string"},{"internalType":"string","name":"_feed2","type":"string"}],"name":"add_donation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_goal_ideas_votes","outputs":[{"internalType":"uint256","name":"goal_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"uint256","name":"user_id","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_messages","outputs":[{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"message","type":"string"},{"internalType":"string","name":"sender","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_read_messages","outputs":[{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"uint256","name":"user_id","type":"uint256"},{"internalType":"string","name":"msg_type","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_replies","outputs":[{"internalType":"uint256","name":"reply_id","type":"uint256"},{"internalType":"uint256","name":"message_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_dao_wallet","type":"string"},{"internalType":"string","name":"_dao_uri","type":"string"},{"internalType":"string","name":"_template","type":"string"},{"internalType":"uint256","name":"user_id","type":"uint256"}],"name":"create_dao","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_uri","type":"string"},{"internalType":"string","name":"_dao_id","type":"string"},{"internalType":"uint256","name":"_user_id","type":"uint256"},{"internalType":"string","name":"_feed","type":"string"}],"name":"create_goal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"uint256","name":"_user_id","type":"uint256"},{"internalType":"string","name":"_feed","type":"string"},{"internalType":"bool","name":"feed_add","type":"bool"}],"name":"create_goal_ideas_vote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"},{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"string[]","name":"_smart_contracts","type":"string[]"},{"internalType":"uint256","name":"_user_id","type":"uint256"},{"internalType":"string","name":"_feed","type":"string"}],"name":"create_ideas","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"}],"name":"dao_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"ideas_id","type":"uint256"}],"name":"getMsgIDs","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_message_id","type":"uint256"},{"internalType":"string","name":"msg_type","type":"string"}],"name":"getReadMsg","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"message_id","type":"uint256"}],"name":"getReplyIDs","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_daos","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_goals","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_dao_id","type":"string"}],"name":"get_all_goals_by_dao_id","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_ideas","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"}],"name":"get_all_ideas_by_goal_id","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"ideas_id","type":"uint256"}],"name":"get_dao_id_by_ideas_id","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_uri","type":"string"}],"name":"get_goal_id_by_goal_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"get_goal_id_from_ideas_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"get_ideas_id_by_ideas_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"}],"name":"get_ideas_votes_from_goal","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"dao_id","type":"uint256"},{"internalType":"uint256","name":"person","type":"uint256"}],"name":"get_person_joinedID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"}],"name":"goal_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"}],"name":"ideas_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"dao_id","type":"uint256"},{"internalType":"uint256","name":"person","type":"uint256"}],"name":"is_person_joined","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"dao_id","type":"uint256"},{"internalType":"uint256","name":"person","type":"uint256"},{"internalType":"string","name":"_feed","type":"string"}],"name":"join_community","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"join_id","type":"uint256"}],"name":"leave_community","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reset_all","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_message","type":"string"},{"internalType":"string","name":"_sender","type":"string"},{"internalType":"uint256","name":"_user_id","type":"uint256"}],"name":"sendMsg","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_message_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"uint256","name":"_wallet","type":"uint256"},{"internalType":"string","name":"msg_type","type":"string"}],"name":"sendReadMsg","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_message_id","type":"uint256"},{"internalType":"string","name":"_reply","type":"string"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"uint256","name":"_userid","type":"uint256"}],"name":"sendReply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"},{"internalType":"string","name":"_dao_wallet","type":"string"},{"internalType":"string","name":"_dao_uri","type":"string"}],"name":"set_dao","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"string","name":"_goal_uri","type":"string"}],"name":"set_goal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"set_ideas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"},{"internalType":"string","name":"_template","type":"string"}],"name":"update_template","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B94 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x399 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87633EB2 GT PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xB604EFAA GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xCD230809 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE32ACC1A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE32ACC1A EQ PUSH2 0xC5C JUMPI DUP1 PUSH4 0xEC245802 EQ PUSH2 0xC8C JUMPI DUP1 PUSH4 0xECDE3243 EQ PUSH2 0xCAA JUMPI DUP1 PUSH4 0xFF4A37EF EQ PUSH2 0xCDA JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0xCD230809 EQ PUSH2 0xBAE JUMPI DUP1 PUSH4 0xD3791B20 EQ PUSH2 0xBDE JUMPI DUP1 PUSH4 0xD9FC52DB EQ PUSH2 0xBFC JUMPI DUP1 PUSH4 0xE1B011A0 EQ PUSH2 0xC2C JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0xC04FE978 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xC04FE978 EQ PUSH2 0xB23 JUMPI DUP1 PUSH4 0xC29595C5 EQ PUSH2 0xB41 JUMPI DUP1 PUSH4 0xCA013F17 EQ PUSH2 0xB5D JUMPI DUP1 PUSH4 0xCACE8D46 EQ PUSH2 0xB7B JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0xB604EFAA EQ PUSH2 0xABB JUMPI DUP1 PUSH4 0xBDA00335 EQ PUSH2 0xAEB JUMPI DUP1 PUSH4 0xC04E7430 EQ PUSH2 0xB07 JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x97EE7606 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0xAA4CDF2A GT PUSH2 0x156 JUMPI DUP1 PUSH4 0xAA4CDF2A EQ PUSH2 0xA1E JUMPI DUP1 PUSH4 0xB16060A6 EQ PUSH2 0xA4E JUMPI DUP1 PUSH4 0xB39A38BD EQ PUSH2 0xA58 JUMPI DUP1 PUSH4 0xB527D45E EQ PUSH2 0xA88 JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x97EE7606 EQ PUSH2 0x97A JUMPI DUP1 PUSH4 0xA1CA9178 EQ PUSH2 0x998 JUMPI DUP1 PUSH4 0xA428A47F EQ PUSH2 0x9C8 JUMPI DUP1 PUSH4 0xAA2BF5D3 EQ PUSH2 0xA00 JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x8C70034A GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x8C70034A EQ PUSH2 0x8E0 JUMPI DUP1 PUSH4 0x8D3D2595 EQ PUSH2 0x8FC JUMPI DUP1 PUSH4 0x9077007D EQ PUSH2 0x92C JUMPI DUP1 PUSH4 0x934C5F00 EQ PUSH2 0x94A JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x87633EB2 EQ PUSH2 0x88A JUMPI DUP1 PUSH4 0x881DE858 EQ PUSH2 0x8A6 JUMPI DUP1 PUSH4 0x8AC4110C EQ PUSH2 0x8C2 JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x4A797BD7 GT PUSH2 0x2CE JUMPI DUP1 PUSH4 0x7A82B1D6 GT PUSH2 0x26C JUMPI DUP1 PUSH4 0x803F5B9F GT PUSH2 0x23B JUMPI DUP1 PUSH4 0x803F5B9F EQ PUSH2 0x7DE JUMPI DUP1 PUSH4 0x812FAE1F EQ PUSH2 0x80E JUMPI DUP1 PUSH4 0x826EEEFE EQ PUSH2 0x83E JUMPI DUP1 PUSH4 0x86FFA45B EQ PUSH2 0x85A JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x7A82B1D6 EQ PUSH2 0x72D JUMPI DUP1 PUSH4 0x7BBD582D EQ PUSH2 0x75D JUMPI DUP1 PUSH4 0x7F2035D4 EQ PUSH2 0x77B JUMPI DUP1 PUSH4 0x7FC543EC EQ PUSH2 0x7AC JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x5996278F GT PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x5996278F EQ PUSH2 0x681 JUMPI DUP1 PUSH4 0x5D907DA1 EQ PUSH2 0x69D JUMPI DUP1 PUSH4 0x6ECDA4EE EQ PUSH2 0x6CD JUMPI DUP1 PUSH4 0x787F19C7 EQ PUSH2 0x6FD JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x4A797BD7 EQ PUSH2 0x600 JUMPI DUP1 PUSH4 0x4BE7ADB5 EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0x54A9FB18 EQ PUSH2 0x64E JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x20959ED0 GT PUSH2 0x33B JUMPI DUP1 PUSH4 0x330B8F26 GT PUSH2 0x315 JUMPI DUP1 PUSH4 0x330B8F26 EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0x38A512D9 EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0x3F87A2F4 EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0x468D0C80 EQ PUSH2 0x5CE JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x20959ED0 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x27A568B9 EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0x29B56F60 EQ PUSH2 0x51C JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x13BF4CEA GT PUSH2 0x377 JUMPI DUP1 PUSH4 0x13BF4CEA EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x1B592AEB EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x1BA44C4C EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0x1E9AC9F5 EQ PUSH2 0x48A JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x377D44A EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x1171B621 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x131D44F2 EQ PUSH2 0x3EC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x3823 JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x39AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D6 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x406 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x39AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x424 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x442 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49F SWAP2 SWAP1 PUSH2 0x3823 JUMP JUMPDEST PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x504 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x513 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x524 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x39AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x554 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54F SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x562 SWAP3 SWAP2 SWAP1 PUSH2 0x3B29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x585 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x3B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x14B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x156D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x608 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x615 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x638 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x633 SWAP2 SWAP1 PUSH2 0x3BFE JUMP JUMPDEST PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x645 SWAP2 SWAP1 PUSH2 0x39AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x668 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x663 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x1737 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x678 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x3C91 JUMP JUMPDEST PUSH2 0x1877 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x3B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0x3B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x717 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x712 SWAP2 SWAP1 PUSH2 0x3D44 JUMP JUMPDEST PUSH2 0x1B63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x747 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x742 SWAP2 SWAP1 PUSH2 0x3BFE JUMP JUMPDEST PUSH2 0x1C34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x3DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x765 PUSH2 0x1CAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x772 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x795 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x790 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A3 SWAP3 SWAP2 SWAP1 PUSH2 0x3E19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C1 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x1DE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x805 SWAP2 SWAP1 PUSH2 0x3F0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x828 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x823 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x3F0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x858 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x853 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x1FD8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x874 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x86F SWAP2 SWAP1 PUSH2 0x3F30 JUMP JUMPDEST PUSH2 0x201E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x881 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x89F SWAP2 SWAP1 PUSH2 0x3FEB JUMP JUMPDEST PUSH2 0x213E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8BB SWAP2 SWAP1 PUSH2 0x4047 JUMP JUMPDEST PUSH2 0x2163 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8CA PUSH2 0x21B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D7 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8F5 SWAP2 SWAP1 PUSH2 0x40D2 JUMP JUMPDEST PUSH2 0x21B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x916 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x911 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x2282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x923 SWAP2 SWAP1 PUSH2 0x3B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x934 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x941 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x964 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95F SWAP2 SWAP1 PUSH2 0x4141 JUMP JUMPDEST PUSH2 0x2330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x971 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x982 PUSH2 0x23C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x98F SWAP2 SWAP1 PUSH2 0x39AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9AD SWAP2 SWAP1 PUSH2 0x3823 JUMP JUMPDEST PUSH2 0x24FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9BF SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9DD SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x2570 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F7 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA08 PUSH2 0x2626 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA15 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA38 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA33 SWAP2 SWAP1 PUSH2 0x3823 JUMP JUMPDEST PUSH2 0x262C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA45 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA56 PUSH2 0x26B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA72 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA6D SWAP2 SWAP1 PUSH2 0x4251 JUMP JUMPDEST PUSH2 0x2965 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA7F SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9D SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x2A53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD0 SWAP2 SWAP1 PUSH2 0x3BFE JUMP JUMPDEST PUSH2 0x2B93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAE2 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB05 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB00 SWAP2 SWAP1 PUSH2 0x430C JUMP JUMPDEST PUSH2 0x2C0D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB21 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB1C SWAP2 SWAP1 PUSH2 0x3FEB JUMP JUMPDEST PUSH2 0x2CA4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB2B PUSH2 0x2CCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB38 SWAP2 SWAP1 PUSH2 0x39AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB56 SWAP2 SWAP1 PUSH2 0x3FEB JUMP JUMPDEST PUSH2 0x2E06 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB65 PUSH2 0x2E2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB72 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB95 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB90 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x2E34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBA5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBC3 SWAP2 SWAP1 PUSH2 0x3FEB JUMP JUMPDEST PUSH2 0x2EEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD5 SWAP2 SWAP1 PUSH2 0x3DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE6 PUSH2 0x2F7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF3 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC16 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC11 SWAP2 SWAP1 PUSH2 0x4384 JUMP JUMPDEST PUSH2 0x2F83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC23 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC46 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC41 SWAP2 SWAP1 PUSH2 0x44ED JUMP JUMPDEST PUSH2 0x3048 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC71 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x319D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC83 SWAP2 SWAP1 PUSH2 0x3B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC94 PUSH2 0x3245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCBF SWAP2 SWAP1 PUSH2 0x45E8 JUMP JUMPDEST PUSH2 0x324B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD1 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x3339 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD03 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x467F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD2C JUMPI PUSH2 0xD2B PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD5F JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD4A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xE8B JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0xD9F SWAP2 SWAP1 PUSH2 0x47C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xE78 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xDCD SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDF9 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE46 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE1B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE46 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE29 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE5E JUMPI PUSH2 0xE5D PUSH2 0x47D7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xE74 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xE83 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD6A JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEBC JUMPI PUSH2 0xEBB PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEEF JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xEDA JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x1000 JUMPI DUP5 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0xFDF JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xF42 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF6E SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFBB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF90 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFBB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF9E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xFD3 JUMPI PUSH2 0xFD2 PUSH2 0x47D7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0xFEA SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0xFF8 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEFA JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x10A7 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x107E SWAP2 SWAP1 PUSH2 0x47C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x1094 JUMPI DUP1 SWAP2 POP POP PUSH2 0x10AD JUMP JUMPDEST DUP1 DUP1 PUSH2 0x109F SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1049 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x10ED SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1119 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1166 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x113B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1166 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1149 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x117B SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11A7 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11F4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11F4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11D7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1209 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1235 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1282 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1257 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1282 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1265 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12AC JUMPI PUSH2 0x12AB PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12DF JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x12CA JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x13BF JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1310 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x133C SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1389 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x135E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1389 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x136C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x13A1 JUMPI PUSH2 0x13A0 PUSH2 0x47D7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x13B7 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12E5 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x142B SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1457 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14A4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1479 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14A4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1487 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x14EA SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1516 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1563 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1538 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1563 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1546 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1596 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15C2 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x160F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x160F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1645 JUMPI PUSH2 0x1644 PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1678 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1663 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x172B JUMPI DUP6 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x16C7 JUMPI POP DUP5 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x170A JUMPI PUSH2 0x16EB PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x33EB JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x16FE JUMPI PUSH2 0x16FD PUSH2 0x47D7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0x1715 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x1723 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1683 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1766 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1792 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x17F4 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1820 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x186D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1842 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x186D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1850 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x18E6 JUMPI PUSH2 0x18E5 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261646765000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2C0D JUMP JUMPDEST JUMPDEST PUSH2 0x1925 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646F6E6174696F6E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2C0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0xF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x197A SWAP2 SWAP1 PUSH2 0x487D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x10 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x19A4 SWAP2 SWAP1 PUSH2 0x487D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x12 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A0F SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1A3E SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A6A SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AB7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A8C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1AB7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A9A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x1AE2 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B0E SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B5B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B30 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B5B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B3E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x15 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1BF5 SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1C0B SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1C22 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x7 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1CA2 JUMPI DUP3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x1C80 JUMPI POP DUP4 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1C8F JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x1CA8 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1C9A SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C3C JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1CD7 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D03 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D50 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D25 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D50 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D33 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1D65 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D91 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DDE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1DB3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DDE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1DC1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E32 JUMPI PUSH2 0x1E31 PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E60 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1EEA JUMPI DUP5 PUSH1 0x15 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1ED7 JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1EBC JUMPI PUSH2 0x1EBB PUSH2 0x47D7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1ED3 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1EE2 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E6B JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x9 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F15 JUMPI PUSH2 0x1F14 PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F43 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1FCD JUMPI DUP5 PUSH1 0x17 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1FBA JUMPI PUSH1 0x17 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1F9F JUMPI PUSH2 0x1F9E PUSH2 0x47D7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1FB6 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1FC5 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1F4E JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x270F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x270F DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46616C7365000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2099 SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x20AF SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x20C5 SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP SWAP1 POP POP DUP3 PUSH1 0xC PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x20EA SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x212C SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x215E SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2186 SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP DUP1 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x21AA SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2239 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x227D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6A6F696E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2C0D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x22A5 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x22D1 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x231E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x22F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x231E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2301 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x16 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x239B SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x23B2 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x8 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23E4 JUMPI PUSH2 0x23E3 PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2417 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2402 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x24F7 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2448 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2474 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2496 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24C1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x24A4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x24D9 JUMPI PUSH2 0x24D8 PUSH2 0x47D7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x24EF SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x241D JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2565 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x253C SWAP2 SWAP1 PUSH2 0x47C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x2552 JUMPI DUP1 SWAP2 POP POP PUSH2 0x256B JUMP JUMPDEST DUP1 DUP1 PUSH2 0x255D SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2507 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x26A8 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x2669 SWAP2 SWAP1 PUSH2 0x47C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x2695 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP POP PUSH2 0x26AE JUMP JUMPDEST DUP1 DUP1 PUSH2 0x26A0 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2634 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x2719 JUMPI PUSH1 0xB PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x26E4 SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x26F4 SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2704 SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2711 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26B6 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2770 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x274B SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x275B SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2768 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x271D JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x27C7 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x27AA SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x27BF SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2774 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x281E JUMPI PUSH1 0x13 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2809 SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2816 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27CB JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2885 JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2860 SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x2870 SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x287D SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2822 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x28E4 JUMPI PUSH1 0x17 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x28CF SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x28DC SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2889 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2933 JUMPI PUSH1 0x14 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x292B SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x28E8 JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x29A6 SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x29BC SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2A02 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x2A46 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x676F616C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2C0D JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2A82 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AAE SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AFB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AD0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AFB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2ADE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x2B10 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B3C SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B89 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B5E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B89 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B6C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x2C00 JUMPI DUP3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x2BDF JUMPI POP DUP4 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x2BED JUMPI DUP1 SWAP2 POP POP PUSH2 0x2C07 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2BF8 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B9B JUMP JUMPDEST POP PUSH2 0x270F SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x11 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2C6E SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2C84 SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2C9B SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2CC7 SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CEB JUMPI PUSH2 0x2CEA PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2D1E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2D09 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x2DFE JUMPI PUSH1 0xB PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2D4F SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7B SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DC8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D9D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DC8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DAB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2DE0 JUMPI PUSH2 0x2DDF PUSH2 0x47D7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2DF6 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2D24 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2E29 SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x2E69 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2E95 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2EE2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2EB7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2EE2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EC5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2F72 JUMPI DUP5 PUSH1 0x16 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x2F55 JUMPI POP PUSH1 0x16 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x40 MLOAD PUSH2 0x2F43 SWAP2 SWAP1 PUSH2 0x47C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST ISZERO PUSH2 0x2F5F JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x2F6A SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2EF6 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x17 PUSH1 0x0 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x301F SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x9 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3036 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x9 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xF PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x309A SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x30EA SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x314F JUMPI PUSH2 0x3124 PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3117 JUMPI PUSH2 0x3116 PUSH2 0x47D7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x34B9 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3137 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0x3147 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x30F2 JUMP JUMPDEST POP PUSH2 0x318F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6964656100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2C0D JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x31C0 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x31EC SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3239 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x320E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3239 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x321C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x14 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x32E0 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 ISZERO PUSH2 0x332B JUMPI PUSH2 0x332A DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x766F746500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2C0D JUMP JUMPDEST JUMPDEST PUSH1 0x6 SLOAD SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x3368 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3394 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x33E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x33E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x33C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x33FA DUP5 PUSH2 0x3519 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3419 JUMPI PUSH2 0x3418 PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x344B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x34AE JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x34A2 JUMPI PUSH2 0x34A1 PUSH2 0x4B2F JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x3459 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x13 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x3510 SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x3577 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x356D JUMPI PUSH2 0x356C PUSH2 0x4B2F JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x35B4 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x35AA JUMPI PUSH2 0x35A9 PUSH2 0x4B2F JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x35E3 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x35D9 JUMPI PUSH2 0x35D8 PUSH2 0x4B2F JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x360C JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x3602 JUMPI PUSH2 0x3601 PUSH2 0x4B2F JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x3631 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x3627 JUMPI PUSH2 0x3626 PUSH2 0x4B2F JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3654 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x364A JUMPI PUSH2 0x3649 PUSH2 0x4B2F JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3663 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x3678 SWAP1 PUSH2 0x46EC JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x368A JUMPI POP PUSH2 0x36A9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x36A8 SWAP2 SWAP1 PUSH2 0x36AC JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x36C5 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x36AD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3730 DUP3 PUSH2 0x36E7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x374F JUMPI PUSH2 0x374E PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3762 PUSH2 0x36C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x376E DUP3 DUP3 PUSH2 0x3727 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x378E JUMPI PUSH2 0x378D PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH2 0x3797 DUP3 PUSH2 0x36E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37C6 PUSH2 0x37C1 DUP5 PUSH2 0x3773 JUMP JUMPDEST PUSH2 0x3758 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x37E2 JUMPI PUSH2 0x37E1 PUSH2 0x36E2 JUMP JUMPDEST JUMPDEST PUSH2 0x37ED DUP5 DUP3 DUP6 PUSH2 0x37A4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x380A JUMPI PUSH2 0x3809 PUSH2 0x36DD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x381A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x37B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3839 JUMPI PUSH2 0x3838 PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3857 JUMPI PUSH2 0x3856 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x3863 DUP5 DUP3 DUP6 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x38B7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38E9 DUP3 PUSH2 0x3898 JUMP JUMPDEST PUSH2 0x38F3 DUP2 DUP6 PUSH2 0x38A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x3903 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x38B4 JUMP JUMPDEST PUSH2 0x390C DUP2 PUSH2 0x36E7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3923 DUP4 DUP4 PUSH2 0x38DE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3943 DUP3 PUSH2 0x386C JUMP JUMPDEST PUSH2 0x394D DUP2 DUP6 PUSH2 0x3877 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x395F DUP6 PUSH2 0x3888 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x399B JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x397C DUP6 DUP3 PUSH2 0x3917 JUMP JUMPDEST SWAP5 POP PUSH2 0x3987 DUP4 PUSH2 0x392B JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3963 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x39C7 DUP2 DUP5 PUSH2 0x3938 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39E2 DUP2 PUSH2 0x39CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39FD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x39D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A0C DUP2 PUSH2 0x39CF JUMP JUMPDEST DUP2 EQ PUSH2 0x3A17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A29 DUP2 PUSH2 0x3A03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A45 JUMPI PUSH2 0x3A44 PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A53 DUP5 DUP3 DUP6 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3A71 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x39D9 JUMP JUMPDEST PUSH2 0x3A7E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x39D9 JUMP JUMPDEST PUSH2 0x3A8B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x39D9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AAF DUP3 PUSH2 0x3898 JUMP JUMPDEST PUSH2 0x3AB9 DUP2 DUP6 PUSH2 0x3A93 JUMP JUMPDEST SWAP4 POP PUSH2 0x3AC9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x38B4 JUMP JUMPDEST PUSH2 0x3AD2 DUP2 PUSH2 0x36E7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AF7 DUP2 DUP7 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3B0B DUP2 DUP6 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3B1F DUP2 DUP5 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3B3E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x39D9 JUMP JUMPDEST PUSH2 0x3B4B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x39D9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B6C DUP2 DUP5 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3B89 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x39D9 JUMP JUMPDEST PUSH2 0x3B96 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x39D9 JUMP JUMPDEST PUSH2 0x3BA3 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x39D9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3BB5 DUP2 DUP5 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3BD5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x39D9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3BE7 DUP2 DUP6 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP PUSH2 0x3BF6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x39D9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C15 JUMPI PUSH2 0x3C14 PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C23 DUP6 DUP3 DUP7 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3C34 DUP6 DUP3 DUP7 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3C53 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x39D9 JUMP JUMPDEST PUSH2 0x3C60 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x39D9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3C72 DUP2 DUP6 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3C86 DUP2 DUP5 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3CAD JUMPI PUSH2 0x3CAC PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3CBB DUP9 DUP3 DUP10 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x3CCC DUP9 DUP3 DUP10 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x3CDD DUP9 DUP3 DUP10 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CFE JUMPI PUSH2 0x3CFD PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x3D0A DUP9 DUP3 DUP10 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D2B JUMPI PUSH2 0x3D2A PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x3D37 DUP9 DUP3 DUP10 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3D5E JUMPI PUSH2 0x3D5D PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D6C DUP8 DUP3 DUP9 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D8D JUMPI PUSH2 0x3D8C PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x3D99 DUP8 DUP3 DUP9 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3DBA JUMPI PUSH2 0x3DB9 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x3DC6 DUP8 DUP3 DUP9 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3DD7 DUP8 DUP3 DUP9 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DF8 DUP2 PUSH2 0x3DE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3DEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E33 DUP2 DUP6 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3E47 DUP2 DUP5 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E85 DUP2 PUSH2 0x39CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E97 DUP4 DUP4 PUSH2 0x3E7C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EBB DUP3 PUSH2 0x3E50 JUMP JUMPDEST PUSH2 0x3EC5 DUP2 DUP6 PUSH2 0x3E5B JUMP JUMPDEST SWAP4 POP PUSH2 0x3ED0 DUP4 PUSH2 0x3E6C JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F01 JUMPI DUP2 MLOAD PUSH2 0x3EE8 DUP9 DUP3 PUSH2 0x3E8B JUMP JUMPDEST SWAP8 POP PUSH2 0x3EF3 DUP4 PUSH2 0x3EA3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3ED4 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F28 DUP2 DUP5 PUSH2 0x3EB0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3F4A JUMPI PUSH2 0x3F49 PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F68 JUMPI PUSH2 0x3F67 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x3F74 DUP8 DUP3 DUP9 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F95 JUMPI PUSH2 0x3F94 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x3FA1 DUP8 DUP3 DUP9 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FC2 JUMPI PUSH2 0x3FC1 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x3FCE DUP8 DUP3 DUP9 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3FDF DUP8 DUP3 DUP9 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4002 JUMPI PUSH2 0x4001 PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4010 DUP6 DUP3 DUP7 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4031 JUMPI PUSH2 0x4030 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x403D DUP6 DUP3 DUP7 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4060 JUMPI PUSH2 0x405F PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x406E DUP7 DUP3 DUP8 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x408F JUMPI PUSH2 0x408E PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x409B DUP7 DUP3 DUP8 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40BC JUMPI PUSH2 0x40BB PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x40C8 DUP7 DUP3 DUP8 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x40EB JUMPI PUSH2 0x40EA PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x40F9 DUP7 DUP3 DUP8 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x410A DUP7 DUP3 DUP8 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x412B JUMPI PUSH2 0x412A PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x4137 DUP7 DUP3 DUP8 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x415B JUMPI PUSH2 0x415A PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4169 DUP8 DUP3 DUP9 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x417A DUP8 DUP3 DUP9 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x418B DUP8 DUP3 DUP9 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x41AC JUMPI PUSH2 0x41AB PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x41B8 DUP8 DUP3 DUP9 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x41DA PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x39D9 JUMP JUMPDEST PUSH2 0x41E7 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x3DEF JUMP JUMPDEST PUSH2 0x41F4 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x3DEF JUMP JUMPDEST PUSH2 0x4201 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x3DEF JUMP JUMPDEST PUSH2 0x420E PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x3DEF JUMP JUMPDEST PUSH2 0x421B PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x3DEF JUMP JUMPDEST PUSH2 0x4228 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x3DEF JUMP JUMPDEST PUSH2 0x4235 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x3DEF JUMP JUMPDEST PUSH2 0x4243 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x3DEF JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x426B JUMPI PUSH2 0x426A PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4289 JUMPI PUSH2 0x4288 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x4295 DUP8 DUP3 DUP9 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42B6 JUMPI PUSH2 0x42B5 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x42C2 DUP8 DUP3 DUP9 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x42D3 DUP8 DUP3 DUP9 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42F4 JUMPI PUSH2 0x42F3 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x4300 DUP8 DUP3 DUP9 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4323 JUMPI PUSH2 0x4322 PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4341 JUMPI PUSH2 0x4340 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x434D DUP6 DUP3 DUP7 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x436E JUMPI PUSH2 0x436D PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x437A DUP6 DUP3 DUP7 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x439E JUMPI PUSH2 0x439D PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43AC DUP8 DUP3 DUP9 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43CD JUMPI PUSH2 0x43CC PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x43D9 DUP8 DUP3 DUP9 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x43EA DUP8 DUP3 DUP9 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x43FB DUP8 DUP3 DUP9 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4422 JUMPI PUSH2 0x4421 PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x444B PUSH2 0x4446 DUP5 PUSH2 0x4407 JUMP JUMPDEST PUSH2 0x3758 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x446E JUMPI PUSH2 0x446D PUSH2 0x4433 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x44B5 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4493 JUMPI PUSH2 0x4492 PUSH2 0x36DD JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x44A0 DUP10 DUP3 PUSH2 0x37F5 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4470 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x44D4 JUMPI PUSH2 0x44D3 PUSH2 0x36DD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x44E4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4438 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4509 JUMPI PUSH2 0x4508 PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4527 JUMPI PUSH2 0x4526 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x4533 DUP9 DUP3 DUP10 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4544 DUP9 DUP3 DUP10 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4565 JUMPI PUSH2 0x4564 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x4571 DUP9 DUP3 DUP10 ADD PUSH2 0x44BF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4582 DUP9 DUP3 DUP10 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45A3 JUMPI PUSH2 0x45A2 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x45AF DUP9 DUP3 DUP10 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x45C5 DUP2 PUSH2 0x3DE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x45D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x45E2 DUP2 PUSH2 0x45BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4604 JUMPI PUSH2 0x4603 PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4612 DUP9 DUP3 DUP10 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4623 DUP9 DUP3 DUP10 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4634 DUP9 DUP3 DUP10 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4655 JUMPI PUSH2 0x4654 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x4661 DUP9 DUP3 DUP10 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x4672 DUP9 DUP3 DUP10 ADD PUSH2 0x45D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4694 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x39D9 JUMP JUMPDEST PUSH2 0x46A1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x39D9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x46B3 DUP2 DUP5 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4704 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4717 JUMPI PUSH2 0x4716 PUSH2 0x46BD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x474A DUP2 PUSH2 0x46EC JUMP JUMPDEST PUSH2 0x4754 DUP2 DUP7 PUSH2 0x471D JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x476F JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x4784 JUMPI PUSH2 0x47B7 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x47B7 JUMP JUMPDEST PUSH2 0x478D DUP6 PUSH2 0x4728 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x47AF JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4790 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47CC DUP3 DUP5 PUSH2 0x473D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4840 DUP3 PUSH2 0x39CF JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4872 JUMPI PUSH2 0x4871 PUSH2 0x4806 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4888 DUP3 PUSH2 0x39CF JUMP JUMPDEST SWAP2 POP PUSH2 0x4893 DUP4 PUSH2 0x39CF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x48AB JUMPI PUSH2 0x48AA PUSH2 0x4806 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x4913 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x48D6 JUMP JUMPDEST PUSH2 0x491D DUP7 DUP4 PUSH2 0x48D6 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x495A PUSH2 0x4955 PUSH2 0x4950 DUP5 PUSH2 0x39CF JUMP JUMPDEST PUSH2 0x4935 JUMP JUMPDEST PUSH2 0x39CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4974 DUP4 PUSH2 0x493F JUMP JUMPDEST PUSH2 0x4988 PUSH2 0x4980 DUP3 PUSH2 0x4961 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x48E3 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x499D PUSH2 0x4990 JUMP JUMPDEST PUSH2 0x49A8 DUP2 DUP5 DUP5 PUSH2 0x496B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x49CC JUMPI PUSH2 0x49C1 PUSH1 0x0 DUP3 PUSH2 0x4995 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x49AE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4A11 JUMPI PUSH2 0x49E2 DUP2 PUSH2 0x48B1 JUMP JUMPDEST PUSH2 0x49EB DUP5 PUSH2 0x48C6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x49FA JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4A0E PUSH2 0x4A06 DUP6 PUSH2 0x48C6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x49AD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A34 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4A16 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A4D DUP4 DUP4 PUSH2 0x4A23 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4A66 DUP3 PUSH2 0x3898 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A7F JUMPI PUSH2 0x4A7E PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH2 0x4A89 DUP3 SLOAD PUSH2 0x46EC JUMP JUMPDEST PUSH2 0x4A94 DUP3 DUP3 DUP6 PUSH2 0x49D0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4AC7 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4AB5 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4ABF DUP6 DUP3 PUSH2 0x4A41 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4B27 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4AD5 DUP7 PUSH2 0x48B1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4AFD JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4AD8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4B1A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4B16 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4A23 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT JUMP PUSH12 0x5C8EF08A9838007266A3F1D7 SWAP10 0x4D 0xA7 0x2A 0xAF 0xD5 PUSH23 0x4C44DD81E76377F03CCC64736F6C634300081100330000 ","sourceMap":"170:14926:7:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_dao_ids_2030":{"entryPoint":7342,"id":2030,"parameterSlots":0,"returnSlots":0},"@_dao_uris_2055":{"entryPoint":4298,"id":2055,"parameterSlots":0,"returnSlots":0},"@_donated_2078":{"entryPoint":4274,"id":2078,"parameterSlots":0,"returnSlots":0},"@_donations_2088":{"entryPoint":7656,"id":2088,"parameterSlots":0,"returnSlots":0},"@_donations_ids_2032":{"entryPoint":12869,"id":2032,"parameterSlots":0,"returnSlots":0},"@_feed_ids_2050":{"entryPoint":8624,"id":2050,"parameterSlots":0,"returnSlots":0},"@_feeds_2083":{"entryPoint":5943,"id":2083,"parameterSlots":0,"returnSlots":0},"@_goal_ids_2034":{"entryPoint":4107,"id":2034,"parameterSlots":0,"returnSlots":0},"@_goal_uris_2069":{"entryPoint":7348,"id":2069,"parameterSlots":0,"returnSlots":0},"@_ideas_ids_2036":{"entryPoint":12157,"id":2036,"parameterSlots":0,"returnSlots":0},"@_ideas_uris_2074":{"entryPoint":5485,"id":2074,"parameterSlots":0,"returnSlots":0},"@_ideas_vote_ids_2042":{"entryPoint":5663,"id":2042,"parameterSlots":0,"returnSlots":0},"@_join_ids_2038":{"entryPoint":3734,"id":2038,"parameterSlots":0,"returnSlots":0},"@_joined_person_2064":{"entryPoint":5063,"id":2064,"parameterSlots":0,"returnSlots":0},"@_message_ids_2044":{"entryPoint":9002,"id":2044,"parameterSlots":0,"returnSlots":0},"@_message_read_ids_2046":{"entryPoint":11822,"id":2046,"parameterSlots":0,"returnSlots":0},"@_reply_ids_2048":{"entryPoint":9766,"id":2048,"parameterSlots":0,"returnSlots":0},"@_smart_contract_ids_2040":{"entryPoint":4113,"id":2040,"parameterSlots":0,"returnSlots":0},"@_smart_contracts_uris_2093":{"entryPoint":13113,"id":2093,"parameterSlots":0,"returnSlots":0},"@_template_uris_2059":{"entryPoint":6851,"id":2059,"parameterSlots":0,"returnSlots":0},"@_user_badges_2118":{"entryPoint":9584,"id":2118,"parameterSlots":0,"returnSlots":0},"@add_Feed_2275":{"entryPoint":11277,"id":2275,"parameterSlots":2,"returnSlots":0},"@add_donation_2684":{"entryPoint":6263,"id":2684,"parameterSlots":5,"returnSlots":0},"@all_goal_ideas_votes_2098":{"entryPoint":4119,"id":2098,"parameterSlots":0,"returnSlots":0},"@all_messages_2103":{"entryPoint":10835,"id":2103,"parameterSlots":0,"returnSlots":0},"@all_read_messages_2108":{"entryPoint":11828,"id":2108,"parameterSlots":0,"returnSlots":0},"@all_replies_2113":{"entryPoint":5301,"id":2113,"parameterSlots":0,"returnSlots":0},"@create_dao_2160":{"entryPoint":8222,"id":2160,"parameterSlots":4,"returnSlots":1},"@create_goal_2315":{"entryPoint":10597,"id":2315,"parameterSlots":4,"returnSlots":1},"@create_goal_ideas_vote_3058":{"entryPoint":12875,"id":3058,"parameterSlots":5,"returnSlots":1},"@create_ideas_2584":{"entryPoint":12360,"id":2584,"parameterSlots":5,"returnSlots":1},"@create_ideas_smart_contract_2604":{"entryPoint":13497,"id":2604,"parameterSlots":3,"returnSlots":0},"@dao_uri_2252":{"entryPoint":6683,"id":2252,"parameterSlots":1,"returnSlots":1},"@getMsgIDs_3220":{"entryPoint":7698,"id":3220,"parameterSlots":1,"returnSlots":1},"@getReadMsg_3401":{"entryPoint":12012,"id":3401,"parameterSlots":2,"returnSlots":1},"@getReplyIDs_3314":{"entryPoint":7925,"id":3314,"parameterSlots":1,"returnSlots":1},"@get_all_daos_2239":{"entryPoint":11468,"id":2239,"parameterSlots":0,"returnSlots":1},"@get_all_goals_2371":{"entryPoint":4748,"id":2371,"parameterSlots":0,"returnSlots":1},"@get_all_goals_by_dao_id_2438":{"entryPoint":3340,"id":2438,"parameterSlots":1,"returnSlots":1},"@get_all_ideas_2858":{"entryPoint":9156,"id":2858,"parameterSlots":0,"returnSlots":1},"@get_all_ideas_by_goal_id_2914":{"entryPoint":3740,"id":2914,"parameterSlots":1,"returnSlots":1},"@get_dao_id_by_ideas_id_2503":{"entryPoint":5099,"id":2503,"parameterSlots":1,"returnSlots":1},"@get_goal_id_by_goal_uri_2479":{"entryPoint":4161,"id":2479,"parameterSlots":1,"returnSlots":1},"@get_goal_id_from_ideas_uri_2999":{"entryPoint":9772,"id":2999,"parameterSlots":1,"returnSlots":1},"@get_ideas_id_by_ideas_uri_2955":{"entryPoint":9471,"id":2955,"parameterSlots":1,"returnSlots":1},"@get_ideas_votes_from_goal_3126":{"entryPoint":5669,"id":3126,"parameterSlots":2,"returnSlots":1},"@get_person_joinedID_2817":{"entryPoint":11155,"id":2817,"parameterSlots":2,"returnSlots":1},"@goal_uri_2516":{"entryPoint":12701,"id":2516,"parameterSlots":1,"returnSlots":1},"@ideas_uri_3012":{"entryPoint":8834,"id":3012,"parameterSlots":1,"returnSlots":1},"@is_person_joined_2775":{"entryPoint":7220,"id":2775,"parameterSlots":2,"returnSlots":1},"@join_community_2718":{"entryPoint":8630,"id":2718,"parameterSlots":3,"returnSlots":0},"@leave_community_2733":{"entryPoint":8152,"id":2733,"parameterSlots":1,"returnSlots":0},"@log10_1651":{"entryPoint":13593,"id":1651,"parameterSlots":1,"returnSlots":1},"@reset_all_3541":{"entryPoint":9907,"id":3541,"parameterSlots":0,"returnSlots":0},"@sendMsg_3163":{"entryPoint":7011,"id":3163,"parameterSlots":4,"returnSlots":1},"@sendReadMsg_3344":{"entryPoint":9008,"id":3344,"parameterSlots":4,"returnSlots":1},"@sendReply_3257":{"entryPoint":12163,"id":3257,"parameterSlots":4,"returnSlots":1},"@set_dao_2198":{"entryPoint":8547,"id":2198,"parameterSlots":3,"returnSlots":0},"@set_goal_2330":{"entryPoint":11782,"id":2330,"parameterSlots":2,"returnSlots":0},"@set_ideas_2619":{"entryPoint":11428,"id":2619,"parameterSlots":2,"returnSlots":0},"@toString_778":{"entryPoint":13291,"id":778,"parameterSlots":1,"returnSlots":1},"@update_template_2174":{"entryPoint":8510,"id":2174,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":17464,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":14259,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":17599,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":17875,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":14325,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":14874,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":14371,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr":{"entryPoint":17164,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256":{"entryPoint":16176,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_string_memory_ptr":{"entryPoint":16977,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptrt_uint256t_string_memory_ptr":{"entryPoint":17645,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256":{"entryPoint":14895,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":16363,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":16455,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256":{"entryPoint":15684,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_uint256":{"entryPoint":17284,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":15358,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr":{"entryPoint":16594,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptr":{"entryPoint":16705,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_bool":{"entryPoint":17896,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":15505,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":14615,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":16011,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":14648,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":16048,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":15855,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18237,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":14558,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":15012,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":15996,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":14809,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18368,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":14765,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":16142,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":15870,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15186,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15897,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15069,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":14824,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__to_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__fromStack_reversed":{"entryPoint":16836,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":15296,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":15145,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18047,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15422,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":14940,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15220,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_memory":{"entryPoint":14168,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":14025,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":17415,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":14195,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":14472,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15980,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage_ptr":{"entryPoint":18216,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":18609,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":14444,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15952,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":14488,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":14635,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":16035,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":14455,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":15963,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18205,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":14499,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":14995,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":18557,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":18896,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_bool":{"entryPoint":15843,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":14799,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":18861,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":18751,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":19037,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":14244,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":14516,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":18630,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":18156,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":19009,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":14119,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":18741,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":18485,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":18979,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":18438,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":19247,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":18109,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":18391,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":14072,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":18785,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":14045,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":17459,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":14050,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":14040,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":14035,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":14055,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":18646,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":18966,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":18837,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":18659,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":18795,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":17852,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":14851,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":18832,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:38802:8","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:8","statements":[{"nodeType":"YulAssignment","src":"57:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:8"},"nodeType":"YulFunctionCall","src":"67:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:8","type":""}],"src":"7:75:8"},{"body":{"nodeType":"YulBlock","src":"177:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:8"},"nodeType":"YulFunctionCall","src":"187:12:8"},"nodeType":"YulExpressionStatement","src":"187:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:8"},{"body":{"nodeType":"YulBlock","src":"300:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:8"},"nodeType":"YulFunctionCall","src":"310:12:8"},"nodeType":"YulExpressionStatement","src":"310:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:8"},{"body":{"nodeType":"YulBlock","src":"423:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:8"},"nodeType":"YulFunctionCall","src":"433:12:8"},"nodeType":"YulExpressionStatement","src":"433:12:8"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:8"},{"body":{"nodeType":"YulBlock","src":"546:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:8"},"nodeType":"YulFunctionCall","src":"556:12:8"},"nodeType":"YulExpressionStatement","src":"556:12:8"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:8"},{"body":{"nodeType":"YulBlock","src":"628:54:8","statements":[{"nodeType":"YulAssignment","src":"638:38:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:8"},"nodeType":"YulFunctionCall","src":"652:14:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:8"},"nodeType":"YulFunctionCall","src":"668:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:8"},"nodeType":"YulFunctionCall","src":"648:28:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:8"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:8","type":""}],"src":"580:102:8"},{"body":{"nodeType":"YulBlock","src":"716:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:8"},"nodeType":"YulFunctionCall","src":"726:88:8"},"nodeType":"YulExpressionStatement","src":"726:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:8","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:8"},"nodeType":"YulFunctionCall","src":"823:15:8"},"nodeType":"YulExpressionStatement","src":"823:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:8"},"nodeType":"YulFunctionCall","src":"847:15:8"},"nodeType":"YulExpressionStatement","src":"847:15:8"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:8"},{"body":{"nodeType":"YulBlock","src":"917:238:8","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:8","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:8"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:8"},"nodeType":"YulFunctionCall","src":"957:27:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:8"},"nodeType":"YulFunctionCall","src":"945:40:8"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:8"},"nodeType":"YulFunctionCall","src":"1098:18:8"},"nodeType":"YulExpressionStatement","src":"1098:18:8"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:8"},"nodeType":"YulFunctionCall","src":"1036:34:8"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:8"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:8"},"nodeType":"YulFunctionCall","src":"1072:22:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:8"},"nodeType":"YulFunctionCall","src":"1033:62:8"},"nodeType":"YulIf","src":"1030:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:8","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:8"},"nodeType":"YulFunctionCall","src":"1127:22:8"},"nodeType":"YulExpressionStatement","src":"1127:22:8"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:8","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:8","type":""}],"src":"874:281:8"},{"body":{"nodeType":"YulBlock","src":"1202:88:8","statements":[{"nodeType":"YulAssignment","src":"1212:30:8","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:8"},"nodeType":"YulFunctionCall","src":"1222:20:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:8"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:8"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:8"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:8"},"nodeType":"YulFunctionCall","src":"1251:33:8"},"nodeType":"YulExpressionStatement","src":"1251:33:8"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:8","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:8","type":""}],"src":"1161:129:8"},{"body":{"nodeType":"YulBlock","src":"1363:241:8","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:8"},"nodeType":"YulFunctionCall","src":"1470:18:8"},"nodeType":"YulExpressionStatement","src":"1470:18:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:8"},"nodeType":"YulFunctionCall","src":"1437:30:8"},"nodeType":"YulIf","src":"1434:56:8"},{"nodeType":"YulAssignment","src":"1500:37:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:8"},"nodeType":"YulFunctionCall","src":"1508:29:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:8"}]},{"nodeType":"YulAssignment","src":"1574:23:8","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:8"},"nodeType":"YulFunctionCall","src":"1582:15:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:8"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:8","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:8","type":""}],"src":"1296:308:8"},{"body":{"nodeType":"YulBlock","src":"1674:82:8","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1697:3:8"},{"name":"src","nodeType":"YulIdentifier","src":"1702:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"1707:6:8"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1684:12:8"},"nodeType":"YulFunctionCall","src":"1684:30:8"},"nodeType":"YulExpressionStatement","src":"1684:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1734:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"1739:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:8"},"nodeType":"YulFunctionCall","src":"1730:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"1748:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1723:6:8"},"nodeType":"YulFunctionCall","src":"1723:27:8"},"nodeType":"YulExpressionStatement","src":"1723:27:8"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1656:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1661:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"1666:6:8","type":""}],"src":"1610:146:8"},{"body":{"nodeType":"YulBlock","src":"1846:341:8","statements":[{"nodeType":"YulAssignment","src":"1856:75:8","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1923:6:8"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1881:41:8"},"nodeType":"YulFunctionCall","src":"1881:49:8"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1865:15:8"},"nodeType":"YulFunctionCall","src":"1865:66:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1856:5:8"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1947:5:8"},{"name":"length","nodeType":"YulIdentifier","src":"1954:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:8"},"nodeType":"YulFunctionCall","src":"1940:21:8"},"nodeType":"YulExpressionStatement","src":"1940:21:8"},{"nodeType":"YulVariableDeclaration","src":"1970:27:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1985:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"1992:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1981:3:8"},"nodeType":"YulFunctionCall","src":"1981:16:8"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1974:3:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2035:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2037:77:8"},"nodeType":"YulFunctionCall","src":"2037:79:8"},"nodeType":"YulExpressionStatement","src":"2037:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2016:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"2021:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2012:3:8"},"nodeType":"YulFunctionCall","src":"2012:16:8"},{"name":"end","nodeType":"YulIdentifier","src":"2030:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2009:2:8"},"nodeType":"YulFunctionCall","src":"2009:25:8"},"nodeType":"YulIf","src":"2006:112:8"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2164:3:8"},{"name":"dst","nodeType":"YulIdentifier","src":"2169:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"2174:6:8"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2127:36:8"},"nodeType":"YulFunctionCall","src":"2127:54:8"},"nodeType":"YulExpressionStatement","src":"2127:54:8"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1819:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"1824:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"1832:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1840:5:8","type":""}],"src":"1762:425:8"},{"body":{"nodeType":"YulBlock","src":"2269:278:8","statements":[{"body":{"nodeType":"YulBlock","src":"2318:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2320:77:8"},"nodeType":"YulFunctionCall","src":"2320:79:8"},"nodeType":"YulExpressionStatement","src":"2320:79:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2297:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2305:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2293:3:8"},"nodeType":"YulFunctionCall","src":"2293:17:8"},{"name":"end","nodeType":"YulIdentifier","src":"2312:3:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2289:3:8"},"nodeType":"YulFunctionCall","src":"2289:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2282:6:8"},"nodeType":"YulFunctionCall","src":"2282:35:8"},"nodeType":"YulIf","src":"2279:122:8"},{"nodeType":"YulVariableDeclaration","src":"2410:34:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2437:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2424:12:8"},"nodeType":"YulFunctionCall","src":"2424:20:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2414:6:8","type":""}]},{"nodeType":"YulAssignment","src":"2453:88:8","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2514:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2522:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2510:3:8"},"nodeType":"YulFunctionCall","src":"2510:17:8"},{"name":"length","nodeType":"YulIdentifier","src":"2529:6:8"},{"name":"end","nodeType":"YulIdentifier","src":"2537:3:8"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2462:47:8"},"nodeType":"YulFunctionCall","src":"2462:79:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2453:5:8"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2247:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"2255:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2263:5:8","type":""}],"src":"2207:340:8"},{"body":{"nodeType":"YulBlock","src":"2629:433:8","statements":[{"body":{"nodeType":"YulBlock","src":"2675:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2677:77:8"},"nodeType":"YulFunctionCall","src":"2677:79:8"},"nodeType":"YulExpressionStatement","src":"2677:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2650:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"2659:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2646:3:8"},"nodeType":"YulFunctionCall","src":"2646:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"2671:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2642:3:8"},"nodeType":"YulFunctionCall","src":"2642:32:8"},"nodeType":"YulIf","src":"2639:119:8"},{"nodeType":"YulBlock","src":"2768:287:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2783:45:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2814:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2825:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2810:3:8"},"nodeType":"YulFunctionCall","src":"2810:17:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2797:12:8"},"nodeType":"YulFunctionCall","src":"2797:31:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2787:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2875:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2877:77:8"},"nodeType":"YulFunctionCall","src":"2877:79:8"},"nodeType":"YulExpressionStatement","src":"2877:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2847:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2855:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2844:2:8"},"nodeType":"YulFunctionCall","src":"2844:30:8"},"nodeType":"YulIf","src":"2841:117:8"},{"nodeType":"YulAssignment","src":"2972:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"3028:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:8"},"nodeType":"YulFunctionCall","src":"3013:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3037:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2982:30:8"},"nodeType":"YulFunctionCall","src":"2982:63:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2972:6:8"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2599:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2610:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2622:6:8","type":""}],"src":"2553:509:8"},{"body":{"nodeType":"YulBlock","src":"3152:40:8","statements":[{"nodeType":"YulAssignment","src":"3163:22:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3179:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3173:5:8"},"nodeType":"YulFunctionCall","src":"3173:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3163:6:8"}]}]},"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3135:5:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3145:6:8","type":""}],"src":"3068:124:8"},{"body":{"nodeType":"YulBlock","src":"3319:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3336:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"3341:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3329:6:8"},"nodeType":"YulFunctionCall","src":"3329:19:8"},"nodeType":"YulExpressionStatement","src":"3329:19:8"},{"nodeType":"YulAssignment","src":"3357:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3376:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"3381:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3372:3:8"},"nodeType":"YulFunctionCall","src":"3372:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3357:11:8"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3291:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"3296:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3307:11:8","type":""}],"src":"3198:194:8"},{"body":{"nodeType":"YulBlock","src":"3480:60:8","statements":[{"nodeType":"YulAssignment","src":"3490:11:8","value":{"name":"ptr","nodeType":"YulIdentifier","src":"3498:3:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3490:4:8"}]},{"nodeType":"YulAssignment","src":"3511:22:8","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3523:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"3528:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3519:3:8"},"nodeType":"YulFunctionCall","src":"3519:14:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:8"}]}]},"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3467:3:8","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"3475:4:8","type":""}],"src":"3398:142:8"},{"body":{"nodeType":"YulBlock","src":"3605:40:8","statements":[{"nodeType":"YulAssignment","src":"3616:22:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3632:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3626:5:8"},"nodeType":"YulFunctionCall","src":"3626:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3616:6:8"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3588:5:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3598:6:8","type":""}],"src":"3546:99:8"},{"body":{"nodeType":"YulBlock","src":"3737:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3754:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"3759:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3747:6:8"},"nodeType":"YulFunctionCall","src":"3747:19:8"},"nodeType":"YulExpressionStatement","src":"3747:19:8"},{"nodeType":"YulAssignment","src":"3775:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3794:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"3799:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3790:3:8"},"nodeType":"YulFunctionCall","src":"3790:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3775:11:8"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3709:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"3714:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3725:11:8","type":""}],"src":"3651:159:8"},{"body":{"nodeType":"YulBlock","src":"3878:184:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3888:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"3897:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3892:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"3957:63:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3982:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"3987:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3978:3:8"},"nodeType":"YulFunctionCall","src":"3978:11:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4001:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"4006:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3997:3:8"},"nodeType":"YulFunctionCall","src":"3997:11:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3991:5:8"},"nodeType":"YulFunctionCall","src":"3991:18:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3971:6:8"},"nodeType":"YulFunctionCall","src":"3971:39:8"},"nodeType":"YulExpressionStatement","src":"3971:39:8"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3918:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"3921:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3915:2:8"},"nodeType":"YulFunctionCall","src":"3915:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3929:19:8","statements":[{"nodeType":"YulAssignment","src":"3931:15:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3940:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"3943:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3936:3:8"},"nodeType":"YulFunctionCall","src":"3936:10:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3931:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"3911:3:8","statements":[]},"src":"3907:113:8"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4040:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"4045:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4036:3:8"},"nodeType":"YulFunctionCall","src":"4036:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"4054:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4029:6:8"},"nodeType":"YulFunctionCall","src":"4029:27:8"},"nodeType":"YulExpressionStatement","src":"4029:27:8"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3860:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3865:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"3870:6:8","type":""}],"src":"3816:246:8"},{"body":{"nodeType":"YulBlock","src":"4150:275:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4160:53:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4207:5:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4174:32:8"},"nodeType":"YulFunctionCall","src":"4174:39:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4164:6:8","type":""}]},{"nodeType":"YulAssignment","src":"4222:68:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4278:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"4283:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4229:48:8"},"nodeType":"YulFunctionCall","src":"4229:61:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4222:3:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4338:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"4345:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4334:3:8"},"nodeType":"YulFunctionCall","src":"4334:16:8"},{"name":"pos","nodeType":"YulIdentifier","src":"4352:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"4357:6:8"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4299:34:8"},"nodeType":"YulFunctionCall","src":"4299:65:8"},"nodeType":"YulExpressionStatement","src":"4299:65:8"},{"nodeType":"YulAssignment","src":"4373:46:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4384:3:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4411:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4389:21:8"},"nodeType":"YulFunctionCall","src":"4389:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4380:3:8"},"nodeType":"YulFunctionCall","src":"4380:39:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4373:3:8"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4131:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4138:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4146:3:8","type":""}],"src":"4068:357:8"},{"body":{"nodeType":"YulBlock","src":"4531:96:8","statements":[{"nodeType":"YulAssignment","src":"4541:80:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4609:6:8"},{"name":"pos","nodeType":"YulIdentifier","src":"4617:3:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4555:53:8"},"nodeType":"YulFunctionCall","src":"4555:66:8"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"4541:10:8"}]}]},"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"4504:6:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4512:3:8","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"4520:10:8","type":""}],"src":"4431:196:8"},{"body":{"nodeType":"YulBlock","src":"4718:38:8","statements":[{"nodeType":"YulAssignment","src":"4728:22:8","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4740:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"4745:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4736:3:8"},"nodeType":"YulFunctionCall","src":"4736:14:8"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"4728:4:8"}]}]},"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4705:3:8","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"4713:4:8","type":""}],"src":"4633:123:8"},{"body":{"nodeType":"YulBlock","src":"4934:847:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4944:78:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5016:5:8"}],"functionName":{"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4958:57:8"},"nodeType":"YulFunctionCall","src":"4958:64:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4948:6:8","type":""}]},{"nodeType":"YulAssignment","src":"5031:103:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5122:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"5127:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5038:83:8"},"nodeType":"YulFunctionCall","src":"5038:96:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5031:3:8"}]},{"nodeType":"YulVariableDeclaration","src":"5143:20:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"5160:3:8"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"5147:9:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5172:39:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5188:3:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5197:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"5205:4:8","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5193:3:8"},"nodeType":"YulFunctionCall","src":"5193:17:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5184:3:8"},"nodeType":"YulFunctionCall","src":"5184:27:8"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"5176:4:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5220:81:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5295:5:8"}],"functionName":{"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5235:59:8"},"nodeType":"YulFunctionCall","src":"5235:66:8"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"5224:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5310:21:8","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"5324:7:8"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5314:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"5400:336:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5421:3:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5430:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"5436:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5426:3:8"},"nodeType":"YulFunctionCall","src":"5426:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5414:6:8"},"nodeType":"YulFunctionCall","src":"5414:33:8"},"nodeType":"YulExpressionStatement","src":"5414:33:8"},{"nodeType":"YulVariableDeclaration","src":"5460:34:8","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5487:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5481:5:8"},"nodeType":"YulFunctionCall","src":"5481:13:8"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"5464:13:8","type":""}]},{"nodeType":"YulAssignment","src":"5507:92:8","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"5579:13:8"},{"name":"tail","nodeType":"YulIdentifier","src":"5594:4:8"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5515:63:8"},"nodeType":"YulFunctionCall","src":"5515:84:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5507:4:8"}]},{"nodeType":"YulAssignment","src":"5612:80:8","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5685:6:8"}],"functionName":{"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5622:62:8"},"nodeType":"YulFunctionCall","src":"5622:70:8"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5612:6:8"}]},{"nodeType":"YulAssignment","src":"5705:21:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5716:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"5721:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5712:3:8"},"nodeType":"YulFunctionCall","src":"5712:14:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5705:3:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5362:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"5365:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5359:2:8"},"nodeType":"YulFunctionCall","src":"5359:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5373:18:8","statements":[{"nodeType":"YulAssignment","src":"5375:14:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5384:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"5387:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:8"},"nodeType":"YulFunctionCall","src":"5380:9:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5375:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"5344:14:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5346:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5355:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5350:1:8","type":""}]}]},"src":"5340:396:8"},{"nodeType":"YulAssignment","src":"5745:11:8","value":{"name":"tail","nodeType":"YulIdentifier","src":"5752:4:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5745:3:8"}]},{"nodeType":"YulAssignment","src":"5765:10:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"5772:3:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5765:3:8"}]}]},"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4913:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4920:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4929:3:8","type":""}],"src":"4790:991:8"},{"body":{"nodeType":"YulBlock","src":"5955:245:8","statements":[{"nodeType":"YulAssignment","src":"5965:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5977:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"5988:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5973:3:8"},"nodeType":"YulFunctionCall","src":"5973:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5965:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6012:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"6023:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6008:3:8"},"nodeType":"YulFunctionCall","src":"6008:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6031:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"6037:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6027:3:8"},"nodeType":"YulFunctionCall","src":"6027:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6001:6:8"},"nodeType":"YulFunctionCall","src":"6001:47:8"},"nodeType":"YulExpressionStatement","src":"6001:47:8"},{"nodeType":"YulAssignment","src":"6057:136:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6179:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"6188:4:8"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6065:113:8"},"nodeType":"YulFunctionCall","src":"6065:128:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6057:4:8"}]}]},"name":"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5927:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5939:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5950:4:8","type":""}],"src":"5787:413:8"},{"body":{"nodeType":"YulBlock","src":"6251:32:8","statements":[{"nodeType":"YulAssignment","src":"6261:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"6272:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6261:7:8"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6233:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6243:7:8","type":""}],"src":"6206:77:8"},{"body":{"nodeType":"YulBlock","src":"6354:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6371:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6394:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6376:17:8"},"nodeType":"YulFunctionCall","src":"6376:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6364:6:8"},"nodeType":"YulFunctionCall","src":"6364:37:8"},"nodeType":"YulExpressionStatement","src":"6364:37:8"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6342:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6349:3:8","type":""}],"src":"6289:118:8"},{"body":{"nodeType":"YulBlock","src":"6511:124:8","statements":[{"nodeType":"YulAssignment","src":"6521:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6533:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"6544:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6529:3:8"},"nodeType":"YulFunctionCall","src":"6529:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6521:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6601:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6614:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"6625:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6610:3:8"},"nodeType":"YulFunctionCall","src":"6610:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6557:43:8"},"nodeType":"YulFunctionCall","src":"6557:71:8"},"nodeType":"YulExpressionStatement","src":"6557:71:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6483:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6495:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6506:4:8","type":""}],"src":"6413:222:8"},{"body":{"nodeType":"YulBlock","src":"6684:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"6741:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6750:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6753:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6743:6:8"},"nodeType":"YulFunctionCall","src":"6743:12:8"},"nodeType":"YulExpressionStatement","src":"6743:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6707:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6732:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6714:17:8"},"nodeType":"YulFunctionCall","src":"6714:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6704:2:8"},"nodeType":"YulFunctionCall","src":"6704:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6697:6:8"},"nodeType":"YulFunctionCall","src":"6697:43:8"},"nodeType":"YulIf","src":"6694:63:8"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6677:5:8","type":""}],"src":"6641:122:8"},{"body":{"nodeType":"YulBlock","src":"6821:87:8","statements":[{"nodeType":"YulAssignment","src":"6831:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6853:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6840:12:8"},"nodeType":"YulFunctionCall","src":"6840:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6831:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6896:5:8"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6869:26:8"},"nodeType":"YulFunctionCall","src":"6869:33:8"},"nodeType":"YulExpressionStatement","src":"6869:33:8"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6799:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"6807:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6815:5:8","type":""}],"src":"6769:139:8"},{"body":{"nodeType":"YulBlock","src":"6980:263:8","statements":[{"body":{"nodeType":"YulBlock","src":"7026:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7028:77:8"},"nodeType":"YulFunctionCall","src":"7028:79:8"},"nodeType":"YulExpressionStatement","src":"7028:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7001:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"7010:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6997:3:8"},"nodeType":"YulFunctionCall","src":"6997:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"7022:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6993:3:8"},"nodeType":"YulFunctionCall","src":"6993:32:8"},"nodeType":"YulIf","src":"6990:119:8"},{"nodeType":"YulBlock","src":"7119:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7134:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"7148:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7138:6:8","type":""}]},{"nodeType":"YulAssignment","src":"7163:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7198:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"7209:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7194:3:8"},"nodeType":"YulFunctionCall","src":"7194:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7218:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7173:20:8"},"nodeType":"YulFunctionCall","src":"7173:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7163:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6950:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6961:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6973:6:8","type":""}],"src":"6914:329:8"},{"body":{"nodeType":"YulBlock","src":"7403:288:8","statements":[{"nodeType":"YulAssignment","src":"7413:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7425:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7436:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7421:3:8"},"nodeType":"YulFunctionCall","src":"7421:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7413:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7493:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7506:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7517:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7502:3:8"},"nodeType":"YulFunctionCall","src":"7502:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7449:43:8"},"nodeType":"YulFunctionCall","src":"7449:71:8"},"nodeType":"YulExpressionStatement","src":"7449:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7574:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7587:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7598:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7583:3:8"},"nodeType":"YulFunctionCall","src":"7583:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7530:43:8"},"nodeType":"YulFunctionCall","src":"7530:72:8"},"nodeType":"YulExpressionStatement","src":"7530:72:8"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7656:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7669:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7680:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7665:3:8"},"nodeType":"YulFunctionCall","src":"7665:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7612:43:8"},"nodeType":"YulFunctionCall","src":"7612:72:8"},"nodeType":"YulExpressionStatement","src":"7612:72:8"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7359:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7371:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7379:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7387:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7398:4:8","type":""}],"src":"7249:442:8"},{"body":{"nodeType":"YulBlock","src":"7793:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7810:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"7815:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7803:6:8"},"nodeType":"YulFunctionCall","src":"7803:19:8"},"nodeType":"YulExpressionStatement","src":"7803:19:8"},{"nodeType":"YulAssignment","src":"7831:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7850:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"7855:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7846:3:8"},"nodeType":"YulFunctionCall","src":"7846:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7831:11:8"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7765:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"7770:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7781:11:8","type":""}],"src":"7697:169:8"},{"body":{"nodeType":"YulBlock","src":"7964:285:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7974:53:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8021:5:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7988:32:8"},"nodeType":"YulFunctionCall","src":"7988:39:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7978:6:8","type":""}]},{"nodeType":"YulAssignment","src":"8036:78:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8102:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"8107:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8043:58:8"},"nodeType":"YulFunctionCall","src":"8043:71:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8036:3:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8162:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"8169:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8158:3:8"},"nodeType":"YulFunctionCall","src":"8158:16:8"},{"name":"pos","nodeType":"YulIdentifier","src":"8176:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"8181:6:8"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8123:34:8"},"nodeType":"YulFunctionCall","src":"8123:65:8"},"nodeType":"YulExpressionStatement","src":"8123:65:8"},{"nodeType":"YulAssignment","src":"8197:46:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8208:3:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8235:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8213:21:8"},"nodeType":"YulFunctionCall","src":"8213:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8204:3:8"},"nodeType":"YulFunctionCall","src":"8204:39:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8197:3:8"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7945:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7952:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7960:3:8","type":""}],"src":"7872:377:8"},{"body":{"nodeType":"YulBlock","src":"8469:501:8","statements":[{"nodeType":"YulAssignment","src":"8479:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8491:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8502:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8487:3:8"},"nodeType":"YulFunctionCall","src":"8487:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8479:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8526:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8537:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8522:3:8"},"nodeType":"YulFunctionCall","src":"8522:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8545:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"8551:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8541:3:8"},"nodeType":"YulFunctionCall","src":"8541:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8515:6:8"},"nodeType":"YulFunctionCall","src":"8515:47:8"},"nodeType":"YulExpressionStatement","src":"8515:47:8"},{"nodeType":"YulAssignment","src":"8571:86:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8643:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"8652:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8579:63:8"},"nodeType":"YulFunctionCall","src":"8579:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8571:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8678:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8689:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8674:3:8"},"nodeType":"YulFunctionCall","src":"8674:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8698:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"8704:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8694:3:8"},"nodeType":"YulFunctionCall","src":"8694:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8667:6:8"},"nodeType":"YulFunctionCall","src":"8667:48:8"},"nodeType":"YulExpressionStatement","src":"8667:48:8"},{"nodeType":"YulAssignment","src":"8724:86:8","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8796:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"8805:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8732:63:8"},"nodeType":"YulFunctionCall","src":"8732:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8724:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8831:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8842:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8827:3:8"},"nodeType":"YulFunctionCall","src":"8827:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8851:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"8857:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8847:3:8"},"nodeType":"YulFunctionCall","src":"8847:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8820:6:8"},"nodeType":"YulFunctionCall","src":"8820:48:8"},"nodeType":"YulExpressionStatement","src":"8820:48:8"},{"nodeType":"YulAssignment","src":"8877:86:8","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8949:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"8958:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8885:63:8"},"nodeType":"YulFunctionCall","src":"8885:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8877:4:8"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8425:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8437:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8445:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8453:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8464:4:8","type":""}],"src":"8255:715:8"},{"body":{"nodeType":"YulBlock","src":"9102:206:8","statements":[{"nodeType":"YulAssignment","src":"9112:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9124:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9135:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9120:3:8"},"nodeType":"YulFunctionCall","src":"9120:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9112:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9192:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9205:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9216:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9201:3:8"},"nodeType":"YulFunctionCall","src":"9201:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9148:43:8"},"nodeType":"YulFunctionCall","src":"9148:71:8"},"nodeType":"YulExpressionStatement","src":"9148:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9273:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9286:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9297:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9282:3:8"},"nodeType":"YulFunctionCall","src":"9282:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9229:43:8"},"nodeType":"YulFunctionCall","src":"9229:72:8"},"nodeType":"YulExpressionStatement","src":"9229:72:8"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9066:9:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9078:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9086:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9097:4:8","type":""}],"src":"8976:332:8"},{"body":{"nodeType":"YulBlock","src":"9432:195:8","statements":[{"nodeType":"YulAssignment","src":"9442:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9454:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9465:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9450:3:8"},"nodeType":"YulFunctionCall","src":"9450:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9442:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9489:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9500:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9485:3:8"},"nodeType":"YulFunctionCall","src":"9485:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9508:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"9514:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9504:3:8"},"nodeType":"YulFunctionCall","src":"9504:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9478:6:8"},"nodeType":"YulFunctionCall","src":"9478:47:8"},"nodeType":"YulExpressionStatement","src":"9478:47:8"},{"nodeType":"YulAssignment","src":"9534:86:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9606:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"9615:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9542:63:8"},"nodeType":"YulFunctionCall","src":"9542:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9534:4:8"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9404:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9416:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9427:4:8","type":""}],"src":"9314:313:8"},{"body":{"nodeType":"YulBlock","src":"9835:442:8","statements":[{"nodeType":"YulAssignment","src":"9845:27:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9857:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9868:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9853:3:8"},"nodeType":"YulFunctionCall","src":"9853:19:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9845:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9926:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9939:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9950:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9935:3:8"},"nodeType":"YulFunctionCall","src":"9935:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9882:43:8"},"nodeType":"YulFunctionCall","src":"9882:71:8"},"nodeType":"YulExpressionStatement","src":"9882:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10007:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10020:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10031:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10016:3:8"},"nodeType":"YulFunctionCall","src":"10016:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9963:43:8"},"nodeType":"YulFunctionCall","src":"9963:72:8"},"nodeType":"YulExpressionStatement","src":"9963:72:8"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10089:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10102:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10113:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10098:3:8"},"nodeType":"YulFunctionCall","src":"10098:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10045:43:8"},"nodeType":"YulFunctionCall","src":"10045:72:8"},"nodeType":"YulExpressionStatement","src":"10045:72:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10138:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10149:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10134:3:8"},"nodeType":"YulFunctionCall","src":"10134:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10158:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"10164:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10154:3:8"},"nodeType":"YulFunctionCall","src":"10154:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10127:6:8"},"nodeType":"YulFunctionCall","src":"10127:48:8"},"nodeType":"YulExpressionStatement","src":"10127:48:8"},{"nodeType":"YulAssignment","src":"10184:86:8","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10256:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"10265:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10192:63:8"},"nodeType":"YulFunctionCall","src":"10192:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10184:4:8"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9783:9:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9795:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9803:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9811:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9819:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9830:4:8","type":""}],"src":"9633:644:8"},{"body":{"nodeType":"YulBlock","src":"10457:359:8","statements":[{"nodeType":"YulAssignment","src":"10467:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10479:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10490:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10475:3:8"},"nodeType":"YulFunctionCall","src":"10475:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10467:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10547:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10560:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10571:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10556:3:8"},"nodeType":"YulFunctionCall","src":"10556:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10503:43:8"},"nodeType":"YulFunctionCall","src":"10503:71:8"},"nodeType":"YulExpressionStatement","src":"10503:71:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10595:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10606:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10591:3:8"},"nodeType":"YulFunctionCall","src":"10591:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10615:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"10621:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10611:3:8"},"nodeType":"YulFunctionCall","src":"10611:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10584:6:8"},"nodeType":"YulFunctionCall","src":"10584:48:8"},"nodeType":"YulExpressionStatement","src":"10584:48:8"},{"nodeType":"YulAssignment","src":"10641:86:8","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10713:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"10722:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10649:63:8"},"nodeType":"YulFunctionCall","src":"10649:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10641:4:8"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10781:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10794:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10805:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10790:3:8"},"nodeType":"YulFunctionCall","src":"10790:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10737:43:8"},"nodeType":"YulFunctionCall","src":"10737:72:8"},"nodeType":"YulExpressionStatement","src":"10737:72:8"}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10413:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10425:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10433:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10441:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10452:4:8","type":""}],"src":"10283:533:8"},{"body":{"nodeType":"YulBlock","src":"10905:391:8","statements":[{"body":{"nodeType":"YulBlock","src":"10951:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10953:77:8"},"nodeType":"YulFunctionCall","src":"10953:79:8"},"nodeType":"YulExpressionStatement","src":"10953:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10926:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"10935:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10922:3:8"},"nodeType":"YulFunctionCall","src":"10922:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"10947:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10918:3:8"},"nodeType":"YulFunctionCall","src":"10918:32:8"},"nodeType":"YulIf","src":"10915:119:8"},{"nodeType":"YulBlock","src":"11044:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"11059:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"11073:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11063:6:8","type":""}]},{"nodeType":"YulAssignment","src":"11088:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11123:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"11134:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11119:3:8"},"nodeType":"YulFunctionCall","src":"11119:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11143:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11098:20:8"},"nodeType":"YulFunctionCall","src":"11098:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11088:6:8"}]}]},{"nodeType":"YulBlock","src":"11171:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"11186:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"11200:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11190:6:8","type":""}]},{"nodeType":"YulAssignment","src":"11216:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11251:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"11262:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11247:3:8"},"nodeType":"YulFunctionCall","src":"11247:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11271:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11226:20:8"},"nodeType":"YulFunctionCall","src":"11226:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11216:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10867:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10878:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10890:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10898:6:8","type":""}],"src":"10822:474:8"},{"body":{"nodeType":"YulBlock","src":"11524:513:8","statements":[{"nodeType":"YulAssignment","src":"11534:27:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11546:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11557:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11542:3:8"},"nodeType":"YulFunctionCall","src":"11542:19:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11534:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11615:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11628:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11639:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11624:3:8"},"nodeType":"YulFunctionCall","src":"11624:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11571:43:8"},"nodeType":"YulFunctionCall","src":"11571:71:8"},"nodeType":"YulExpressionStatement","src":"11571:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11696:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11709:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11720:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11705:3:8"},"nodeType":"YulFunctionCall","src":"11705:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11652:43:8"},"nodeType":"YulFunctionCall","src":"11652:72:8"},"nodeType":"YulExpressionStatement","src":"11652:72:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11745:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11756:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11741:3:8"},"nodeType":"YulFunctionCall","src":"11741:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11765:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"11771:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11761:3:8"},"nodeType":"YulFunctionCall","src":"11761:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11734:6:8"},"nodeType":"YulFunctionCall","src":"11734:48:8"},"nodeType":"YulExpressionStatement","src":"11734:48:8"},{"nodeType":"YulAssignment","src":"11791:86:8","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11863:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"11872:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11799:63:8"},"nodeType":"YulFunctionCall","src":"11799:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11791:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11898:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11909:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11894:3:8"},"nodeType":"YulFunctionCall","src":"11894:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11918:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"11924:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11914:3:8"},"nodeType":"YulFunctionCall","src":"11914:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11887:6:8"},"nodeType":"YulFunctionCall","src":"11887:48:8"},"nodeType":"YulExpressionStatement","src":"11887:48:8"},{"nodeType":"YulAssignment","src":"11944:86:8","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12016:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"12025:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11952:63:8"},"nodeType":"YulFunctionCall","src":"11952:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11944:4:8"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11472:9:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11484:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11492:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11500:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11508:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11519:4:8","type":""}],"src":"11302:735:8"},{"body":{"nodeType":"YulBlock","src":"12197:1117:8","statements":[{"body":{"nodeType":"YulBlock","src":"12244:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12246:77:8"},"nodeType":"YulFunctionCall","src":"12246:79:8"},"nodeType":"YulExpressionStatement","src":"12246:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12218:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"12227:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12214:3:8"},"nodeType":"YulFunctionCall","src":"12214:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"12239:3:8","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12210:3:8"},"nodeType":"YulFunctionCall","src":"12210:33:8"},"nodeType":"YulIf","src":"12207:120:8"},{"nodeType":"YulBlock","src":"12337:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"12352:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"12366:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12356:6:8","type":""}]},{"nodeType":"YulAssignment","src":"12381:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12416:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"12427:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12412:3:8"},"nodeType":"YulFunctionCall","src":"12412:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12436:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12391:20:8"},"nodeType":"YulFunctionCall","src":"12391:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12381:6:8"}]}]},{"nodeType":"YulBlock","src":"12464:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"12479:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"12493:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12483:6:8","type":""}]},{"nodeType":"YulAssignment","src":"12509:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12544:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"12555:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12540:3:8"},"nodeType":"YulFunctionCall","src":"12540:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12564:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12519:20:8"},"nodeType":"YulFunctionCall","src":"12519:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12509:6:8"}]}]},{"nodeType":"YulBlock","src":"12592:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"12607:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"12621:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12611:6:8","type":""}]},{"nodeType":"YulAssignment","src":"12637:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12672:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"12683:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12668:3:8"},"nodeType":"YulFunctionCall","src":"12668:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12692:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12647:20:8"},"nodeType":"YulFunctionCall","src":"12647:53:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12637:6:8"}]}]},{"nodeType":"YulBlock","src":"12720:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"12735:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12766:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"12777:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12762:3:8"},"nodeType":"YulFunctionCall","src":"12762:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12749:12:8"},"nodeType":"YulFunctionCall","src":"12749:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12739:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"12828:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12830:77:8"},"nodeType":"YulFunctionCall","src":"12830:79:8"},"nodeType":"YulExpressionStatement","src":"12830:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12800:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"12808:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12797:2:8"},"nodeType":"YulFunctionCall","src":"12797:30:8"},"nodeType":"YulIf","src":"12794:117:8"},{"nodeType":"YulAssignment","src":"12925:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12970:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"12981:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12966:3:8"},"nodeType":"YulFunctionCall","src":"12966:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12990:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12935:30:8"},"nodeType":"YulFunctionCall","src":"12935:63:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12925:6:8"}]}]},{"nodeType":"YulBlock","src":"13018:289:8","statements":[{"nodeType":"YulVariableDeclaration","src":"13033:47:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13064:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"13075:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13060:3:8"},"nodeType":"YulFunctionCall","src":"13060:19:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13047:12:8"},"nodeType":"YulFunctionCall","src":"13047:33:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13037:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"13127:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"13129:77:8"},"nodeType":"YulFunctionCall","src":"13129:79:8"},"nodeType":"YulExpressionStatement","src":"13129:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13099:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"13107:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13096:2:8"},"nodeType":"YulFunctionCall","src":"13096:30:8"},"nodeType":"YulIf","src":"13093:117:8"},{"nodeType":"YulAssignment","src":"13224:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13269:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"13280:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13265:3:8"},"nodeType":"YulFunctionCall","src":"13265:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13289:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13234:30:8"},"nodeType":"YulFunctionCall","src":"13234:63:8"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"13224:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12135:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12146:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12158:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12166:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12174:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12182:6:8","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12190:6:8","type":""}],"src":"12043:1271:8"},{"body":{"nodeType":"YulBlock","src":"13457:988:8","statements":[{"body":{"nodeType":"YulBlock","src":"13504:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13506:77:8"},"nodeType":"YulFunctionCall","src":"13506:79:8"},"nodeType":"YulExpressionStatement","src":"13506:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13478:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"13487:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13474:3:8"},"nodeType":"YulFunctionCall","src":"13474:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"13499:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13470:3:8"},"nodeType":"YulFunctionCall","src":"13470:33:8"},"nodeType":"YulIf","src":"13467:120:8"},{"nodeType":"YulBlock","src":"13597:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"13612:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"13626:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13616:6:8","type":""}]},{"nodeType":"YulAssignment","src":"13641:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13676:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"13687:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13672:3:8"},"nodeType":"YulFunctionCall","src":"13672:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13696:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13651:20:8"},"nodeType":"YulFunctionCall","src":"13651:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13641:6:8"}]}]},{"nodeType":"YulBlock","src":"13724:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"13739:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13770:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"13781:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13766:3:8"},"nodeType":"YulFunctionCall","src":"13766:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13753:12:8"},"nodeType":"YulFunctionCall","src":"13753:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13743:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"13832:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"13834:77:8"},"nodeType":"YulFunctionCall","src":"13834:79:8"},"nodeType":"YulExpressionStatement","src":"13834:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13804:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"13812:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13801:2:8"},"nodeType":"YulFunctionCall","src":"13801:30:8"},"nodeType":"YulIf","src":"13798:117:8"},{"nodeType":"YulAssignment","src":"13929:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13974:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"13985:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13970:3:8"},"nodeType":"YulFunctionCall","src":"13970:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13994:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13939:30:8"},"nodeType":"YulFunctionCall","src":"13939:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13929:6:8"}]}]},{"nodeType":"YulBlock","src":"14022:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"14037:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14068:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"14079:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14064:3:8"},"nodeType":"YulFunctionCall","src":"14064:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14051:12:8"},"nodeType":"YulFunctionCall","src":"14051:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14041:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"14130:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14132:77:8"},"nodeType":"YulFunctionCall","src":"14132:79:8"},"nodeType":"YulExpressionStatement","src":"14132:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14102:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"14110:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14099:2:8"},"nodeType":"YulFunctionCall","src":"14099:30:8"},"nodeType":"YulIf","src":"14096:117:8"},{"nodeType":"YulAssignment","src":"14227:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14272:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"14283:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14268:3:8"},"nodeType":"YulFunctionCall","src":"14268:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14292:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14237:30:8"},"nodeType":"YulFunctionCall","src":"14237:63:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14227:6:8"}]}]},{"nodeType":"YulBlock","src":"14320:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"14335:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"14349:2:8","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14339:6:8","type":""}]},{"nodeType":"YulAssignment","src":"14365:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14400:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"14411:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14396:3:8"},"nodeType":"YulFunctionCall","src":"14396:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14420:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14375:20:8"},"nodeType":"YulFunctionCall","src":"14375:53:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"14365:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13403:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13414:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13426:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13434:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13442:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13450:6:8","type":""}],"src":"13320:1125:8"},{"body":{"nodeType":"YulBlock","src":"14493:48:8","statements":[{"nodeType":"YulAssignment","src":"14503:32:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14528:5:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14521:6:8"},"nodeType":"YulFunctionCall","src":"14521:13:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14514:6:8"},"nodeType":"YulFunctionCall","src":"14514:21:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"14503:7:8"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14475:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"14485:7:8","type":""}],"src":"14451:90:8"},{"body":{"nodeType":"YulBlock","src":"14606:50:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14623:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14643:5:8"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"14628:14:8"},"nodeType":"YulFunctionCall","src":"14628:21:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14616:6:8"},"nodeType":"YulFunctionCall","src":"14616:34:8"},"nodeType":"YulExpressionStatement","src":"14616:34:8"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14594:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14601:3:8","type":""}],"src":"14547:109:8"},{"body":{"nodeType":"YulBlock","src":"14754:118:8","statements":[{"nodeType":"YulAssignment","src":"14764:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14776:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"14787:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14772:3:8"},"nodeType":"YulFunctionCall","src":"14772:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14764:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14838:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14851:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"14862:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14847:3:8"},"nodeType":"YulFunctionCall","src":"14847:17:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"14800:37:8"},"nodeType":"YulFunctionCall","src":"14800:65:8"},"nodeType":"YulExpressionStatement","src":"14800:65:8"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14726:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14738:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14749:4:8","type":""}],"src":"14662:210:8"},{"body":{"nodeType":"YulBlock","src":"15044:348:8","statements":[{"nodeType":"YulAssignment","src":"15054:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15066:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"15077:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15062:3:8"},"nodeType":"YulFunctionCall","src":"15062:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15054:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15101:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"15112:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15097:3:8"},"nodeType":"YulFunctionCall","src":"15097:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15120:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"15126:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15116:3:8"},"nodeType":"YulFunctionCall","src":"15116:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15090:6:8"},"nodeType":"YulFunctionCall","src":"15090:47:8"},"nodeType":"YulExpressionStatement","src":"15090:47:8"},{"nodeType":"YulAssignment","src":"15146:86:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15218:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"15227:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15154:63:8"},"nodeType":"YulFunctionCall","src":"15154:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15146:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15253:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"15264:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15249:3:8"},"nodeType":"YulFunctionCall","src":"15249:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15273:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"15279:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15269:3:8"},"nodeType":"YulFunctionCall","src":"15269:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15242:6:8"},"nodeType":"YulFunctionCall","src":"15242:48:8"},"nodeType":"YulExpressionStatement","src":"15242:48:8"},{"nodeType":"YulAssignment","src":"15299:86:8","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15371:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"15380:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15307:63:8"},"nodeType":"YulFunctionCall","src":"15307:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15299:4:8"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15008:9:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15020:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15028:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15039:4:8","type":""}],"src":"14878:514:8"},{"body":{"nodeType":"YulBlock","src":"15472:40:8","statements":[{"nodeType":"YulAssignment","src":"15483:22:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15499:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15493:5:8"},"nodeType":"YulFunctionCall","src":"15493:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15483:6:8"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15455:5:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15465:6:8","type":""}],"src":"15398:114:8"},{"body":{"nodeType":"YulBlock","src":"15629:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15646:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"15651:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15639:6:8"},"nodeType":"YulFunctionCall","src":"15639:19:8"},"nodeType":"YulExpressionStatement","src":"15639:19:8"},{"nodeType":"YulAssignment","src":"15667:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15686:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:8"},"nodeType":"YulFunctionCall","src":"15682:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15667:11:8"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15601:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"15606:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15617:11:8","type":""}],"src":"15518:184:8"},{"body":{"nodeType":"YulBlock","src":"15780:60:8","statements":[{"nodeType":"YulAssignment","src":"15790:11:8","value":{"name":"ptr","nodeType":"YulIdentifier","src":"15798:3:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15790:4:8"}]},{"nodeType":"YulAssignment","src":"15811:22:8","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15823:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"15828:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15819:3:8"},"nodeType":"YulFunctionCall","src":"15819:14:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15811:4:8"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"15767:3:8","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"15775:4:8","type":""}],"src":"15708:132:8"},{"body":{"nodeType":"YulBlock","src":"15901:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15918:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15941:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15923:17:8"},"nodeType":"YulFunctionCall","src":"15923:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15911:6:8"},"nodeType":"YulFunctionCall","src":"15911:37:8"},"nodeType":"YulExpressionStatement","src":"15911:37:8"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15889:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15896:3:8","type":""}],"src":"15846:108:8"},{"body":{"nodeType":"YulBlock","src":"16040:99:8","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16084:6:8"},{"name":"pos","nodeType":"YulIdentifier","src":"16092:3:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16050:33:8"},"nodeType":"YulFunctionCall","src":"16050:46:8"},"nodeType":"YulExpressionStatement","src":"16050:46:8"},{"nodeType":"YulAssignment","src":"16105:28:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16123:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"16128:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16119:3:8"},"nodeType":"YulFunctionCall","src":"16119:14:8"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"16105:10:8"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"16013:6:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16021:3:8","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"16029:10:8","type":""}],"src":"15960:179:8"},{"body":{"nodeType":"YulBlock","src":"16220:38:8","statements":[{"nodeType":"YulAssignment","src":"16230:22:8","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16242:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"16247:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16238:3:8"},"nodeType":"YulFunctionCall","src":"16238:14:8"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"16230:4:8"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16207:3:8","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"16215:4:8","type":""}],"src":"16145:113:8"},{"body":{"nodeType":"YulBlock","src":"16418:608:8","statements":[{"nodeType":"YulVariableDeclaration","src":"16428:68:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16490:5:8"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16442:47:8"},"nodeType":"YulFunctionCall","src":"16442:54:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16432:6:8","type":""}]},{"nodeType":"YulAssignment","src":"16505:93:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16586:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"16591:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16512:73:8"},"nodeType":"YulFunctionCall","src":"16512:86:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16505:3:8"}]},{"nodeType":"YulVariableDeclaration","src":"16607:71:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16672:5:8"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16622:49:8"},"nodeType":"YulFunctionCall","src":"16622:56:8"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"16611:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16687:21:8","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"16701:7:8"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"16691:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"16777:224:8","statements":[{"nodeType":"YulVariableDeclaration","src":"16791:34:8","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16818:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16812:5:8"},"nodeType":"YulFunctionCall","src":"16812:13:8"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"16795:13:8","type":""}]},{"nodeType":"YulAssignment","src":"16838:70:8","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"16889:13:8"},{"name":"pos","nodeType":"YulIdentifier","src":"16904:3:8"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16845:43:8"},"nodeType":"YulFunctionCall","src":"16845:63:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16838:3:8"}]},{"nodeType":"YulAssignment","src":"16921:70:8","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16984:6:8"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16931:52:8"},"nodeType":"YulFunctionCall","src":"16931:60:8"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16921:6:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16739:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"16742:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16736:2:8"},"nodeType":"YulFunctionCall","src":"16736:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16750:18:8","statements":[{"nodeType":"YulAssignment","src":"16752:14:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16761:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"16764:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16757:3:8"},"nodeType":"YulFunctionCall","src":"16757:9:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"16752:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"16721:14:8","statements":[{"nodeType":"YulVariableDeclaration","src":"16723:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"16732:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"16727:1:8","type":""}]}]},"src":"16717:284:8"},{"nodeType":"YulAssignment","src":"17010:10:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"17017:3:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17010:3:8"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16397:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16404:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16413:3:8","type":""}],"src":"16294:732:8"},{"body":{"nodeType":"YulBlock","src":"17180:225:8","statements":[{"nodeType":"YulAssignment","src":"17190:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17202:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"17213:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17198:3:8"},"nodeType":"YulFunctionCall","src":"17198:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17190:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17237:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"17248:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17233:3:8"},"nodeType":"YulFunctionCall","src":"17233:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17256:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"17262:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17252:3:8"},"nodeType":"YulFunctionCall","src":"17252:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17226:6:8"},"nodeType":"YulFunctionCall","src":"17226:47:8"},"nodeType":"YulExpressionStatement","src":"17226:47:8"},{"nodeType":"YulAssignment","src":"17282:116:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17384:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"17393:4:8"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17290:93:8"},"nodeType":"YulFunctionCall","src":"17290:108:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17282:4:8"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17152:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17164:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17175:4:8","type":""}],"src":"17032:373:8"},{"body":{"nodeType":"YulBlock","src":"17558:1158:8","statements":[{"body":{"nodeType":"YulBlock","src":"17605:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17607:77:8"},"nodeType":"YulFunctionCall","src":"17607:79:8"},"nodeType":"YulExpressionStatement","src":"17607:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17579:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"17588:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17575:3:8"},"nodeType":"YulFunctionCall","src":"17575:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"17600:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17571:3:8"},"nodeType":"YulFunctionCall","src":"17571:33:8"},"nodeType":"YulIf","src":"17568:120:8"},{"nodeType":"YulBlock","src":"17698:287:8","statements":[{"nodeType":"YulVariableDeclaration","src":"17713:45:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17744:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"17755:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17740:3:8"},"nodeType":"YulFunctionCall","src":"17740:17:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17727:12:8"},"nodeType":"YulFunctionCall","src":"17727:31:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17717:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"17805:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17807:77:8"},"nodeType":"YulFunctionCall","src":"17807:79:8"},"nodeType":"YulExpressionStatement","src":"17807:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17777:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"17785:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17774:2:8"},"nodeType":"YulFunctionCall","src":"17774:30:8"},"nodeType":"YulIf","src":"17771:117:8"},{"nodeType":"YulAssignment","src":"17902:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17947:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"17958:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17943:3:8"},"nodeType":"YulFunctionCall","src":"17943:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17967:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17912:30:8"},"nodeType":"YulFunctionCall","src":"17912:63:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17902:6:8"}]}]},{"nodeType":"YulBlock","src":"17995:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"18010:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18041:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"18052:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18037:3:8"},"nodeType":"YulFunctionCall","src":"18037:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18024:12:8"},"nodeType":"YulFunctionCall","src":"18024:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18014:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"18103:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18105:77:8"},"nodeType":"YulFunctionCall","src":"18105:79:8"},"nodeType":"YulExpressionStatement","src":"18105:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18075:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"18083:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18072:2:8"},"nodeType":"YulFunctionCall","src":"18072:30:8"},"nodeType":"YulIf","src":"18069:117:8"},{"nodeType":"YulAssignment","src":"18200:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18245:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"18256:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18241:3:8"},"nodeType":"YulFunctionCall","src":"18241:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18265:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18210:30:8"},"nodeType":"YulFunctionCall","src":"18210:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18200:6:8"}]}]},{"nodeType":"YulBlock","src":"18293:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"18308:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18339:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"18350:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18335:3:8"},"nodeType":"YulFunctionCall","src":"18335:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18322:12:8"},"nodeType":"YulFunctionCall","src":"18322:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18312:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"18401:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18403:77:8"},"nodeType":"YulFunctionCall","src":"18403:79:8"},"nodeType":"YulExpressionStatement","src":"18403:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18373:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"18381:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18370:2:8"},"nodeType":"YulFunctionCall","src":"18370:30:8"},"nodeType":"YulIf","src":"18367:117:8"},{"nodeType":"YulAssignment","src":"18498:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18543:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"18554:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18539:3:8"},"nodeType":"YulFunctionCall","src":"18539:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18563:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18508:30:8"},"nodeType":"YulFunctionCall","src":"18508:63:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"18498:6:8"}]}]},{"nodeType":"YulBlock","src":"18591:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"18606:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"18620:2:8","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18610:6:8","type":""}]},{"nodeType":"YulAssignment","src":"18636:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18671:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"18682:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18667:3:8"},"nodeType":"YulFunctionCall","src":"18667:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18691:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18646:20:8"},"nodeType":"YulFunctionCall","src":"18646:53:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"18636:6:8"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17504:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17515:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17527:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17535:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17543:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17551:6:8","type":""}],"src":"17411:1305:8"},{"body":{"nodeType":"YulBlock","src":"18815:561:8","statements":[{"body":{"nodeType":"YulBlock","src":"18861:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18863:77:8"},"nodeType":"YulFunctionCall","src":"18863:79:8"},"nodeType":"YulExpressionStatement","src":"18863:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18836:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"18845:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18832:3:8"},"nodeType":"YulFunctionCall","src":"18832:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"18857:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18828:3:8"},"nodeType":"YulFunctionCall","src":"18828:32:8"},"nodeType":"YulIf","src":"18825:119:8"},{"nodeType":"YulBlock","src":"18954:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"18969:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"18983:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18973:6:8","type":""}]},{"nodeType":"YulAssignment","src":"18998:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19033:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"19044:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19029:3:8"},"nodeType":"YulFunctionCall","src":"19029:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19053:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"19008:20:8"},"nodeType":"YulFunctionCall","src":"19008:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18998:6:8"}]}]},{"nodeType":"YulBlock","src":"19081:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"19096:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19127:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"19138:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19123:3:8"},"nodeType":"YulFunctionCall","src":"19123:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19110:12:8"},"nodeType":"YulFunctionCall","src":"19110:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19100:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"19189:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19191:77:8"},"nodeType":"YulFunctionCall","src":"19191:79:8"},"nodeType":"YulExpressionStatement","src":"19191:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19161:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"19169:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19158:2:8"},"nodeType":"YulFunctionCall","src":"19158:30:8"},"nodeType":"YulIf","src":"19155:117:8"},{"nodeType":"YulAssignment","src":"19286:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19331:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"19342:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19327:3:8"},"nodeType":"YulFunctionCall","src":"19327:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19351:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19296:30:8"},"nodeType":"YulFunctionCall","src":"19296:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19286:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18777:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18788:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18800:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18808:6:8","type":""}],"src":"18722:654:8"},{"body":{"nodeType":"YulBlock","src":"19502:859:8","statements":[{"body":{"nodeType":"YulBlock","src":"19548:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19550:77:8"},"nodeType":"YulFunctionCall","src":"19550:79:8"},"nodeType":"YulExpressionStatement","src":"19550:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19523:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"19532:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19519:3:8"},"nodeType":"YulFunctionCall","src":"19519:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"19544:2:8","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19515:3:8"},"nodeType":"YulFunctionCall","src":"19515:32:8"},"nodeType":"YulIf","src":"19512:119:8"},{"nodeType":"YulBlock","src":"19641:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"19656:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"19670:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19660:6:8","type":""}]},{"nodeType":"YulAssignment","src":"19685:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19720:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"19731:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19716:3:8"},"nodeType":"YulFunctionCall","src":"19716:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19740:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"19695:20:8"},"nodeType":"YulFunctionCall","src":"19695:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19685:6:8"}]}]},{"nodeType":"YulBlock","src":"19768:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"19783:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19814:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"19825:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19810:3:8"},"nodeType":"YulFunctionCall","src":"19810:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19797:12:8"},"nodeType":"YulFunctionCall","src":"19797:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19787:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"19876:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19878:77:8"},"nodeType":"YulFunctionCall","src":"19878:79:8"},"nodeType":"YulExpressionStatement","src":"19878:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19848:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"19856:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19845:2:8"},"nodeType":"YulFunctionCall","src":"19845:30:8"},"nodeType":"YulIf","src":"19842:117:8"},{"nodeType":"YulAssignment","src":"19973:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20018:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"20029:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20014:3:8"},"nodeType":"YulFunctionCall","src":"20014:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20038:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19983:30:8"},"nodeType":"YulFunctionCall","src":"19983:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19973:6:8"}]}]},{"nodeType":"YulBlock","src":"20066:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"20081:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20112:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"20123:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20108:3:8"},"nodeType":"YulFunctionCall","src":"20108:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20095:12:8"},"nodeType":"YulFunctionCall","src":"20095:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20085:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"20174:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"20176:77:8"},"nodeType":"YulFunctionCall","src":"20176:79:8"},"nodeType":"YulExpressionStatement","src":"20176:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20146:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"20154:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20143:2:8"},"nodeType":"YulFunctionCall","src":"20143:30:8"},"nodeType":"YulIf","src":"20140:117:8"},{"nodeType":"YulAssignment","src":"20271:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20316:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"20327:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20312:3:8"},"nodeType":"YulFunctionCall","src":"20312:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20336:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"20281:30:8"},"nodeType":"YulFunctionCall","src":"20281:63:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"20271:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19456:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19467:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19479:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19487:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19495:6:8","type":""}],"src":"19382:979:8"},{"body":{"nodeType":"YulBlock","src":"20477:689:8","statements":[{"body":{"nodeType":"YulBlock","src":"20523:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20525:77:8"},"nodeType":"YulFunctionCall","src":"20525:79:8"},"nodeType":"YulExpressionStatement","src":"20525:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20498:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"20507:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20494:3:8"},"nodeType":"YulFunctionCall","src":"20494:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"20519:2:8","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20490:3:8"},"nodeType":"YulFunctionCall","src":"20490:32:8"},"nodeType":"YulIf","src":"20487:119:8"},{"nodeType":"YulBlock","src":"20616:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"20631:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"20645:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20635:6:8","type":""}]},{"nodeType":"YulAssignment","src":"20660:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20695:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"20706:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20691:3:8"},"nodeType":"YulFunctionCall","src":"20691:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20715:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"20670:20:8"},"nodeType":"YulFunctionCall","src":"20670:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20660:6:8"}]}]},{"nodeType":"YulBlock","src":"20743:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"20758:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"20772:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20762:6:8","type":""}]},{"nodeType":"YulAssignment","src":"20788:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20823:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"20834:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20819:3:8"},"nodeType":"YulFunctionCall","src":"20819:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20843:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"20798:20:8"},"nodeType":"YulFunctionCall","src":"20798:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"20788:6:8"}]}]},{"nodeType":"YulBlock","src":"20871:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"20886:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20917:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"20928:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20913:3:8"},"nodeType":"YulFunctionCall","src":"20913:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20900:12:8"},"nodeType":"YulFunctionCall","src":"20900:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20890:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"20979:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"20981:77:8"},"nodeType":"YulFunctionCall","src":"20981:79:8"},"nodeType":"YulExpressionStatement","src":"20981:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20951:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"20959:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20948:2:8"},"nodeType":"YulFunctionCall","src":"20948:30:8"},"nodeType":"YulIf","src":"20945:117:8"},{"nodeType":"YulAssignment","src":"21076:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21121:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"21132:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21117:3:8"},"nodeType":"YulFunctionCall","src":"21117:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21141:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"21086:30:8"},"nodeType":"YulFunctionCall","src":"21086:63:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"21076:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20431:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20442:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20454:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20462:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20470:6:8","type":""}],"src":"20367:799:8"},{"body":{"nodeType":"YulBlock","src":"21299:818:8","statements":[{"body":{"nodeType":"YulBlock","src":"21346:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"21348:77:8"},"nodeType":"YulFunctionCall","src":"21348:79:8"},"nodeType":"YulExpressionStatement","src":"21348:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21320:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"21329:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21316:3:8"},"nodeType":"YulFunctionCall","src":"21316:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"21341:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21312:3:8"},"nodeType":"YulFunctionCall","src":"21312:33:8"},"nodeType":"YulIf","src":"21309:120:8"},{"nodeType":"YulBlock","src":"21439:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"21454:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"21468:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21458:6:8","type":""}]},{"nodeType":"YulAssignment","src":"21483:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21518:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"21529:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21514:3:8"},"nodeType":"YulFunctionCall","src":"21514:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21538:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21493:20:8"},"nodeType":"YulFunctionCall","src":"21493:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21483:6:8"}]}]},{"nodeType":"YulBlock","src":"21566:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"21581:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"21595:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21585:6:8","type":""}]},{"nodeType":"YulAssignment","src":"21611:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21646:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"21657:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21642:3:8"},"nodeType":"YulFunctionCall","src":"21642:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21666:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21621:20:8"},"nodeType":"YulFunctionCall","src":"21621:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"21611:6:8"}]}]},{"nodeType":"YulBlock","src":"21694:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"21709:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"21723:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21713:6:8","type":""}]},{"nodeType":"YulAssignment","src":"21739:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21774:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"21785:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21770:3:8"},"nodeType":"YulFunctionCall","src":"21770:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21794:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21749:20:8"},"nodeType":"YulFunctionCall","src":"21749:53:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"21739:6:8"}]}]},{"nodeType":"YulBlock","src":"21822:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"21837:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21868:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"21879:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21864:3:8"},"nodeType":"YulFunctionCall","src":"21864:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21851:12:8"},"nodeType":"YulFunctionCall","src":"21851:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21841:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"21930:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21932:77:8"},"nodeType":"YulFunctionCall","src":"21932:79:8"},"nodeType":"YulExpressionStatement","src":"21932:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21902:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"21910:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21899:2:8"},"nodeType":"YulFunctionCall","src":"21899:30:8"},"nodeType":"YulIf","src":"21896:117:8"},{"nodeType":"YulAssignment","src":"22027:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22072:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"22083:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22068:3:8"},"nodeType":"YulFunctionCall","src":"22068:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22092:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"22037:30:8"},"nodeType":"YulFunctionCall","src":"22037:63:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"22027:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21245:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21256:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21268:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21276:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21284:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21292:6:8","type":""}],"src":"21172:945:8"},{"body":{"nodeType":"YulBlock","src":"22397:738:8","statements":[{"nodeType":"YulAssignment","src":"22407:27:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22419:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"22430:3:8","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22415:3:8"},"nodeType":"YulFunctionCall","src":"22415:19:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22407:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22488:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22501:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"22512:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22497:3:8"},"nodeType":"YulFunctionCall","src":"22497:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22444:43:8"},"nodeType":"YulFunctionCall","src":"22444:71:8"},"nodeType":"YulExpressionStatement","src":"22444:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22563:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22576:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"22587:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22572:3:8"},"nodeType":"YulFunctionCall","src":"22572:18:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"22525:37:8"},"nodeType":"YulFunctionCall","src":"22525:66:8"},"nodeType":"YulExpressionStatement","src":"22525:66:8"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22639:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22652:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"22663:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22648:3:8"},"nodeType":"YulFunctionCall","src":"22648:18:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"22601:37:8"},"nodeType":"YulFunctionCall","src":"22601:66:8"},"nodeType":"YulExpressionStatement","src":"22601:66:8"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22715:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22728:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"22739:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22724:3:8"},"nodeType":"YulFunctionCall","src":"22724:18:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"22677:37:8"},"nodeType":"YulFunctionCall","src":"22677:66:8"},"nodeType":"YulExpressionStatement","src":"22677:66:8"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"22791:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22804:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"22815:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22800:3:8"},"nodeType":"YulFunctionCall","src":"22800:19:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"22753:37:8"},"nodeType":"YulFunctionCall","src":"22753:67:8"},"nodeType":"YulExpressionStatement","src":"22753:67:8"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"22868:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22881:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"22892:3:8","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22877:3:8"},"nodeType":"YulFunctionCall","src":"22877:19:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"22830:37:8"},"nodeType":"YulFunctionCall","src":"22830:67:8"},"nodeType":"YulExpressionStatement","src":"22830:67:8"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"22945:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22958:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"22969:3:8","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22954:3:8"},"nodeType":"YulFunctionCall","src":"22954:19:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"22907:37:8"},"nodeType":"YulFunctionCall","src":"22907:67:8"},"nodeType":"YulExpressionStatement","src":"22907:67:8"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"23022:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23035:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"23046:3:8","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23031:3:8"},"nodeType":"YulFunctionCall","src":"23031:19:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"22984:37:8"},"nodeType":"YulFunctionCall","src":"22984:67:8"},"nodeType":"YulExpressionStatement","src":"22984:67:8"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"23099:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23112:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"23123:3:8","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23108:3:8"},"nodeType":"YulFunctionCall","src":"23108:19:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"23061:37:8"},"nodeType":"YulFunctionCall","src":"23061:67:8"},"nodeType":"YulExpressionStatement","src":"23061:67:8"}]},"name":"abi_encode_tuple_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__to_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22305:9:8","type":""},{"name":"value8","nodeType":"YulTypedName","src":"22317:6:8","type":""},{"name":"value7","nodeType":"YulTypedName","src":"22325:6:8","type":""},{"name":"value6","nodeType":"YulTypedName","src":"22333:6:8","type":""},{"name":"value5","nodeType":"YulTypedName","src":"22341:6:8","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22349:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22357:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22365:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22373:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22381:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22392:4:8","type":""}],"src":"22123:1012:8"},{"body":{"nodeType":"YulBlock","src":"23288:1158:8","statements":[{"body":{"nodeType":"YulBlock","src":"23335:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"23337:77:8"},"nodeType":"YulFunctionCall","src":"23337:79:8"},"nodeType":"YulExpressionStatement","src":"23337:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23309:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"23318:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23305:3:8"},"nodeType":"YulFunctionCall","src":"23305:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"23330:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23301:3:8"},"nodeType":"YulFunctionCall","src":"23301:33:8"},"nodeType":"YulIf","src":"23298:120:8"},{"nodeType":"YulBlock","src":"23428:287:8","statements":[{"nodeType":"YulVariableDeclaration","src":"23443:45:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23474:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"23485:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23470:3:8"},"nodeType":"YulFunctionCall","src":"23470:17:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23457:12:8"},"nodeType":"YulFunctionCall","src":"23457:31:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23447:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"23535:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"23537:77:8"},"nodeType":"YulFunctionCall","src":"23537:79:8"},"nodeType":"YulExpressionStatement","src":"23537:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23507:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"23515:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23504:2:8"},"nodeType":"YulFunctionCall","src":"23504:30:8"},"nodeType":"YulIf","src":"23501:117:8"},{"nodeType":"YulAssignment","src":"23632:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23677:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"23688:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23673:3:8"},"nodeType":"YulFunctionCall","src":"23673:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23697:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"23642:30:8"},"nodeType":"YulFunctionCall","src":"23642:63:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23632:6:8"}]}]},{"nodeType":"YulBlock","src":"23725:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"23740:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23771:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"23782:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23767:3:8"},"nodeType":"YulFunctionCall","src":"23767:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23754:12:8"},"nodeType":"YulFunctionCall","src":"23754:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23744:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"23833:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"23835:77:8"},"nodeType":"YulFunctionCall","src":"23835:79:8"},"nodeType":"YulExpressionStatement","src":"23835:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23805:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"23813:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23802:2:8"},"nodeType":"YulFunctionCall","src":"23802:30:8"},"nodeType":"YulIf","src":"23799:117:8"},{"nodeType":"YulAssignment","src":"23930:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23975:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"23986:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23971:3:8"},"nodeType":"YulFunctionCall","src":"23971:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23995:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"23940:30:8"},"nodeType":"YulFunctionCall","src":"23940:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"23930:6:8"}]}]},{"nodeType":"YulBlock","src":"24023:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"24038:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"24052:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24042:6:8","type":""}]},{"nodeType":"YulAssignment","src":"24068:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24103:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"24114:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24099:3:8"},"nodeType":"YulFunctionCall","src":"24099:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24123:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"24078:20:8"},"nodeType":"YulFunctionCall","src":"24078:53:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"24068:6:8"}]}]},{"nodeType":"YulBlock","src":"24151:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"24166:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24197:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"24208:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24193:3:8"},"nodeType":"YulFunctionCall","src":"24193:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24180:12:8"},"nodeType":"YulFunctionCall","src":"24180:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24170:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"24259:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"24261:77:8"},"nodeType":"YulFunctionCall","src":"24261:79:8"},"nodeType":"YulExpressionStatement","src":"24261:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24231:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"24239:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24228:2:8"},"nodeType":"YulFunctionCall","src":"24228:30:8"},"nodeType":"YulIf","src":"24225:117:8"},{"nodeType":"YulAssignment","src":"24356:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24401:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"24412:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24397:3:8"},"nodeType":"YulFunctionCall","src":"24397:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24421:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"24366:30:8"},"nodeType":"YulFunctionCall","src":"24366:63:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"24356:6:8"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23234:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23245:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23257:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23265:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23273:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23281:6:8","type":""}],"src":"23141:1305:8"},{"body":{"nodeType":"YulBlock","src":"24555:731:8","statements":[{"body":{"nodeType":"YulBlock","src":"24601:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24603:77:8"},"nodeType":"YulFunctionCall","src":"24603:79:8"},"nodeType":"YulExpressionStatement","src":"24603:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24576:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"24585:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24572:3:8"},"nodeType":"YulFunctionCall","src":"24572:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"24597:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24568:3:8"},"nodeType":"YulFunctionCall","src":"24568:32:8"},"nodeType":"YulIf","src":"24565:119:8"},{"nodeType":"YulBlock","src":"24694:287:8","statements":[{"nodeType":"YulVariableDeclaration","src":"24709:45:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24740:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"24751:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24736:3:8"},"nodeType":"YulFunctionCall","src":"24736:17:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24723:12:8"},"nodeType":"YulFunctionCall","src":"24723:31:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24713:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"24801:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"24803:77:8"},"nodeType":"YulFunctionCall","src":"24803:79:8"},"nodeType":"YulExpressionStatement","src":"24803:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24773:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"24781:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24770:2:8"},"nodeType":"YulFunctionCall","src":"24770:30:8"},"nodeType":"YulIf","src":"24767:117:8"},{"nodeType":"YulAssignment","src":"24898:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24943:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"24954:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24939:3:8"},"nodeType":"YulFunctionCall","src":"24939:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24963:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"24908:30:8"},"nodeType":"YulFunctionCall","src":"24908:63:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24898:6:8"}]}]},{"nodeType":"YulBlock","src":"24991:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"25006:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25037:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"25048:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25033:3:8"},"nodeType":"YulFunctionCall","src":"25033:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25020:12:8"},"nodeType":"YulFunctionCall","src":"25020:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25010:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"25099:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25101:77:8"},"nodeType":"YulFunctionCall","src":"25101:79:8"},"nodeType":"YulExpressionStatement","src":"25101:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25071:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"25079:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25068:2:8"},"nodeType":"YulFunctionCall","src":"25068:30:8"},"nodeType":"YulIf","src":"25065:117:8"},{"nodeType":"YulAssignment","src":"25196:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25241:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"25252:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25237:3:8"},"nodeType":"YulFunctionCall","src":"25237:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25261:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"25206:30:8"},"nodeType":"YulFunctionCall","src":"25206:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"25196:6:8"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24517:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24528:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24540:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24548:6:8","type":""}],"src":"24452:834:8"},{"body":{"nodeType":"YulBlock","src":"25419:818:8","statements":[{"body":{"nodeType":"YulBlock","src":"25466:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"25468:77:8"},"nodeType":"YulFunctionCall","src":"25468:79:8"},"nodeType":"YulExpressionStatement","src":"25468:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"25440:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"25449:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25436:3:8"},"nodeType":"YulFunctionCall","src":"25436:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"25461:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25432:3:8"},"nodeType":"YulFunctionCall","src":"25432:33:8"},"nodeType":"YulIf","src":"25429:120:8"},{"nodeType":"YulBlock","src":"25559:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"25574:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"25588:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25578:6:8","type":""}]},{"nodeType":"YulAssignment","src":"25603:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25638:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"25649:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25634:3:8"},"nodeType":"YulFunctionCall","src":"25634:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25658:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"25613:20:8"},"nodeType":"YulFunctionCall","src":"25613:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25603:6:8"}]}]},{"nodeType":"YulBlock","src":"25686:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"25701:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25732:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"25743:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25728:3:8"},"nodeType":"YulFunctionCall","src":"25728:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25715:12:8"},"nodeType":"YulFunctionCall","src":"25715:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25705:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"25794:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25796:77:8"},"nodeType":"YulFunctionCall","src":"25796:79:8"},"nodeType":"YulExpressionStatement","src":"25796:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25766:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"25774:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25763:2:8"},"nodeType":"YulFunctionCall","src":"25763:30:8"},"nodeType":"YulIf","src":"25760:117:8"},{"nodeType":"YulAssignment","src":"25891:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25936:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"25947:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25932:3:8"},"nodeType":"YulFunctionCall","src":"25932:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25956:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"25901:30:8"},"nodeType":"YulFunctionCall","src":"25901:63:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"25891:6:8"}]}]},{"nodeType":"YulBlock","src":"25984:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"25999:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"26013:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26003:6:8","type":""}]},{"nodeType":"YulAssignment","src":"26029:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26064:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"26075:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26060:3:8"},"nodeType":"YulFunctionCall","src":"26060:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26084:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"26039:20:8"},"nodeType":"YulFunctionCall","src":"26039:53:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"26029:6:8"}]}]},{"nodeType":"YulBlock","src":"26112:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"26127:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"26141:2:8","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26131:6:8","type":""}]},{"nodeType":"YulAssignment","src":"26157:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26192:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"26203:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26188:3:8"},"nodeType":"YulFunctionCall","src":"26188:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26212:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"26167:20:8"},"nodeType":"YulFunctionCall","src":"26167:53:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"26157:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25365:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"25376:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"25388:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25396:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25404:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25412:6:8","type":""}],"src":"25292:945:8"},{"body":{"nodeType":"YulBlock","src":"26335:229:8","statements":[{"body":{"nodeType":"YulBlock","src":"26440:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"26442:16:8"},"nodeType":"YulFunctionCall","src":"26442:18:8"},"nodeType":"YulExpressionStatement","src":"26442:18:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"26412:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"26420:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26409:2:8"},"nodeType":"YulFunctionCall","src":"26409:30:8"},"nodeType":"YulIf","src":"26406:56:8"},{"nodeType":"YulAssignment","src":"26472:25:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"26484:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"26492:4:8","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"26480:3:8"},"nodeType":"YulFunctionCall","src":"26480:17:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"26472:4:8"}]},{"nodeType":"YulAssignment","src":"26534:23:8","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"26546:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"26552:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26542:3:8"},"nodeType":"YulFunctionCall","src":"26542:15:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"26534:4:8"}]}]},"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"26319:6:8","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"26330:4:8","type":""}],"src":"26243:321:8"},{"body":{"nodeType":"YulBlock","src":"26659:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26676:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26679:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26669:6:8"},"nodeType":"YulFunctionCall","src":"26669:12:8"},"nodeType":"YulExpressionStatement","src":"26669:12:8"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"26570:117:8"},{"body":{"nodeType":"YulBlock","src":"26821:833:8","statements":[{"nodeType":"YulAssignment","src":"26831:100:8","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"26923:6:8"}],"functionName":{"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"26856:66:8"},"nodeType":"YulFunctionCall","src":"26856:74:8"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"26840:15:8"},"nodeType":"YulFunctionCall","src":"26840:91:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"26831:5:8"}]},{"nodeType":"YulVariableDeclaration","src":"26940:16:8","value":{"name":"array","nodeType":"YulIdentifier","src":"26951:5:8"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"26944:3:8","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"26973:5:8"},{"name":"length","nodeType":"YulIdentifier","src":"26980:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26966:6:8"},"nodeType":"YulFunctionCall","src":"26966:21:8"},"nodeType":"YulExpressionStatement","src":"26966:21:8"},{"nodeType":"YulAssignment","src":"26996:23:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"27007:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"27014:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27003:3:8"},"nodeType":"YulFunctionCall","src":"27003:16:8"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"26996:3:8"}]},{"nodeType":"YulVariableDeclaration","src":"27029:44:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27047:6:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27059:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"27067:4:8","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27055:3:8"},"nodeType":"YulFunctionCall","src":"27055:17:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27043:3:8"},"nodeType":"YulFunctionCall","src":"27043:30:8"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"27033:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"27101:103:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"27115:77:8"},"nodeType":"YulFunctionCall","src":"27115:79:8"},"nodeType":"YulExpressionStatement","src":"27115:79:8"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"27088:6:8"},{"name":"end","nodeType":"YulIdentifier","src":"27096:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27085:2:8"},"nodeType":"YulFunctionCall","src":"27085:15:8"},"nodeType":"YulIf","src":"27082:122:8"},{"body":{"nodeType":"YulBlock","src":"27289:359:8","statements":[{"nodeType":"YulVariableDeclaration","src":"27304:36:8","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"27336:3:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"27323:12:8"},"nodeType":"YulFunctionCall","src":"27323:17:8"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"27308:11:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"27392:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"27394:77:8"},"nodeType":"YulFunctionCall","src":"27394:79:8"},"nodeType":"YulExpressionStatement","src":"27394:79:8"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"27359:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"27372:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27356:2:8"},"nodeType":"YulFunctionCall","src":"27356:35:8"},"nodeType":"YulIf","src":"27353:122:8"},{"nodeType":"YulVariableDeclaration","src":"27488:42:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27510:6:8"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"27518:11:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27506:3:8"},"nodeType":"YulFunctionCall","src":"27506:24:8"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"27492:10:8","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"27551:3:8"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"27587:10:8"},{"name":"end","nodeType":"YulIdentifier","src":"27599:3:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"27556:30:8"},"nodeType":"YulFunctionCall","src":"27556:47:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27544:6:8"},"nodeType":"YulFunctionCall","src":"27544:60:8"},"nodeType":"YulExpressionStatement","src":"27544:60:8"},{"nodeType":"YulAssignment","src":"27617:21:8","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"27628:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"27633:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27624:3:8"},"nodeType":"YulFunctionCall","src":"27624:14:8"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"27617:3:8"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"27242:3:8"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"27247:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27239:2:8"},"nodeType":"YulFunctionCall","src":"27239:15:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"27255:25:8","statements":[{"nodeType":"YulAssignment","src":"27257:21:8","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"27268:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"27273:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27264:3:8"},"nodeType":"YulFunctionCall","src":"27264:14:8"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"27257:3:8"}]}]},"pre":{"nodeType":"YulBlock","src":"27217:21:8","statements":[{"nodeType":"YulVariableDeclaration","src":"27219:17:8","value":{"name":"offset","nodeType":"YulIdentifier","src":"27230:6:8"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"27223:3:8","type":""}]}]},"src":"27213:435:8"}]},"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"26791:6:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"26799:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"26807:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"26815:5:8","type":""}],"src":"26709:945:8"},{"body":{"nodeType":"YulBlock","src":"27763:303:8","statements":[{"body":{"nodeType":"YulBlock","src":"27812:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"27814:77:8"},"nodeType":"YulFunctionCall","src":"27814:79:8"},"nodeType":"YulExpressionStatement","src":"27814:79:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27791:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"27799:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27787:3:8"},"nodeType":"YulFunctionCall","src":"27787:17:8"},{"name":"end","nodeType":"YulIdentifier","src":"27806:3:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"27783:3:8"},"nodeType":"YulFunctionCall","src":"27783:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27776:6:8"},"nodeType":"YulFunctionCall","src":"27776:35:8"},"nodeType":"YulIf","src":"27773:122:8"},{"nodeType":"YulVariableDeclaration","src":"27904:34:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27931:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"27918:12:8"},"nodeType":"YulFunctionCall","src":"27918:20:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"27908:6:8","type":""}]},{"nodeType":"YulAssignment","src":"27947:113:8","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28033:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"28041:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28029:3:8"},"nodeType":"YulFunctionCall","src":"28029:17:8"},{"name":"length","nodeType":"YulIdentifier","src":"28048:6:8"},{"name":"end","nodeType":"YulIdentifier","src":"28056:3:8"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"27956:72:8"},"nodeType":"YulFunctionCall","src":"27956:104:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"27947:5:8"}]}]},"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"27741:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"27749:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"27757:5:8","type":""}],"src":"27676:390:8"},{"body":{"nodeType":"YulBlock","src":"28261:1312:8","statements":[{"body":{"nodeType":"YulBlock","src":"28308:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"28310:77:8"},"nodeType":"YulFunctionCall","src":"28310:79:8"},"nodeType":"YulExpressionStatement","src":"28310:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28282:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"28291:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28278:3:8"},"nodeType":"YulFunctionCall","src":"28278:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"28303:3:8","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28274:3:8"},"nodeType":"YulFunctionCall","src":"28274:33:8"},"nodeType":"YulIf","src":"28271:120:8"},{"nodeType":"YulBlock","src":"28401:287:8","statements":[{"nodeType":"YulVariableDeclaration","src":"28416:45:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28447:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"28458:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28443:3:8"},"nodeType":"YulFunctionCall","src":"28443:17:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"28430:12:8"},"nodeType":"YulFunctionCall","src":"28430:31:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28420:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"28508:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"28510:77:8"},"nodeType":"YulFunctionCall","src":"28510:79:8"},"nodeType":"YulExpressionStatement","src":"28510:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28480:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"28488:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28477:2:8"},"nodeType":"YulFunctionCall","src":"28477:30:8"},"nodeType":"YulIf","src":"28474:117:8"},{"nodeType":"YulAssignment","src":"28605:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28650:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"28661:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28646:3:8"},"nodeType":"YulFunctionCall","src":"28646:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28670:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"28615:30:8"},"nodeType":"YulFunctionCall","src":"28615:63:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28605:6:8"}]}]},{"nodeType":"YulBlock","src":"28698:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"28713:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"28727:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28717:6:8","type":""}]},{"nodeType":"YulAssignment","src":"28743:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28778:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"28789:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28774:3:8"},"nodeType":"YulFunctionCall","src":"28774:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28798:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"28753:20:8"},"nodeType":"YulFunctionCall","src":"28753:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"28743:6:8"}]}]},{"nodeType":"YulBlock","src":"28826:313:8","statements":[{"nodeType":"YulVariableDeclaration","src":"28841:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28872:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"28883:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28868:3:8"},"nodeType":"YulFunctionCall","src":"28868:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"28855:12:8"},"nodeType":"YulFunctionCall","src":"28855:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28845:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"28934:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"28936:77:8"},"nodeType":"YulFunctionCall","src":"28936:79:8"},"nodeType":"YulExpressionStatement","src":"28936:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28906:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"28914:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28903:2:8"},"nodeType":"YulFunctionCall","src":"28903:30:8"},"nodeType":"YulIf","src":"28900:117:8"},{"nodeType":"YulAssignment","src":"29031:98:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29101:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"29112:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29097:3:8"},"nodeType":"YulFunctionCall","src":"29097:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"29121:7:8"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"29041:55:8"},"nodeType":"YulFunctionCall","src":"29041:88:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"29031:6:8"}]}]},{"nodeType":"YulBlock","src":"29149:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"29164:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"29178:2:8","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29168:6:8","type":""}]},{"nodeType":"YulAssignment","src":"29194:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29229:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"29240:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29225:3:8"},"nodeType":"YulFunctionCall","src":"29225:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"29249:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"29204:20:8"},"nodeType":"YulFunctionCall","src":"29204:53:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"29194:6:8"}]}]},{"nodeType":"YulBlock","src":"29277:289:8","statements":[{"nodeType":"YulVariableDeclaration","src":"29292:47:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29323:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"29334:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29319:3:8"},"nodeType":"YulFunctionCall","src":"29319:19:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"29306:12:8"},"nodeType":"YulFunctionCall","src":"29306:33:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29296:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"29386:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"29388:77:8"},"nodeType":"YulFunctionCall","src":"29388:79:8"},"nodeType":"YulExpressionStatement","src":"29388:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"29358:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"29366:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29355:2:8"},"nodeType":"YulFunctionCall","src":"29355:30:8"},"nodeType":"YulIf","src":"29352:117:8"},{"nodeType":"YulAssignment","src":"29483:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29528:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"29539:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29524:3:8"},"nodeType":"YulFunctionCall","src":"29524:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"29548:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"29493:30:8"},"nodeType":"YulFunctionCall","src":"29493:63:8"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"29483:6:8"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptrt_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28199:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"28210:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"28222:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28230:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28238:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"28246:6:8","type":""},{"name":"value4","nodeType":"YulTypedName","src":"28254:6:8","type":""}],"src":"28072:1501:8"},{"body":{"nodeType":"YulBlock","src":"29619:76:8","statements":[{"body":{"nodeType":"YulBlock","src":"29673:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29682:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29685:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29675:6:8"},"nodeType":"YulFunctionCall","src":"29675:12:8"},"nodeType":"YulExpressionStatement","src":"29675:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29642:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29664:5:8"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"29649:14:8"},"nodeType":"YulFunctionCall","src":"29649:21:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"29639:2:8"},"nodeType":"YulFunctionCall","src":"29639:32:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29632:6:8"},"nodeType":"YulFunctionCall","src":"29632:40:8"},"nodeType":"YulIf","src":"29629:60:8"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29612:5:8","type":""}],"src":"29579:116:8"},{"body":{"nodeType":"YulBlock","src":"29750:84:8","statements":[{"nodeType":"YulAssignment","src":"29760:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"29782:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"29769:12:8"},"nodeType":"YulFunctionCall","src":"29769:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"29760:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29822:5:8"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"29798:23:8"},"nodeType":"YulFunctionCall","src":"29798:30:8"},"nodeType":"YulExpressionStatement","src":"29798:30:8"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"29728:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"29736:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"29744:5:8","type":""}],"src":"29701:133:8"},{"body":{"nodeType":"YulBlock","src":"29981:944:8","statements":[{"body":{"nodeType":"YulBlock","src":"30028:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"30030:77:8"},"nodeType":"YulFunctionCall","src":"30030:79:8"},"nodeType":"YulExpressionStatement","src":"30030:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"30002:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"30011:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29998:3:8"},"nodeType":"YulFunctionCall","src":"29998:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"30023:3:8","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"29994:3:8"},"nodeType":"YulFunctionCall","src":"29994:33:8"},"nodeType":"YulIf","src":"29991:120:8"},{"nodeType":"YulBlock","src":"30121:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"30136:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"30150:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"30140:6:8","type":""}]},{"nodeType":"YulAssignment","src":"30165:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30200:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"30211:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30196:3:8"},"nodeType":"YulFunctionCall","src":"30196:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"30220:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"30175:20:8"},"nodeType":"YulFunctionCall","src":"30175:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"30165:6:8"}]}]},{"nodeType":"YulBlock","src":"30248:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"30263:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"30277:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"30267:6:8","type":""}]},{"nodeType":"YulAssignment","src":"30293:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30328:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"30339:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30324:3:8"},"nodeType":"YulFunctionCall","src":"30324:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"30348:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"30303:20:8"},"nodeType":"YulFunctionCall","src":"30303:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"30293:6:8"}]}]},{"nodeType":"YulBlock","src":"30376:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"30391:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"30405:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"30395:6:8","type":""}]},{"nodeType":"YulAssignment","src":"30421:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30456:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"30467:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30452:3:8"},"nodeType":"YulFunctionCall","src":"30452:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"30476:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"30431:20:8"},"nodeType":"YulFunctionCall","src":"30431:53:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"30421:6:8"}]}]},{"nodeType":"YulBlock","src":"30504:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"30519:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30550:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"30561:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30546:3:8"},"nodeType":"YulFunctionCall","src":"30546:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"30533:12:8"},"nodeType":"YulFunctionCall","src":"30533:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"30523:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"30612:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"30614:77:8"},"nodeType":"YulFunctionCall","src":"30614:79:8"},"nodeType":"YulExpressionStatement","src":"30614:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"30584:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"30592:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30581:2:8"},"nodeType":"YulFunctionCall","src":"30581:30:8"},"nodeType":"YulIf","src":"30578:117:8"},{"nodeType":"YulAssignment","src":"30709:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30754:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"30765:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30750:3:8"},"nodeType":"YulFunctionCall","src":"30750:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"30774:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"30719:30:8"},"nodeType":"YulFunctionCall","src":"30719:63:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"30709:6:8"}]}]},{"nodeType":"YulBlock","src":"30802:116:8","statements":[{"nodeType":"YulVariableDeclaration","src":"30817:17:8","value":{"kind":"number","nodeType":"YulLiteral","src":"30831:3:8","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"30821:6:8","type":""}]},{"nodeType":"YulAssignment","src":"30848:60:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30880:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"30891:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30876:3:8"},"nodeType":"YulFunctionCall","src":"30876:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"30900:7:8"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"30858:17:8"},"nodeType":"YulFunctionCall","src":"30858:50:8"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"30848:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29919:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"29930:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"29942:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29950:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"29958:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"29966:6:8","type":""},{"name":"value4","nodeType":"YulTypedName","src":"29974:6:8","type":""}],"src":"29840:1085:8"},{"body":{"nodeType":"YulBlock","src":"31105:359:8","statements":[{"nodeType":"YulAssignment","src":"31115:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31127:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"31138:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31123:3:8"},"nodeType":"YulFunctionCall","src":"31123:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31115:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31195:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31208:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"31219:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31204:3:8"},"nodeType":"YulFunctionCall","src":"31204:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31151:43:8"},"nodeType":"YulFunctionCall","src":"31151:71:8"},"nodeType":"YulExpressionStatement","src":"31151:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31276:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31289:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"31300:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31285:3:8"},"nodeType":"YulFunctionCall","src":"31285:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31232:43:8"},"nodeType":"YulFunctionCall","src":"31232:72:8"},"nodeType":"YulExpressionStatement","src":"31232:72:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31325:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"31336:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31321:3:8"},"nodeType":"YulFunctionCall","src":"31321:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31345:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"31351:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31341:3:8"},"nodeType":"YulFunctionCall","src":"31341:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31314:6:8"},"nodeType":"YulFunctionCall","src":"31314:48:8"},"nodeType":"YulExpressionStatement","src":"31314:48:8"},{"nodeType":"YulAssignment","src":"31371:86:8","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"31443:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"31452:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31379:63:8"},"nodeType":"YulFunctionCall","src":"31379:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31371:4:8"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31061:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31073:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31081:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31089:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31100:4:8","type":""}],"src":"30931:533:8"},{"body":{"nodeType":"YulBlock","src":"31498:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31515:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31518:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31508:6:8"},"nodeType":"YulFunctionCall","src":"31508:88:8"},"nodeType":"YulExpressionStatement","src":"31508:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31612:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"31615:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31605:6:8"},"nodeType":"YulFunctionCall","src":"31605:15:8"},"nodeType":"YulExpressionStatement","src":"31605:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31636:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31639:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31629:6:8"},"nodeType":"YulFunctionCall","src":"31629:15:8"},"nodeType":"YulExpressionStatement","src":"31629:15:8"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"31470:180:8"},{"body":{"nodeType":"YulBlock","src":"31707:269:8","statements":[{"nodeType":"YulAssignment","src":"31717:22:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"31731:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"31737:1:8","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"31727:3:8"},"nodeType":"YulFunctionCall","src":"31727:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"31717:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"31748:38:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"31778:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"31784:1:8","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31774:3:8"},"nodeType":"YulFunctionCall","src":"31774:12:8"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"31752:18:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"31825:51:8","statements":[{"nodeType":"YulAssignment","src":"31839:27:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"31853:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"31861:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31849:3:8"},"nodeType":"YulFunctionCall","src":"31849:17:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"31839:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"31805:18:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31798:6:8"},"nodeType":"YulFunctionCall","src":"31798:26:8"},"nodeType":"YulIf","src":"31795:81:8"},{"body":{"nodeType":"YulBlock","src":"31928:42:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"31942:16:8"},"nodeType":"YulFunctionCall","src":"31942:18:8"},"nodeType":"YulExpressionStatement","src":"31942:18:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"31892:18:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"31915:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"31923:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31912:2:8"},"nodeType":"YulFunctionCall","src":"31912:14:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"31889:2:8"},"nodeType":"YulFunctionCall","src":"31889:38:8"},"nodeType":"YulIf","src":"31886:84:8"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"31691:4:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"31700:6:8","type":""}],"src":"31656:320:8"},{"body":{"nodeType":"YulBlock","src":"32095:34:8","statements":[{"nodeType":"YulAssignment","src":"32105:18:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"32120:3:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"32105:11:8"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32067:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"32072:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"32083:11:8","type":""}],"src":"31982:147:8"},{"body":{"nodeType":"YulBlock","src":"32192:87:8","statements":[{"nodeType":"YulAssignment","src":"32202:11:8","value":{"name":"ptr","nodeType":"YulIdentifier","src":"32210:3:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"32202:4:8"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32230:1:8","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"32233:3:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32223:6:8"},"nodeType":"YulFunctionCall","src":"32223:14:8"},"nodeType":"YulExpressionStatement","src":"32223:14:8"},{"nodeType":"YulAssignment","src":"32246:26:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32264:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32267:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"32254:9:8"},"nodeType":"YulFunctionCall","src":"32254:18:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"32246:4:8"}]}]},"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"32179:3:8","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"32187:4:8","type":""}],"src":"32135:144:8"},{"body":{"nodeType":"YulBlock","src":"32416:769:8","statements":[{"nodeType":"YulVariableDeclaration","src":"32426:29:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32449:5:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"32443:5:8"},"nodeType":"YulFunctionCall","src":"32443:12:8"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"32430:9:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"32464:50:8","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"32504:9:8"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"32478:25:8"},"nodeType":"YulFunctionCall","src":"32478:36:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"32468:6:8","type":""}]},{"nodeType":"YulAssignment","src":"32523:95:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32606:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"32611:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"32530:75:8"},"nodeType":"YulFunctionCall","src":"32530:88:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32523:3:8"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"32667:159:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32720:3:8"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"32729:9:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32744:4:8","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"32740:3:8"},"nodeType":"YulFunctionCall","src":"32740:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32725:3:8"},"nodeType":"YulFunctionCall","src":"32725:25:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32713:6:8"},"nodeType":"YulFunctionCall","src":"32713:38:8"},"nodeType":"YulExpressionStatement","src":"32713:38:8"},{"nodeType":"YulAssignment","src":"32764:52:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32775:3:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"32784:6:8"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"32806:6:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"32799:6:8"},"nodeType":"YulFunctionCall","src":"32799:14:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"32792:6:8"},"nodeType":"YulFunctionCall","src":"32792:22:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"32780:3:8"},"nodeType":"YulFunctionCall","src":"32780:35:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32771:3:8"},"nodeType":"YulFunctionCall","src":"32771:45:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32764:3:8"}]}]},"nodeType":"YulCase","src":"32660:166:8","value":{"kind":"number","nodeType":"YulLiteral","src":"32665:1:8","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"32842:337:8","statements":[{"nodeType":"YulVariableDeclaration","src":"32887:56:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32937:5:8"}],"functionName":{"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulIdentifier","src":"32902:34:8"},"nodeType":"YulFunctionCall","src":"32902:41:8"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"32891:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"32956:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"32965:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"32960:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"33023:110:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33052:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"33057:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33048:3:8"},"nodeType":"YulFunctionCall","src":"33048:11:8"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"33067:7:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"33061:5:8"},"nodeType":"YulFunctionCall","src":"33061:14:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33041:6:8"},"nodeType":"YulFunctionCall","src":"33041:35:8"},"nodeType":"YulExpressionStatement","src":"33041:35:8"},{"nodeType":"YulAssignment","src":"33093:26:8","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"33108:7:8"},{"kind":"number","nodeType":"YulLiteral","src":"33117:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33104:3:8"},"nodeType":"YulFunctionCall","src":"33104:15:8"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"33093:7:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"32990:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"32993:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"32987:2:8"},"nodeType":"YulFunctionCall","src":"32987:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"33001:21:8","statements":[{"nodeType":"YulAssignment","src":"33003:17:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"33012:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"33015:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33008:3:8"},"nodeType":"YulFunctionCall","src":"33008:12:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"33003:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"32983:3:8","statements":[]},"src":"32979:154:8"},{"nodeType":"YulAssignment","src":"33146:23:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33157:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"33162:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33153:3:8"},"nodeType":"YulFunctionCall","src":"33153:16:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"33146:3:8"}]}]},"nodeType":"YulCase","src":"32835:344:8","value":{"kind":"number","nodeType":"YulLiteral","src":"32840:1:8","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"32638:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"32649:1:8","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32634:3:8"},"nodeType":"YulFunctionCall","src":"32634:17:8"},"nodeType":"YulSwitch","src":"32627:552:8"}]},"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32397:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"32404:3:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"32412:3:8","type":""}],"src":"32307:878:8"},{"body":{"nodeType":"YulBlock","src":"33326:138:8","statements":[{"nodeType":"YulAssignment","src":"33337:101:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33425:6:8"},{"name":"pos","nodeType":"YulIdentifier","src":"33434:3:8"}],"functionName":{"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"33344:80:8"},"nodeType":"YulFunctionCall","src":"33344:94:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33337:3:8"}]},{"nodeType":"YulAssignment","src":"33448:10:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"33455:3:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33448:3:8"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33305:3:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33311:6:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33322:3:8","type":""}],"src":"33191:273:8"},{"body":{"nodeType":"YulBlock","src":"33498:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33515:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33518:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33508:6:8"},"nodeType":"YulFunctionCall","src":"33508:88:8"},"nodeType":"YulExpressionStatement","src":"33508:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33612:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"33615:4:8","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33605:6:8"},"nodeType":"YulFunctionCall","src":"33605:15:8"},"nodeType":"YulExpressionStatement","src":"33605:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33636:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33639:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33629:6:8"},"nodeType":"YulFunctionCall","src":"33629:15:8"},"nodeType":"YulExpressionStatement","src":"33629:15:8"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"33470:180:8"},{"body":{"nodeType":"YulBlock","src":"33684:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33701:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33704:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33694:6:8"},"nodeType":"YulFunctionCall","src":"33694:88:8"},"nodeType":"YulExpressionStatement","src":"33694:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33798:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"33801:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33791:6:8"},"nodeType":"YulFunctionCall","src":"33791:15:8"},"nodeType":"YulExpressionStatement","src":"33791:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33822:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33825:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33815:6:8"},"nodeType":"YulFunctionCall","src":"33815:15:8"},"nodeType":"YulExpressionStatement","src":"33815:15:8"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"33656:180:8"},{"body":{"nodeType":"YulBlock","src":"33885:190:8","statements":[{"nodeType":"YulAssignment","src":"33895:33:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33922:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33904:17:8"},"nodeType":"YulFunctionCall","src":"33904:24:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"33895:5:8"}]},{"body":{"nodeType":"YulBlock","src":"34018:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"34020:16:8"},"nodeType":"YulFunctionCall","src":"34020:18:8"},"nodeType":"YulExpressionStatement","src":"34020:18:8"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33943:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"33950:66:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"33940:2:8"},"nodeType":"YulFunctionCall","src":"33940:77:8"},"nodeType":"YulIf","src":"33937:103:8"},{"nodeType":"YulAssignment","src":"34049:20:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34060:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"34067:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34056:3:8"},"nodeType":"YulFunctionCall","src":"34056:13:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"34049:3:8"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33871:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"33881:3:8","type":""}],"src":"33842:233:8"},{"body":{"nodeType":"YulBlock","src":"34125:147:8","statements":[{"nodeType":"YulAssignment","src":"34135:25:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34158:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34140:17:8"},"nodeType":"YulFunctionCall","src":"34140:20:8"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"34135:1:8"}]},{"nodeType":"YulAssignment","src":"34169:25:8","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34192:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34174:17:8"},"nodeType":"YulFunctionCall","src":"34174:20:8"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"34169:1:8"}]},{"nodeType":"YulAssignment","src":"34203:16:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34214:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"34217:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34210:3:8"},"nodeType":"YulFunctionCall","src":"34210:9:8"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"34203:3:8"}]},{"body":{"nodeType":"YulBlock","src":"34243:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"34245:16:8"},"nodeType":"YulFunctionCall","src":"34245:18:8"},"nodeType":"YulExpressionStatement","src":"34245:18:8"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34235:1:8"},{"name":"sum","nodeType":"YulIdentifier","src":"34238:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34232:2:8"},"nodeType":"YulFunctionCall","src":"34232:10:8"},"nodeType":"YulIf","src":"34229:36:8"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"34112:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"34115:1:8","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"34121:3:8","type":""}],"src":"34081:191:8"},{"body":{"nodeType":"YulBlock","src":"34332:87:8","statements":[{"nodeType":"YulAssignment","src":"34342:11:8","value":{"name":"ptr","nodeType":"YulIdentifier","src":"34350:3:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"34342:4:8"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34370:1:8","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"34373:3:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34363:6:8"},"nodeType":"YulFunctionCall","src":"34363:14:8"},"nodeType":"YulExpressionStatement","src":"34363:14:8"},{"nodeType":"YulAssignment","src":"34386:26:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34404:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"34407:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"34394:9:8"},"nodeType":"YulFunctionCall","src":"34394:18:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"34386:4:8"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"34319:3:8","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"34327:4:8","type":""}],"src":"34278:141:8"},{"body":{"nodeType":"YulBlock","src":"34469:49:8","statements":[{"nodeType":"YulAssignment","src":"34479:33:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34497:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"34504:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34493:3:8"},"nodeType":"YulFunctionCall","src":"34493:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"34509:2:8","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"34489:3:8"},"nodeType":"YulFunctionCall","src":"34489:23:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"34479:6:8"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34452:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"34462:6:8","type":""}],"src":"34425:93:8"},{"body":{"nodeType":"YulBlock","src":"34577:54:8","statements":[{"nodeType":"YulAssignment","src":"34587:37:8","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"34612:4:8"},{"name":"value","nodeType":"YulIdentifier","src":"34618:5:8"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"34608:3:8"},"nodeType":"YulFunctionCall","src":"34608:16:8"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"34587:8:8"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"34552:4:8","type":""},{"name":"value","nodeType":"YulTypedName","src":"34558:5:8","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"34568:8:8","type":""}],"src":"34524:107:8"},{"body":{"nodeType":"YulBlock","src":"34713:317:8","statements":[{"nodeType":"YulVariableDeclaration","src":"34723:35:8","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"34744:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"34756:1:8","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"34740:3:8"},"nodeType":"YulFunctionCall","src":"34740:18:8"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"34727:9:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"34767:109:8","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"34798:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"34809:66:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"34779:18:8"},"nodeType":"YulFunctionCall","src":"34779:97:8"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"34771:4:8","type":""}]},{"nodeType":"YulAssignment","src":"34885:51:8","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"34916:9:8"},{"name":"toInsert","nodeType":"YulIdentifier","src":"34927:8:8"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"34897:18:8"},"nodeType":"YulFunctionCall","src":"34897:39:8"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"34885:8:8"}]},{"nodeType":"YulAssignment","src":"34945:30:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34958:5:8"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"34969:4:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34965:3:8"},"nodeType":"YulFunctionCall","src":"34965:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34954:3:8"},"nodeType":"YulFunctionCall","src":"34954:21:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"34945:5:8"}]},{"nodeType":"YulAssignment","src":"34984:40:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34997:5:8"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"35008:8:8"},{"name":"mask","nodeType":"YulIdentifier","src":"35018:4:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35004:3:8"},"nodeType":"YulFunctionCall","src":"35004:19:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"34994:2:8"},"nodeType":"YulFunctionCall","src":"34994:30:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"34984:6:8"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34674:5:8","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"34681:10:8","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"34693:8:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"34706:6:8","type":""}],"src":"34637:393:8"},{"body":{"nodeType":"YulBlock","src":"35068:28:8","statements":[{"nodeType":"YulAssignment","src":"35078:12:8","value":{"name":"value","nodeType":"YulIdentifier","src":"35085:5:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"35078:3:8"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35054:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"35064:3:8","type":""}],"src":"35036:60:8"},{"body":{"nodeType":"YulBlock","src":"35162:82:8","statements":[{"nodeType":"YulAssignment","src":"35172:66:8","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35230:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35212:17:8"},"nodeType":"YulFunctionCall","src":"35212:24:8"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"35203:8:8"},"nodeType":"YulFunctionCall","src":"35203:34:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35185:17:8"},"nodeType":"YulFunctionCall","src":"35185:53:8"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"35172:9:8"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35142:5:8","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"35152:9:8","type":""}],"src":"35102:142:8"},{"body":{"nodeType":"YulBlock","src":"35297:28:8","statements":[{"nodeType":"YulAssignment","src":"35307:12:8","value":{"name":"value","nodeType":"YulIdentifier","src":"35314:5:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"35307:3:8"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35283:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"35293:3:8","type":""}],"src":"35250:75:8"},{"body":{"nodeType":"YulBlock","src":"35407:193:8","statements":[{"nodeType":"YulVariableDeclaration","src":"35417:63:8","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"35472:7:8"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"35441:30:8"},"nodeType":"YulFunctionCall","src":"35441:39:8"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"35421:16:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35496:4:8"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35536:4:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"35530:5:8"},"nodeType":"YulFunctionCall","src":"35530:11:8"},{"name":"offset","nodeType":"YulIdentifier","src":"35543:6:8"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"35575:16:8"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"35551:23:8"},"nodeType":"YulFunctionCall","src":"35551:41:8"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"35502:27:8"},"nodeType":"YulFunctionCall","src":"35502:91:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"35489:6:8"},"nodeType":"YulFunctionCall","src":"35489:105:8"},"nodeType":"YulExpressionStatement","src":"35489:105:8"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"35384:4:8","type":""},{"name":"offset","nodeType":"YulTypedName","src":"35390:6:8","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"35398:7:8","type":""}],"src":"35331:269:8"},{"body":{"nodeType":"YulBlock","src":"35655:24:8","statements":[{"nodeType":"YulAssignment","src":"35665:8:8","value":{"kind":"number","nodeType":"YulLiteral","src":"35672:1:8","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"35665:3:8"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"35651:3:8","type":""}],"src":"35606:73:8"},{"body":{"nodeType":"YulBlock","src":"35738:136:8","statements":[{"nodeType":"YulVariableDeclaration","src":"35748:46:8","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"35762:30:8"},"nodeType":"YulFunctionCall","src":"35762:32:8"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"35752:6:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35847:4:8"},{"name":"offset","nodeType":"YulIdentifier","src":"35853:6:8"},{"name":"zero_0","nodeType":"YulIdentifier","src":"35861:6:8"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"35803:43:8"},"nodeType":"YulFunctionCall","src":"35803:65:8"},"nodeType":"YulExpressionStatement","src":"35803:65:8"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"35724:4:8","type":""},{"name":"offset","nodeType":"YulTypedName","src":"35730:6:8","type":""}],"src":"35685:189:8"},{"body":{"nodeType":"YulBlock","src":"35930:136:8","statements":[{"body":{"nodeType":"YulBlock","src":"35997:63:8","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"36041:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"36048:1:8","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"36011:29:8"},"nodeType":"YulFunctionCall","src":"36011:39:8"},"nodeType":"YulExpressionStatement","src":"36011:39:8"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"35950:5:8"},{"name":"end","nodeType":"YulIdentifier","src":"35957:3:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"35947:2:8"},"nodeType":"YulFunctionCall","src":"35947:14:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"35962:26:8","statements":[{"nodeType":"YulAssignment","src":"35964:22:8","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"35977:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"35984:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35973:3:8"},"nodeType":"YulFunctionCall","src":"35973:13:8"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"35964:5:8"}]}]},"pre":{"nodeType":"YulBlock","src":"35944:2:8","statements":[]},"src":"35940:120:8"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"35918:5:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"35925:3:8","type":""}],"src":"35880:186:8"},{"body":{"nodeType":"YulBlock","src":"36151:464:8","statements":[{"body":{"nodeType":"YulBlock","src":"36177:431:8","statements":[{"nodeType":"YulVariableDeclaration","src":"36191:54:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"36239:5:8"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"36207:31:8"},"nodeType":"YulFunctionCall","src":"36207:38:8"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"36195:8:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"36258:63:8","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"36281:8:8"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"36309:10:8"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"36291:17:8"},"nodeType":"YulFunctionCall","src":"36291:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36277:3:8"},"nodeType":"YulFunctionCall","src":"36277:44:8"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"36262:11:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"36478:27:8","statements":[{"nodeType":"YulAssignment","src":"36480:23:8","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"36495:8:8"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"36480:11:8"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"36462:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"36474:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36459:2:8"},"nodeType":"YulFunctionCall","src":"36459:18:8"},"nodeType":"YulIf","src":"36456:49:8"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"36547:11:8"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"36564:8:8"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"36592:3:8"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"36574:17:8"},"nodeType":"YulFunctionCall","src":"36574:22:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36560:3:8"},"nodeType":"YulFunctionCall","src":"36560:37:8"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"36518:28:8"},"nodeType":"YulFunctionCall","src":"36518:80:8"},"nodeType":"YulExpressionStatement","src":"36518:80:8"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"36168:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"36173:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36165:2:8"},"nodeType":"YulFunctionCall","src":"36165:11:8"},"nodeType":"YulIf","src":"36162:446:8"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"36127:5:8","type":""},{"name":"len","nodeType":"YulTypedName","src":"36134:3:8","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"36139:10:8","type":""}],"src":"36072:543:8"},{"body":{"nodeType":"YulBlock","src":"36684:54:8","statements":[{"nodeType":"YulAssignment","src":"36694:37:8","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"36719:4:8"},{"name":"value","nodeType":"YulIdentifier","src":"36725:5:8"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"36715:3:8"},"nodeType":"YulFunctionCall","src":"36715:16:8"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"36694:8:8"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"36659:4:8","type":""},{"name":"value","nodeType":"YulTypedName","src":"36665:5:8","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"36675:8:8","type":""}],"src":"36621:117:8"},{"body":{"nodeType":"YulBlock","src":"36795:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"36805:68:8","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36854:1:8","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"36857:5:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"36850:3:8"},"nodeType":"YulFunctionCall","src":"36850:13:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36869:1:8","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"36865:3:8"},"nodeType":"YulFunctionCall","src":"36865:6:8"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"36821:28:8"},"nodeType":"YulFunctionCall","src":"36821:51:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"36817:3:8"},"nodeType":"YulFunctionCall","src":"36817:56:8"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"36809:4:8","type":""}]},{"nodeType":"YulAssignment","src":"36882:25:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"36896:4:8"},{"name":"mask","nodeType":"YulIdentifier","src":"36902:4:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36892:3:8"},"nodeType":"YulFunctionCall","src":"36892:15:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"36882:6:8"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"36772:4:8","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"36778:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"36788:6:8","type":""}],"src":"36744:169:8"},{"body":{"nodeType":"YulBlock","src":"36999:214:8","statements":[{"nodeType":"YulAssignment","src":"37132:37:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"37159:4:8"},{"name":"len","nodeType":"YulIdentifier","src":"37165:3:8"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"37140:18:8"},"nodeType":"YulFunctionCall","src":"37140:29:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"37132:4:8"}]},{"nodeType":"YulAssignment","src":"37178:29:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"37189:4:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37199:1:8","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"37202:3:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"37195:3:8"},"nodeType":"YulFunctionCall","src":"37195:11:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"37186:2:8"},"nodeType":"YulFunctionCall","src":"37186:21:8"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"37178:4:8"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"36980:4:8","type":""},{"name":"len","nodeType":"YulTypedName","src":"36986:3:8","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"36994:4:8","type":""}],"src":"36918:295:8"},{"body":{"nodeType":"YulBlock","src":"37310:1303:8","statements":[{"nodeType":"YulVariableDeclaration","src":"37321:51:8","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"37368:3:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"37335:32:8"},"nodeType":"YulFunctionCall","src":"37335:37:8"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"37325:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"37457:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"37459:16:8"},"nodeType":"YulFunctionCall","src":"37459:18:8"},"nodeType":"YulExpressionStatement","src":"37459:18:8"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"37429:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"37437:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37426:2:8"},"nodeType":"YulFunctionCall","src":"37426:30:8"},"nodeType":"YulIf","src":"37423:56:8"},{"nodeType":"YulVariableDeclaration","src":"37489:52:8","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"37535:4:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"37529:5:8"},"nodeType":"YulFunctionCall","src":"37529:11:8"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"37503:25:8"},"nodeType":"YulFunctionCall","src":"37503:38:8"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"37493:6:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"37634:4:8"},{"name":"oldLen","nodeType":"YulIdentifier","src":"37640:6:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"37648:6:8"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"37588:45:8"},"nodeType":"YulFunctionCall","src":"37588:67:8"},"nodeType":"YulExpressionStatement","src":"37588:67:8"},{"nodeType":"YulVariableDeclaration","src":"37665:18:8","value":{"kind":"number","nodeType":"YulLiteral","src":"37682:1:8","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"37669:9:8","type":""}]},{"nodeType":"YulAssignment","src":"37693:17:8","value":{"kind":"number","nodeType":"YulLiteral","src":"37706:4:8","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"37693:9:8"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"37757:611:8","statements":[{"nodeType":"YulVariableDeclaration","src":"37771:37:8","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"37790:6:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37802:4:8","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"37798:3:8"},"nodeType":"YulFunctionCall","src":"37798:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"37786:3:8"},"nodeType":"YulFunctionCall","src":"37786:22:8"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"37775:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"37822:51:8","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"37868:4:8"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"37836:31:8"},"nodeType":"YulFunctionCall","src":"37836:37:8"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"37826:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"37886:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"37895:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"37890:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"37954:163:8","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"37979:6:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"37997:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"38002:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37993:3:8"},"nodeType":"YulFunctionCall","src":"37993:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37987:5:8"},"nodeType":"YulFunctionCall","src":"37987:26:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"37972:6:8"},"nodeType":"YulFunctionCall","src":"37972:42:8"},"nodeType":"YulExpressionStatement","src":"37972:42:8"},{"nodeType":"YulAssignment","src":"38031:24:8","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"38045:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"38053:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38041:3:8"},"nodeType":"YulFunctionCall","src":"38041:14:8"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"38031:6:8"}]},{"nodeType":"YulAssignment","src":"38072:31:8","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"38089:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"38100:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38085:3:8"},"nodeType":"YulFunctionCall","src":"38085:18:8"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"38072:9:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"37920:1:8"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"37923:7:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"37917:2:8"},"nodeType":"YulFunctionCall","src":"37917:14:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"37932:21:8","statements":[{"nodeType":"YulAssignment","src":"37934:17:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"37943:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"37946:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37939:3:8"},"nodeType":"YulFunctionCall","src":"37939:12:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"37934:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"37913:3:8","statements":[]},"src":"37909:208:8"},{"body":{"nodeType":"YulBlock","src":"38153:156:8","statements":[{"nodeType":"YulVariableDeclaration","src":"38171:43:8","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"38198:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"38203:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38194:3:8"},"nodeType":"YulFunctionCall","src":"38194:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"38188:5:8"},"nodeType":"YulFunctionCall","src":"38188:26:8"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"38175:9:8","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"38238:6:8"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"38265:9:8"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"38280:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"38288:4:8","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38276:3:8"},"nodeType":"YulFunctionCall","src":"38276:17:8"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"38246:18:8"},"nodeType":"YulFunctionCall","src":"38246:48:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"38231:6:8"},"nodeType":"YulFunctionCall","src":"38231:64:8"},"nodeType":"YulExpressionStatement","src":"38231:64:8"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"38136:7:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"38145:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"38133:2:8"},"nodeType":"YulFunctionCall","src":"38133:19:8"},"nodeType":"YulIf","src":"38130:179:8"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"38329:4:8"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"38343:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"38351:1:8","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"38339:3:8"},"nodeType":"YulFunctionCall","src":"38339:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"38355:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38335:3:8"},"nodeType":"YulFunctionCall","src":"38335:22:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"38322:6:8"},"nodeType":"YulFunctionCall","src":"38322:36:8"},"nodeType":"YulExpressionStatement","src":"38322:36:8"}]},"nodeType":"YulCase","src":"37750:618:8","value":{"kind":"number","nodeType":"YulLiteral","src":"37755:1:8","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"38385:222:8","statements":[{"nodeType":"YulVariableDeclaration","src":"38399:14:8","value":{"kind":"number","nodeType":"YulLiteral","src":"38412:1:8","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"38403:5:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"38436:67:8","statements":[{"nodeType":"YulAssignment","src":"38454:35:8","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"38473:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"38478:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38469:3:8"},"nodeType":"YulFunctionCall","src":"38469:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"38463:5:8"},"nodeType":"YulFunctionCall","src":"38463:26:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"38454:5:8"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"38429:6:8"},"nodeType":"YulIf","src":"38426:77:8"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"38523:4:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38582:5:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"38589:6:8"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"38529:52:8"},"nodeType":"YulFunctionCall","src":"38529:67:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"38516:6:8"},"nodeType":"YulFunctionCall","src":"38516:81:8"},"nodeType":"YulExpressionStatement","src":"38516:81:8"}]},"nodeType":"YulCase","src":"38377:230:8","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"37730:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"37738:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37727:2:8"},"nodeType":"YulFunctionCall","src":"37727:14:8"},"nodeType":"YulSwitch","src":"37720:887:8"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"37299:4:8","type":""},{"name":"src","nodeType":"YulTypedName","src":"37305:3:8","type":""}],"src":"37218:1395:8"},{"body":{"nodeType":"YulBlock","src":"38647:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38664:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38667:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38657:6:8"},"nodeType":"YulFunctionCall","src":"38657:88:8"},"nodeType":"YulExpressionStatement","src":"38657:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38761:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"38764:4:8","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38754:6:8"},"nodeType":"YulFunctionCall","src":"38754:15:8"},"nodeType":"YulExpressionStatement","src":"38754:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38785:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38788:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38778:6:8"},"nodeType":"YulFunctionCall","src":"38778:15:8"},"nodeType":"YulExpressionStatement","src":"38778:15:8"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"38619:180:8"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__to_t_uint256_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool_t_bool__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string[]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[]\n    function abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptrt_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_bytes_storage_ptr(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_bytes_storage_ptr(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x399 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87633EB2 GT PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xB604EFAA GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xCD230809 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE32ACC1A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE32ACC1A EQ PUSH2 0xC5C JUMPI DUP1 PUSH4 0xEC245802 EQ PUSH2 0xC8C JUMPI DUP1 PUSH4 0xECDE3243 EQ PUSH2 0xCAA JUMPI DUP1 PUSH4 0xFF4A37EF EQ PUSH2 0xCDA JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0xCD230809 EQ PUSH2 0xBAE JUMPI DUP1 PUSH4 0xD3791B20 EQ PUSH2 0xBDE JUMPI DUP1 PUSH4 0xD9FC52DB EQ PUSH2 0xBFC JUMPI DUP1 PUSH4 0xE1B011A0 EQ PUSH2 0xC2C JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0xC04FE978 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xC04FE978 EQ PUSH2 0xB23 JUMPI DUP1 PUSH4 0xC29595C5 EQ PUSH2 0xB41 JUMPI DUP1 PUSH4 0xCA013F17 EQ PUSH2 0xB5D JUMPI DUP1 PUSH4 0xCACE8D46 EQ PUSH2 0xB7B JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0xB604EFAA EQ PUSH2 0xABB JUMPI DUP1 PUSH4 0xBDA00335 EQ PUSH2 0xAEB JUMPI DUP1 PUSH4 0xC04E7430 EQ PUSH2 0xB07 JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x97EE7606 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0xAA4CDF2A GT PUSH2 0x156 JUMPI DUP1 PUSH4 0xAA4CDF2A EQ PUSH2 0xA1E JUMPI DUP1 PUSH4 0xB16060A6 EQ PUSH2 0xA4E JUMPI DUP1 PUSH4 0xB39A38BD EQ PUSH2 0xA58 JUMPI DUP1 PUSH4 0xB527D45E EQ PUSH2 0xA88 JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x97EE7606 EQ PUSH2 0x97A JUMPI DUP1 PUSH4 0xA1CA9178 EQ PUSH2 0x998 JUMPI DUP1 PUSH4 0xA428A47F EQ PUSH2 0x9C8 JUMPI DUP1 PUSH4 0xAA2BF5D3 EQ PUSH2 0xA00 JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x8C70034A GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x8C70034A EQ PUSH2 0x8E0 JUMPI DUP1 PUSH4 0x8D3D2595 EQ PUSH2 0x8FC JUMPI DUP1 PUSH4 0x9077007D EQ PUSH2 0x92C JUMPI DUP1 PUSH4 0x934C5F00 EQ PUSH2 0x94A JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x87633EB2 EQ PUSH2 0x88A JUMPI DUP1 PUSH4 0x881DE858 EQ PUSH2 0x8A6 JUMPI DUP1 PUSH4 0x8AC4110C EQ PUSH2 0x8C2 JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x4A797BD7 GT PUSH2 0x2CE JUMPI DUP1 PUSH4 0x7A82B1D6 GT PUSH2 0x26C JUMPI DUP1 PUSH4 0x803F5B9F GT PUSH2 0x23B JUMPI DUP1 PUSH4 0x803F5B9F EQ PUSH2 0x7DE JUMPI DUP1 PUSH4 0x812FAE1F EQ PUSH2 0x80E JUMPI DUP1 PUSH4 0x826EEEFE EQ PUSH2 0x83E JUMPI DUP1 PUSH4 0x86FFA45B EQ PUSH2 0x85A JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x7A82B1D6 EQ PUSH2 0x72D JUMPI DUP1 PUSH4 0x7BBD582D EQ PUSH2 0x75D JUMPI DUP1 PUSH4 0x7F2035D4 EQ PUSH2 0x77B JUMPI DUP1 PUSH4 0x7FC543EC EQ PUSH2 0x7AC JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x5996278F GT PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x5996278F EQ PUSH2 0x681 JUMPI DUP1 PUSH4 0x5D907DA1 EQ PUSH2 0x69D JUMPI DUP1 PUSH4 0x6ECDA4EE EQ PUSH2 0x6CD JUMPI DUP1 PUSH4 0x787F19C7 EQ PUSH2 0x6FD JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x4A797BD7 EQ PUSH2 0x600 JUMPI DUP1 PUSH4 0x4BE7ADB5 EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0x54A9FB18 EQ PUSH2 0x64E JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x20959ED0 GT PUSH2 0x33B JUMPI DUP1 PUSH4 0x330B8F26 GT PUSH2 0x315 JUMPI DUP1 PUSH4 0x330B8F26 EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0x38A512D9 EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0x3F87A2F4 EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0x468D0C80 EQ PUSH2 0x5CE JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x20959ED0 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x27A568B9 EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0x29B56F60 EQ PUSH2 0x51C JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x13BF4CEA GT PUSH2 0x377 JUMPI DUP1 PUSH4 0x13BF4CEA EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x1B592AEB EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x1BA44C4C EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0x1E9AC9F5 EQ PUSH2 0x48A JUMPI PUSH2 0x399 JUMP JUMPDEST DUP1 PUSH4 0x377D44A EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x1171B621 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x131D44F2 EQ PUSH2 0x3EC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x3823 JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x39AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D6 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x406 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x39AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x424 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x442 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49F SWAP2 SWAP1 PUSH2 0x3823 JUMP JUMPDEST PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x504 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x513 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x524 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x39AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x554 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54F SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x562 SWAP3 SWAP2 SWAP1 PUSH2 0x3B29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x585 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x3B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x14B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x156D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x608 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x615 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x638 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x633 SWAP2 SWAP1 PUSH2 0x3BFE JUMP JUMPDEST PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x645 SWAP2 SWAP1 PUSH2 0x39AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x668 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x663 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x1737 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x678 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x3C91 JUMP JUMPDEST PUSH2 0x1877 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x3B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0x3B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x717 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x712 SWAP2 SWAP1 PUSH2 0x3D44 JUMP JUMPDEST PUSH2 0x1B63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x747 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x742 SWAP2 SWAP1 PUSH2 0x3BFE JUMP JUMPDEST PUSH2 0x1C34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x3DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x765 PUSH2 0x1CAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x772 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x795 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x790 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A3 SWAP3 SWAP2 SWAP1 PUSH2 0x3E19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C1 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x1DE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x805 SWAP2 SWAP1 PUSH2 0x3F0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x828 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x823 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x3F0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x858 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x853 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x1FD8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x874 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x86F SWAP2 SWAP1 PUSH2 0x3F30 JUMP JUMPDEST PUSH2 0x201E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x881 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x89F SWAP2 SWAP1 PUSH2 0x3FEB JUMP JUMPDEST PUSH2 0x213E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8BB SWAP2 SWAP1 PUSH2 0x4047 JUMP JUMPDEST PUSH2 0x2163 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8CA PUSH2 0x21B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D7 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8F5 SWAP2 SWAP1 PUSH2 0x40D2 JUMP JUMPDEST PUSH2 0x21B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x916 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x911 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x2282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x923 SWAP2 SWAP1 PUSH2 0x3B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x934 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x941 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x964 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95F SWAP2 SWAP1 PUSH2 0x4141 JUMP JUMPDEST PUSH2 0x2330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x971 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x982 PUSH2 0x23C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x98F SWAP2 SWAP1 PUSH2 0x39AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9AD SWAP2 SWAP1 PUSH2 0x3823 JUMP JUMPDEST PUSH2 0x24FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9BF SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9DD SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x2570 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F7 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA08 PUSH2 0x2626 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA15 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA38 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA33 SWAP2 SWAP1 PUSH2 0x3823 JUMP JUMPDEST PUSH2 0x262C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA45 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA56 PUSH2 0x26B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA72 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA6D SWAP2 SWAP1 PUSH2 0x4251 JUMP JUMPDEST PUSH2 0x2965 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA7F SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9D SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x2A53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD0 SWAP2 SWAP1 PUSH2 0x3BFE JUMP JUMPDEST PUSH2 0x2B93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAE2 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB05 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB00 SWAP2 SWAP1 PUSH2 0x430C JUMP JUMPDEST PUSH2 0x2C0D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB21 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB1C SWAP2 SWAP1 PUSH2 0x3FEB JUMP JUMPDEST PUSH2 0x2CA4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB2B PUSH2 0x2CCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB38 SWAP2 SWAP1 PUSH2 0x39AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB56 SWAP2 SWAP1 PUSH2 0x3FEB JUMP JUMPDEST PUSH2 0x2E06 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB65 PUSH2 0x2E2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB72 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB95 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB90 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x2E34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBA5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBC3 SWAP2 SWAP1 PUSH2 0x3FEB JUMP JUMPDEST PUSH2 0x2EEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD5 SWAP2 SWAP1 PUSH2 0x3DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE6 PUSH2 0x2F7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF3 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC16 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC11 SWAP2 SWAP1 PUSH2 0x4384 JUMP JUMPDEST PUSH2 0x2F83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC23 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC46 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC41 SWAP2 SWAP1 PUSH2 0x44ED JUMP JUMPDEST PUSH2 0x3048 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC71 SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x319D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC83 SWAP2 SWAP1 PUSH2 0x3B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC94 PUSH2 0x3245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCBF SWAP2 SWAP1 PUSH2 0x45E8 JUMP JUMPDEST PUSH2 0x324B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD1 SWAP2 SWAP1 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH2 0x3339 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD03 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x467F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD2C JUMPI PUSH2 0xD2B PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD5F JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD4A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xE8B JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH2 0xD9F SWAP2 SWAP1 PUSH2 0x47C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0xE78 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xDCD SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDF9 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE46 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE1B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE46 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE29 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE5E JUMPI PUSH2 0xE5D PUSH2 0x47D7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xE74 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xE83 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD6A JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEBC JUMPI PUSH2 0xEBB PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEEF JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xEDA JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x1000 JUMPI DUP5 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0xFDF JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xF42 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF6E SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFBB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF90 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFBB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF9E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xFD3 JUMPI PUSH2 0xFD2 PUSH2 0x47D7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0xFEA SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0xFF8 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEFA JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x10A7 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x107E SWAP2 SWAP1 PUSH2 0x47C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x1094 JUMPI DUP1 SWAP2 POP POP PUSH2 0x10AD JUMP JUMPDEST DUP1 DUP1 PUSH2 0x109F SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1049 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x10ED SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1119 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1166 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x113B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1166 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1149 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x117B SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11A7 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11F4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11F4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11D7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1209 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1235 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1282 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1257 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1282 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1265 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12AC JUMPI PUSH2 0x12AB PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12DF JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x12CA JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x13BF JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1310 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x133C SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1389 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x135E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1389 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x136C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x13A1 JUMPI PUSH2 0x13A0 PUSH2 0x47D7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x13B7 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12E5 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x142B SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1457 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14A4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1479 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14A4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1487 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x14EA SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1516 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1563 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1538 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1563 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1546 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1596 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15C2 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x160F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x160F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1645 JUMPI PUSH2 0x1644 PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1678 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1663 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x172B JUMPI DUP6 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x16C7 JUMPI POP DUP5 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x170A JUMPI PUSH2 0x16EB PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x33EB JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x16FE JUMPI PUSH2 0x16FD PUSH2 0x47D7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0x1715 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x1723 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1683 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1766 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1792 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x17F4 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1820 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x186D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1842 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x186D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1850 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x18E6 JUMPI PUSH2 0x18E5 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6261646765000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2C0D JUMP JUMPDEST JUMPDEST PUSH2 0x1925 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646F6E6174696F6E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2C0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0xF PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x197A SWAP2 SWAP1 PUSH2 0x487D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x10 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x19A4 SWAP2 SWAP1 PUSH2 0x487D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x12 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A0F SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1A3E SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A6A SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AB7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A8C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1AB7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A9A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x1AE2 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B0E SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B5B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B30 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B5B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B3E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x15 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1BF5 SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1C0B SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1C22 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x7 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1CA2 JUMPI DUP3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x1C80 JUMPI POP DUP4 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1C8F JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x1CA8 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1C9A SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C3C JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1CD7 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D03 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D50 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D25 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D50 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D33 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1D65 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D91 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DDE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1DB3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DDE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1DC1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E32 JUMPI PUSH2 0x1E31 PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E60 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1EEA JUMPI DUP5 PUSH1 0x15 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1ED7 JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1EBC JUMPI PUSH2 0x1EBB PUSH2 0x47D7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1ED3 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1EE2 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E6B JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x9 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F15 JUMPI PUSH2 0x1F14 PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F43 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1FCD JUMPI DUP5 PUSH1 0x17 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x1FBA JUMPI PUSH1 0x17 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1F9F JUMPI PUSH2 0x1F9E PUSH2 0x47D7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x1FB6 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1FC5 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1F4E JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x270F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x270F DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46616C7365000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2099 SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x20AF SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x20C5 SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP SWAP1 POP POP DUP3 PUSH1 0xC PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x20EA SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x212C SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x215E SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2186 SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP DUP1 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x21AA SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2239 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x227D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6A6F696E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2C0D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x22A5 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x22D1 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x231E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x22F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x231E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2301 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x16 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x239B SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x23B2 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x8 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23E4 JUMPI PUSH2 0x23E3 PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2417 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2402 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x24F7 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2448 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2474 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2496 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24C1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x24A4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x24D9 JUMPI PUSH2 0x24D8 PUSH2 0x47D7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x24EF SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x241D JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x2565 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x253C SWAP2 SWAP1 PUSH2 0x47C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x2552 JUMPI DUP1 SWAP2 POP POP PUSH2 0x256B JUMP JUMPDEST DUP1 DUP1 PUSH2 0x255D SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2507 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x26A8 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x2669 SWAP2 SWAP1 PUSH2 0x47C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SUB PUSH2 0x2695 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP POP PUSH2 0x26AE JUMP JUMPDEST DUP1 DUP1 PUSH2 0x26A0 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2634 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x2719 JUMPI PUSH1 0xB PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x26E4 SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x26F4 SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2704 SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2711 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26B6 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x2770 JUMPI PUSH1 0xE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x274B SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x275B SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2768 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x271D JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x27C7 JUMPI PUSH1 0xF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x27AA SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x27BF SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2774 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x281E JUMPI PUSH1 0x13 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2809 SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2816 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27CB JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2885 JUMPI PUSH1 0x15 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x2860 SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x2870 SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x287D SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2822 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x28E4 JUMPI PUSH1 0x17 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x28CF SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x28DC SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2889 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2933 JUMPI PUSH1 0x14 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x292B SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x28E8 JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x29A6 SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x29BC SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2A02 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x2A46 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x676F616C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2C0D JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x2A82 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AAE SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AFB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AD0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AFB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2ADE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x2B10 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B3C SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B89 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B5E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B89 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B6C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x2C00 JUMPI DUP3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x2BDF JUMPI POP DUP4 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x2BED JUMPI DUP1 SWAP2 POP POP PUSH2 0x2C07 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2BF8 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B9B JUMP JUMPDEST POP PUSH2 0x270F SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x11 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2C6E SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2C84 SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2C9B SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2CC7 SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CEB JUMPI PUSH2 0x2CEA PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2D1E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2D09 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x2DFE JUMPI PUSH1 0xB PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2D4F SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7B SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DC8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D9D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DC8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DAB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2DE0 JUMPI PUSH2 0x2DDF PUSH2 0x47D7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x2DF6 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2D24 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2E29 SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x2E69 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2E95 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2EE2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2EB7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2EE2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EC5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2F72 JUMPI DUP5 PUSH1 0x16 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x2F55 JUMPI POP PUSH1 0x16 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x40 MLOAD PUSH2 0x2F43 SWAP2 SWAP1 PUSH2 0x47C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST ISZERO PUSH2 0x2F5F JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x2F6A SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2EF6 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x17 PUSH1 0x0 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x301F SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x9 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3036 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x9 SLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xF PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x309A SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x30EA SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x314F JUMPI PUSH2 0x3124 PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3117 JUMPI PUSH2 0x3116 PUSH2 0x47D7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x34B9 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3137 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0x3147 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x30F2 JUMP JUMPDEST POP PUSH2 0x318F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6964656100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2C0D JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x31C0 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x31EC SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3239 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x320E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3239 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x321C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0x14 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x32E0 SWAP1 PUSH2 0x4835 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 ISZERO PUSH2 0x332B JUMPI PUSH2 0x332A DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x766F746500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2C0D JUMP JUMPDEST JUMPDEST PUSH1 0x6 SLOAD SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x3368 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3394 SWAP1 PUSH2 0x46EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x33E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x33E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x33C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x33FA DUP5 PUSH2 0x3519 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3419 JUMPI PUSH2 0x3418 PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x344B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x34AE JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x34A2 JUMPI PUSH2 0x34A1 PUSH2 0x4B2F JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x3459 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x13 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x3510 SWAP2 SWAP1 PUSH2 0x4A5D JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x3577 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x356D JUMPI PUSH2 0x356C PUSH2 0x4B2F JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x35B4 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x35AA JUMPI PUSH2 0x35A9 PUSH2 0x4B2F JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x35E3 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x35D9 JUMPI PUSH2 0x35D8 PUSH2 0x4B2F JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x360C JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x3602 JUMPI PUSH2 0x3601 PUSH2 0x4B2F JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x3631 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x3627 JUMPI PUSH2 0x3626 PUSH2 0x4B2F JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3654 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x364A JUMPI PUSH2 0x3649 PUSH2 0x4B2F JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3663 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x3678 SWAP1 PUSH2 0x46EC JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x368A JUMPI POP PUSH2 0x36A9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x36A8 SWAP2 SWAP1 PUSH2 0x36AC JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x36C5 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x36AD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3730 DUP3 PUSH2 0x36E7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x374F JUMPI PUSH2 0x374E PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3762 PUSH2 0x36C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x376E DUP3 DUP3 PUSH2 0x3727 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x378E JUMPI PUSH2 0x378D PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH2 0x3797 DUP3 PUSH2 0x36E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37C6 PUSH2 0x37C1 DUP5 PUSH2 0x3773 JUMP JUMPDEST PUSH2 0x3758 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x37E2 JUMPI PUSH2 0x37E1 PUSH2 0x36E2 JUMP JUMPDEST JUMPDEST PUSH2 0x37ED DUP5 DUP3 DUP6 PUSH2 0x37A4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x380A JUMPI PUSH2 0x3809 PUSH2 0x36DD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x381A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x37B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3839 JUMPI PUSH2 0x3838 PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3857 JUMPI PUSH2 0x3856 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x3863 DUP5 DUP3 DUP6 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x38B7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38E9 DUP3 PUSH2 0x3898 JUMP JUMPDEST PUSH2 0x38F3 DUP2 DUP6 PUSH2 0x38A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x3903 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x38B4 JUMP JUMPDEST PUSH2 0x390C DUP2 PUSH2 0x36E7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3923 DUP4 DUP4 PUSH2 0x38DE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3943 DUP3 PUSH2 0x386C JUMP JUMPDEST PUSH2 0x394D DUP2 DUP6 PUSH2 0x3877 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x395F DUP6 PUSH2 0x3888 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x399B JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x397C DUP6 DUP3 PUSH2 0x3917 JUMP JUMPDEST SWAP5 POP PUSH2 0x3987 DUP4 PUSH2 0x392B JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3963 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x39C7 DUP2 DUP5 PUSH2 0x3938 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39E2 DUP2 PUSH2 0x39CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39FD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x39D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A0C DUP2 PUSH2 0x39CF JUMP JUMPDEST DUP2 EQ PUSH2 0x3A17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A29 DUP2 PUSH2 0x3A03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A45 JUMPI PUSH2 0x3A44 PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A53 DUP5 DUP3 DUP6 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3A71 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x39D9 JUMP JUMPDEST PUSH2 0x3A7E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x39D9 JUMP JUMPDEST PUSH2 0x3A8B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x39D9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AAF DUP3 PUSH2 0x3898 JUMP JUMPDEST PUSH2 0x3AB9 DUP2 DUP6 PUSH2 0x3A93 JUMP JUMPDEST SWAP4 POP PUSH2 0x3AC9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x38B4 JUMP JUMPDEST PUSH2 0x3AD2 DUP2 PUSH2 0x36E7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AF7 DUP2 DUP7 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3B0B DUP2 DUP6 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3B1F DUP2 DUP5 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3B3E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x39D9 JUMP JUMPDEST PUSH2 0x3B4B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x39D9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B6C DUP2 DUP5 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3B89 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x39D9 JUMP JUMPDEST PUSH2 0x3B96 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x39D9 JUMP JUMPDEST PUSH2 0x3BA3 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x39D9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3BB5 DUP2 DUP5 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3BD5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x39D9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3BE7 DUP2 DUP6 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP PUSH2 0x3BF6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x39D9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C15 JUMPI PUSH2 0x3C14 PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C23 DUP6 DUP3 DUP7 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3C34 DUP6 DUP3 DUP7 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3C53 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x39D9 JUMP JUMPDEST PUSH2 0x3C60 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x39D9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3C72 DUP2 DUP6 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3C86 DUP2 DUP5 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3CAD JUMPI PUSH2 0x3CAC PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3CBB DUP9 DUP3 DUP10 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x3CCC DUP9 DUP3 DUP10 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x3CDD DUP9 DUP3 DUP10 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CFE JUMPI PUSH2 0x3CFD PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x3D0A DUP9 DUP3 DUP10 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D2B JUMPI PUSH2 0x3D2A PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x3D37 DUP9 DUP3 DUP10 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3D5E JUMPI PUSH2 0x3D5D PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D6C DUP8 DUP3 DUP9 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D8D JUMPI PUSH2 0x3D8C PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x3D99 DUP8 DUP3 DUP9 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3DBA JUMPI PUSH2 0x3DB9 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x3DC6 DUP8 DUP3 DUP9 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3DD7 DUP8 DUP3 DUP9 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DF8 DUP2 PUSH2 0x3DE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3DEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E33 DUP2 DUP6 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3E47 DUP2 DUP5 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E85 DUP2 PUSH2 0x39CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E97 DUP4 DUP4 PUSH2 0x3E7C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EBB DUP3 PUSH2 0x3E50 JUMP JUMPDEST PUSH2 0x3EC5 DUP2 DUP6 PUSH2 0x3E5B JUMP JUMPDEST SWAP4 POP PUSH2 0x3ED0 DUP4 PUSH2 0x3E6C JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F01 JUMPI DUP2 MLOAD PUSH2 0x3EE8 DUP9 DUP3 PUSH2 0x3E8B JUMP JUMPDEST SWAP8 POP PUSH2 0x3EF3 DUP4 PUSH2 0x3EA3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3ED4 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F28 DUP2 DUP5 PUSH2 0x3EB0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3F4A JUMPI PUSH2 0x3F49 PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F68 JUMPI PUSH2 0x3F67 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x3F74 DUP8 DUP3 DUP9 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F95 JUMPI PUSH2 0x3F94 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x3FA1 DUP8 DUP3 DUP9 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FC2 JUMPI PUSH2 0x3FC1 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x3FCE DUP8 DUP3 DUP9 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3FDF DUP8 DUP3 DUP9 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4002 JUMPI PUSH2 0x4001 PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4010 DUP6 DUP3 DUP7 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4031 JUMPI PUSH2 0x4030 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x403D DUP6 DUP3 DUP7 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4060 JUMPI PUSH2 0x405F PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x406E DUP7 DUP3 DUP8 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x408F JUMPI PUSH2 0x408E PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x409B DUP7 DUP3 DUP8 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40BC JUMPI PUSH2 0x40BB PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x40C8 DUP7 DUP3 DUP8 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x40EB JUMPI PUSH2 0x40EA PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x40F9 DUP7 DUP3 DUP8 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x410A DUP7 DUP3 DUP8 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x412B JUMPI PUSH2 0x412A PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x4137 DUP7 DUP3 DUP8 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x415B JUMPI PUSH2 0x415A PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4169 DUP8 DUP3 DUP9 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x417A DUP8 DUP3 DUP9 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x418B DUP8 DUP3 DUP9 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x41AC JUMPI PUSH2 0x41AB PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x41B8 DUP8 DUP3 DUP9 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x41DA PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x39D9 JUMP JUMPDEST PUSH2 0x41E7 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x3DEF JUMP JUMPDEST PUSH2 0x41F4 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x3DEF JUMP JUMPDEST PUSH2 0x4201 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x3DEF JUMP JUMPDEST PUSH2 0x420E PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x3DEF JUMP JUMPDEST PUSH2 0x421B PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x3DEF JUMP JUMPDEST PUSH2 0x4228 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x3DEF JUMP JUMPDEST PUSH2 0x4235 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x3DEF JUMP JUMPDEST PUSH2 0x4243 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x3DEF JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x426B JUMPI PUSH2 0x426A PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4289 JUMPI PUSH2 0x4288 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x4295 DUP8 DUP3 DUP9 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42B6 JUMPI PUSH2 0x42B5 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x42C2 DUP8 DUP3 DUP9 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x42D3 DUP8 DUP3 DUP9 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42F4 JUMPI PUSH2 0x42F3 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x4300 DUP8 DUP3 DUP9 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4323 JUMPI PUSH2 0x4322 PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4341 JUMPI PUSH2 0x4340 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x434D DUP6 DUP3 DUP7 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x436E JUMPI PUSH2 0x436D PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x437A DUP6 DUP3 DUP7 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x439E JUMPI PUSH2 0x439D PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43AC DUP8 DUP3 DUP9 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43CD JUMPI PUSH2 0x43CC PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x43D9 DUP8 DUP3 DUP9 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x43EA DUP8 DUP3 DUP9 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x43FB DUP8 DUP3 DUP9 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4422 JUMPI PUSH2 0x4421 PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x444B PUSH2 0x4446 DUP5 PUSH2 0x4407 JUMP JUMPDEST PUSH2 0x3758 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x446E JUMPI PUSH2 0x446D PUSH2 0x4433 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x44B5 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4493 JUMPI PUSH2 0x4492 PUSH2 0x36DD JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x44A0 DUP10 DUP3 PUSH2 0x37F5 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4470 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x44D4 JUMPI PUSH2 0x44D3 PUSH2 0x36DD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x44E4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4438 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4509 JUMPI PUSH2 0x4508 PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4527 JUMPI PUSH2 0x4526 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x4533 DUP9 DUP3 DUP10 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4544 DUP9 DUP3 DUP10 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4565 JUMPI PUSH2 0x4564 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x4571 DUP9 DUP3 DUP10 ADD PUSH2 0x44BF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4582 DUP9 DUP3 DUP10 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45A3 JUMPI PUSH2 0x45A2 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x45AF DUP9 DUP3 DUP10 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x45C5 DUP2 PUSH2 0x3DE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x45D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x45E2 DUP2 PUSH2 0x45BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4604 JUMPI PUSH2 0x4603 PUSH2 0x36D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4612 DUP9 DUP3 DUP10 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4623 DUP9 DUP3 DUP10 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4634 DUP9 DUP3 DUP10 ADD PUSH2 0x3A1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4655 JUMPI PUSH2 0x4654 PUSH2 0x36D8 JUMP JUMPDEST JUMPDEST PUSH2 0x4661 DUP9 DUP3 DUP10 ADD PUSH2 0x37F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x4672 DUP9 DUP3 DUP10 ADD PUSH2 0x45D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4694 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x39D9 JUMP JUMPDEST PUSH2 0x46A1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x39D9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x46B3 DUP2 DUP5 PUSH2 0x3AA4 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4704 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4717 JUMPI PUSH2 0x4716 PUSH2 0x46BD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x474A DUP2 PUSH2 0x46EC JUMP JUMPDEST PUSH2 0x4754 DUP2 DUP7 PUSH2 0x471D JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x476F JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x4784 JUMPI PUSH2 0x47B7 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x47B7 JUMP JUMPDEST PUSH2 0x478D DUP6 PUSH2 0x4728 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x47AF JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4790 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47CC DUP3 DUP5 PUSH2 0x473D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4840 DUP3 PUSH2 0x39CF JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4872 JUMPI PUSH2 0x4871 PUSH2 0x4806 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4888 DUP3 PUSH2 0x39CF JUMP JUMPDEST SWAP2 POP PUSH2 0x4893 DUP4 PUSH2 0x39CF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x48AB JUMPI PUSH2 0x48AA PUSH2 0x4806 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x4913 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x48D6 JUMP JUMPDEST PUSH2 0x491D DUP7 DUP4 PUSH2 0x48D6 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x495A PUSH2 0x4955 PUSH2 0x4950 DUP5 PUSH2 0x39CF JUMP JUMPDEST PUSH2 0x4935 JUMP JUMPDEST PUSH2 0x39CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4974 DUP4 PUSH2 0x493F JUMP JUMPDEST PUSH2 0x4988 PUSH2 0x4980 DUP3 PUSH2 0x4961 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x48E3 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x499D PUSH2 0x4990 JUMP JUMPDEST PUSH2 0x49A8 DUP2 DUP5 DUP5 PUSH2 0x496B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x49CC JUMPI PUSH2 0x49C1 PUSH1 0x0 DUP3 PUSH2 0x4995 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x49AE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4A11 JUMPI PUSH2 0x49E2 DUP2 PUSH2 0x48B1 JUMP JUMPDEST PUSH2 0x49EB DUP5 PUSH2 0x48C6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x49FA JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4A0E PUSH2 0x4A06 DUP6 PUSH2 0x48C6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x49AD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A34 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4A16 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A4D DUP4 DUP4 PUSH2 0x4A23 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4A66 DUP3 PUSH2 0x3898 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A7F JUMPI PUSH2 0x4A7E PUSH2 0x36F8 JUMP JUMPDEST JUMPDEST PUSH2 0x4A89 DUP3 SLOAD PUSH2 0x46EC JUMP JUMPDEST PUSH2 0x4A94 DUP3 DUP3 DUP6 PUSH2 0x49D0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4AC7 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4AB5 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4ABF DUP6 DUP3 PUSH2 0x4A41 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4B27 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4AD5 DUP7 PUSH2 0x48B1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4AFD JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4AD8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4B1A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4B16 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4A23 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT JUMP PUSH12 0x5C8EF08A9838007266A3F1D7 SWAP10 0x4D 0xA7 0x2A 0xAF 0xD5 PUSH23 0x4C44DD81E76377F03CCC64736F6C634300081100330000 ","sourceMap":"170:14926:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5902:468;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1769:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9813:414;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1710:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1798:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3099:71;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6376:289;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2647:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2000:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5616:280;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2265:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;6673:233;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3517:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2515:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1837:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11497:527;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2760:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;8066:501;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4761:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2142:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12044:360;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8973:268;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1648:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2387:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2850;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;12410:460;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13221:469;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8838:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3741:375;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4122:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4250:225;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1971:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8573:259;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10861:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1872:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13696:341;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9523:284;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10233:297;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3625:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1941:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10536:319;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14426:667;;;:::i;:::-;;5106:356;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3258:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;9247:270;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4910:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7931:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4481:274;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5468:142;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1904:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3375:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;14043:377;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1739:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12876:339;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7078:588;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6912:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1676:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11033:458;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2948:74;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5902:468;5979:15;6038:26;6080:9;;6067:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6038:52;;6097:17;6126:9;6138:1;6126:13;;6121:218;6145:9;;6141:1;:13;6121:218;;;6232:7;6216:25;;;;;;6190:10;:13;6201:1;6190:13;;;;;;;;;;;:20;;6174:38;;;;;;:::i;:::-;;;;;;;;:67;6170:162;;6278:10;:13;6289:1;6278:13;;;;;;;;;;;:22;;6254:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;6265:9;6254:21;;;;;;;;:::i;:::-;;;;;;;:46;;;;6311:11;;;;;:::i;:::-;;;;6170:162;6156:3;;;;;:::i;:::-;;;;6121:218;;;;6354:10;6347:17;;;;5902:468;;;:::o;1769:24::-;;;;:::o;9813:414::-;9886:15;9946:26;9988:10;;9975:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9946:53;;10006:17;10035:9;10047:1;10035:13;;10030:166;10054:10;;10050:1;:14;10030:166;;;10110:8;10084:11;:14;10096:1;10084:14;;;;;;;;;;;:22;;;:34;10080:88;;10144:11;:14;10156:1;10144:14;;;;;;;;;;;:24;;10120:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;10131:9;10120:21;;;;;;;;:::i;:::-;;;;;;;:48;;;;10080:88;10177:11;;;;;:::i;:::-;;;;10066:3;;;;;:::i;:::-;;;;10030:166;;;;10211:10;10204:17;;;;9813:414;;;:::o;1710:24::-;;;;:::o;1798:34::-;;;;:::o;3099:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6376:289::-;6455:7;6506:9;6518:1;6506:13;;6501:142;6525:9;;6521:1;:13;6501:142;;;6614:9;6598:27;;;;;;6570:10;:13;6581:1;6570:13;;;;;;;;;;;:22;;6554:40;;;;;;:::i;:::-;;;;;;;;:71;6550:85;;6634:1;6627:8;;;;;6550:85;6536:3;;;;;:::i;:::-;;;;6501:142;;;;6658:1;6651:8;;6376:289;;;;:::o;2647:43::-;;;;;;;;;;;;;;;;;:::o;2000:51::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5616:280::-;5662:15;5711:26;5753:9;;5740:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5711:52;;5775:9;5770:95;5794:9;;5790:1;:13;5770:95;;;5835:10;:13;5846:1;5835:13;;;;;;;;;;;:22;;5819:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;5830:1;5819:13;;;;;;;;:::i;:::-;;;;;;;:38;;;;5805:3;;;;;:::i;:::-;;;;5770:95;;;;5880:10;5873:17;;;5616:280;:::o;2265:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6673:233::-;6744:13;6772:15;6789:11;:21;6801:8;6789:21;;;;;;;;;;;:29;;;6772:46;;6825:20;6848:10;:19;6859:7;6848:19;;;;;;;;;;;:26;;6825:49;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6894:6;6887:13;;;;6673:233;;;:::o;3517:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2515:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1837:30::-;;;;:::o;11497:527::-;11590:15;11652:26;11694:15;;11681:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11652:58;;11717:17;11746:9;11758:1;11746:13;;11741:254;11765:15;;11761:1;:19;11741:254;;;11835:8;11800:20;:23;11821:1;11800:23;;;;;;;;;;;:31;;;:43;:92;;;;;11883:9;11847:20;:23;11868:1;11847:23;;;;;;;;;;;:32;;;:45;11800:92;11796:171;;;11918:49;11935:20;:23;11956:1;11935:23;;;;;;;;;;;:31;;;11918:16;:49::i;:::-;11894:10;11905:9;11894:21;;;;;;;;:::i;:::-;;;;;;;:73;;;;11796:171;11976:11;;;;;:::i;:::-;;;;11782:3;;;;;:::i;:::-;;;;11741:254;;;;12008:10;12001:17;;;;11497:527;;;;:::o;2760:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8066:501::-;8239:5;8205:39;;:12;:21;8218:7;8205:21;;;;;;;;;;;:30;;;;;;;;;;;;:39;;;8201:87;;8255:25;8264:6;8255:25;;;;;;;;;;;;;;;;;:8;:25::i;:::-;8201:87;8294:28;8303:6;8294:28;;;;;;;;;;;;;;;;;:8;:28::i;:::-;8364:4;8331:12;:21;8344:7;8331:21;;;;;;;;;;;:30;;;:37;;;;;;;;;;;;;;;;;;8410:9;8375:11;:22;8387:9;8375:22;;;;;;;;;;;:31;;;:44;;;;;;;:::i;:::-;;;;;;;;8447:9;8426:8;:17;8435:7;8426:17;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;8492:46;;;;;;;;8508:9;8492:46;;;;8519:7;8492:46;;;;8528:9;8492:46;;;8463:10;:26;8474:14;;8463:26;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;;;;;;;;;;8545:14;;:16;;;;;;;;;:::i;:::-;;;;;;8066:501;;;;;:::o;4761:143::-;4816:13;4872:9;:18;4882:7;4872:18;;;;;;;;;;;:26;;4865:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4761:143;;;:::o;2142:48::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12044:360::-;12161:7;12210:4;12177:12;:22;12190:8;12177:22;;;;;;;;;;;:30;;;:37;;;;;;;;;;;;;;;;;;12291:58;;;;;;;;12306:12;;12291:58;;;;12320:9;12291:58;;;;12331:8;12291:58;;;;12341:7;12291:58;;;12262:12;:26;12275:12;;12262:26;;;;;;;;;;;:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;12356:12;;:14;;;;;;;;;:::i;:::-;;;;;;12386:12;;12379:19;;12044:360;;;;;;:::o;8973:268::-;9052:4;9070:9;9082:1;9070:13;;9065:150;9089:9;;9085:1;:13;9065:150;;;9148:6;9119:14;:17;9134:1;9119:17;;;;;;;;;;;:25;;;:35;9118:76;;;;;9187:6;9160:14;:17;9175:1;9160:17;;;;;;;;;;;:23;;;:33;9118:76;9114:93;;;9203:4;9196:11;;;;;9114:93;9100:3;;;;;:::i;:::-;;;;9065:150;;;;9230:5;9223:12;;8973:268;;;;;:::o;1648:23::-;;;;:::o;2387:53::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2850:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12410:460::-;12468:16;12536:36;12589:12;;12575:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12536:66;;12609:15;12636:9;12648:1;12636:13;;12631:199;12655:12;;12651:1;:16;12631:199;;;12715:8;12687:12;:15;12700:1;12687:15;;;;;;;;;;;:24;;;:36;12683:140;;12767:12;:15;12780:1;12767:15;;;;;;;;;;;:26;;;12736:19;12756:7;12736:28;;;;;;;;:::i;:::-;;;;;;;:57;;;;;12804:9;;;;;:::i;:::-;;;;12683:140;12669:3;;;;;:::i;:::-;;;;12631:199;;;;12845:19;12838:26;;;;12410:460;;;:::o;13221:469::-;13283:16;13351:37;13405:10;;13391:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13351:65;;13423:17;13452:9;13464:1;13452:13;;13447:202;13471:10;;13467:1;:14;13447:202;;;13530:10;13501:11;:14;13513:1;13501:14;;;;;;;;;;;:25;;;:39;13497:145;;13587:11;:14;13599:1;13587:14;;;;;;;;;;;:23;;;13553:20;13574:9;13553:31;;;;;;;;:::i;:::-;;;;;;;:57;;;;;13621:11;;;;;:::i;:::-;;;;13497:145;13483:3;;;;;:::i;:::-;;;;13447:202;;;;13664:20;13657:27;;;;13221:469;;;:::o;8838:129::-;8920:41;;;;;;;;8940:4;8920:41;;;;8955:4;8920:41;;;8894:14;:23;8909:7;8894:23;;;;;;;;;;;:67;;;;;;;;;;;;;;;;;;;8838:129;:::o;3741:375::-;3870:7;3941:46;;;;;;;;3956:11;3941:46;;;;3969:8;3941:46;;;;;;;;;;;;;;;;;;;;;;;;3919:9;:19;3929:8;;3919:19;;;;;;;;;;;:68;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;4021:9;3994:14;:24;4009:8;;3994:24;;;;;;;;;;;:36;;;;;;:::i;:::-;;4065:4;4037:12;:21;4050:7;4037:21;;;;;;;;;;;:25;;;:32;;;;;;;;;;;;;;;;;;4076:8;;:10;;;;;;;;;:::i;:::-;;;;;;4102:8;;4095:15;;3741:375;;;;;;:::o;4122:122::-;4229:9;4203:14;:23;4218:7;4203:23;;;;;;;;;;;:35;;;;;;:::i;:::-;;4122:122;;:::o;4250:225::-;4414:11;4382:9;:18;4392:7;4382:18;;;;;;;;;;;:29;;:43;;;;;;:::i;:::-;;4461:8;4432:9;:18;4442:7;4432:18;;;;;;;;;;;:26;;:37;;;;;;:::i;:::-;;4250:225;;;:::o;1971:24::-;;;;:::o;8573:259::-;8694:4;8664:12;:20;8677:6;8664:20;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;8733:45;;;;;;;;8753:6;8733:45;;;;8770:6;8733:45;;;8705:14;:25;8720:9;;8705:25;;;;;;;;;;;:73;;;;;;;;;;;;;;;;;;;8785:9;;:11;;;;;;;;;:::i;:::-;;;;;;8803:23;8812:5;8803:23;;;;;;;;;;;;;;;;;:8;:23::i;:::-;8573:259;;;:::o;10861:155::-;10920:13;10978:11;:22;10990:9;10978:22;;;;;;;;;;;:32;;10971:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10861:155;;;:::o;1872:27::-;;;;:::o;13696:341::-;13814:7;13910:62;;;;;;;;13930:11;13910:62;;;;13943:9;13910:62;;;;13954:7;13910:62;;;;13963:8;13910:62;;;13871:17;:36;13889:17;;13871:36;;;;;;;;;;;:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;13979:17;;:19;;;;;;;;;:::i;:::-;;;;;;14014:17;;14007:24;;13696:341;;;;;;:::o;9523:284::-;9569:15;9618:26;9660:10;;9647:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9618:53;;9683:9;9678:98;9702:10;;9698:1;:14;9678:98;;;9744:11;:14;9756:1;9744:14;;;;;;;;;;;:24;;9728:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;9739:1;9728:13;;;;;;;;:::i;:::-;;;;;;;:40;;;;9714:3;;;;;:::i;:::-;;;;9678:98;;;;9791:10;9784:17;;;9523:284;:::o;10233:297::-;10315:7;10367:9;10379:1;10367:13;;10362:146;10386:10;;10382:1;:14;10362:146;;;10478:10;10462:28;;;;;;10432:11;:14;10444:1;10432:14;;;;;;;;;;;:24;;10416:42;;;;;;:::i;:::-;;;;;;;;:74;10412:88;;10499:1;10492:8;;;;;10412:88;10398:3;;;;;:::i;:::-;;;;10362:146;;;;10523:1;10516:8;;10233:297;;;;:::o;3625:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1941:25::-;;;;:::o;10536:319::-;10619:7;10671:9;10683:1;10671:13;;10666:167;10690:10;;10686:1;:14;10666:167;;;10782:10;10766:28;;;;;;10736:11;:14;10748:1;10736:14;;;;;;;;;;;:24;;10720:42;;;;;;:::i;:::-;;;;;;;;:74;10716:109;;10803:11;:14;10815:1;10803:14;;;;;;;;;;;:22;;;10796:29;;;;;10716:109;10702:3;;;;;:::i;:::-;;;;10666:167;;;;10848:1;10841:8;;10536:319;;;;:::o;14426:667::-;14466:9;14461:58;14485:8;;14481:1;:12;14461:58;;;14507:9;:12;14517:1;14507:12;;;;;;;;;;;;14500:19;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;14495:3;;;;;:::i;:::-;;;;14461:58;;;;14531:9;14526:60;14550:9;;14546:1;:13;14526:60;;;14573:10;:13;14584:1;14573:13;;;;;;;;;;;;14566:20;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;14561:3;;;;;:::i;:::-;;;;14526:60;;;;14598:9;14593:62;14617:10;;14613:1;:14;14593:62;;;14641:11;:14;14653:1;14641:14;;;;;;;;;;;;14634:21;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;14629:3;;;;;:::i;:::-;;;;14593:62;;;;14667:9;14662:71;14686:9;;14682:1;:13;14662:71;;;14709:21;:24;14731:1;14709:24;;;;;;;;;;;;14702:31;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14697:3;;;;;:::i;:::-;;;;14662:71;;;;14745:9;14740:65;14764:12;;14760:1;:16;14740:65;;;14790:12;:15;14803:1;14790:15;;;;;;;;;;;;14783:22;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;14778:3;;;;;:::i;:::-;;;;14740:65;;;;14817:9;14812:62;14836:10;;14832:1;:14;14812:62;;;14860:11;:14;14872:1;14860:14;;;;;;;;;;;;14853:21;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14848:3;;;;;:::i;:::-;;;;14812:62;;;;14886:9;14881:76;14905:15;;14901:1;:19;14881:76;;;14934:20;:23;14955:1;14934:23;;;;;;;;;;;;14927:30;;;;;;;;;;;;;;;;;;;;14922:3;;;;;:::i;:::-;;;;14881:76;;;;14975:1;14964:8;:12;;;;14995:1;14983:9;:13;;;;15016:1;15003:10;:14;;;;15039:1;15024:12;:16;;;;15060:1;15047:10;:14;;;;15086:1;15068:15;:19;;;;14426:667::o;5106:356::-;5230:7;5305:35;;;;;;;;5321:7;5305:35;;;;5330:9;5305:35;;;5281:10;:21;5292:9;;5281:21;;;;;;;;;;;:59;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;5379:4;5349:12;:22;5362:8;5349:22;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;5390:9;;:11;;;;;;;;;:::i;:::-;;;;;;5408:23;5417:5;5408:23;;;;;;;;;;;;;;;;;:8;:23::i;:::-;5447:9;;5440:16;;5106:356;;;;;;:::o;3258:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9247:270::-;9329:7;9350:9;9362:1;9350:13;;9345:147;9369:9;;9365:1;:13;9345:147;;;9428:6;9399:14;:17;9414:1;9399:17;;;;;;;;;;;:25;;;:35;9398:76;;;;;9467:6;9440:14;:17;9455:1;9440:17;;;;;;;;;;;:23;;;:33;9398:76;9394:90;;;9483:1;9476:8;;;;;9394:90;9380:3;;;;;:::i;:::-;;;;9345:147;;;;9507:4;9500:11;;9247:270;;;;;:::o;4910:179::-;5008:57;;;;;;;;5020:9;;5008:57;;;;5031:15;5008:57;;;;5048:5;5008:57;;;;5055:9;5008:57;;;4988:6;:17;4995:9;;4988:17;;;;;;;;;;;:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;5072:9;;:11;;;;;;;;;:::i;:::-;;;;;;4910:179;;:::o;7931:129::-;8044:10;8009:11;:22;8021:9;8009:22;;;;;;;;;;;:32;;:45;;;;;;:::i;:::-;;7931:129;;:::o;4481:274::-;4526:15;4574:26;4616:8;;4603:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4574:51;;4637:9;4632:92;4656:8;;4652:1;:12;4632:92;;;4696:9;:12;4706:1;4696:12;;;;;;;;;;;:20;;4680:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;4691:1;4680:13;;;;;;;;:::i;:::-;;;;;;;:36;;;;4666:3;;;;;:::i;:::-;;;;4632:92;;;;4739:10;4732:17;;;4481:274;:::o;5468:142::-;5595:9;5563:10;:20;5574:8;5563:20;;;;;;;;;;;:29;;:41;;;;;;:::i;:::-;;5468:142;;:::o;1904:32::-;;;;:::o;3375:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14043:377::-;14129:4;14142:9;14154:5;14142:17;;14171:9;14166:229;14190:17;;14186:1;:21;14166:229;;;14262:11;14227:17;:20;14245:1;14227:20;;;;;;;;;;;:31;;;:46;:127;;;;;14323:17;:20;14341:1;14323:20;;;;;;;;;;;:29;;14307:47;;;;;;:::i;:::-;;;;;;;;14293:8;14277:26;;;;;;:77;14227:127;14223:165;;;14374:4;14367:11;;14223:165;14209:3;;;;;:::i;:::-;;;;14166:229;;;;14410:4;14403:11;;;14043:377;;;;:::o;1739:25::-;;;;:::o;12876:339::-;12989:7;13035:4;13005:12;:21;13018:7;13005:21;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;13109:55;;;;;;;;13122:10;;13109:55;;;;13134:11;13109:55;;;;13147:8;13109:55;;;;13157:6;13109:55;;;13083:11;:23;13095:10;;13083:23;;;;;;;;;;;:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;13171:10;;:12;;;;;;;;;:::i;:::-;;;;;;13199:10;;13192:17;;12876:339;;;;;;:::o;7078:588::-;7233:7;7312:41;;;;;;;;7329:8;7312:41;;;;7339:10;7312:41;;;;7351:1;7312:41;;;7286:11;:23;7298:10;;7286:23;;;;;;;;;;;:67;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7391:4;7360:12;:22;7373:8;7360:22;;;;;;;;;;;:28;;;:35;;;;;;;;;;;;;;;;;;7402:10;;:12;;;;;;;;;:::i;:::-;;;;;;7428:9;7423:182;7447:16;:23;7443:1;:27;7423:182;;;7486:81;7514:10;;7526:19;;7547:16;7564:1;7547:19;;;;;;;;:::i;:::-;;;;;;;;7486:27;:81::i;:::-;7576:19;;:21;;;;;;;;;:::i;:::-;;;;;;7472:3;;;;;:::i;:::-;;;;7423:182;;;;7611:23;7620:5;7611:23;;;;;;;;;;;;;;;;;:8;:23::i;:::-;7650:10;;7643:17;;7078:588;;;;;;;:::o;6912:149::-;6969:13;7026:10;:20;7037:8;7026:20;;;;;;;;;;;:29;;7019:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6912:149;;;:::o;1676:29::-;;;;:::o;11033:458::-;11172:7;11218:4;11188:12;:22;11201:8;11188:22;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;11315:54;;;;;;;;11339:8;11315:54;;;;11349:9;11315:54;;;;11360:8;11315:54;;;11275:20;:37;11296:15;;11275:37;;;;;;;;;;;:94;;;;;;;;;;;;;;;;;;;;;;;;;;;11376:15;;:17;;;;;;;;;:::i;:::-;;;;;;11404:8;11400:55;;;11424:23;11433:5;11424:23;;;;;;;;;;;;;;;;;:8;:23::i;:::-;11400:55;11470:15;;11463:22;;11033:458;;;;;;;:::o;2948:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;447:696:4:-;503:13;552:14;589:1;569:17;580:5;569:10;:17::i;:::-;:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:41;;659:11;785:6;781:2;777:15;769:6;765:28;758:35;;820:280;827:4;820:280;;;851:5;;;;;;;;990:8;985:2;978:5;974:14;969:30;964:3;956:44;1044:2;1035:11;;;;;;:::i;:::-;;;;;1077:1;1068:5;:10;820:280;1064:21;820:280;1120:6;1113:13;;;;;447:696;;;:::o;7672:253:7:-;7846:73;;;;;;;;7872:9;7846:73;;;;7883:18;7846:73;;;;7903:15;7846:73;;;7802:21;:41;7824:18;7802:41;;;;;;;;;;;:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7672:253;;;:::o;10139:916:5:-;10192:7;10211:14;10228:1;10211:18;;10276:8;10267:5;:17;10263:103;;10313:8;10304:17;;;;;;:::i;:::-;;;;;10349:2;10339:12;;;;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;;;;:::i;:::-;;;;;10465:2;10455:12;;;;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;;;;:::i;:::-;;;;;10581:2;10571:12;;;;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;;;;:::i;:::-;;;;;10695:1;10685:11;;;;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;;;;:::i;:::-;;;;;10808:1;10798:11;;;;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;;;;:::i;:::-;;;;;10921:1;10911:11;;;;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;;;10950:66;11042:6;11035:13;;;10139:916;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:146::-;1707:6;1702:3;1697;1684:30;1748:1;1739:6;1734:3;1730:16;1723:27;1610:146;;;:::o;1762:425::-;1840:5;1865:66;1881:49;1923:6;1881:49;:::i;:::-;1865:66;:::i;:::-;1856:75;;1954:6;1947:5;1940:21;1992:4;1985:5;1981:16;2030:3;2021:6;2016:3;2012:16;2009:25;2006:112;;;2037:79;;:::i;:::-;2006:112;2127:54;2174:6;2169:3;2164;2127:54;:::i;:::-;1846:341;1762:425;;;;;:::o;2207:340::-;2263:5;2312:3;2305:4;2297:6;2293:17;2289:27;2279:122;;2320:79;;:::i;:::-;2279:122;2437:6;2424:20;2462:79;2537:3;2529:6;2522:4;2514:6;2510:17;2462:79;:::i;:::-;2453:88;;2269:278;2207:340;;;;:::o;2553:509::-;2622:6;2671:2;2659:9;2650:7;2646:23;2642:32;2639:119;;;2677:79;;:::i;:::-;2639:119;2825:1;2814:9;2810:17;2797:31;2855:18;2847:6;2844:30;2841:117;;;2877:79;;:::i;:::-;2841:117;2982:63;3037:7;3028:6;3017:9;3013:22;2982:63;:::i;:::-;2972:73;;2768:287;2553:509;;;;:::o;3068:124::-;3145:6;3179:5;3173:12;3163:22;;3068:124;;;:::o;3198:194::-;3307:11;3341:6;3336:3;3329:19;3381:4;3376:3;3372:14;3357:29;;3198:194;;;;:::o;3398:142::-;3475:4;3498:3;3490:11;;3528:4;3523:3;3519:14;3511:22;;3398:142;;;:::o;3546:99::-;3598:6;3632:5;3626:12;3616:22;;3546:99;;;:::o;3651:159::-;3725:11;3759:6;3754:3;3747:19;3799:4;3794:3;3790:14;3775:29;;3651:159;;;;:::o;3816:246::-;3897:1;3907:113;3921:6;3918:1;3915:13;3907:113;;;4006:1;4001:3;3997:11;3991:18;3987:1;3982:3;3978:11;3971:39;3943:2;3940:1;3936:10;3931:15;;3907:113;;;4054:1;4045:6;4040:3;4036:16;4029:27;3878:184;3816:246;;;:::o;4068:357::-;4146:3;4174:39;4207:5;4174:39;:::i;:::-;4229:61;4283:6;4278:3;4229:61;:::i;:::-;4222:68;;4299:65;4357:6;4352:3;4345:4;4338:5;4334:16;4299:65;:::i;:::-;4389:29;4411:6;4389:29;:::i;:::-;4384:3;4380:39;4373:46;;4150:275;4068:357;;;;:::o;4431:196::-;4520:10;4555:66;4617:3;4609:6;4555:66;:::i;:::-;4541:80;;4431:196;;;;:::o;4633:123::-;4713:4;4745;4740:3;4736:14;4728:22;;4633:123;;;:::o;4790:991::-;4929:3;4958:64;5016:5;4958:64;:::i;:::-;5038:96;5127:6;5122:3;5038:96;:::i;:::-;5031:103;;5160:3;5205:4;5197:6;5193:17;5188:3;5184:27;5235:66;5295:5;5235:66;:::i;:::-;5324:7;5355:1;5340:396;5365:6;5362:1;5359:13;5340:396;;;5436:9;5430:4;5426:20;5421:3;5414:33;5487:6;5481:13;5515:84;5594:4;5579:13;5515:84;:::i;:::-;5507:92;;5622:70;5685:6;5622:70;:::i;:::-;5612:80;;5721:4;5716:3;5712:14;5705:21;;5400:336;5387:1;5384;5380:9;5375:14;;5340:396;;;5344:14;5752:4;5745:11;;5772:3;5765:10;;4934:847;;;;;4790:991;;;;:::o;5787:413::-;5950:4;5988:2;5977:9;5973:18;5965:26;;6037:9;6031:4;6027:20;6023:1;6012:9;6008:17;6001:47;6065:128;6188:4;6179:6;6065:128;:::i;:::-;6057:136;;5787:413;;;;:::o;6206:77::-;6243:7;6272:5;6261:16;;6206:77;;;:::o;6289:118::-;6376:24;6394:5;6376:24;:::i;:::-;6371:3;6364:37;6289:118;;:::o;6413:222::-;6506:4;6544:2;6533:9;6529:18;6521:26;;6557:71;6625:1;6614:9;6610:17;6601:6;6557:71;:::i;:::-;6413:222;;;;:::o;6641:122::-;6714:24;6732:5;6714:24;:::i;:::-;6707:5;6704:35;6694:63;;6753:1;6750;6743:12;6694:63;6641:122;:::o;6769:139::-;6815:5;6853:6;6840:20;6831:29;;6869:33;6896:5;6869:33;:::i;:::-;6769:139;;;;:::o;6914:329::-;6973:6;7022:2;7010:9;7001:7;6997:23;6993:32;6990:119;;;7028:79;;:::i;:::-;6990:119;7148:1;7173:53;7218:7;7209:6;7198:9;7194:22;7173:53;:::i;:::-;7163:63;;7119:117;6914:329;;;;:::o;7249:442::-;7398:4;7436:2;7425:9;7421:18;7413:26;;7449:71;7517:1;7506:9;7502:17;7493:6;7449:71;:::i;:::-;7530:72;7598:2;7587:9;7583:18;7574:6;7530:72;:::i;:::-;7612;7680:2;7669:9;7665:18;7656:6;7612:72;:::i;:::-;7249:442;;;;;;:::o;7697:169::-;7781:11;7815:6;7810:3;7803:19;7855:4;7850:3;7846:14;7831:29;;7697:169;;;;:::o;7872:377::-;7960:3;7988:39;8021:5;7988:39;:::i;:::-;8043:71;8107:6;8102:3;8043:71;:::i;:::-;8036:78;;8123:65;8181:6;8176:3;8169:4;8162:5;8158:16;8123:65;:::i;:::-;8213:29;8235:6;8213:29;:::i;:::-;8208:3;8204:39;8197:46;;7964:285;7872:377;;;;:::o;8255:715::-;8464:4;8502:2;8491:9;8487:18;8479:26;;8551:9;8545:4;8541:20;8537:1;8526:9;8522:17;8515:47;8579:78;8652:4;8643:6;8579:78;:::i;:::-;8571:86;;8704:9;8698:4;8694:20;8689:2;8678:9;8674:18;8667:48;8732:78;8805:4;8796:6;8732:78;:::i;:::-;8724:86;;8857:9;8851:4;8847:20;8842:2;8831:9;8827:18;8820:48;8885:78;8958:4;8949:6;8885:78;:::i;:::-;8877:86;;8255:715;;;;;;:::o;8976:332::-;9097:4;9135:2;9124:9;9120:18;9112:26;;9148:71;9216:1;9205:9;9201:17;9192:6;9148:71;:::i;:::-;9229:72;9297:2;9286:9;9282:18;9273:6;9229:72;:::i;:::-;8976:332;;;;;:::o;9314:313::-;9427:4;9465:2;9454:9;9450:18;9442:26;;9514:9;9508:4;9504:20;9500:1;9489:9;9485:17;9478:47;9542:78;9615:4;9606:6;9542:78;:::i;:::-;9534:86;;9314:313;;;;:::o;9633:644::-;9830:4;9868:3;9857:9;9853:19;9845:27;;9882:71;9950:1;9939:9;9935:17;9926:6;9882:71;:::i;:::-;9963:72;10031:2;10020:9;10016:18;10007:6;9963:72;:::i;:::-;10045;10113:2;10102:9;10098:18;10089:6;10045:72;:::i;:::-;10164:9;10158:4;10154:20;10149:2;10138:9;10134:18;10127:48;10192:78;10265:4;10256:6;10192:78;:::i;:::-;10184:86;;9633:644;;;;;;;:::o;10283:533::-;10452:4;10490:2;10479:9;10475:18;10467:26;;10503:71;10571:1;10560:9;10556:17;10547:6;10503:71;:::i;:::-;10621:9;10615:4;10611:20;10606:2;10595:9;10591:18;10584:48;10649:78;10722:4;10713:6;10649:78;:::i;:::-;10641:86;;10737:72;10805:2;10794:9;10790:18;10781:6;10737:72;:::i;:::-;10283:533;;;;;;:::o;10822:474::-;10890:6;10898;10947:2;10935:9;10926:7;10922:23;10918:32;10915:119;;;10953:79;;:::i;:::-;10915:119;11073:1;11098:53;11143:7;11134:6;11123:9;11119:22;11098:53;:::i;:::-;11088:63;;11044:117;11200:2;11226:53;11271:7;11262:6;11251:9;11247:22;11226:53;:::i;:::-;11216:63;;11171:118;10822:474;;;;;:::o;11302:735::-;11519:4;11557:3;11546:9;11542:19;11534:27;;11571:71;11639:1;11628:9;11624:17;11615:6;11571:71;:::i;:::-;11652:72;11720:2;11709:9;11705:18;11696:6;11652:72;:::i;:::-;11771:9;11765:4;11761:20;11756:2;11745:9;11741:18;11734:48;11799:78;11872:4;11863:6;11799:78;:::i;:::-;11791:86;;11924:9;11918:4;11914:20;11909:2;11898:9;11894:18;11887:48;11952:78;12025:4;12016:6;11952:78;:::i;:::-;11944:86;;11302:735;;;;;;;:::o;12043:1271::-;12158:6;12166;12174;12182;12190;12239:3;12227:9;12218:7;12214:23;12210:33;12207:120;;;12246:79;;:::i;:::-;12207:120;12366:1;12391:53;12436:7;12427:6;12416:9;12412:22;12391:53;:::i;:::-;12381:63;;12337:117;12493:2;12519:53;12564:7;12555:6;12544:9;12540:22;12519:53;:::i;:::-;12509:63;;12464:118;12621:2;12647:53;12692:7;12683:6;12672:9;12668:22;12647:53;:::i;:::-;12637:63;;12592:118;12777:2;12766:9;12762:18;12749:32;12808:18;12800:6;12797:30;12794:117;;;12830:79;;:::i;:::-;12794:117;12935:63;12990:7;12981:6;12970:9;12966:22;12935:63;:::i;:::-;12925:73;;12720:288;13075:3;13064:9;13060:19;13047:33;13107:18;13099:6;13096:30;13093:117;;;13129:79;;:::i;:::-;13093:117;13234:63;13289:7;13280:6;13269:9;13265:22;13234:63;:::i;:::-;13224:73;;13018:289;12043:1271;;;;;;;;:::o;13320:1125::-;13426:6;13434;13442;13450;13499:3;13487:9;13478:7;13474:23;13470:33;13467:120;;;13506:79;;:::i;:::-;13467:120;13626:1;13651:53;13696:7;13687:6;13676:9;13672:22;13651:53;:::i;:::-;13641:63;;13597:117;13781:2;13770:9;13766:18;13753:32;13812:18;13804:6;13801:30;13798:117;;;13834:79;;:::i;:::-;13798:117;13939:63;13994:7;13985:6;13974:9;13970:22;13939:63;:::i;:::-;13929:73;;13724:288;14079:2;14068:9;14064:18;14051:32;14110:18;14102:6;14099:30;14096:117;;;14132:79;;:::i;:::-;14096:117;14237:63;14292:7;14283:6;14272:9;14268:22;14237:63;:::i;:::-;14227:73;;14022:288;14349:2;14375:53;14420:7;14411:6;14400:9;14396:22;14375:53;:::i;:::-;14365:63;;14320:118;13320:1125;;;;;;;:::o;14451:90::-;14485:7;14528:5;14521:13;14514:21;14503:32;;14451:90;;;:::o;14547:109::-;14628:21;14643:5;14628:21;:::i;:::-;14623:3;14616:34;14547:109;;:::o;14662:210::-;14749:4;14787:2;14776:9;14772:18;14764:26;;14800:65;14862:1;14851:9;14847:17;14838:6;14800:65;:::i;:::-;14662:210;;;;:::o;14878:514::-;15039:4;15077:2;15066:9;15062:18;15054:26;;15126:9;15120:4;15116:20;15112:1;15101:9;15097:17;15090:47;15154:78;15227:4;15218:6;15154:78;:::i;:::-;15146:86;;15279:9;15273:4;15269:20;15264:2;15253:9;15249:18;15242:48;15307:78;15380:4;15371:6;15307:78;:::i;:::-;15299:86;;14878:514;;;;;:::o;15398:114::-;15465:6;15499:5;15493:12;15483:22;;15398:114;;;:::o;15518:184::-;15617:11;15651:6;15646:3;15639:19;15691:4;15686:3;15682:14;15667:29;;15518:184;;;;:::o;15708:132::-;15775:4;15798:3;15790:11;;15828:4;15823:3;15819:14;15811:22;;15708:132;;;:::o;15846:108::-;15923:24;15941:5;15923:24;:::i;:::-;15918:3;15911:37;15846:108;;:::o;15960:179::-;16029:10;16050:46;16092:3;16084:6;16050:46;:::i;:::-;16128:4;16123:3;16119:14;16105:28;;15960:179;;;;:::o;16145:113::-;16215:4;16247;16242:3;16238:14;16230:22;;16145:113;;;:::o;16294:732::-;16413:3;16442:54;16490:5;16442:54;:::i;:::-;16512:86;16591:6;16586:3;16512:86;:::i;:::-;16505:93;;16622:56;16672:5;16622:56;:::i;:::-;16701:7;16732:1;16717:284;16742:6;16739:1;16736:13;16717:284;;;16818:6;16812:13;16845:63;16904:3;16889:13;16845:63;:::i;:::-;16838:70;;16931:60;16984:6;16931:60;:::i;:::-;16921:70;;16777:224;16764:1;16761;16757:9;16752:14;;16717:284;;;16721:14;17017:3;17010:10;;16418:608;;;16294:732;;;;:::o;17032:373::-;17175:4;17213:2;17202:9;17198:18;17190:26;;17262:9;17256:4;17252:20;17248:1;17237:9;17233:17;17226:47;17290:108;17393:4;17384:6;17290:108;:::i;:::-;17282:116;;17032:373;;;;:::o;17411:1305::-;17527:6;17535;17543;17551;17600:3;17588:9;17579:7;17575:23;17571:33;17568:120;;;17607:79;;:::i;:::-;17568:120;17755:1;17744:9;17740:17;17727:31;17785:18;17777:6;17774:30;17771:117;;;17807:79;;:::i;:::-;17771:117;17912:63;17967:7;17958:6;17947:9;17943:22;17912:63;:::i;:::-;17902:73;;17698:287;18052:2;18041:9;18037:18;18024:32;18083:18;18075:6;18072:30;18069:117;;;18105:79;;:::i;:::-;18069:117;18210:63;18265:7;18256:6;18245:9;18241:22;18210:63;:::i;:::-;18200:73;;17995:288;18350:2;18339:9;18335:18;18322:32;18381:18;18373:6;18370:30;18367:117;;;18403:79;;:::i;:::-;18367:117;18508:63;18563:7;18554:6;18543:9;18539:22;18508:63;:::i;:::-;18498:73;;18293:288;18620:2;18646:53;18691:7;18682:6;18671:9;18667:22;18646:53;:::i;:::-;18636:63;;18591:118;17411:1305;;;;;;;:::o;18722:654::-;18800:6;18808;18857:2;18845:9;18836:7;18832:23;18828:32;18825:119;;;18863:79;;:::i;:::-;18825:119;18983:1;19008:53;19053:7;19044:6;19033:9;19029:22;19008:53;:::i;:::-;18998:63;;18954:117;19138:2;19127:9;19123:18;19110:32;19169:18;19161:6;19158:30;19155:117;;;19191:79;;:::i;:::-;19155:117;19296:63;19351:7;19342:6;19331:9;19327:22;19296:63;:::i;:::-;19286:73;;19081:288;18722:654;;;;;:::o;19382:979::-;19479:6;19487;19495;19544:2;19532:9;19523:7;19519:23;19515:32;19512:119;;;19550:79;;:::i;:::-;19512:119;19670:1;19695:53;19740:7;19731:6;19720:9;19716:22;19695:53;:::i;:::-;19685:63;;19641:117;19825:2;19814:9;19810:18;19797:32;19856:18;19848:6;19845:30;19842:117;;;19878:79;;:::i;:::-;19842:117;19983:63;20038:7;20029:6;20018:9;20014:22;19983:63;:::i;:::-;19973:73;;19768:288;20123:2;20112:9;20108:18;20095:32;20154:18;20146:6;20143:30;20140:117;;;20176:79;;:::i;:::-;20140:117;20281:63;20336:7;20327:6;20316:9;20312:22;20281:63;:::i;:::-;20271:73;;20066:288;19382:979;;;;;:::o;20367:799::-;20454:6;20462;20470;20519:2;20507:9;20498:7;20494:23;20490:32;20487:119;;;20525:79;;:::i;:::-;20487:119;20645:1;20670:53;20715:7;20706:6;20695:9;20691:22;20670:53;:::i;:::-;20660:63;;20616:117;20772:2;20798:53;20843:7;20834:6;20823:9;20819:22;20798:53;:::i;:::-;20788:63;;20743:118;20928:2;20917:9;20913:18;20900:32;20959:18;20951:6;20948:30;20945:117;;;20981:79;;:::i;:::-;20945:117;21086:63;21141:7;21132:6;21121:9;21117:22;21086:63;:::i;:::-;21076:73;;20871:288;20367:799;;;;;:::o;21172:945::-;21268:6;21276;21284;21292;21341:3;21329:9;21320:7;21316:23;21312:33;21309:120;;;21348:79;;:::i;:::-;21309:120;21468:1;21493:53;21538:7;21529:6;21518:9;21514:22;21493:53;:::i;:::-;21483:63;;21439:117;21595:2;21621:53;21666:7;21657:6;21646:9;21642:22;21621:53;:::i;:::-;21611:63;;21566:118;21723:2;21749:53;21794:7;21785:6;21774:9;21770:22;21749:53;:::i;:::-;21739:63;;21694:118;21879:2;21868:9;21864:18;21851:32;21910:18;21902:6;21899:30;21896:117;;;21932:79;;:::i;:::-;21896:117;22037:63;22092:7;22083:6;22072:9;22068:22;22037:63;:::i;:::-;22027:73;;21822:288;21172:945;;;;;;;:::o;22123:1012::-;22392:4;22430:3;22419:9;22415:19;22407:27;;22444:71;22512:1;22501:9;22497:17;22488:6;22444:71;:::i;:::-;22525:66;22587:2;22576:9;22572:18;22563:6;22525:66;:::i;:::-;22601;22663:2;22652:9;22648:18;22639:6;22601:66;:::i;:::-;22677;22739:2;22728:9;22724:18;22715:6;22677:66;:::i;:::-;22753:67;22815:3;22804:9;22800:19;22791:6;22753:67;:::i;:::-;22830;22892:3;22881:9;22877:19;22868:6;22830:67;:::i;:::-;22907;22969:3;22958:9;22954:19;22945:6;22907:67;:::i;:::-;22984;23046:3;23035:9;23031:19;23022:6;22984:67;:::i;:::-;23061;23123:3;23112:9;23108:19;23099:6;23061:67;:::i;:::-;22123:1012;;;;;;;;;;;;:::o;23141:1305::-;23257:6;23265;23273;23281;23330:3;23318:9;23309:7;23305:23;23301:33;23298:120;;;23337:79;;:::i;:::-;23298:120;23485:1;23474:9;23470:17;23457:31;23515:18;23507:6;23504:30;23501:117;;;23537:79;;:::i;:::-;23501:117;23642:63;23697:7;23688:6;23677:9;23673:22;23642:63;:::i;:::-;23632:73;;23428:287;23782:2;23771:9;23767:18;23754:32;23813:18;23805:6;23802:30;23799:117;;;23835:79;;:::i;:::-;23799:117;23940:63;23995:7;23986:6;23975:9;23971:22;23940:63;:::i;:::-;23930:73;;23725:288;24052:2;24078:53;24123:7;24114:6;24103:9;24099:22;24078:53;:::i;:::-;24068:63;;24023:118;24208:2;24197:9;24193:18;24180:32;24239:18;24231:6;24228:30;24225:117;;;24261:79;;:::i;:::-;24225:117;24366:63;24421:7;24412:6;24401:9;24397:22;24366:63;:::i;:::-;24356:73;;24151:288;23141:1305;;;;;;;:::o;24452:834::-;24540:6;24548;24597:2;24585:9;24576:7;24572:23;24568:32;24565:119;;;24603:79;;:::i;:::-;24565:119;24751:1;24740:9;24736:17;24723:31;24781:18;24773:6;24770:30;24767:117;;;24803:79;;:::i;:::-;24767:117;24908:63;24963:7;24954:6;24943:9;24939:22;24908:63;:::i;:::-;24898:73;;24694:287;25048:2;25037:9;25033:18;25020:32;25079:18;25071:6;25068:30;25065:117;;;25101:79;;:::i;:::-;25065:117;25206:63;25261:7;25252:6;25241:9;25237:22;25206:63;:::i;:::-;25196:73;;24991:288;24452:834;;;;;:::o;25292:945::-;25388:6;25396;25404;25412;25461:3;25449:9;25440:7;25436:23;25432:33;25429:120;;;25468:79;;:::i;:::-;25429:120;25588:1;25613:53;25658:7;25649:6;25638:9;25634:22;25613:53;:::i;:::-;25603:63;;25559:117;25743:2;25732:9;25728:18;25715:32;25774:18;25766:6;25763:30;25760:117;;;25796:79;;:::i;:::-;25760:117;25901:63;25956:7;25947:6;25936:9;25932:22;25901:63;:::i;:::-;25891:73;;25686:288;26013:2;26039:53;26084:7;26075:6;26064:9;26060:22;26039:53;:::i;:::-;26029:63;;25984:118;26141:2;26167:53;26212:7;26203:6;26192:9;26188:22;26167:53;:::i;:::-;26157:63;;26112:118;25292:945;;;;;;;:::o;26243:321::-;26330:4;26420:18;26412:6;26409:30;26406:56;;;26442:18;;:::i;:::-;26406:56;26492:4;26484:6;26480:17;26472:25;;26552:4;26546;26542:15;26534:23;;26243:321;;;:::o;26570:117::-;26679:1;26676;26669:12;26709:945;26815:5;26840:91;26856:74;26923:6;26856:74;:::i;:::-;26840:91;:::i;:::-;26831:100;;26951:5;26980:6;26973:5;26966:21;27014:4;27007:5;27003:16;26996:23;;27067:4;27059:6;27055:17;27047:6;27043:30;27096:3;27088:6;27085:15;27082:122;;;27115:79;;:::i;:::-;27082:122;27230:6;27213:435;27247:6;27242:3;27239:15;27213:435;;;27336:3;27323:17;27372:18;27359:11;27356:35;27353:122;;;27394:79;;:::i;:::-;27353:122;27518:11;27510:6;27506:24;27556:47;27599:3;27587:10;27556:47;:::i;:::-;27551:3;27544:60;27633:4;27628:3;27624:14;27617:21;;27289:359;;27273:4;27268:3;27264:14;27257:21;;27213:435;;;27217:21;26821:833;;26709:945;;;;;:::o;27676:390::-;27757:5;27806:3;27799:4;27791:6;27787:17;27783:27;27773:122;;27814:79;;:::i;:::-;27773:122;27931:6;27918:20;27956:104;28056:3;28048:6;28041:4;28033:6;28029:17;27956:104;:::i;:::-;27947:113;;27763:303;27676:390;;;;:::o;28072:1501::-;28222:6;28230;28238;28246;28254;28303:3;28291:9;28282:7;28278:23;28274:33;28271:120;;;28310:79;;:::i;:::-;28271:120;28458:1;28447:9;28443:17;28430:31;28488:18;28480:6;28477:30;28474:117;;;28510:79;;:::i;:::-;28474:117;28615:63;28670:7;28661:6;28650:9;28646:22;28615:63;:::i;:::-;28605:73;;28401:287;28727:2;28753:53;28798:7;28789:6;28778:9;28774:22;28753:53;:::i;:::-;28743:63;;28698:118;28883:2;28872:9;28868:18;28855:32;28914:18;28906:6;28903:30;28900:117;;;28936:79;;:::i;:::-;28900:117;29041:88;29121:7;29112:6;29101:9;29097:22;29041:88;:::i;:::-;29031:98;;28826:313;29178:2;29204:53;29249:7;29240:6;29229:9;29225:22;29204:53;:::i;:::-;29194:63;;29149:118;29334:3;29323:9;29319:19;29306:33;29366:18;29358:6;29355:30;29352:117;;;29388:79;;:::i;:::-;29352:117;29493:63;29548:7;29539:6;29528:9;29524:22;29493:63;:::i;:::-;29483:73;;29277:289;28072:1501;;;;;;;;:::o;29579:116::-;29649:21;29664:5;29649:21;:::i;:::-;29642:5;29639:32;29629:60;;29685:1;29682;29675:12;29629:60;29579:116;:::o;29701:133::-;29744:5;29782:6;29769:20;29760:29;;29798:30;29822:5;29798:30;:::i;:::-;29701:133;;;;:::o;29840:1085::-;29942:6;29950;29958;29966;29974;30023:3;30011:9;30002:7;29998:23;29994:33;29991:120;;;30030:79;;:::i;:::-;29991:120;30150:1;30175:53;30220:7;30211:6;30200:9;30196:22;30175:53;:::i;:::-;30165:63;;30121:117;30277:2;30303:53;30348:7;30339:6;30328:9;30324:22;30303:53;:::i;:::-;30293:63;;30248:118;30405:2;30431:53;30476:7;30467:6;30456:9;30452:22;30431:53;:::i;:::-;30421:63;;30376:118;30561:2;30550:9;30546:18;30533:32;30592:18;30584:6;30581:30;30578:117;;;30614:79;;:::i;:::-;30578:117;30719:63;30774:7;30765:6;30754:9;30750:22;30719:63;:::i;:::-;30709:73;;30504:288;30831:3;30858:50;30900:7;30891:6;30880:9;30876:22;30858:50;:::i;:::-;30848:60;;30802:116;29840:1085;;;;;;;;:::o;30931:533::-;31100:4;31138:2;31127:9;31123:18;31115:26;;31151:71;31219:1;31208:9;31204:17;31195:6;31151:71;:::i;:::-;31232:72;31300:2;31289:9;31285:18;31276:6;31232:72;:::i;:::-;31351:9;31345:4;31341:20;31336:2;31325:9;31321:18;31314:48;31379:78;31452:4;31443:6;31379:78;:::i;:::-;31371:86;;30931:533;;;;;;:::o;31470:180::-;31518:77;31515:1;31508:88;31615:4;31612:1;31605:15;31639:4;31636:1;31629:15;31656:320;31700:6;31737:1;31731:4;31727:12;31717:22;;31784:1;31778:4;31774:12;31805:18;31795:81;;31861:4;31853:6;31849:17;31839:27;;31795:81;31923:2;31915:6;31912:14;31892:18;31889:38;31886:84;;31942:18;;:::i;:::-;31886:84;31707:269;31656:320;;;:::o;31982:147::-;32083:11;32120:3;32105:18;;31982:147;;;;:::o;32135:144::-;32187:4;32210:3;32202:11;;32233:3;32230:1;32223:14;32267:4;32264:1;32254:18;32246:26;;32135:144;;;:::o;32307:878::-;32412:3;32449:5;32443:12;32478:36;32504:9;32478:36;:::i;:::-;32530:88;32611:6;32606:3;32530:88;:::i;:::-;32523:95;;32649:1;32638:9;32634:17;32665:1;32660:166;;;;32840:1;32835:344;;;;32627:552;;32660:166;32744:4;32740:9;32729;32725:25;32720:3;32713:38;32806:6;32799:14;32792:22;32784:6;32780:35;32775:3;32771:45;32764:52;;32660:166;;32835:344;32902:41;32937:5;32902:41;:::i;:::-;32965:1;32979:154;32993:6;32990:1;32987:13;32979:154;;;33067:7;33061:14;33057:1;33052:3;33048:11;33041:35;33117:1;33108:7;33104:15;33093:26;;33015:4;33012:1;33008:12;33003:17;;32979:154;;;33162:6;33157:3;33153:16;33146:23;;32842:337;;32627:552;;32416:769;;32307:878;;;;:::o;33191:273::-;33322:3;33344:94;33434:3;33425:6;33344:94;:::i;:::-;33337:101;;33455:3;33448:10;;33191:273;;;;:::o;33470:180::-;33518:77;33515:1;33508:88;33615:4;33612:1;33605:15;33639:4;33636:1;33629:15;33656:180;33704:77;33701:1;33694:88;33801:4;33798:1;33791:15;33825:4;33822:1;33815:15;33842:233;33881:3;33904:24;33922:5;33904:24;:::i;:::-;33895:33;;33950:66;33943:5;33940:77;33937:103;;34020:18;;:::i;:::-;33937:103;34067:1;34060:5;34056:13;34049:20;;33842:233;;;:::o;34081:191::-;34121:3;34140:20;34158:1;34140:20;:::i;:::-;34135:25;;34174:20;34192:1;34174:20;:::i;:::-;34169:25;;34217:1;34214;34210:9;34203:16;;34238:3;34235:1;34232:10;34229:36;;;34245:18;;:::i;:::-;34229:36;34081:191;;;;:::o;34278:141::-;34327:4;34350:3;34342:11;;34373:3;34370:1;34363:14;34407:4;34404:1;34394:18;34386:26;;34278:141;;;:::o;34425:93::-;34462:6;34509:2;34504;34497:5;34493:14;34489:23;34479:33;;34425:93;;;:::o;34524:107::-;34568:8;34618:5;34612:4;34608:16;34587:37;;34524:107;;;;:::o;34637:393::-;34706:6;34756:1;34744:10;34740:18;34779:97;34809:66;34798:9;34779:97;:::i;:::-;34897:39;34927:8;34916:9;34897:39;:::i;:::-;34885:51;;34969:4;34965:9;34958:5;34954:21;34945:30;;35018:4;35008:8;35004:19;34997:5;34994:30;34984:40;;34713:317;;34637:393;;;;;:::o;35036:60::-;35064:3;35085:5;35078:12;;35036:60;;;:::o;35102:142::-;35152:9;35185:53;35203:34;35212:24;35230:5;35212:24;:::i;:::-;35203:34;:::i;:::-;35185:53;:::i;:::-;35172:66;;35102:142;;;:::o;35250:75::-;35293:3;35314:5;35307:12;;35250:75;;;:::o;35331:269::-;35441:39;35472:7;35441:39;:::i;:::-;35502:91;35551:41;35575:16;35551:41;:::i;:::-;35543:6;35536:4;35530:11;35502:91;:::i;:::-;35496:4;35489:105;35407:193;35331:269;;;:::o;35606:73::-;35651:3;35606:73;:::o;35685:189::-;35762:32;;:::i;:::-;35803:65;35861:6;35853;35847:4;35803:65;:::i;:::-;35738:136;35685:189;;:::o;35880:186::-;35940:120;35957:3;35950:5;35947:14;35940:120;;;36011:39;36048:1;36041:5;36011:39;:::i;:::-;35984:1;35977:5;35973:13;35964:22;;35940:120;;;35880:186;;:::o;36072:543::-;36173:2;36168:3;36165:11;36162:446;;;36207:38;36239:5;36207:38;:::i;:::-;36291:29;36309:10;36291:29;:::i;:::-;36281:8;36277:44;36474:2;36462:10;36459:18;36456:49;;;36495:8;36480:23;;36456:49;36518:80;36574:22;36592:3;36574:22;:::i;:::-;36564:8;36560:37;36547:11;36518:80;:::i;:::-;36177:431;;36162:446;36072:543;;;:::o;36621:117::-;36675:8;36725:5;36719:4;36715:16;36694:37;;36621:117;;;;:::o;36744:169::-;36788:6;36821:51;36869:1;36865:6;36857:5;36854:1;36850:13;36821:51;:::i;:::-;36817:56;36902:4;36896;36892:15;36882:25;;36795:118;36744:169;;;;:::o;36918:295::-;36994:4;37140:29;37165:3;37159:4;37140:29;:::i;:::-;37132:37;;37202:3;37199:1;37195:11;37189:4;37186:21;37178:29;;36918:295;;;;:::o;37218:1395::-;37335:37;37368:3;37335:37;:::i;:::-;37437:18;37429:6;37426:30;37423:56;;;37459:18;;:::i;:::-;37423:56;37503:38;37535:4;37529:11;37503:38;:::i;:::-;37588:67;37648:6;37640;37634:4;37588:67;:::i;:::-;37682:1;37706:4;37693:17;;37738:2;37730:6;37727:14;37755:1;37750:618;;;;38412:1;38429:6;38426:77;;;38478:9;38473:3;38469:19;38463:26;38454:35;;38426:77;38529:67;38589:6;38582:5;38529:67;:::i;:::-;38523:4;38516:81;38385:222;37720:887;;37750:618;37802:4;37798:9;37790:6;37786:22;37836:37;37868:4;37836:37;:::i;:::-;37895:1;37909:208;37923:7;37920:1;37917:14;37909:208;;;38002:9;37997:3;37993:19;37987:26;37979:6;37972:42;38053:1;38045:6;38041:14;38031:24;;38100:2;38089:9;38085:18;38072:31;;37946:4;37943:1;37939:12;37934:17;;37909:208;;;38145:6;38136:7;38133:19;38130:179;;;38203:9;38198:3;38194:19;38188:26;38246:48;38288:4;38280:6;38276:17;38265:9;38246:48;:::i;:::-;38238:6;38231:64;38153:156;38130:179;38355:1;38351;38343:6;38339:14;38335:22;38329:4;38322:36;37757:611;;;37720:887;;37310:1303;;;37218:1395;;:::o;38619:180::-;38667:77;38664:1;38657:88;38764:4;38761:1;38754:15;38788:4;38785:1;38778:15"},"gasEstimates":{"creation":{"codeDepositCost":"3869600","executionCost":"4395","totalCost":"3873995"},"external":{"_dao_ids()":"2519","_dao_uris(uint256)":"infinite","_donated(uint256)":"infinite","_donations(uint256)":"infinite","_donations_ids()":"2517","_feed_ids()":"2542","_feeds(uint256)":"infinite","_goal_ids()":"2498","_goal_uris(uint256)":"infinite","_ideas_ids()":"2518","_ideas_uris(uint256)":"infinite","_ideas_vote_ids()":"2498","_join_ids()":"2521","_joined_person(uint256)":"infinite","_message_ids()":"2541","_message_read_ids()":"2540","_reply_ids()":"2563","_smart_contract_ids()":"2520","_smart_contracts_uris(uint256)":"infinite","_template_uris(uint256)":"infinite","_user_badges(uint256)":"infinite","add_Feed(string,string)":"infinite","add_donation(uint256,uint256,uint256,string,string)":"infinite","all_goal_ideas_votes(uint256)":"infinite","all_messages(uint256)":"infinite","all_read_messages(uint256)":"infinite","all_replies(uint256)":"infinite","create_dao(string,string,string,uint256)":"infinite","create_goal(string,string,uint256,string)":"infinite","create_goal_ideas_vote(uint256,uint256,uint256,string,bool)":"infinite","create_ideas(string,uint256,string[],uint256,string)":"infinite","dao_uri(uint256)":"infinite","getMsgIDs(uint256)":"infinite","getReadMsg(uint256,string)":"infinite","getReplyIDs(uint256)":"infinite","get_all_daos()":"infinite","get_all_goals()":"infinite","get_all_goals_by_dao_id(string)":"infinite","get_all_ideas()":"infinite","get_all_ideas_by_goal_id(uint256)":"infinite","get_dao_id_by_ideas_id(uint256)":"infinite","get_goal_id_by_goal_uri(string)":"infinite","get_goal_id_from_ideas_uri(string)":"infinite","get_ideas_id_by_ideas_uri(string)":"infinite","get_ideas_votes_from_goal(uint256,uint256)":"infinite","get_person_joinedID(uint256,uint256)":"infinite","goal_uri(uint256)":"infinite","ideas_uri(uint256)":"infinite","is_person_joined(uint256,uint256)":"infinite","join_community(uint256,uint256,string)":"infinite","leave_community(uint256)":"44906","reset_all()":"infinite","sendMsg(uint256,string,string,uint256)":"infinite","sendReadMsg(uint256,uint256,uint256,string)":"infinite","sendReply(uint256,string,uint256,uint256)":"infinite","set_dao(uint256,string,string)":"infinite","set_goal(uint256,string)":"infinite","set_ideas(uint256,string)":"infinite","update_template(uint256,string)":"infinite"},"internal":{"create_ideas_smart_contract(uint256,uint256,string memory)":"infinite"}},"methodIdentifiers":{"_dao_ids()":"7bbd582d","_dao_uris(uint256)":"27a568b9","_donated(uint256)":"20959ed0","_donations(uint256)":"7fc543ec","_donations_ids()":"ec245802","_feed_ids()":"8ac4110c","_feeds(uint256)":"54a9fb18","_goal_ids()":"13bf4cea","_goal_uris(uint256)":"7f2035d4","_ideas_ids()":"d3791b20","_ideas_uris(uint256)":"468d0c80","_ideas_vote_ids()":"4a797bd7","_join_ids()":"1171b621","_joined_person(uint256)":"330b8f26","_message_ids()":"9077007d","_message_read_ids()":"ca013f17","_reply_ids()":"aa2bf5d3","_smart_contract_ids()":"1b592aeb","_smart_contracts_uris(uint256)":"ff4a37ef","_template_uris(uint256)":"6ecda4ee","_user_badges(uint256)":"a428a47f","add_Feed(string,string)":"bda00335","add_donation(uint256,uint256,uint256,string,string)":"5996278f","all_goal_ideas_votes(uint256)":"1ba44c4c","all_messages(uint256)":"b527d45e","all_read_messages(uint256)":"cace8d46","all_replies(uint256)":"3f87a2f4","create_dao(string,string,string,uint256)":"86ffa45b","create_goal(string,string,uint256,string)":"b39a38bd","create_goal_ideas_vote(uint256,uint256,uint256,string,bool)":"ecde3243","create_ideas(string,uint256,string[],uint256,string)":"e1b011a0","dao_uri(uint256)":"5d907da1","getMsgIDs(uint256)":"803f5b9f","getReadMsg(uint256,string)":"cd230809","getReplyIDs(uint256)":"812fae1f","get_all_daos()":"c04fe978","get_all_goals()":"29b56f60","get_all_goals_by_dao_id(string)":"0377d44a","get_all_ideas()":"97ee7606","get_all_ideas_by_goal_id(uint256)":"131d44f2","get_dao_id_by_ideas_id(uint256)":"38a512d9","get_goal_id_by_goal_uri(string)":"1e9ac9f5","get_goal_id_from_ideas_uri(string)":"aa4cdf2a","get_ideas_id_by_ideas_uri(string)":"a1ca9178","get_ideas_votes_from_goal(uint256,uint256)":"4be7adb5","get_person_joinedID(uint256,uint256)":"b604efaa","goal_uri(uint256)":"e32acc1a","ideas_uri(uint256)":"8d3d2595","is_person_joined(uint256,uint256)":"7a82b1d6","join_community(uint256,uint256,string)":"8c70034a","leave_community(uint256)":"826eeefe","reset_all()":"b16060a6","sendMsg(uint256,string,string,uint256)":"787f19c7","sendReadMsg(uint256,uint256,uint256,string)":"934c5f00","sendReply(uint256,string,uint256,uint256)":"d9fc52db","set_dao(uint256,string,string)":"881de858","set_goal(uint256,string)":"c29595c5","set_ideas(uint256,string)":"c04e7430","update_template(uint256,string)":"87633eb2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"_dao_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_dao_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dao_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"finished\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_donated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_donations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"donation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_donations_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_feed_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_feeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feed_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"Type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_goal_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_goal_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"dao_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"goal_uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ideas_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_ideas_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ideas_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"donation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ideas_vote_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_join_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_joined_person\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"daoid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_message_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_message_read_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_reply_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_smart_contract_ids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_smart_contracts_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"smart_contract_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"smart_contract_uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_template_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_user_badges\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"dao\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"joined\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"goal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"ideas\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"donation\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"comment\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reply\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"feed_text\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"}],\"name\":\"add_Feed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_doantion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userid\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_feed1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_feed2\",\"type\":\"string\"}],\"name\":\"add_donation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_goal_ideas_votes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_messages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sender\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_read_messages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_replies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reply_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_template\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"user_id\",\"type\":\"uint256\"}],\"name\":\"create_dao\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_user_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_feed\",\"type\":\"string\"}],\"name\":\"create_goal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_user_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_feed\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"feed_add\",\"type\":\"bool\"}],\"name\":\"create_goal_ideas_vote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"_smart_contracts\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"_user_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_feed\",\"type\":\"string\"}],\"name\":\"create_ideas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"}],\"name\":\"dao_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"}],\"name\":\"getMsgIDs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"name\":\"getReadMsg\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"message_id\",\"type\":\"uint256\"}],\"name\":\"getReplyIDs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_daos\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_goals\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dao_id\",\"type\":\"string\"}],\"name\":\"get_all_goals_by_dao_id\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_ideas\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"}],\"name\":\"get_all_ideas_by_goal_id\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"}],\"name\":\"get_dao_id_by_ideas_id\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"}],\"name\":\"get_goal_id_by_goal_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"get_goal_id_from_ideas_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"get_ideas_id_by_ideas_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"}],\"name\":\"get_ideas_votes_from_goal\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dao_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"person\",\"type\":\"uint256\"}],\"name\":\"get_person_joinedID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"}],\"name\":\"goal_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"}],\"name\":\"ideas_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dao_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"person\",\"type\":\"uint256\"}],\"name\":\"is_person_joined\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dao_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"person\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_feed\",\"type\":\"string\"}],\"name\":\"join_community\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"join_id\",\"type\":\"uint256\"}],\"name\":\"leave_community\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reset_all\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_sender\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_user_id\",\"type\":\"uint256\"}],\"name\":\"sendMsg\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_wallet\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"msg_type\",\"type\":\"string\"}],\"name\":\"sendReadMsg\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_message_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_reply\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userid\",\"type\":\"uint256\"}],\"name\":\"sendReply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_uri\",\"type\":\"string\"}],\"name\":\"set_dao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"}],\"name\":\"set_goal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"set_ideas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_template\",\"type\":\"string\"}],\"name\":\"update_template\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PlanetDAO.sol\":\"PlanetDAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"contracts/PlanetDAO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\nimport '@openzeppelin/contracts/utils/Strings.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\n\\r\\ncontract PlanetDAO {\\r\\n  struct dao_uri_struct {\\r\\n    string dao_wallet;\\r\\n    string dao_uri;\\r\\n    string finished;\\r\\n  }\\r\\n  struct goal_uri_struct {\\r\\n    string dao_id;\\r\\n    string goal_uri;\\r\\n  }\\r\\n\\r\\n  struct ideas_uri_struct {\\r\\n    uint256 goal_id;\\r\\n    string ideas_uri;\\r\\n    uint256 donation;\\r\\n  }\\r\\n\\r\\n  struct donation_struct {\\r\\n    uint256 ideas_id;\\r\\n    uint256 userid;\\r\\n    uint256 donation;\\r\\n  }\\r\\n\\r\\n  struct smart_contract_uri_struct {\\r\\n    uint256 smart_contract_id;\\r\\n    uint256 ideas_id;\\r\\n    string smart_contract_uri;\\r\\n  }\\r\\n  struct goal_ideas_votes_struct {\\r\\n    uint256 goal_id;\\r\\n    uint256 ideas_id;\\r\\n    uint256 user_id;\\r\\n  }\\r\\n  struct message_struct {\\r\\n    uint256 message_id;\\r\\n    uint256 ideas_id;\\r\\n    string message;\\r\\n    string sender;\\r\\n  }\\r\\n  struct message_read_struct {\\r\\n    uint256 message_id;\\r\\n    uint256 ideas_id;\\r\\n    uint256 user_id;\\r\\n    string msg_type;\\r\\n  }\\r\\n  struct reply_struct {\\r\\n    uint256 reply_id;\\r\\n    uint256 message_id;\\r\\n    uint256 ideas_id;\\r\\n    string message;\\r\\n  }\\r\\n\\r\\n  struct UnbondingRequest {\\r\\n    int64 completionTime;\\r\\n    uint256 amount;\\r\\n  }\\r\\n\\r\\n  struct join_struct {\\r\\n    uint256 daoid;\\r\\n    uint256 user_id;\\r\\n  }\\r\\n\\r\\n  struct user_badge_struct {\\r\\n    uint256 user_id;\\r\\n    bool dao;\\r\\n    bool joined;\\r\\n    bool goal;\\r\\n    bool ideas;\\r\\n    bool vote;\\r\\n    bool donation;\\r\\n    bool comment;\\r\\n    bool reply;\\r\\n  }\\r\\n\\r\\n  struct feed_struct {\\r\\n    uint256 feed_id;\\r\\n    uint256 date;\\r\\n    string Type;\\r\\n    string data;\\r\\n  }\\r\\n  uint256 public _dao_ids;\\r\\n  uint256 public _donations_ids;\\r\\n  uint256 public _goal_ids;\\r\\n  uint256 public _ideas_ids;\\r\\n  uint256 public _join_ids;\\r\\n  uint256 public _smart_contract_ids;\\r\\n  uint256 public _ideas_vote_ids;\\r\\n  uint256 public _message_ids;\\r\\n  uint256 public _message_read_ids;\\r\\n  uint256 public _reply_ids;\\r\\n  uint256 public _feed_ids;\\r\\n  mapping(uint256 => dao_uri_struct) public _dao_uris; //_dao_ids              => (Dao)                    Dao Wallet + Dao URI   + Finished\\r\\n  mapping(uint256 => string) public _template_uris; //_dao_ids              => (Dao)                   Template HTML Code\\r\\n  mapping(uint256 => join_struct) public _joined_person; //_join_ids             => (Dao)                  join_struct\\r\\n\\r\\n  mapping(uint256 => goal_uri_struct) public _goal_uris; //_goal_ids             => (Goal)                   Dao ID + Goal URI\\r\\n  mapping(uint256 => ideas_uri_struct) public _ideas_uris; //_ideas_ids            => (Ideas)                  Goal ID + Ideas URI\\r\\n  mapping(uint256 => uint256) public _donated; //uint256            => (Donated to ideas)                amount\\r\\n  mapping(uint256 => feed_struct) public _feeds; //_feed_ids            => (feed_struct)\\r\\n  mapping(uint256 => donation_struct) public _donations; //uint256            => donation_struct\\r\\n  mapping(uint256 => smart_contract_uri_struct) public _smart_contracts_uris; //_smart_contract_ids   => (Ideas Smart contract)   Goal ID + Ideas URI\\r\\n  mapping(uint256 => goal_ideas_votes_struct) public all_goal_ideas_votes; //_ideas_vote_ids       => (Vote)                   Goal ID + Ideas ID + User Id\\r\\n\\r\\n  mapping(uint256 => message_struct) public all_messages; // all_messages        => _message_ids + message_struct\\r\\n\\r\\n  mapping(uint256 => message_read_struct) public all_read_messages; // all_read_messages        => _message_read_ids + message_read_struct\\r\\n\\r\\n  mapping(uint256 => reply_struct) public all_replies; // all_messages        => _reply_ids + reply_struct\\r\\n  mapping(uint256 => user_badge_struct) public _user_badges; //user_id            => user_badge_struct\\r\\n\\r\\n  //Daos\\r\\n  function create_dao(string memory _dao_wallet, string memory _dao_uri, string memory _template, uint256 user_id) public returns (uint256) {\\r\\n    //Create Dao into _dao_uris\\r\\n    _dao_uris[_dao_ids] = dao_uri_struct(_dao_wallet, _dao_uri, 'False');\\r\\n    _template_uris[_dao_ids] = _template;\\r\\n    _user_badges[user_id].dao = true;\\r\\n    _dao_ids++;\\r\\n\\r\\n    return _dao_ids;\\r\\n  }\\r\\n\\r\\n  function update_template(uint256 _dao_id, string memory _template) public {\\r\\n    _template_uris[_dao_id] = _template;\\r\\n  }\\r\\n\\r\\n  function set_dao(uint256 _dao_id, string memory _dao_wallet, string memory _dao_uri) public {\\r\\n    //Set Dao of wallet and uri\\r\\n    _dao_uris[_dao_id].dao_wallet = _dao_wallet;\\r\\n    _dao_uris[_dao_id].dao_uri = _dao_uri;\\r\\n  }\\r\\n\\r\\n  function get_all_daos() public view returns (string[] memory) {\\r\\n    //Getting all doas\\r\\n    string[] memory _StoreInfo = new string[](_dao_ids);\\r\\n    for (uint256 i = 0; i < _dao_ids; i++) {\\r\\n      _StoreInfo[i] = _dao_uris[i].dao_uri;\\r\\n    }\\r\\n\\r\\n    return _StoreInfo;\\r\\n  }\\r\\n\\r\\n  function dao_uri(uint256 _dao_id) public view returns (string memory) {\\r\\n    //Getting one dao URI\\r\\n    return _dao_uris[_dao_id].dao_uri;\\r\\n  }\\r\\n\\r\\n  function add_Feed(string memory feed_text, string memory _type) public {\\r\\n    _feeds[_feed_ids] = feed_struct(_feed_ids, block.timestamp, _type, feed_text);\\r\\n    _feed_ids++;\\r\\n  }\\r\\n\\r\\n  //Goals\\r\\n  function create_goal(string memory _goal_uri, string memory _dao_id, uint256 _user_id, string memory _feed) public returns (uint256) {\\r\\n    //Create goal into _goal_uris\\r\\n    _goal_uris[_goal_ids] = goal_uri_struct(_dao_id, _goal_uri);\\r\\n\\r\\n    _user_badges[_user_id].goal = true;\\r\\n    _goal_ids++;\\r\\n    add_Feed(_feed, 'goal');\\r\\n\\r\\n    return _goal_ids;\\r\\n  }\\r\\n\\r\\n  function set_goal(uint256 _goal_id, string memory _goal_uri) public {\\r\\n    //Set goal uri\\r\\n    _goal_uris[_goal_id].goal_uri = _goal_uri;\\r\\n  }\\r\\n\\r\\n  function get_all_goals() public view returns (string[] memory) {\\r\\n    //Getting all goals\\r\\n    string[] memory _StoreInfo = new string[](_goal_ids);\\r\\n    for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n      _StoreInfo[i] = _goal_uris[i].goal_uri;\\r\\n    }\\r\\n\\r\\n    return _StoreInfo;\\r\\n  }\\r\\n\\r\\n  function get_all_goals_by_dao_id(string memory _dao_id) public view returns (string[] memory) {\\r\\n    //Getting all goals by dao id\\r\\n    string[] memory _StoreInfo = new string[](_goal_ids);\\r\\n    uint256 _store_id;\\r\\n    for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n      if (keccak256(bytes(_goal_uris[i].dao_id)) == keccak256(bytes(_dao_id))) {\\r\\n        _StoreInfo[_store_id] = _goal_uris[i].goal_uri;\\r\\n        _store_id++;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    return _StoreInfo;\\r\\n  }\\r\\n\\r\\n  function get_goal_id_by_goal_uri(string memory _goal_uri) public view returns (uint256) {\\r\\n    //Getting goal id by uri\\r\\n    for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n      if (keccak256(bytes(_goal_uris[i].goal_uri)) == keccak256(bytes(_goal_uri))) return i;\\r\\n    }\\r\\n\\r\\n    return 0;\\r\\n  }\\r\\n  \\r\\n  function get_dao_id_by_ideas_id(uint256 ideas_id) public view returns (string memory) {\\r\\n    \\r\\n    uint256 goal_id= _ideas_uris[ideas_id].goal_id;\\r\\n    string memory dao_id = _goal_uris[goal_id].dao_id;\\r\\n    \\r\\n    return dao_id;\\r\\n  }\\r\\n\\r\\n  function goal_uri(uint256 _goal_id) public view returns (string memory) {\\r\\n    //Getting one goal URI\\r\\n    return _goal_uris[_goal_id].goal_uri;\\r\\n  }\\r\\n\\r\\n  //Ideas\\r\\n  function create_ideas(string memory _ideas_uri, uint256 _goal_id, string[] memory _smart_contracts, uint256 _user_id, string memory _feed) public returns (uint256) {\\r\\n    //Create ideas into _ideas_uris\\r\\n    _ideas_uris[_ideas_ids] = ideas_uri_struct(_goal_id, _ideas_uri, 0);\\r\\n    _user_badges[_user_id].ideas = true;\\r\\n    _ideas_ids++;\\r\\n\\r\\n    for (uint256 i = 0; i < _smart_contracts.length; i++) {\\r\\n      create_ideas_smart_contract(_ideas_ids, _smart_contract_ids, _smart_contracts[i]);\\r\\n      _smart_contract_ids++;\\r\\n    }\\r\\n    add_Feed(_feed, 'idea');\\r\\n\\r\\n    return _ideas_ids;\\r\\n  }\\r\\n\\r\\n  function create_ideas_smart_contract(uint256 _ideas_id, uint256 _smart_contract_id, string memory _smart_contract) private {\\r\\n    _smart_contracts_uris[_smart_contract_id] = smart_contract_uri_struct(_ideas_id, _smart_contract_id, _smart_contract);\\r\\n  }\\r\\n\\r\\n  function set_ideas(uint256 _ideas_id, string memory _ideas_uri) public {\\r\\n    _ideas_uris[_ideas_id].ideas_uri = _ideas_uri;\\r\\n  }\\r\\n\\r\\n  function add_donation(uint256 _ideas_id, uint256 _doantion, uint256 _userid, string memory _feed1, string memory _feed2) public {\\r\\n    if (_user_badges[_userid].donation == false) {\\r\\n      add_Feed(_feed1, 'badge');\\r\\n    }\\r\\n    add_Feed(_feed2, 'donation');\\r\\n\\r\\n    _user_badges[_userid].donation = true;\\r\\n    _ideas_uris[_ideas_id].donation += _doantion;\\r\\n    _donated[_userid] += _doantion;\\r\\n    _donations[_donations_ids] = donation_struct(_ideas_id, _userid, _doantion);\\r\\n    _donations_ids++;\\r\\n  }\\r\\n\\r\\n  function join_community(uint256 dao_id, uint256 person, string memory _feed) public {\\r\\n    _user_badges[person].joined = true;\\r\\n    _joined_person[_join_ids] = join_struct({daoid: dao_id, user_id: person});\\r\\n    _join_ids++;\\r\\n    add_Feed(_feed, 'join');\\r\\n  }\\r\\n\\r\\n  function leave_community(uint256 join_id) public {\\r\\n    _joined_person[join_id] = join_struct({daoid: 9999, user_id: 9999});\\r\\n  }\\r\\n\\r\\n  function is_person_joined(uint256 dao_id, uint256 person) public view returns (bool) {\\r\\n    for (uint256 i = 0; i < _join_ids; i++) {\\r\\n      if ((_joined_person[i].user_id == person) && (_joined_person[i].daoid == dao_id)) return true;\\r\\n    }\\r\\n\\r\\n    return false;\\r\\n  }\\r\\n\\r\\n  function get_person_joinedID(uint256 dao_id, uint256 person) public view returns (uint256) {\\r\\n    for (uint256 i = 0; i < _join_ids; i++) {\\r\\n      if ((_joined_person[i].user_id == person) && (_joined_person[i].daoid == dao_id)) return i;\\r\\n    }\\r\\n\\r\\n    return 9999;\\r\\n  }\\r\\n\\r\\n  function get_all_ideas() public view returns (string[] memory) {\\r\\n    //Getting all ideas\\r\\n    string[] memory _StoreInfo = new string[](_ideas_ids);\\r\\n    for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n      _StoreInfo[i] = _ideas_uris[i].ideas_uri;\\r\\n    }\\r\\n\\r\\n    return _StoreInfo;\\r\\n  }\\r\\n\\r\\n  function get_all_ideas_by_goal_id(uint256 _goal_id) public view returns (string[] memory) {\\r\\n    //Getting all ideas by goal id\\r\\n    string[] memory _StoreInfo = new string[](_ideas_ids);\\r\\n    uint256 _store_id;\\r\\n    for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n      if (_ideas_uris[i].goal_id == _goal_id) _StoreInfo[_store_id] = _ideas_uris[i].ideas_uri;\\r\\n      _store_id++;\\r\\n    }\\r\\n\\r\\n    return _StoreInfo;\\r\\n  }\\r\\n\\r\\n  function get_ideas_id_by_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\\r\\n    //Getting ideas id by uri\\r\\n    for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n      if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return i;\\r\\n    }\\r\\n\\r\\n    return 0;\\r\\n  }\\r\\n\\r\\n  function get_goal_id_from_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\\r\\n    //Getting ideas id by uri\\r\\n    for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n      if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return _ideas_uris[i].goal_id;\\r\\n    }\\r\\n\\r\\n    return 0;\\r\\n  }\\r\\n\\r\\n  function ideas_uri(uint256 _ideas_id) public view returns (string memory) {\\r\\n    //Getting one ideas URI\\r\\n    return _ideas_uris[_ideas_id].ideas_uri;\\r\\n  }\\r\\n\\r\\n  //Votes\\r\\n  function create_goal_ideas_vote(uint256 _goal_id, uint256 _ideas_id, uint256 _user_id, string memory _feed,bool  feed_add) public returns (uint256) {\\r\\n    _user_badges[_user_id].vote = true;\\r\\n    //Create votes into all_goal_ideas_votes\\r\\n    all_goal_ideas_votes[_ideas_vote_ids] = goal_ideas_votes_struct(_goal_id, _ideas_id, _user_id);\\r\\n    _ideas_vote_ids++;\\r\\n    if (feed_add){\\r\\n        add_Feed(_feed, 'vote');\\r\\n    }\\r\\n\\r\\n    return _ideas_vote_ids;\\r\\n  }\\r\\n\\r\\n  function get_ideas_votes_from_goal(uint256 _goal_id, uint256 _ideas_id) public view returns (string[] memory) {\\r\\n    //gets all ideas votes from goal\\r\\n    string[] memory _StoreInfo = new string[](_ideas_vote_ids);\\r\\n    uint256 _store_id;\\r\\n    for (uint256 i = 0; i < _ideas_vote_ids; i++) {\\r\\n      if (all_goal_ideas_votes[i].goal_id == _goal_id && all_goal_ideas_votes[i].ideas_id == _ideas_id) _StoreInfo[_store_id] = Strings.toString(all_goal_ideas_votes[i].user_id);\\r\\n      _store_id++;\\r\\n    }\\r\\n    return _StoreInfo;\\r\\n  }\\r\\n\\r\\n  //Messages\\r\\n  function sendMsg(uint256 _ideas_id, string memory _message, string memory _sender, uint256 _user_id) public returns (uint256) {\\r\\n    _user_badges[_user_id].comment = true;\\r\\n    //Create messsage into all_messages\\r\\n    all_messages[_message_ids] = message_struct(_message_ids, _ideas_id, _message, _sender);\\r\\n    _message_ids++;\\r\\n\\r\\n    return _message_ids;\\r\\n  }\\r\\n\\r\\n  function getMsgIDs(uint256 ideas_id) public view returns (uint256[] memory) {\\r\\n    //Getting all messages ids by idea id\\r\\n    uint256[] memory _All_Ideas_Messages = new uint256[](_message_ids);\\r\\n    uint256 _msg_id;\\r\\n    for (uint256 i = 0; i < _message_ids; i++) {\\r\\n      if (all_messages[i].ideas_id == ideas_id) {\\r\\n        _All_Ideas_Messages[_msg_id] = all_messages[i].message_id;\\r\\n        _msg_id++;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    return _All_Ideas_Messages;\\r\\n  }\\r\\n\\r\\n  function sendReply(uint256 _message_id, string memory _reply, uint256 ideas_id, uint256 _userid) public returns (uint256) {\\r\\n    _user_badges[_userid].reply = true;\\r\\n    //Create reply into all_replies\\r\\n    all_replies[_reply_ids] = reply_struct(_reply_ids, _message_id, ideas_id, _reply);\\r\\n    _reply_ids++;\\r\\n\\r\\n    return _reply_ids;\\r\\n  }\\r\\n\\r\\n  function getReplyIDs(uint256 message_id) public view returns (uint256[] memory) {\\r\\n    //Getting all messages ids by idea id\\r\\n    uint256[] memory _All_Messages_Replys = new uint256[](_reply_ids);\\r\\n    uint256 _reply_id;\\r\\n    for (uint256 i = 0; i < _reply_ids; i++) {\\r\\n      if (all_replies[i].message_id == message_id) {\\r\\n        _All_Messages_Replys[_reply_id] = all_replies[i].reply_id;\\r\\n        _reply_id++;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    return _All_Messages_Replys;\\r\\n  }\\r\\n\\r\\n  function sendReadMsg(uint256 _message_id, uint256 _ideas_id, uint256 _wallet, string memory msg_type) public returns (uint256) {\\r\\n    //Create messsage into all_messages\\r\\n    all_read_messages[_message_read_ids] = message_read_struct(_message_id, _ideas_id, _wallet, msg_type);\\r\\n    _message_read_ids++;\\r\\n\\r\\n    return _message_read_ids;\\r\\n  }\\r\\n\\r\\n  function getReadMsg(uint256 _message_id, string memory msg_type) public view returns (bool) {\\r\\n    bool read = false;\\r\\n    for (uint256 i = 0; i < _message_read_ids; i++) {\\r\\n      if (all_read_messages[i].message_id == _message_id && keccak256(bytes(msg_type)) == keccak256(bytes(all_read_messages[i].msg_type))) {\\r\\n        read = true;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    return read;\\r\\n  }\\r\\n\\r\\n  function reset_all() public {\\r\\n    for (uint256 i = 0; i < _dao_ids; i++) delete _dao_uris[i];\\r\\n    for (uint256 i = 0; i < _goal_ids; i++) delete _goal_uris[i];\\r\\n    for (uint256 i = 0; i < _ideas_ids; i++) delete _ideas_uris[i];\\r\\n    for (uint256 i = 0; i < _goal_ids; i++) delete _smart_contracts_uris[i];\\r\\n    for (uint256 i = 0; i < _message_ids; i++) delete all_messages[i];\\r\\n    for (uint256 i = 0; i < _reply_ids; i++) delete all_replies[i];\\r\\n    for (uint256 i = 0; i < _ideas_vote_ids; i++) delete all_goal_ideas_votes[i];\\r\\n    _dao_ids = 0;\\r\\n    _goal_ids = 0;\\r\\n    _ideas_ids = 0;\\r\\n    _message_ids = 0;\\r\\n    _reply_ids = 0;\\r\\n    _ideas_vote_ids = 0;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x4f22e6be4b67889256fce5a150063f0dc0328230cbc2bc77820e26aa74cff81f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2030,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_dao_ids","offset":0,"slot":"0","type":"t_uint256"},{"astId":2032,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_donations_ids","offset":0,"slot":"1","type":"t_uint256"},{"astId":2034,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_goal_ids","offset":0,"slot":"2","type":"t_uint256"},{"astId":2036,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_ideas_ids","offset":0,"slot":"3","type":"t_uint256"},{"astId":2038,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_join_ids","offset":0,"slot":"4","type":"t_uint256"},{"astId":2040,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_smart_contract_ids","offset":0,"slot":"5","type":"t_uint256"},{"astId":2042,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_ideas_vote_ids","offset":0,"slot":"6","type":"t_uint256"},{"astId":2044,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_message_ids","offset":0,"slot":"7","type":"t_uint256"},{"astId":2046,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_message_read_ids","offset":0,"slot":"8","type":"t_uint256"},{"astId":2048,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_reply_ids","offset":0,"slot":"9","type":"t_uint256"},{"astId":2050,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_feed_ids","offset":0,"slot":"10","type":"t_uint256"},{"astId":2055,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_dao_uris","offset":0,"slot":"11","type":"t_mapping(t_uint256,t_struct(dao_uri_struct)1930_storage)"},{"astId":2059,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_template_uris","offset":0,"slot":"12","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":2064,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_joined_person","offset":0,"slot":"13","type":"t_mapping(t_uint256,t_struct(join_struct)2000_storage)"},{"astId":2069,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_goal_uris","offset":0,"slot":"14","type":"t_mapping(t_uint256,t_struct(goal_uri_struct)1935_storage)"},{"astId":2074,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_ideas_uris","offset":0,"slot":"15","type":"t_mapping(t_uint256,t_struct(ideas_uri_struct)1942_storage)"},{"astId":2078,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_donated","offset":0,"slot":"16","type":"t_mapping(t_uint256,t_uint256)"},{"astId":2083,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_feeds","offset":0,"slot":"17","type":"t_mapping(t_uint256,t_struct(feed_struct)2028_storage)"},{"astId":2088,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_donations","offset":0,"slot":"18","type":"t_mapping(t_uint256,t_struct(donation_struct)1949_storage)"},{"astId":2093,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_smart_contracts_uris","offset":0,"slot":"19","type":"t_mapping(t_uint256,t_struct(smart_contract_uri_struct)1956_storage)"},{"astId":2098,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"all_goal_ideas_votes","offset":0,"slot":"20","type":"t_mapping(t_uint256,t_struct(goal_ideas_votes_struct)1963_storage)"},{"astId":2103,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"all_messages","offset":0,"slot":"21","type":"t_mapping(t_uint256,t_struct(message_struct)1972_storage)"},{"astId":2108,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"all_read_messages","offset":0,"slot":"22","type":"t_mapping(t_uint256,t_struct(message_read_struct)1981_storage)"},{"astId":2113,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"all_replies","offset":0,"slot":"23","type":"t_mapping(t_uint256,t_struct(reply_struct)1990_storage)"},{"astId":2118,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"_user_badges","offset":0,"slot":"24","type":"t_mapping(t_uint256,t_struct(user_badge_struct)2019_storage)"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_uint256,t_struct(dao_uri_struct)1930_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.dao_uri_struct)","numberOfBytes":"32","value":"t_struct(dao_uri_struct)1930_storage"},"t_mapping(t_uint256,t_struct(donation_struct)1949_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.donation_struct)","numberOfBytes":"32","value":"t_struct(donation_struct)1949_storage"},"t_mapping(t_uint256,t_struct(feed_struct)2028_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.feed_struct)","numberOfBytes":"32","value":"t_struct(feed_struct)2028_storage"},"t_mapping(t_uint256,t_struct(goal_ideas_votes_struct)1963_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.goal_ideas_votes_struct)","numberOfBytes":"32","value":"t_struct(goal_ideas_votes_struct)1963_storage"},"t_mapping(t_uint256,t_struct(goal_uri_struct)1935_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.goal_uri_struct)","numberOfBytes":"32","value":"t_struct(goal_uri_struct)1935_storage"},"t_mapping(t_uint256,t_struct(ideas_uri_struct)1942_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.ideas_uri_struct)","numberOfBytes":"32","value":"t_struct(ideas_uri_struct)1942_storage"},"t_mapping(t_uint256,t_struct(join_struct)2000_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.join_struct)","numberOfBytes":"32","value":"t_struct(join_struct)2000_storage"},"t_mapping(t_uint256,t_struct(message_read_struct)1981_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.message_read_struct)","numberOfBytes":"32","value":"t_struct(message_read_struct)1981_storage"},"t_mapping(t_uint256,t_struct(message_struct)1972_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.message_struct)","numberOfBytes":"32","value":"t_struct(message_struct)1972_storage"},"t_mapping(t_uint256,t_struct(reply_struct)1990_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.reply_struct)","numberOfBytes":"32","value":"t_struct(reply_struct)1990_storage"},"t_mapping(t_uint256,t_struct(smart_contract_uri_struct)1956_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.smart_contract_uri_struct)","numberOfBytes":"32","value":"t_struct(smart_contract_uri_struct)1956_storage"},"t_mapping(t_uint256,t_struct(user_badge_struct)2019_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PlanetDAO.user_badge_struct)","numberOfBytes":"32","value":"t_struct(user_badge_struct)2019_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(dao_uri_struct)1930_storage":{"encoding":"inplace","label":"struct PlanetDAO.dao_uri_struct","members":[{"astId":1925,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"dao_wallet","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1927,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"dao_uri","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1929,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"finished","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(donation_struct)1949_storage":{"encoding":"inplace","label":"struct PlanetDAO.donation_struct","members":[{"astId":1944,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1946,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"userid","offset":0,"slot":"1","type":"t_uint256"},{"astId":1948,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"donation","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(feed_struct)2028_storage":{"encoding":"inplace","label":"struct PlanetDAO.feed_struct","members":[{"astId":2021,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"feed_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2023,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"date","offset":0,"slot":"1","type":"t_uint256"},{"astId":2025,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"Type","offset":0,"slot":"2","type":"t_string_storage"},{"astId":2027,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"data","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(goal_ideas_votes_struct)1963_storage":{"encoding":"inplace","label":"struct PlanetDAO.goal_ideas_votes_struct","members":[{"astId":1958,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"goal_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1960,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1962,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"user_id","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(goal_uri_struct)1935_storage":{"encoding":"inplace","label":"struct PlanetDAO.goal_uri_struct","members":[{"astId":1932,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"dao_id","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1934,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"goal_uri","offset":0,"slot":"1","type":"t_string_storage"}],"numberOfBytes":"64"},"t_struct(ideas_uri_struct)1942_storage":{"encoding":"inplace","label":"struct PlanetDAO.ideas_uri_struct","members":[{"astId":1937,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"goal_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1939,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_uri","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1941,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"donation","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(join_struct)2000_storage":{"encoding":"inplace","label":"struct PlanetDAO.join_struct","members":[{"astId":1997,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"daoid","offset":0,"slot":"0","type":"t_uint256"},{"astId":1999,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"user_id","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_struct(message_read_struct)1981_storage":{"encoding":"inplace","label":"struct PlanetDAO.message_read_struct","members":[{"astId":1974,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"message_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1976,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1978,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"user_id","offset":0,"slot":"2","type":"t_uint256"},{"astId":1980,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"msg_type","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(message_struct)1972_storage":{"encoding":"inplace","label":"struct PlanetDAO.message_struct","members":[{"astId":1965,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"message_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1967,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1969,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"message","offset":0,"slot":"2","type":"t_string_storage"},{"astId":1971,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"sender","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(reply_struct)1990_storage":{"encoding":"inplace","label":"struct PlanetDAO.reply_struct","members":[{"astId":1983,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"reply_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1985,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"message_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1987,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"2","type":"t_uint256"},{"astId":1989,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"message","offset":0,"slot":"3","type":"t_string_storage"}],"numberOfBytes":"128"},"t_struct(smart_contract_uri_struct)1956_storage":{"encoding":"inplace","label":"struct PlanetDAO.smart_contract_uri_struct","members":[{"astId":1951,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"smart_contract_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1953,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1955,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"smart_contract_uri","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(user_badge_struct)2019_storage":{"encoding":"inplace","label":"struct PlanetDAO.user_badge_struct","members":[{"astId":2002,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"user_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2004,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"dao","offset":0,"slot":"1","type":"t_bool"},{"astId":2006,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"joined","offset":1,"slot":"1","type":"t_bool"},{"astId":2008,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"goal","offset":2,"slot":"1","type":"t_bool"},{"astId":2010,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"ideas","offset":3,"slot":"1","type":"t_bool"},{"astId":2012,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"vote","offset":4,"slot":"1","type":"t_bool"},{"astId":2014,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"donation","offset":5,"slot":"1","type":"t_bool"},{"astId":2016,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"comment","offset":6,"slot":"1","type":"t_bool"},{"astId":2018,"contract":"contracts/PlanetDAO.sol:PlanetDAO","label":"reply","offset":7,"slot":"1","type":"t_bool"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}